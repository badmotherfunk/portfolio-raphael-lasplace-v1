{"version":3,"sources":["../node_modules/three/build/three.module.js","assets/js/background.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","SRGBToLinear","LinearToSRGB","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","DisplayP3ToLinearSRGB","color","convertSRGBToLinear","LinearSRGBToDisplayP3","convertLinearToSRGB","TO_LINEAR","_TO_LINEAR","_defineProperty","FROM_LINEAR","_FROM_LINEAR","ColorManagement","enabled","legacyMode","workingColorSpace","colorSpace","convert","sourceColorSpace","targetColorSpace","sourceToLinear","targetFromLinear","concat","fromWorkingColorSpace","toWorkingColorSpace","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","options","_this3","isRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","count","_this9","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","geometry","attributes","position","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","gpuType","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$2","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$5","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","widthSegments","heightSegments","depthSegments","_this16","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","fov","aspect","_this19","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$4","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super33","_this25","isMeshDepthMaterial","_Material4","_super34","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","LinearTransferFunction","SRGBTransferFunction","WebGLUtils","transferFunction","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super35","_this27","isArrayCamera","Group","_Object3D4","_super36","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super37","_this29","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$3","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super49","_this40","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super50","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super51","_this42","LineLoop","_Line2","_super52","_this43","_Material7","_super53","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super54","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super55","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super56","_this47","CompressedTexture","_Texture8","_super57","_this48","CompressedArrayTexture","_CompressedTexture","_super58","_this49","CompressedCubeTexture","_CompressedTexture2","_super59","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_super60","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super61","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this52","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super62","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super63","curveType","_this54","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super64","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super65","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_super66","_this57","isLineCurve","LineCurve3","_Curve6","_super67","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_super68","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super69","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super70","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super71","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super72","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super73","phiStart","phiLength","_this64","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super74","capSegments","radialSegments","_this65","CircleGeometry","_BufferGeometry4","_super75","thetaStart","thetaLength","_this66","segment","CylinderGeometry","_BufferGeometry5","_super76","radiusTop","radiusBottom","openEnded","_this67","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super77","_this68","PolyhedronGeometry","_BufferGeometry6","_super78","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super79","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super80","thresholdAngle","_this71","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super81","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super82","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super83","_this74","OctahedronGeometry","_PolyhedronGeometry3","_super84","_this75","RingGeometry","_BufferGeometry9","_super85","innerRadius","outerRadius","thetaSegments","phiSegments","_this76","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super86","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super87","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super88","_this79","TorusGeometry","_BufferGeometry12","_super89","tube","tubularSegments","_this80","TorusKnotGeometry","_BufferGeometry13","_super90","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super91","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super92","_this83","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super93","_this84","RawShaderMaterial","_ShaderMaterial","_super94","_this85","_Material9","_super95","_this86","_MeshStandardMaterial","_super96","_this87","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_super97","_this88","_Material11","_super98","_this89","_Material12","_super99","_this90","_Material13","_super100","_this91","_Material14","_super101","_this92","_LineBasicMaterial","_super102","_this93","arraySlice","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super103","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super104","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super105","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super106","ColorKeyframeTrack","_KeyframeTrack2","_super107","NumberKeyframeTrack","_KeyframeTrack3","_super108","QuaternionLinearInterpolant","_Interpolant4","_super109","QuaternionKeyframeTrack","_KeyframeTrack4","_super110","StringKeyframeTrack","_KeyframeTrack5","_super111","VectorKeyframeTrack","_KeyframeTrack6","_super112","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super113","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_super114","_this96","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super115","CompressedTextureLoader","_Loader3","_super116","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super117","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super118","urls","DataTextureLoader","_Loader6","_super119","texData","TextureLoader","_Loader7","_super120","Light","_Object3D11","_super121","_this97","HemisphereLight","_Light","_super122","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super123","_this99","isSpotLightShadow","SpotLight","_Light2","_super124","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super125","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_super126","_this102","DirectionalLightShadow","_LightShadow3","_super127","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_super128","_this104","AmbientLight","_Light5","_super129","_this105","RectAreaLight","_Light6","_super130","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super131","_this107","MaterialLoader","_Loader8","_super132","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super133","_this109","BufferGeometryLoader","_Loader9","_super134","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super135","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super136","_this110","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super137","bufferCopy","decodeAudioData","audioBuffer","handleError","HemisphereLightProbe","_LightProbe","_super138","_this111","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super139","_this112","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super140","_this113","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super141","_this114","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super142","_this115","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super143","_this116","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super144","_this117","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super145","_this118","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super146","_this119","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super147","_this120","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super148","sphereSize","_this121","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super149","_this122","GridHelper","_LineSegments2","_super150","_this123","PolarGridHelper","_LineSegments3","_super151","sectors","rings","_this124","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super152","_this125","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super153","_this126","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super154","_this127","Box3Helper","_LineSegments6","_super155","_this128","PlaneHelper","_Line3","_super156","_this129","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super157","headLength","headWidth","_this130","setDirection","setColor","AxesHelper","_LineSegments7","_super158","_this131","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","THREE","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","__esModule","default","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","querySelector","devicePixelRatio","innerWidth","innerHeight","appendChild","controls","OrbitControls","outerSpiralGroup","spiralGroup","spheres","sphereMat","sphereGeo","SphereBufferGeometry","fib","directions","cpDirections","fibShape","prevSphere","cpDir","cpX","cpY","linePoints","lineGeo","lineMat","spiralGroup2","resize","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CACA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,OAAA,SAAAA,OAAA,OAAAC,EAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,MAAA,GAAAH,EAAA,CAAAI,cAAA,EAAAC,cAAA,GAAAJ,MAAA,CAAAI,cAAA,cAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,IAAAF,GAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,KAAA,KAAAC,OAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,cAAA,GAAAF,OAAA,CAAAG,QAAA,kBAAAC,mBAAA,GAAAJ,OAAA,CAAAK,aAAA,uBAAAC,iBAAA,GAAAN,OAAA,CAAAO,WAAA,8BAAAC,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAR,MAAA,CAAAI,cAAA,CAAAC,GAAA,EAAAC,GAAA,IAAAE,KAAA,EAAAA,KAAA,EAAAU,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAf,GAAA,CAAAC,GAAA,WAAAW,MAAA,mBAAAI,GAAA,IAAAJ,MAAA,YAAAA,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAH,GAAA,CAAAC,GAAA,IAAAE,KAAA,gBAAAc,KAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,QAAAC,cAAA,GAAAH,OAAA,IAAAA,OAAA,CAAAvB,SAAA,YAAA2B,SAAA,GAAAJ,OAAA,GAAAI,SAAA,EAAAC,SAAA,GAAA7B,MAAA,CAAA8B,MAAA,CAAAH,cAAA,CAAA1B,SAAA,GAAA8B,OAAA,OAAAC,OAAA,CAAAN,WAAA,gBAAAtB,cAAA,CAAAyB,SAAA,eAAArB,KAAA,EAAAyB,gBAAA,CAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,MAAAF,SAAA,aAAAK,SAAAC,EAAA,EAAA9B,GAAA,EAAA+B,GAAA,mBAAAC,IAAA,YAAAD,GAAA,EAAAD,EAAA,CAAAG,IAAA,CAAAjC,GAAA,EAAA+B,GAAA,cAAAf,GAAA,aAAAgB,IAAA,WAAAD,GAAA,EAAAf,GAAA,QAAAvB,OAAA,CAAAwB,IAAA,GAAAA,IAAA,MAAAiB,gBAAA,gBAAAX,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,iBAAA,OAAAzB,MAAA,CAAAyB,iBAAA,EAAA/B,cAAA,qCAAAgC,QAAA,GAAA3C,MAAA,CAAA4C,cAAA,EAAAC,uBAAA,GAAAF,QAAA,IAAAA,QAAA,CAAAA,QAAA,CAAAG,MAAA,QAAAD,uBAAA,IAAAA,uBAAA,KAAA9C,EAAA,IAAAG,MAAA,CAAAoC,IAAA,CAAAO,uBAAA,EAAAlC,cAAA,MAAA+B,iBAAA,GAAAG,uBAAA,OAAAE,EAAA,GAAAN,0BAAA,CAAAxC,SAAA,GAAA2B,SAAA,CAAA3B,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAY,iBAAA,YAAAM,sBAAA/C,SAAA,gCAAAgD,OAAA,WAAAC,MAAA,IAAAjC,MAAA,CAAAhB,SAAA,EAAAiD,MAAA,YAAAd,GAAA,gBAAAe,OAAA,CAAAD,MAAA,EAAAd,GAAA,sBAAAgB,cAAAvB,SAAA,EAAAwB,WAAA,aAAAC,OAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,QAAAC,MAAA,GAAAvB,QAAA,CAAAL,SAAA,CAAAqB,MAAA,GAAArB,SAAA,EAAAO,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,QAAAqB,MAAA,GAAAD,MAAA,CAAArB,GAAA,EAAA5B,KAAA,GAAAkD,MAAA,CAAAlD,KAAA,SAAAA,KAAA,gBAAAmD,OAAA,CAAAnD,KAAA,KAAAN,MAAA,CAAAoC,IAAA,CAAA9B,KAAA,eAAA6C,WAAA,CAAAE,OAAA,CAAA/C,KAAA,CAAAoD,OAAA,EAAAC,IAAA,WAAArD,KAAA,IAAA8C,MAAA,SAAA9C,KAAA,EAAA+C,OAAA,EAAAC,MAAA,gBAAAnC,GAAA,IAAAiC,MAAA,UAAAjC,GAAA,EAAAkC,OAAA,EAAAC,MAAA,QAAAH,WAAA,CAAAE,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,WAAAC,SAAA,IAAAJ,MAAA,CAAAlD,KAAA,GAAAsD,SAAA,EAAAP,OAAA,CAAAG,MAAA,gBAAAK,KAAA,WAAAT,MAAA,UAAAS,KAAA,EAAAR,OAAA,EAAAC,MAAA,SAAAA,MAAA,CAAAC,MAAA,CAAArB,GAAA,SAAA4B,eAAA,EAAA5D,cAAA,oBAAAI,KAAA,WAAAA,MAAA0C,MAAA,EAAAd,GAAA,aAAA6B,2BAAA,eAAAZ,WAAA,WAAAE,OAAA,EAAAC,MAAA,IAAAF,MAAA,CAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,gBAAAQ,eAAA,GAAAA,eAAA,GAAAA,eAAA,CAAAH,IAAA,CAAAI,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAhC,iBAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,QAAAmC,KAAA,sCAAAhB,MAAA,EAAAd,GAAA,wBAAA8B,KAAA,YAAAC,KAAA,sDAAAD,KAAA,oBAAAhB,MAAA,QAAAd,GAAA,WAAA5B,KAAA,UAAA4D,IAAA,eAAArC,OAAA,CAAAmB,MAAA,GAAAA,MAAA,EAAAnB,OAAA,CAAAK,GAAA,GAAAA,GAAA,UAAAiC,QAAA,GAAAtC,OAAA,CAAAsC,QAAA,MAAAA,QAAA,QAAAC,cAAA,GAAAC,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,OAAAuC,cAAA,QAAAA,cAAA,KAAA/B,gBAAA,mBAAA+B,cAAA,qBAAAvC,OAAA,CAAAmB,MAAA,EAAAnB,OAAA,CAAAyC,IAAA,GAAAzC,OAAA,CAAA0C,KAAA,GAAA1C,OAAA,CAAAK,GAAA,sBAAAL,OAAA,CAAAmB,MAAA,6BAAAgB,KAAA,QAAAA,KAAA,gBAAAnC,OAAA,CAAAK,GAAA,EAAAL,OAAA,CAAA2C,iBAAA,CAAA3C,OAAA,CAAAK,GAAA,uBAAAL,OAAA,CAAAmB,MAAA,IAAAnB,OAAA,CAAA4C,MAAA,WAAA5C,OAAA,CAAAK,GAAA,GAAA8B,KAAA,oBAAAT,MAAA,GAAAvB,QAAA,CAAAX,OAAA,EAAAE,IAAA,EAAAM,OAAA,oBAAA0B,MAAA,CAAApB,IAAA,QAAA6B,KAAA,GAAAnC,OAAA,CAAAqC,IAAA,mCAAAX,MAAA,CAAArB,GAAA,KAAAG,gBAAA,qBAAA/B,KAAA,EAAAiD,MAAA,CAAArB,GAAA,EAAAgC,IAAA,EAAArC,OAAA,CAAAqC,IAAA,kBAAAX,MAAA,CAAApB,IAAA,KAAA6B,KAAA,gBAAAnC,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,mBAAAmC,oBAAAF,QAAA,EAAAtC,OAAA,QAAA6C,UAAA,GAAA7C,OAAA,CAAAmB,MAAA,EAAAA,MAAA,GAAAmB,QAAA,CAAAzD,QAAA,CAAAgE,UAAA,OAAAC,SAAA,KAAA3B,MAAA,SAAAnB,OAAA,CAAAsC,QAAA,qBAAAO,UAAA,IAAAP,QAAA,CAAAzD,QAAA,CAAAkE,MAAA,KAAA/C,OAAA,CAAAmB,MAAA,aAAAnB,OAAA,CAAAK,GAAA,GAAAyC,SAAA,EAAAN,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,eAAAA,OAAA,CAAAmB,MAAA,kBAAA0B,UAAA,KAAA7C,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,uCAAAH,UAAA,iBAAArC,gBAAA,MAAAkB,MAAA,GAAAvB,QAAA,CAAAgB,MAAA,EAAAmB,QAAA,CAAAzD,QAAA,EAAAmB,OAAA,CAAAK,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,SAAAN,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,EAAAL,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,MAAAyC,IAAA,GAAAvB,MAAA,CAAArB,GAAA,SAAA4C,IAAA,GAAAA,IAAA,CAAAZ,IAAA,IAAArC,OAAA,CAAAsC,QAAA,CAAAY,UAAA,IAAAD,IAAA,CAAAxE,KAAA,EAAAuB,OAAA,CAAAmD,IAAA,GAAAb,QAAA,CAAAc,OAAA,eAAApD,OAAA,CAAAmB,MAAA,KAAAnB,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAAyC,SAAA,GAAA9C,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,IAAAyC,IAAA,IAAAjD,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,sCAAAhD,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,cAAA6C,aAAAC,IAAA,QAAAC,KAAA,KAAAC,MAAA,EAAAF,IAAA,YAAAA,IAAA,KAAAC,KAAA,CAAAE,QAAA,GAAAH,IAAA,WAAAA,IAAA,KAAAC,KAAA,CAAAG,UAAA,GAAAJ,IAAA,KAAAC,KAAA,CAAAI,QAAA,GAAAL,IAAA,WAAAM,UAAA,CAAAC,IAAA,CAAAN,KAAA,cAAAO,cAAAP,KAAA,QAAA7B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,QAAArC,MAAA,CAAApB,IAAA,oBAAAoB,MAAA,CAAArB,GAAA,EAAAkD,KAAA,CAAAQ,UAAA,GAAArC,MAAA,aAAAzB,QAAAN,WAAA,SAAAiE,UAAA,MAAAJ,MAAA,aAAA7D,WAAA,CAAAuB,OAAA,CAAAmC,YAAA,cAAAW,KAAA,iBAAAjD,OAAAkD,QAAA,QAAAA,QAAA,WAAAA,QAAA,QAAAC,cAAA,GAAAD,QAAA,CAAArF,cAAA,OAAAsF,cAAA,SAAAA,cAAA,CAAA3D,IAAA,CAAA0D,QAAA,4BAAAA,QAAA,CAAAd,IAAA,SAAAc,QAAA,OAAAE,KAAA,CAAAF,QAAA,CAAAG,MAAA,SAAAC,CAAA,OAAAlB,IAAA,YAAAA,KAAA,aAAAkB,CAAA,GAAAJ,QAAA,CAAAG,MAAA,OAAAjG,MAAA,CAAAoC,IAAA,CAAA0D,QAAA,EAAAI,CAAA,UAAAlB,IAAA,CAAA1E,KAAA,GAAAwF,QAAA,CAAAI,CAAA,GAAAlB,IAAA,CAAAd,IAAA,OAAAc,IAAA,SAAAA,IAAA,CAAA1E,KAAA,GAAAqE,SAAA,EAAAK,IAAA,CAAAd,IAAA,OAAAc,IAAA,YAAAA,IAAA,CAAAA,IAAA,GAAAA,IAAA,gBAAAH,SAAA,CAAApB,OAAA,CAAAqC,QAAA,kCAAAxD,iBAAA,CAAAvC,SAAA,GAAAwC,0BAAA,EAAArC,cAAA,CAAA2C,EAAA,mBAAAvC,KAAA,EAAAiC,0BAAA,EAAAtB,YAAA,SAAAf,cAAA,CAAAqC,0BAAA,mBAAAjC,KAAA,EAAAgC,iBAAA,EAAArB,YAAA,SAAAqB,iBAAA,CAAA6D,WAAA,GAAApF,MAAA,CAAAwB,0BAAA,EAAA1B,iBAAA,wBAAAjB,OAAA,CAAAwG,mBAAA,aAAAC,MAAA,QAAAC,IAAA,wBAAAD,MAAA,IAAAA,MAAA,CAAAE,WAAA,WAAAD,IAAA,KAAAA,IAAA,KAAAhE,iBAAA,6BAAAgE,IAAA,CAAAH,WAAA,IAAAG,IAAA,CAAAE,IAAA,OAAA5G,OAAA,CAAA6G,IAAA,aAAAJ,MAAA,WAAAvG,MAAA,CAAA4G,cAAA,GAAA5G,MAAA,CAAA4G,cAAA,CAAAL,MAAA,EAAA9D,0BAAA,KAAA8D,MAAA,CAAAM,SAAA,GAAApE,0BAAA,EAAAxB,MAAA,CAAAsF,MAAA,EAAAxF,iBAAA,yBAAAwF,MAAA,CAAAtG,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAiB,EAAA,GAAAwD,MAAA,KAAAzG,OAAA,CAAAgH,KAAA,aAAA1E,GAAA,aAAAwB,OAAA,EAAAxB,GAAA,OAAAY,qBAAA,CAAAI,aAAA,CAAAnD,SAAA,GAAAgB,MAAA,CAAAmC,aAAA,CAAAnD,SAAA,EAAAY,mBAAA,iCAAAf,OAAA,CAAAsD,aAAA,GAAAA,aAAA,EAAAtD,OAAA,CAAAiH,KAAA,aAAAxF,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,EAAA2B,WAAA,eAAAA,WAAA,KAAAA,WAAA,GAAA2D,OAAA,OAAAC,IAAA,OAAA7D,aAAA,CAAA9B,IAAA,CAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,GAAA2B,WAAA,UAAAvD,OAAA,CAAAwG,mBAAA,CAAA9E,OAAA,IAAAyF,IAAA,GAAAA,IAAA,CAAA/B,IAAA,GAAArB,IAAA,WAAAH,MAAA,WAAAA,MAAA,CAAAU,IAAA,GAAAV,MAAA,CAAAlD,KAAA,GAAAyG,IAAA,CAAA/B,IAAA,WAAAlC,qBAAA,CAAAD,EAAA,GAAA9B,MAAA,CAAA8B,EAAA,EAAAhC,iBAAA,gBAAAE,MAAA,CAAA8B,EAAA,EAAApC,cAAA,iCAAAM,MAAA,CAAA8B,EAAA,6DAAAjD,OAAA,CAAAoH,IAAA,aAAAC,GAAA,QAAAC,MAAA,GAAApH,MAAA,CAAAmH,GAAA,GAAAD,IAAA,gBAAA5G,GAAA,IAAA8G,MAAA,EAAAF,IAAA,CAAAtB,IAAA,CAAAtF,GAAA,UAAA4G,IAAA,CAAAG,OAAA,aAAAnC,KAAA,WAAAgC,IAAA,CAAAf,MAAA,SAAA7F,GAAA,GAAA4G,IAAA,CAAAI,GAAA,QAAAhH,GAAA,IAAA8G,MAAA,SAAAlC,IAAA,CAAA1E,KAAA,GAAAF,GAAA,EAAA4E,IAAA,CAAAd,IAAA,OAAAc,IAAA,WAAAA,IAAA,CAAAd,IAAA,OAAAc,IAAA,QAAApF,OAAA,CAAAgD,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAA/B,SAAA,KAAAwG,WAAA,EAAAzE,OAAA,EAAA+D,KAAA,WAAAA,MAAAwB,aAAA,aAAAC,IAAA,WAAAtC,IAAA,WAAAV,IAAA,QAAAC,KAAA,GAAAI,SAAA,OAAAT,IAAA,YAAAC,QAAA,cAAAnB,MAAA,gBAAAd,GAAA,GAAAyC,SAAA,OAAAc,UAAA,CAAA1C,OAAA,CAAA4C,aAAA,IAAA0B,aAAA,WAAAb,IAAA,kBAAAA,IAAA,CAAAe,MAAA,OAAAvH,MAAA,CAAAoC,IAAA,OAAAoE,IAAA,MAAAR,KAAA,EAAAQ,IAAA,CAAAgB,KAAA,cAAAhB,IAAA,IAAA7B,SAAA,MAAA8C,IAAA,WAAAA,KAAA,SAAAvD,IAAA,WAAAwD,UAAA,QAAAjC,UAAA,IAAAG,UAAA,kBAAA8B,UAAA,CAAAvF,IAAA,QAAAuF,UAAA,CAAAxF,GAAA,cAAAyF,IAAA,KAAAnD,iBAAA,WAAAA,kBAAAoD,SAAA,aAAA1D,IAAA,QAAA0D,SAAA,MAAA/F,OAAA,kBAAAgG,OAAAC,GAAA,EAAAC,MAAA,WAAAxE,MAAA,CAAApB,IAAA,YAAAoB,MAAA,CAAArB,GAAA,GAAA0F,SAAA,EAAA/F,OAAA,CAAAmD,IAAA,GAAA8C,GAAA,EAAAC,MAAA,KAAAlG,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAAyC,SAAA,KAAAoD,MAAA,aAAA7B,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,GAAA3C,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,iBAAAR,KAAA,CAAAC,MAAA,SAAAwC,MAAA,aAAAzC,KAAA,CAAAC,MAAA,SAAAiC,IAAA,QAAAU,QAAA,GAAAhI,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,eAAA6C,UAAA,GAAAjI,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,qBAAA4C,QAAA,IAAAC,UAAA,aAAAX,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,gBAAAgC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,cAAAyC,QAAA,aAAAV,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,qBAAA2C,UAAA,YAAAhE,KAAA,qDAAAqD,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,YAAAd,MAAA,WAAAA,OAAAtC,IAAA,EAAAD,GAAA,aAAAgE,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,SAAAiC,IAAA,IAAAtH,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,wBAAAkC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,QAAA2C,YAAA,GAAA9C,KAAA,aAAA8C,YAAA,iBAAA/F,IAAA,mBAAAA,IAAA,KAAA+F,YAAA,CAAA7C,MAAA,IAAAnD,GAAA,IAAAA,GAAA,IAAAgG,YAAA,CAAA3C,UAAA,KAAA2C,YAAA,cAAA3E,MAAA,GAAA2E,YAAA,GAAAA,YAAA,CAAAtC,UAAA,cAAArC,MAAA,CAAApB,IAAA,GAAAA,IAAA,EAAAoB,MAAA,CAAArB,GAAA,GAAAA,GAAA,EAAAgG,YAAA,SAAAlF,MAAA,gBAAAgC,IAAA,GAAAkD,YAAA,CAAA3C,UAAA,EAAAlD,gBAAA,SAAA8F,QAAA,CAAA5E,MAAA,MAAA4E,QAAA,WAAAA,SAAA5E,MAAA,EAAAiC,QAAA,oBAAAjC,MAAA,CAAApB,IAAA,QAAAoB,MAAA,CAAArB,GAAA,qBAAAqB,MAAA,CAAApB,IAAA,mBAAAoB,MAAA,CAAApB,IAAA,QAAA6C,IAAA,GAAAzB,MAAA,CAAArB,GAAA,gBAAAqB,MAAA,CAAApB,IAAA,SAAAwF,IAAA,QAAAzF,GAAA,GAAAqB,MAAA,CAAArB,GAAA,OAAAc,MAAA,kBAAAgC,IAAA,yBAAAzB,MAAA,CAAApB,IAAA,IAAAqD,QAAA,UAAAR,IAAA,GAAAQ,QAAA,GAAAnD,gBAAA,KAAA+F,MAAA,WAAAA,OAAA7C,UAAA,aAAAW,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAG,UAAA,KAAAA,UAAA,cAAA4C,QAAA,CAAA/C,KAAA,CAAAQ,UAAA,EAAAR,KAAA,CAAAI,QAAA,GAAAG,aAAA,CAAAP,KAAA,GAAA/C,gBAAA,OAAAgG,KAAA,WAAAC,OAAAjD,MAAA,aAAAa,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,KAAAA,MAAA,QAAA9B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,kBAAArC,MAAA,CAAApB,IAAA,QAAAoG,MAAA,GAAAhF,MAAA,CAAArB,GAAA,EAAAyD,aAAA,CAAAP,KAAA,YAAAmD,MAAA,gBAAAtE,KAAA,8BAAAuE,aAAA,WAAAA,cAAA1C,QAAA,EAAAf,UAAA,EAAAE,OAAA,gBAAAd,QAAA,KAAAzD,QAAA,EAAAkC,MAAA,CAAAkD,QAAA,GAAAf,UAAA,EAAAA,UAAA,EAAAE,OAAA,EAAAA,OAAA,oBAAAjC,MAAA,UAAAd,GAAA,GAAAyC,SAAA,GAAAtC,gBAAA,OAAAzC,OAAA;AAAA,SAAA6D,QAAAtD,GAAA,sCAAAsD,OAAA,wBAAAjD,MAAA,uBAAAA,MAAA,CAAAE,QAAA,aAAAP,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAAK,MAAA,IAAAL,GAAA,CAAAoG,WAAA,KAAA/F,MAAA,IAAAL,GAAA,KAAAK,MAAA,CAAAT,SAAA,qBAAAI,GAAA,KAAAsD,OAAA,CAAAtD,GAAA;AAAA,SAAAsI,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAA9D,SAAA;AAAA,SAAA+D,kBAAAC,MAAA,EAAAC,KAAA,aAAA5C,CAAA,MAAAA,CAAA,GAAA4C,KAAA,CAAA7C,MAAA,EAAAC,CAAA,UAAA6C,UAAA,GAAAD,KAAA,CAAA5C,CAAA,GAAA6C,UAAA,CAAA/H,UAAA,GAAA+H,UAAA,CAAA/H,UAAA,WAAA+H,UAAA,CAAA9H,YAAA,wBAAA8H,UAAA,EAAAA,UAAA,CAAA7H,QAAA,SAAApB,MAAA,CAAAI,cAAA,CAAA2I,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAA3I,GAAA,GAAA2I,UAAA;AAAA,SAAAE,aAAAN,WAAA,EAAAO,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAN,iBAAA,CAAAD,WAAA,CAAA5I,SAAA,EAAAmJ,UAAA,OAAAC,WAAA,EAAAP,iBAAA,CAAAD,WAAA,EAAAQ,WAAA,GAAArJ,MAAA,CAAAI,cAAA,CAAAyI,WAAA,iBAAAzH,QAAA,mBAAAyH,WAAA;AAAA,SAAAK,eAAA9G,GAAA,QAAA9B,GAAA,GAAAgJ,YAAA,CAAAlH,GAAA,oBAAAuB,OAAA,CAAArD,GAAA,iBAAAA,GAAA,GAAAiJ,MAAA,CAAAjJ,GAAA;AAAA,SAAAgJ,aAAAE,KAAA,EAAAC,IAAA,QAAA9F,OAAA,CAAA6F,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA9I,MAAA,CAAAiJ,WAAA,OAAAD,IAAA,KAAA7E,SAAA,QAAA+E,GAAA,GAAAF,IAAA,CAAApH,IAAA,CAAAkH,KAAA,EAAAC,IAAA,oBAAA9F,OAAA,CAAAiG,GAAA,uBAAAA,GAAA,YAAA7E,SAAA,4DAAA0E,IAAA,gBAAAF,MAAA,GAAAM,MAAA,EAAAL,KAAA;AADA;AACA;AACA;AACA;AACA;AACA,IAAMM,QAAQ,GAAG,KAAK;AAAChK,OAAA,CAAAgK,QAAA,GAAAA,QAAA;AAEvB,IAAMC,KAAK,GAAG;EAAEC,IAAI,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAE,CAAC;AAACvK,OAAA,CAAAiK,KAAA,GAAAA,KAAA;AAC5E,IAAMO,KAAK,GAAG;EAAEH,MAAM,EAAE,CAAC;EAAEE,GAAG,EAAE,CAAC;EAAEE,SAAS,EAAE,CAAC;EAAEC,YAAY,EAAE;AAAE,CAAC;AAAC1K,OAAA,CAAAwK,KAAA,GAAAA,KAAA;AACnE,IAAMG,YAAY,GAAG,CAAC;AAAC3K,OAAA,CAAA2K,YAAA,GAAAA,YAAA;AACvB,IAAMC,YAAY,GAAG,CAAC;AAAC5K,OAAA,CAAA4K,YAAA,GAAAA,YAAA;AACvB,IAAMC,aAAa,GAAG,CAAC;AAAC7K,OAAA,CAAA6K,aAAA,GAAAA,aAAA;AACxB,IAAMC,iBAAiB,GAAG,CAAC;AAAC9K,OAAA,CAAA8K,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,cAAc,GAAG,CAAC;AAAC/K,OAAA,CAAA+K,cAAA,GAAAA,cAAA;AACzB,IAAMC,YAAY,GAAG,CAAC;AAAChL,OAAA,CAAAgL,YAAA,GAAAA,YAAA;AACvB,IAAMC,gBAAgB,GAAG,CAAC;AAACjL,OAAA,CAAAiL,gBAAA,GAAAA,gBAAA;AAC3B,IAAMC,YAAY,GAAG,CAAC;AAAClL,OAAA,CAAAkL,YAAA,GAAAA,YAAA;AACvB,IAAMC,SAAS,GAAG,CAAC;AAACnL,OAAA,CAAAmL,SAAA,GAAAA,SAAA;AACpB,IAAMC,QAAQ,GAAG,CAAC;AAACpL,OAAA,CAAAoL,QAAA,GAAAA,QAAA;AACnB,IAAMC,UAAU,GAAG,CAAC;AAACrL,OAAA,CAAAqL,UAAA,GAAAA,UAAA;AACrB,IAAMC,iBAAiB,GAAG,CAAC,CAAC,CAAC;AAAAtL,OAAA,CAAAsL,iBAAA,GAAAA,iBAAA;AAC7B,IAAMC,UAAU,GAAG,CAAC;AAACvL,OAAA,CAAAuL,UAAA,GAAAA,UAAA;AACrB,IAAMC,cAAc,GAAG,CAAC;AAACxL,OAAA,CAAAwL,cAAA,GAAAA,cAAA;AACzB,IAAMC,gBAAgB,GAAG,CAAC;AAACzL,OAAA,CAAAyL,gBAAA,GAAAA,gBAAA;AAC3B,IAAMC,mBAAmB,GAAG,CAAC;AAAC1L,OAAA,CAAA0L,mBAAA,GAAAA,mBAAA;AAC9B,IAAMC,gBAAgB,GAAG,CAAC;AAAC3L,OAAA,CAAA2L,gBAAA,GAAAA,gBAAA;AAC3B,IAAMC,cAAc,GAAG,CAAC;AAAC5L,OAAA,CAAA4L,cAAA,GAAAA,cAAA;AACzB,IAAMC,WAAW,GAAG,GAAG;AAAC7L,OAAA,CAAA6L,WAAA,GAAAA,WAAA;AACxB,IAAMC,gBAAgB,GAAG,GAAG;AAAC9L,OAAA,CAAA8L,gBAAA,GAAAA,gBAAA;AAC7B,IAAMC,uBAAuB,GAAG,GAAG;AAAC/L,OAAA,CAAA+L,uBAAA,GAAAA,uBAAA;AACpC,IAAMC,WAAW,GAAG,GAAG;AAAChM,OAAA,CAAAgM,WAAA,GAAAA,WAAA;AACxB,IAAMC,WAAW,GAAG,GAAG;AAACjM,OAAA,CAAAiM,WAAA,GAAAA,WAAA;AACxB,IAAMC,UAAU,GAAG,GAAG;AAAClM,OAAA,CAAAkM,UAAA,GAAAA,UAAA;AACvB,IAAMC,SAAS,GAAG,GAAG;AAACnM,OAAA,CAAAmM,SAAA,GAAAA,SAAA;AACtB,IAAMC,cAAc,GAAG,GAAG;AAACpM,OAAA,CAAAoM,cAAA,GAAAA,cAAA;AAC3B,IAAMC,sBAAsB,GAAG,GAAG;AAACrM,OAAA,CAAAqM,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,cAAc,GAAG,GAAG;AAACtM,OAAA,CAAAsM,cAAA,GAAAA,cAAA;AAC3B,IAAMC,sBAAsB,GAAG,GAAG;AAACvM,OAAA,CAAAuM,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,cAAc,GAAG,GAAG;AAACxM,OAAA,CAAAwM,cAAA,GAAAA,cAAA;AAC3B,IAAMC,sBAAsB,GAAG,GAAG;AAACzM,OAAA,CAAAyM,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,cAAc,GAAG,GAAG;AAAC1M,OAAA,CAAA0M,cAAA,GAAAA,cAAA;AAC3B,IAAMC,sBAAsB,GAAG,GAAG;AAAC3M,OAAA,CAAA2M,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,sBAAsB,GAAG,GAAG;AAAC5M,OAAA,CAAA4M,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,UAAU,GAAG,CAAC;AAAC7M,OAAA,CAAA6M,UAAA,GAAAA,UAAA;AACrB,IAAMC,WAAW,GAAG,CAAC;AAAC9M,OAAA,CAAA8M,WAAA,GAAAA,WAAA;AACtB,IAAMC,SAAS,GAAG,CAAC;AAAC/M,OAAA,CAAA+M,SAAA,GAAAA,SAAA;AACpB,IAAMC,cAAc,GAAG,CAAC;AAAChN,OAAA,CAAAgN,cAAA,GAAAA,cAAA;AACzB,IAAMC,UAAU,GAAG,CAAC;AAACjN,OAAA,CAAAiN,UAAA,GAAAA,UAAA;AACrB,IAAMC,iBAAiB,GAAG,CAAC;AAAClN,OAAA,CAAAkN,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,YAAY,GAAG,CAAC;AAACnN,OAAA,CAAAmN,YAAA,GAAAA,YAAA;AACvB,IAAMC,aAAa,GAAG,CAAC;AAACpN,OAAA,CAAAoN,aAAA,GAAAA,aAAA;AACxB,IAAMC,iBAAiB,GAAG,CAAC;AAACrN,OAAA,CAAAqN,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,YAAY,GAAG,CAAC;AAACtN,OAAA,CAAAsN,YAAA,GAAAA,YAAA;AACvB,IAAMC,YAAY,GAAG,CAAC;AAACvN,OAAA,CAAAuN,YAAA,GAAAA,YAAA;AACvB,IAAMC,aAAa,GAAG,CAAC;AAACxN,OAAA,CAAAwN,aAAA,GAAAA,aAAA;AACxB,IAAMC,iBAAiB,GAAG,CAAC;AAACzN,OAAA,CAAAyN,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,mBAAmB,GAAG,CAAC;AAAC1N,OAAA,CAAA0N,mBAAA,GAAAA,mBAAA;AAC9B,IAAMC,iBAAiB,GAAG,CAAC;AAAC3N,OAAA,CAAA2N,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,qBAAqB,GAAG,CAAC;AAAC5N,OAAA,CAAA4N,qBAAA,GAAAA,qBAAA;AAChC,IAAMC,iBAAiB,GAAG,CAAC;AAAC7N,OAAA,CAAA6N,iBAAA,GAAAA,iBAAA;AAE5B,IAAMC,SAAS,GAAG,GAAG;AAAC9N,OAAA,CAAA8N,SAAA,GAAAA,SAAA;AACtB,IAAMC,qBAAqB,GAAG,GAAG;AAAC/N,OAAA,CAAA+N,qBAAA,GAAAA,qBAAA;AAClC,IAAMC,qBAAqB,GAAG,GAAG;AAAChO,OAAA,CAAAgO,qBAAA,GAAAA,qBAAA;AAClC,IAAMC,gCAAgC,GAAG,GAAG;AAACjO,OAAA,CAAAiO,gCAAA,GAAAA,gCAAA;AAC7C,IAAMC,gCAAgC,GAAG,GAAG;AAAClO,OAAA,CAAAkO,gCAAA,GAAAA,gCAAA;AAC7C,IAAMC,uBAAuB,GAAG,GAAG;AAACnO,OAAA,CAAAmO,uBAAA,GAAAA,uBAAA;AACpC,IAAMC,cAAc,GAAG,IAAI;AAACpO,OAAA,CAAAoO,cAAA,GAAAA,cAAA;AAC5B,IAAMC,mBAAmB,GAAG,IAAI;AAACrO,OAAA,CAAAqO,mBAAA,GAAAA,mBAAA;AACjC,IAAMC,sBAAsB,GAAG,IAAI;AAACtO,OAAA,CAAAsO,sBAAA,GAAAA,sBAAA;AACpC,IAAMC,aAAa,GAAG,IAAI;AAACvO,OAAA,CAAAuO,aAAA,GAAAA,aAAA;AAC3B,IAAMC,0BAA0B,GAAG,IAAI;AAACxO,OAAA,CAAAwO,0BAAA,GAAAA,0BAAA;AACxC,IAAMC,0BAA0B,GAAG,IAAI;AAACzO,OAAA,CAAAyO,0BAAA,GAAAA,0BAAA;AACxC,IAAMC,yBAAyB,GAAG,IAAI;AAAC1O,OAAA,CAAA0O,yBAAA,GAAAA,yBAAA;AACvC,IAAMC,yBAAyB,GAAG,IAAI;AAAC3O,OAAA,CAAA2O,yBAAA,GAAAA,yBAAA;AACvC,IAAMC,YAAY,GAAG,IAAI;AAAC5O,OAAA,CAAA4O,YAAA,GAAAA,YAAA;AAC1B,IAAMC,yBAAyB,GAAG,IAAI;AAAC7O,OAAA,CAAA6O,yBAAA,GAAAA,yBAAA;AACvC,IAAMC,yBAAyB,GAAG,IAAI;AAAC9O,OAAA,CAAA8O,yBAAA,GAAAA,yBAAA;AACvC,IAAMC,wBAAwB,GAAG,IAAI;AAAC/O,OAAA,CAAA+O,wBAAA,GAAAA,wBAAA;AACtC,IAAMC,wBAAwB,GAAG,IAAI;AAAChP,OAAA,CAAAgP,wBAAA,GAAAA,wBAAA;AACtC,IAAMC,gBAAgB,GAAG,IAAI;AAACjP,OAAA,CAAAiP,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,QAAQ,GAAG,IAAI;AAAClP,OAAA,CAAAkP,QAAA,GAAAA,QAAA;AACtB,IAAMC,SAAS,GAAG,IAAI;AAACnP,OAAA,CAAAmP,SAAA,GAAAA,SAAA;AACvB,IAAMC,iBAAiB,GAAG,IAAI;AAACpP,OAAA,CAAAoP,iBAAA,GAAAA,iBAAA;AAC/B,IAAMC,OAAO,GAAG,IAAI;AAACrP,OAAA,CAAAqP,OAAA,GAAAA,OAAA;AACrB,IAAMC,eAAe,GAAG,IAAI;AAACtP,OAAA,CAAAsP,eAAA,GAAAA,eAAA;AAC7B,IAAMC,SAAS,GAAG,IAAI;AAACvP,OAAA,CAAAuP,SAAA,GAAAA,SAAA;AACvB,IAAMC,aAAa,GAAG,IAAI;AAACxP,OAAA,CAAAwP,aAAA,GAAAA,aAAA;AAC3B,IAAMC,qBAAqB,GAAG,IAAI;AAACzP,OAAA,CAAAyP,qBAAA,GAAAA,qBAAA;AACnC,IAAMC,qBAAqB,GAAG,IAAI;AAAC1P,OAAA,CAAA0P,qBAAA,GAAAA,qBAAA;AACnC,IAAMC,kBAAkB,GAAG,IAAI;AAAC3P,OAAA,CAAA2P,kBAAA,GAAAA,kBAAA;AAChC,IAAMC,WAAW,GAAG,IAAI;AAAC5P,OAAA,CAAA4P,WAAA,GAAAA,WAAA;AACzB,IAAMC,UAAU,GAAG,IAAI;AAAC7P,OAAA,CAAA6P,UAAA,GAAAA,UAAA;AACxB,IAAMC,eAAe,GAAG,IAAI;AAAC9P,OAAA,CAAA8P,eAAA,GAAAA,eAAA;AAC7B,IAAMC,oBAAoB,GAAG,IAAI;AAAC/P,OAAA,CAAA+P,oBAAA,GAAAA,oBAAA;AAClC,IAAMC,WAAW,GAAG,IAAI;AAAChQ,OAAA,CAAAgQ,WAAA,GAAAA,WAAA;AACzB,IAAMC,kBAAkB,GAAG,IAAI;AAACjQ,OAAA,CAAAiQ,kBAAA,GAAAA,kBAAA;AAChC,IAAMC,SAAS,GAAG,IAAI;AAAClQ,OAAA,CAAAkQ,SAAA,GAAAA,SAAA;AACvB,IAAMC,gBAAgB,GAAG,IAAI;AAACnQ,OAAA,CAAAmQ,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,QAAQ,GAAG,IAAI;AAACpQ,OAAA,CAAAoQ,QAAA,GAAAA,QAAA;AACtB,IAAMC,eAAe,GAAG,IAAI;AAACrQ,OAAA,CAAAqQ,eAAA,GAAAA,eAAA;AAC7B,IAAMC,iBAAiB,GAAG,IAAI;AAACtQ,OAAA,CAAAsQ,iBAAA,GAAAA,iBAAA;AAE/B,IAAMC,oBAAoB,GAAG,KAAK;AAACvQ,OAAA,CAAAuQ,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,qBAAqB,GAAG,KAAK;AAACxQ,OAAA,CAAAwQ,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,qBAAqB,GAAG,KAAK;AAACzQ,OAAA,CAAAyQ,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,qBAAqB,GAAG,KAAK;AAAC1Q,OAAA,CAAA0Q,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,uBAAuB,GAAG,KAAK;AAAC3Q,OAAA,CAAA2Q,uBAAA,GAAAA,uBAAA;AACtC,IAAMC,uBAAuB,GAAG,KAAK;AAAC5Q,OAAA,CAAA4Q,uBAAA,GAAAA,uBAAA;AACtC,IAAMC,wBAAwB,GAAG,KAAK;AAAC7Q,OAAA,CAAA6Q,wBAAA,GAAAA,wBAAA;AACvC,IAAMC,wBAAwB,GAAG,KAAK;AAAC9Q,OAAA,CAAA8Q,wBAAA,GAAAA,wBAAA;AACvC,IAAMC,eAAe,GAAG,KAAK;AAAC/Q,OAAA,CAAA+Q,eAAA,GAAAA,eAAA;AAC9B,IAAMC,eAAe,GAAG,KAAK;AAAChR,OAAA,CAAAgR,eAAA,GAAAA,eAAA;AAC9B,IAAMC,oBAAoB,GAAG,KAAK;AAACjR,OAAA,CAAAiR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAAClR,OAAA,CAAAkR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACnR,OAAA,CAAAmR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACpR,OAAA,CAAAoR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACrR,OAAA,CAAAqR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACtR,OAAA,CAAAsR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACvR,OAAA,CAAAuR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACxR,OAAA,CAAAwR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACzR,OAAA,CAAAyR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,qBAAqB,GAAG,KAAK;AAAC1R,OAAA,CAAA0R,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,qBAAqB,GAAG,KAAK;AAAC3R,OAAA,CAAA2R,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,qBAAqB,GAAG,KAAK;AAAC5R,OAAA,CAAA4R,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,sBAAsB,GAAG,KAAK;AAAC7R,OAAA,CAAA6R,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,sBAAsB,GAAG,KAAK;AAAC9R,OAAA,CAAA8R,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,sBAAsB,GAAG,KAAK;AAAC/R,OAAA,CAAA+R,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,gBAAgB,GAAG,KAAK;AAAChS,OAAA,CAAAgS,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,sBAAsB,GAAG,KAAK;AAACjS,OAAA,CAAAiS,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,wBAAwB,GAAG,KAAK;AAAClS,OAAA,CAAAkS,wBAAA,GAAAA,wBAAA;AACvC,IAAMC,gBAAgB,GAAG,KAAK;AAACnS,OAAA,CAAAmS,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,uBAAuB,GAAG,KAAK;AAACpS,OAAA,CAAAoS,uBAAA,GAAAA,uBAAA;AACtC,IAAMC,sBAAsB,GAAG,KAAK;AAACrS,OAAA,CAAAqS,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,6BAA6B,GAAG,KAAK;AAACtS,OAAA,CAAAsS,6BAAA,GAAAA,6BAAA;AAC5C,IAAMC,QAAQ,GAAG,IAAI;AAACvS,OAAA,CAAAuS,QAAA,GAAAA,QAAA;AACtB,IAAMC,UAAU,GAAG,IAAI;AAACxS,OAAA,CAAAwS,UAAA,GAAAA,UAAA;AACxB,IAAMC,YAAY,GAAG,IAAI;AAACzS,OAAA,CAAAyS,YAAA,GAAAA,YAAA;AAC1B,IAAMC,mBAAmB,GAAG,IAAI;AAAC1S,OAAA,CAAA0S,mBAAA,GAAAA,mBAAA;AACjC,IAAMC,iBAAiB,GAAG,IAAI;AAAC3S,OAAA,CAAA2S,iBAAA,GAAAA,iBAAA;AAC/B,IAAMC,iBAAiB,GAAG,IAAI;AAAC5S,OAAA,CAAA4S,iBAAA,GAAAA,iBAAA;AAC/B,IAAMC,mBAAmB,GAAG,IAAI;AAAC7S,OAAA,CAAA6S,mBAAA,GAAAA,mBAAA;AACjC,IAAMC,eAAe,GAAG,IAAI;AAAC9S,OAAA,CAAA8S,eAAA,GAAAA,eAAA;AAC7B,IAAMC,gBAAgB,GAAG,IAAI;AAAC/S,OAAA,CAAA+S,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,wBAAwB,GAAG,IAAI;AAAChT,OAAA,CAAAgT,wBAAA,GAAAA,wBAAA;AACtC,IAAMC,0BAA0B,GAAG,IAAI;AAACjT,OAAA,CAAAiT,0BAAA,GAAAA,0BAAA;AACxC,IAAMC,iBAAiB,GAAG,CAAC;AAAClT,OAAA,CAAAkT,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,qBAAqB,GAAG,CAAC;AAACnT,OAAA,CAAAmT,qBAAA,GAAAA,qBAAA;AAChC,IAAMC,mBAAmB,GAAG,CAAC;AAC7B;AAAApT,OAAA,CAAAoT,mBAAA,GAAAA,mBAAA;AACA,IAAMC,cAAc,GAAG,IAAI;AAC3B;AAAArT,OAAA,CAAAqT,cAAA,GAAAA,cAAA;AACA,IAAMC,YAAY,GAAG,IAAI;AAACtT,OAAA,CAAAsT,YAAA,GAAAA,YAAA;AAC1B,IAAMC,iBAAiB,GAAG,IAAI;AAACvT,OAAA,CAAAuT,iBAAA,GAAAA,iBAAA;AAC/B,IAAMC,gBAAgB,GAAG,IAAI;AAACxT,OAAA,CAAAwT,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,qBAAqB,GAAG,CAAC;AAACzT,OAAA,CAAAyT,qBAAA,GAAAA,qBAAA;AAChC,IAAMC,oBAAoB,GAAG,CAAC;;AAE9B;AAAA1T,OAAA,CAAA0T,oBAAA,GAAAA,oBAAA;AACA,IAAMC,YAAY,GAAG,EAAE;AAAC3T,OAAA,CAAA2T,YAAA,GAAAA,YAAA;AACxB,IAAMC,cAAc,GAAG,MAAM;AAAC5T,OAAA,CAAA4T,cAAA,GAAAA,cAAA;AAC9B,IAAMC,oBAAoB,GAAG,aAAa;AAAC7T,OAAA,CAAA6T,oBAAA,GAAAA,oBAAA;AAC3C,IAAMC,mBAAmB,GAAG,YAAY;AAAC9T,OAAA,CAAA8T,mBAAA,GAAAA,mBAAA;AACzC,IAAMC,yBAAyB,GAAG,mBAAmB;AAAC/T,OAAA,CAAA+T,yBAAA,GAAAA,yBAAA;AAEtD,IAAMC,aAAa,GAAG,CAAC;AAAChU,OAAA,CAAAgU,aAAA,GAAAA,aAAA;AACxB,IAAMC,aAAa,GAAG,IAAI;AAACjU,OAAA,CAAAiU,aAAA,GAAAA,aAAA;AAC3B,IAAMC,gBAAgB,GAAG,IAAI;AAAClU,OAAA,CAAAkU,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,kBAAkB,GAAG,IAAI;AAACnU,OAAA,CAAAmU,kBAAA,GAAAA,kBAAA;AAChC,IAAMC,kBAAkB,GAAG,IAAI;AAACpU,OAAA,CAAAoU,kBAAA,GAAAA,kBAAA;AAChC,IAAMC,sBAAsB,GAAG,KAAK;AAACrU,OAAA,CAAAqU,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,sBAAsB,GAAG,KAAK;AAACtU,OAAA,CAAAsU,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,eAAe,GAAG,IAAI;AAACvU,OAAA,CAAAuU,eAAA,GAAAA,eAAA;AAE7B,IAAMC,gBAAgB,GAAG,GAAG;AAACxU,OAAA,CAAAwU,gBAAA,GAAAA,gBAAA;AAC7B,IAAMC,eAAe,GAAG,GAAG;AAACzU,OAAA,CAAAyU,eAAA,GAAAA,eAAA;AAC5B,IAAMC,gBAAgB,GAAG,GAAG;AAAC1U,OAAA,CAAA0U,gBAAA,GAAAA,gBAAA;AAC7B,IAAMC,oBAAoB,GAAG,GAAG;AAAC3U,OAAA,CAAA2U,oBAAA,GAAAA,oBAAA;AACjC,IAAMC,kBAAkB,GAAG,GAAG;AAAC5U,OAAA,CAAA4U,kBAAA,GAAAA,kBAAA;AAC/B,IAAMC,mBAAmB,GAAG,GAAG;AAAC7U,OAAA,CAAA6U,mBAAA,GAAAA,mBAAA;AAChC,IAAMC,uBAAuB,GAAG,GAAG;AAAC9U,OAAA,CAAA8U,uBAAA,GAAAA,uBAAA;AACpC,IAAMC,iBAAiB,GAAG,GAAG;AAAC/U,OAAA,CAAA+U,iBAAA,GAAAA,iBAAA;AAE9B,IAAMC,YAAY,GAAG,GAAG;AAAChV,OAAA,CAAAgV,YAAA,GAAAA,YAAA;AACzB,IAAMC,WAAW,GAAG,GAAG;AAACjV,OAAA,CAAAiV,WAAA,GAAAA,WAAA;AACxB,IAAMC,YAAY,GAAG,GAAG;AAAClV,OAAA,CAAAkV,YAAA,GAAAA,YAAA;AACzB,IAAMC,gBAAgB,GAAG,GAAG;AAACnV,OAAA,CAAAmV,gBAAA,GAAAA,gBAAA;AAC7B,IAAMC,cAAc,GAAG,GAAG;AAACpV,OAAA,CAAAoV,cAAA,GAAAA,cAAA;AAC3B,IAAMC,eAAe,GAAG,GAAG;AAACrV,OAAA,CAAAqV,eAAA,GAAAA,eAAA;AAC5B,IAAMC,mBAAmB,GAAG,GAAG;AAACtV,OAAA,CAAAsV,mBAAA,GAAAA,mBAAA;AAChC,IAAMC,aAAa,GAAG,GAAG;AAACvV,OAAA,CAAAuV,aAAA,GAAAA,aAAA;AAE1B,IAAMC,eAAe,GAAG,KAAK;AAACxV,OAAA,CAAAwV,eAAA,GAAAA,eAAA;AAC9B,IAAMC,gBAAgB,GAAG,KAAK;AAACzV,OAAA,CAAAyV,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,eAAe,GAAG,KAAK;AAAC1V,OAAA,CAAA0V,eAAA,GAAAA,eAAA;AAC9B,IAAMC,eAAe,GAAG,KAAK;AAAC3V,OAAA,CAAA2V,eAAA,GAAAA,eAAA;AAC9B,IAAMC,gBAAgB,GAAG,KAAK;AAAC5V,OAAA,CAAA4V,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,eAAe,GAAG,KAAK;AAAC7V,OAAA,CAAA6V,eAAA,GAAAA,eAAA;AAC9B,IAAMC,eAAe,GAAG,KAAK;AAAC9V,OAAA,CAAA8V,eAAA,GAAAA,eAAA;AAC9B,IAAMC,gBAAgB,GAAG,KAAK;AAAC/V,OAAA,CAAA+V,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,eAAe,GAAG,KAAK;AAAChW,OAAA,CAAAgW,eAAA,GAAAA,eAAA;AAE9B,IAAMC,KAAK,GAAG,KAAK;AAACjW,OAAA,CAAAiW,KAAA,GAAAA,KAAA;AACpB,IAAMC,KAAK,GAAG,QAAQ;AAAClW,OAAA,CAAAkW,KAAA,GAAAA,KAAA;AAEvB,IAAMC,YAAY,GAAG,IAAI,CAAC,CAAC;AAAAnW,OAAA,CAAAmW,YAAA,GAAAA,YAAA;AAE3B,IAAMC,qBAAqB,GAAG,IAAI;AAACpW,OAAA,CAAAoW,qBAAA,GAAAA,qBAAA;AACnC,IAAMC,sBAAsB,GAAG,IAAI;;AAEnC;AACA;AACA;AAFArW,OAAA,CAAAqW,sBAAA,GAAAA,sBAAA;AAAA,IAIMC,eAAe;EAAA,SAAAA,gBAAA;IAAAzN,eAAA,OAAAyN,eAAA;EAAA;EAAAjN,YAAA,CAAAiN,eAAA;IAAA9V,GAAA;IAAAE,KAAA,EAEpB,SAAA6V,iBAAkBhU,IAAI,EAAEiU,QAAQ,EAAG;MAElC,IAAK,IAAI,CAACC,UAAU,KAAK1R,SAAS,EAAG,IAAI,CAAC0R,UAAU,GAAG,CAAC,CAAC;MAEzD,IAAMC,SAAS,GAAG,IAAI,CAACD,UAAU;MAEjC,IAAKC,SAAS,CAAEnU,IAAI,CAAE,KAAKwC,SAAS,EAAG;QAEtC2R,SAAS,CAAEnU,IAAI,CAAE,GAAG,EAAE;MAEvB;MAEA,IAAKmU,SAAS,CAAEnU,IAAI,CAAE,CAACoU,OAAO,CAAEH,QAAS,CAAC,KAAK,CAAE,CAAC,EAAG;QAEpDE,SAAS,CAAEnU,IAAI,CAAE,CAACuD,IAAI,CAAE0Q,QAAS,CAAC;MAEnC;IAED;EAAC;IAAAhW,GAAA;IAAAE,KAAA,EAED,SAAAkW,iBAAkBrU,IAAI,EAAEiU,QAAQ,EAAG;MAElC,IAAK,IAAI,CAACC,UAAU,KAAK1R,SAAS,EAAG,OAAO,KAAK;MAEjD,IAAM2R,SAAS,GAAG,IAAI,CAACD,UAAU;MAEjC,OAAOC,SAAS,CAAEnU,IAAI,CAAE,KAAKwC,SAAS,IAAI2R,SAAS,CAAEnU,IAAI,CAAE,CAACoU,OAAO,CAAEH,QAAS,CAAC,KAAK,CAAE,CAAC;IAExF;EAAC;IAAAhW,GAAA;IAAAE,KAAA,EAED,SAAAmW,oBAAqBtU,IAAI,EAAEiU,QAAQ,EAAG;MAErC,IAAK,IAAI,CAACC,UAAU,KAAK1R,SAAS,EAAG;MAErC,IAAM2R,SAAS,GAAG,IAAI,CAACD,UAAU;MACjC,IAAMK,aAAa,GAAGJ,SAAS,CAAEnU,IAAI,CAAE;MAEvC,IAAKuU,aAAa,KAAK/R,SAAS,EAAG;QAElC,IAAMgS,KAAK,GAAGD,aAAa,CAACH,OAAO,CAAEH,QAAS,CAAC;QAE/C,IAAKO,KAAK,KAAK,CAAE,CAAC,EAAG;UAEpBD,aAAa,CAACE,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;QAEjC;MAED;IAED;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAuW,cAAeC,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACT,UAAU,KAAK1R,SAAS,EAAG;MAErC,IAAM2R,SAAS,GAAG,IAAI,CAACD,UAAU;MACjC,IAAMK,aAAa,GAAGJ,SAAS,CAAEQ,KAAK,CAAC3U,IAAI,CAAE;MAE7C,IAAKuU,aAAa,KAAK/R,SAAS,EAAG;QAElCmS,KAAK,CAACjO,MAAM,GAAG,IAAI;;QAEnB;QACA,IAAMkO,KAAK,GAAGL,aAAa,CAAClP,KAAK,CAAE,CAAE,CAAC;QAEtC,KAAM,IAAItB,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGD,KAAK,CAAC9Q,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAEhD6Q,KAAK,CAAE7Q,CAAC,CAAE,CAAC9D,IAAI,CAAE,IAAI,EAAE0U,KAAM,CAAC;QAE/B;QAEAA,KAAK,CAACjO,MAAM,GAAG,IAAI;MAEpB;IAED;EAAC;EAAA,OAAAqN,eAAA;AAAA;AAAAtW,OAAA,CAAAsW,eAAA,GAAAA,eAAA;AAIF,IAAMegD,IAAIC,KAAK,GAAG,OAAO;AAGnB,IAAMC,OAAO,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;AAC7B,IAAMC,OAAO,GAAG,GAAG,GAAGF,IAAI,CAACC,EAAE;;AAE7B;AACA,SAASE,YAAYA,CAAA,EAAG;EAEvB,IAAMC,EAAE,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMC,EAAE,GAAGN,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;EACzC,IAAME,EAAE,GAAGP,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMG,EAAE,GAAGR,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMI,IAAI,GAAGZ,IAAI,CAAEO,EAAE,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,GAAG,GAC/GP,IAAI,CAAES,EAAE,GAAG,IAAI,CAAE,GAAGT,IAAI,CAAES,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,GAAGT,IAAI,CAAES,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,GAAGT,IAAI,CAAES,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,GAAG,GACjHT,IAAI,CAAEU,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,GAAGV,IAAI,CAAEU,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,GAAGV,IAAI,CAAEU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGV,IAAI,CAAEU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAC3GV,IAAI,CAAEW,EAAE,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE;;EAEhG;EACA,OAAOC,IAAI,CAACC,WAAW,CAAC,CAAC;AAE1B;AAEA,SAASC,KAAKA,CAAEzX,KAAK,EAAE0X,GAAG,EAAEC,GAAG,EAAG;EAEjC,OAAOb,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE3X,KAAM,CAAE,CAAC;AAE/C;;AAEA;AACA;AACA,SAAS4X,eAAeA,CAAEC,CAAC,EAAEC,CAAC,EAAG;EAEhC,OAAO,CAAID,CAAC,GAAGC,CAAC,GAAKA,CAAC,IAAKA,CAAC;AAE7B;;AAEA;AACA,SAASC,SAASA,CAAEC,CAAC,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;EAEvC,OAAOD,EAAE,GAAG,CAAEH,CAAC,GAAGC,EAAE,KAAOG,EAAE,GAAGD,EAAE,CAAE,IAAKD,EAAE,GAAGD,EAAE,CAAE;AAEnD;;AAEA;AACA,SAASI,WAAWA,CAAEL,CAAC,EAAEM,CAAC,EAAEtY,KAAK,EAAG;EAEnC,IAAKgY,CAAC,KAAKM,CAAC,EAAG;IAEd,OAAO,CAAEtY,KAAK,GAAGgY,CAAC,KAAOM,CAAC,GAAGN,CAAC,CAAE;EAEjC,CAAC,MAAM;IAEN,OAAO,CAAC;EAET;AAED;;AAEA;AACA,SAASO,IAAIA,CAAEP,CAAC,EAAEM,CAAC,EAAEE,CAAC,EAAG;EAExB,OAAO,CAAE,CAAC,GAAGA,CAAC,IAAKR,CAAC,GAAGQ,CAAC,GAAGF,CAAC;AAE7B;;AAEA;AACA,SAASG,IAAIA,CAAET,CAAC,EAAEM,CAAC,EAAEI,MAAM,EAAEC,EAAE,EAAG;EAEjC,OAAOJ,IAAI,CAAEP,CAAC,EAAEM,CAAC,EAAE,CAAC,GAAGxB,IAAI,CAAC8B,GAAG,CAAE,CAAEF,MAAM,GAAGC,EAAG,CAAE,CAAC;AAEnD;;AAEA;AACA,SAASE,QAAQA,CAAEb,CAAC,EAAErS,MAAM,GAAG,CAAC,EAAG;EAElC,OAAOA,MAAM,GAAGmR,IAAI,CAACgC,GAAG,CAAElB,eAAe,CAAEI,CAAC,EAAErS,MAAM,GAAG,CAAE,CAAC,GAAGA,MAAO,CAAC;AAEtE;;AAEA;AACA,SAASoT,UAAUA,CAAEf,CAAC,EAAEN,GAAG,EAAEC,GAAG,EAAG;EAElC,IAAKK,CAAC,IAAIN,GAAG,EAAG,OAAO,CAAC;EACxB,IAAKM,CAAC,IAAIL,GAAG,EAAG,OAAO,CAAC;EAExBK,CAAC,GAAG,CAAEA,CAAC,GAAGN,GAAG,KAAOC,GAAG,GAAGD,GAAG,CAAE;EAE/B,OAAOM,CAAC,GAAGA,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAE;AAE7B;AAEA,SAASgB,YAAYA,CAAEhB,CAAC,EAAEN,GAAG,EAAEC,GAAG,EAAG;EAEpC,IAAKK,CAAC,IAAIN,GAAG,EAAG,OAAO,CAAC;EACxB,IAAKM,CAAC,IAAIL,GAAG,EAAG,OAAO,CAAC;EAExBK,CAAC,GAAG,CAAEA,CAAC,GAAGN,GAAG,KAAOC,GAAG,GAAGD,GAAG,CAAE;EAE/B,OAAOM,CAAC,GAAGA,CAAC,GAAGA,CAAC,IAAKA,CAAC,IAAKA,CAAC,GAAG,CAAC,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE;AAE/C;;AAEA;AACA,SAASiB,OAAOA,CAAEC,GAAG,EAAEC,IAAI,EAAG;EAE7B,OAAOD,GAAG,GAAGpC,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACK,MAAM,CAAC,CAAC,IAAKgC,IAAI,GAAGD,GAAG,GAAG,CAAC,CAAG,CAAC;AAE9D;;AAEA;AACA,SAASG,SAASA,CAAEH,GAAG,EAAEC,IAAI,EAAG;EAE/B,OAAOD,GAAG,GAAGpC,IAAI,CAACK,MAAM,CAAC,CAAC,IAAKgC,IAAI,GAAGD,GAAG,CAAE;AAE5C;;AAEA;AACA,SAASI,eAAeA,CAAEC,KAAK,EAAG;EAEjC,OAAOA,KAAK,IAAK,GAAG,GAAGzC,IAAI,CAACK,MAAM,CAAC,CAAC,CAAE;AAEvC;;AAEA;AACA,SAASqC,YAAYA,CAAEC,CAAC,EAAG;EAE1B,IAAKA,CAAC,KAAKpV,SAAS,EAAGuS,KAAK,GAAG6C,CAAC;;EAEhC;;EAEA,IAAIjB,CAAC,GAAG5B,KAAK,IAAI,UAAU;EAE3B4B,CAAC,GAAG1B,IAAI,CAAC4C,IAAI,CAAElB,CAAC,GAAGA,CAAC,KAAK,EAAE,EAAEA,CAAC,GAAG,CAAE,CAAC;EAEpCA,CAAC,IAAIA,CAAC,GAAG1B,IAAI,CAAC4C,IAAI,CAAElB,CAAC,GAAGA,CAAC,KAAK,CAAC,EAAEA,CAAC,GAAG,EAAG,CAAC;EAEzC,OAAO,CAAE,CAAEA,CAAC,GAAGA,CAAC,KAAK,EAAE,MAAO,CAAC,IAAK,UAAU;AAE/C;AAEA,SAASmB,QAAQA,CAAEC,OAAO,EAAG;EAE5B,OAAOA,OAAO,GAAG/C,OAAO;AAEzB;AAEA,SAASgD,QAAQA,CAAEC,OAAO,EAAG;EAE5B,OAAOA,OAAO,GAAG9C,OAAO;AAEzB;AAEA,SAAS+C,YAAYA,CAAE/Z,KAAK,EAAG;EAE9B,OAAO,CAAEA,KAAK,GAAKA,KAAK,GAAG,CAAG,MAAO,CAAC,IAAIA,KAAK,KAAK,CAAC;AAEtD;AAEA,SAASga,cAAcA,CAAEha,KAAK,EAAG;EAEhC,OAAO8W,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEnD,IAAI,CAACoD,IAAI,CAAEpD,IAAI,CAACqD,GAAG,CAAEna,KAAM,CAAC,GAAG8W,IAAI,CAACsD,GAAI,CAAE,CAAC;AAEhE;AAEA,SAASC,eAAeA,CAAEra,KAAK,EAAG;EAEjC,OAAO8W,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEnD,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACqD,GAAG,CAAEna,KAAM,CAAC,GAAG8W,IAAI,CAACsD,GAAI,CAAE,CAAC;AAEjE;AAEA,SAASE,4BAA4BA,CAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAG;EAE1D;;EAEA;EACA;EACA;;EAEA,IAAMC,GAAG,GAAG9D,IAAI,CAAC8D,GAAG;EACpB,IAAMC,GAAG,GAAG/D,IAAI,CAAC+D,GAAG;EAEpB,IAAMC,EAAE,GAAGF,GAAG,CAAEH,CAAC,GAAG,CAAE,CAAC;EACvB,IAAMM,EAAE,GAAGF,GAAG,CAAEJ,CAAC,GAAG,CAAE,CAAC;EAEvB,IAAMO,GAAG,GAAGJ,GAAG,CAAE,CAAEJ,CAAC,GAAGE,CAAC,IAAK,CAAE,CAAC;EAChC,IAAMO,GAAG,GAAGJ,GAAG,CAAE,CAAEL,CAAC,GAAGE,CAAC,IAAK,CAAE,CAAC;EAEhC,IAAMQ,IAAI,GAAGN,GAAG,CAAE,CAAEJ,CAAC,GAAGE,CAAC,IAAK,CAAE,CAAC;EACjC,IAAMS,IAAI,GAAGN,GAAG,CAAE,CAAEL,CAAC,GAAGE,CAAC,IAAK,CAAE,CAAC;EAEjC,IAAMU,IAAI,GAAGR,GAAG,CAAE,CAAEF,CAAC,GAAGF,CAAC,IAAK,CAAE,CAAC;EACjC,IAAMa,IAAI,GAAGR,GAAG,CAAE,CAAEH,CAAC,GAAGF,CAAC,IAAK,CAAE,CAAC;EAEjC,QAASG,KAAK;IAEb,KAAK,KAAK;MACTJ,CAAC,CAACe,GAAG,CAAER,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGG,IAAI,EAAEJ,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAER,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGM,IAAI,EAAEN,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGM,IAAI,EAAEP,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGM,IAAI,EAAEN,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAI,CAAC;MACjD;IAED;MACCO,OAAO,CAACC,IAAI,CAAE,iFAAiF,GAAGb,KAAM,CAAC;EAE3G;AAED;AAEA,SAASc,WAAWA,CAAEzb,KAAK,EAAEyW,KAAK,EAAG;EAEpC,QAASA,KAAK,CAACxQ,WAAW;IAEzB,KAAKyV,YAAY;MAEhB,OAAO1b,KAAK;IAEb,KAAK2b,WAAW;MAEf,OAAO3b,KAAK,GAAG,YAAY;IAE5B,KAAK4b,WAAW;MAEf,OAAO5b,KAAK,GAAG,OAAO;IAEvB,KAAK6b,UAAU;MAEd,OAAO7b,KAAK,GAAG,KAAK;IAErB,KAAK8b,UAAU;MAEd,OAAOhF,IAAI,CAACa,GAAG,CAAE3X,KAAK,GAAG,YAAY,EAAE,CAAE,GAAI,CAAC;IAE/C,KAAK+b,UAAU;MAEd,OAAOjF,IAAI,CAACa,GAAG,CAAE3X,KAAK,GAAG,OAAO,EAAE,CAAE,GAAI,CAAC;IAE1C,KAAKgc,SAAS;MAEb,OAAOlF,IAAI,CAACa,GAAG,CAAE3X,KAAK,GAAG,KAAK,EAAE,CAAE,GAAI,CAAC;IAExC;MAEC,MAAM,IAAI2D,KAAK,CAAE,yBAA0B,CAAC;EAE9C;AAED;AAEA,SAASsY,SAASA,CAAEjc,KAAK,EAAEyW,KAAK,EAAG;EAElC,QAASA,KAAK,CAACxQ,WAAW;IAEzB,KAAKyV,YAAY;MAEhB,OAAO1b,KAAK;IAEb,KAAK2b,WAAW;MAEf,OAAO7E,IAAI,CAACoF,KAAK,CAAElc,KAAK,GAAG,YAAa,CAAC;IAE1C,KAAK4b,WAAW;MAEf,OAAO9E,IAAI,CAACoF,KAAK,CAAElc,KAAK,GAAG,OAAQ,CAAC;IAErC,KAAK6b,UAAU;MAEd,OAAO/E,IAAI,CAACoF,KAAK,CAAElc,KAAK,GAAG,KAAM,CAAC;IAEnC,KAAK8b,UAAU;MAEd,OAAOhF,IAAI,CAACoF,KAAK,CAAElc,KAAK,GAAG,YAAa,CAAC;IAE1C,KAAK+b,UAAU;MAEd,OAAOjF,IAAI,CAACoF,KAAK,CAAElc,KAAK,GAAG,OAAQ,CAAC;IAErC,KAAKgc,SAAS;MAEb,OAAOlF,IAAI,CAACoF,KAAK,CAAElc,KAAK,GAAG,KAAM,CAAC;IAEnC;MAEC,MAAM,IAAI2D,KAAK,CAAE,yBAA0B,CAAC;EAE9C;AAED;AAEA,IAAMwY,SAAS,GAAG;EACjBtF,OAAO,EAAEA,OAAO;EAChBG,OAAO,EAAEA,OAAO;EAChBC,YAAY,EAAEA,YAAY;EAC1BQ,KAAK,EAAEA,KAAK;EACZG,eAAe,EAAEA,eAAe;EAChCG,SAAS,EAAEA,SAAS;EACpBM,WAAW,EAAEA,WAAW;EACxBE,IAAI,EAAEA,IAAI;EACVE,IAAI,EAAEA,IAAI;EACVI,QAAQ,EAAEA,QAAQ;EAClBE,UAAU,EAAEA,UAAU;EACtBC,YAAY,EAAEA,YAAY;EAC1BC,OAAO,EAAEA,OAAO;EAChBI,SAAS,EAAEA,SAAS;EACpBC,eAAe,EAAEA,eAAe;EAChCE,YAAY,EAAEA,YAAY;EAC1BG,QAAQ,EAAEA,QAAQ;EAClBE,QAAQ,EAAEA,QAAQ;EAClBE,YAAY,EAAEA,YAAY;EAC1BC,cAAc,EAAEA,cAAc;EAC9BK,eAAe,EAAEA,eAAe;EAChCC,4BAA4B,EAAEA,4BAA4B;EAC1D2B,SAAS,EAAEA,SAAS;EACpBR,WAAW,EAAEA;AACd,CAAC;AAACnc,OAAA,CAAA6c,SAAA,GAAAA,SAAA;AAAA,IAEIC,OAAO,0BAAAC,gBAAA;EAEZ,SAAAD,QAAapE,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAG;IAAAnQ,eAAA,OAAAiU,OAAA;IAE3BA,OAAO,CAAC3c,SAAS,CAAC6c,SAAS,GAAG,IAAI;IAElC,IAAI,CAACtE,CAAC,GAAGA,CAAC;IACV,IAAI,CAACM,CAAC,GAAGA,CAAC;EAEX;EAAC3P,YAAA,CAAAyT,OAAA;IAAAtc,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACvE,CAAC;IAEd,CAAC;IAAAsD,GAAA,EAED,SAAAA,IAAWtb,KAAK,EAAG;MAElB,IAAI,CAACgY,CAAC,GAAGhY,KAAK;IAEf;EAAC;IAAAF,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAACjE,CAAC;IAEd,CAAC;IAAAgD,GAAA,EAED,SAAAA,IAAYtb,KAAK,EAAG;MAEnB,IAAI,CAACsY,CAAC,GAAGtY,KAAK;IAEf;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKtD,CAAC,EAAEM,CAAC,EAAG;MAEX,IAAI,CAACN,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAwc,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACzE,CAAC,GAAGyE,MAAM;MACf,IAAI,CAACnE,CAAC,GAAGmE,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA0c,KAAM1E,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAA2c,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA4c,aAAcvG,KAAK,EAAErW,KAAK,EAAG;MAE5B,QAASqW,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAAC2B,CAAC,GAAGhY,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACsY,CAAC,GAAGtY,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAG0S,KAAM,CAAC;MAE9D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA6c,aAAcxG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAAC2B,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACM,CAAC;QACrB;UAAS,MAAM,IAAI3U,KAAK,CAAE,yBAAyB,GAAG0S,KAAM,CAAC;MAE9D;IAED;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAAC+R,CAAC,EAAE,IAAI,CAACM,CAAE,CAAC;IAE9C;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMC,CAAC,EAAG;MAET,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC;MACZ,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAKD,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAkd,UAAWzD,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAmd,WAAY3C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAod,gBAAiBJ,CAAC,EAAEvD,CAAC,EAAG;MAEvB,IAAI,CAACzB,CAAC,IAAIgF,CAAC,CAAChF,CAAC,GAAGyB,CAAC;MACjB,IAAI,CAACnB,CAAC,IAAI0E,CAAC,CAAC1E,CAAC,GAAGmB,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAqd,IAAKL,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAsd,UAAW7D,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAud,WAAY/C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAUR,CAAC,EAAG;MAEb,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAyd,eAAgBhB,MAAM,EAAG;MAExB,IAAI,CAACzE,CAAC,IAAIyE,MAAM;MAChB,IAAI,CAACnE,CAAC,IAAImE,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA0d,OAAQV,CAAC,EAAG;MAEX,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA2d,aAAclB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAO,CAAC;IAEzC;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA4d,aAAc9F,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;MAC5B,IAAMuF,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE;MACzC,IAAI,CAACvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAA/d,GAAA;IAAAE,KAAA,EAED,SAAA0X,IAAKsF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAEgF,CAAC,CAAChF,CAAE,CAAC;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAE0E,CAAC,CAAC1E,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA2X,IAAKqF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEgF,CAAC,CAAChF,CAAE,CAAC;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAE0E,CAAC,CAAC1E,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAyX,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA+d,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAACjG,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACjG,CAAE,CAAE,CAAC;MACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC3F,CAAE,CAAE,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAke,YAAaxG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMhS,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;MAE5B,OAAO,IAAI,CAACgY,YAAY,CAAEhY,MAAM,IAAI,CAAE,CAAC,CAAC8X,cAAc,CAAE3G,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEhS,MAAO,CAAE,CAAE,CAAC;IAEnG;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAoZ,MAAA,EAAQ;MAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAka,KAAA,EAAO;MAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAE,CAAC;MAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAE,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAkc,MAAA,EAAQ;MAEP,IAAI,CAAClE,CAAC,GAAGlB,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAClE,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAC5D,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAme,YAAA,EAAc;MAEb,IAAI,CAACnG,CAAC,GAAGlB,IAAI,CAACsH,KAAK,CAAE,IAAI,CAACpG,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsH,KAAK,CAAE,IAAI,CAAC9F,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAqe,OAAA,EAAS;MAER,IAAI,CAACrG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAse,IAAKtB,CAAC,EAAG;MAER,OAAO,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;IAEnC;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAue,MAAOvB,CAAC,EAAG;MAEV,OAAO,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG0E,CAAC,CAAChF,CAAC;IAEnC;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAAwe,SAAA,EAAW;MAEV,OAAO,IAAI,CAACxG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC;IAEzC;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA2F,OAAA,EAAS;MAER,OAAOmR,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACzG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAE,CAAC;IAEtD;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA0e,gBAAA,EAAkB;MAEjB,OAAO5H,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAE,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAE,CAAC;IAE/C;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAic,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC0B,YAAY,CAAE,IAAI,CAAChY,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC;IAE/C;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAA2e,MAAA,EAAQ;MAEP;;MAEA,IAAMA,KAAK,GAAG7H,IAAI,CAAC8H,KAAK,CAAE,CAAE,IAAI,CAACtG,CAAC,EAAE,CAAE,IAAI,CAACN,CAAE,CAAC,GAAGlB,IAAI,CAACC,EAAE;MAExD,OAAO4H,KAAK;IAEb;EAAC;IAAA7e,GAAA;IAAAE,KAAA,EAED,SAAA6e,QAAS7B,CAAC,EAAG;MAEZ,IAAM8B,WAAW,GAAGhI,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACD,QAAQ,CAAC,CAAC,GAAGxB,CAAC,CAACwB,QAAQ,CAAC,CAAE,CAAC;MAE/D,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAOhI,IAAI,CAACC,EAAE,GAAG,CAAC;MAE3C,IAAMgI,KAAK,GAAG,IAAI,CAACT,GAAG,CAAEtB,CAAE,CAAC,GAAG8B,WAAW;;MAEzC;;MAEA,OAAOhI,IAAI,CAACkI,IAAI,CAAEvH,KAAK,CAAEsH,KAAK,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IAE3C;EAAC;IAAAjf,GAAA;IAAAE,KAAA,EAED,SAAAif,WAAYjC,CAAC,EAAG;MAEf,OAAOlG,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACS,iBAAiB,CAAElC,CAAE,CAAE,CAAC;IAEhD;EAAC;IAAAld,GAAA;IAAAE,KAAA,EAED,SAAAkf,kBAAmBlC,CAAC,EAAG;MAEtB,IAAMmC,EAAE,GAAG,IAAI,CAACnH,CAAC,GAAGgF,CAAC,CAAChF,CAAC;QAAEoH,EAAE,GAAG,IAAI,CAAC9G,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;MAC1C,OAAO6G,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;IAEzB;EAAC;IAAAtf,GAAA;IAAAE,KAAA,EAED,SAAAqf,oBAAqBrC,CAAC,EAAG;MAExB,OAAOlG,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,GAAGgF,CAAC,CAAChF,CAAE,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,GAAG0E,CAAC,CAAC1E,CAAE,CAAC;IAE3D;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAsf,UAAW3Z,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACsW,SAAS,CAAC,CAAC,CAACwB,cAAc,CAAE9X,MAAO,CAAC;IAEjD;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAuY,KAAMyE,CAAC,EAAEuC,KAAK,EAAG;MAEhB,IAAI,CAACvH,CAAC,IAAI,CAAEgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKuH,KAAK;MAClC,IAAI,CAACjH,CAAC,IAAI,CAAE0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKiH,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAAwf,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAACvH,CAAC,GAAGyH,EAAE,CAACzH,CAAC,GAAG,CAAE0H,EAAE,CAAC1H,CAAC,GAAGyH,EAAE,CAACzH,CAAC,IAAKuH,KAAK;MACvC,IAAI,CAACjH,CAAC,GAAGmH,EAAE,CAACnH,CAAC,GAAG,CAAEoH,EAAE,CAACpH,CAAC,GAAGmH,EAAE,CAACnH,CAAC,IAAKiH,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQ3C,CAAC,EAAG;MAEX,OAAWA,CAAC,CAAChF,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQgF,CAAC,CAAC1E,CAAC,KAAK,IAAI,CAACA,CAAG;IAElD;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAAC7H,CAAC,GAAGvB,KAAK,CAAEoJ,MAAM,CAAE;MACxB,IAAI,CAACvH,CAAC,GAAG7B,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjCpJ,KAAK,CAAEoJ,MAAM,CAAE,GAAG,IAAI,CAAC7H,CAAC;MACxBvB,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACvH,CAAC;MAE5B,OAAO7B,KAAK;IAEb;EAAC;IAAA3W,GAAA;IAAAE,KAAA,EAED,SAAA+f,oBAAqBC,SAAS,EAAE3J,KAAK,EAAG;MAEvC,IAAI,CAAC2B,CAAC,GAAGgI,SAAS,CAACC,IAAI,CAAE5J,KAAM,CAAC;MAChC,IAAI,CAACiC,CAAC,GAAG0H,SAAS,CAACE,IAAI,CAAE7J,KAAM,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAmgB,aAAcC,MAAM,EAAEzB,KAAK,EAAG;MAE7B,IAAMjE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE+D,KAAM,CAAC;QAAElF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE8D,KAAM,CAAC;MAElD,IAAM3G,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGoI,MAAM,CAACpI,CAAC;MAC3B,IAAMM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG8H,MAAM,CAAC9H,CAAC;MAE3B,IAAI,CAACN,CAAC,GAAGA,CAAC,GAAG0C,CAAC,GAAGpC,CAAC,GAAGmB,CAAC,GAAG2G,MAAM,CAACpI,CAAC;MACjC,IAAI,CAACM,CAAC,GAAGN,CAAC,GAAGyB,CAAC,GAAGnB,CAAC,GAAGoC,CAAC,GAAG0F,MAAM,CAAC9H,CAAC;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAmX,OAAA,EAAS;MAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAArX,GAAA,EAAAuc,gBAAA;IAAArc,KAAA,eAAAX,mBAAA,GAAA8G,IAAA,CAED,SAAAnG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAuf,OAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAtZ,IAAA,GAAAsZ,SAAA,CAAA5b,IAAA;UAAA;YAAA4b,SAAA,CAAA5b,IAAA;YAEC,OAAM,IAAI,CAACsT,CAAC;UAAA;YAAAsI,SAAA,CAAA5b,IAAA;YACZ,OAAM,IAAI,CAAC4T,CAAC;UAAA;UAAA;YAAA,OAAAgI,SAAA,CAAAnZ,IAAA;QAAA;MAAA,GAAAnH,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAoc,OAAA;AAAA,EALElc,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAA8c,OAAA,GAAAA,OAAA;AAAA,IASbmE,OAAO;EAEZ,SAAAA,QAAaC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;IAAA7Y,eAAA,OAAAoY,OAAA;IAE1DA,OAAO,CAAC9gB,SAAS,CAACwhB,SAAS,GAAG,IAAI;IAElC,IAAI,CAACnD,QAAQ,GAAG,CAEf,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;IAED,IAAK0C,GAAG,KAAKnc,SAAS,EAAG;MAExB,IAAI,CAACiX,GAAG,CAAEkF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;IAExD;EAED;EAACrY,YAAA,CAAA4X,OAAA;IAAAzgB,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKkF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAElD,IAAME,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBoD,EAAE,CAAE,CAAC,CAAE,GAAGV,GAAG;MAAEU,EAAE,CAAE,CAAC,CAAE,GAAGP,GAAG;MAAEO,EAAE,CAAE,CAAC,CAAE,GAAGJ,GAAG;MAC3CI,EAAE,CAAE,CAAC,CAAE,GAAGT,GAAG;MAAES,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;MAAEM,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;MAC3CG,EAAE,CAAE,CAAC,CAAE,GAAGR,GAAG;MAAEQ,EAAE,CAAE,CAAC,CAAE,GAAGL,GAAG;MAAEK,EAAE,CAAE,CAAC,CAAE,GAAGF,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAlhB,GAAA;IAAAE,KAAA,EAED,SAAAmhB,SAAA,EAAW;MAEV,IAAI,CAAC7F,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAxb,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMjF,CAAC,EAAG;MAET,IAAMoJ,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAGtJ,CAAC,CAACgG,QAAQ;MAErBoD,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MACvDF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MACvDF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAthB,GAAA;IAAAE,KAAA,EAED,SAAAqhB,aAAcC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEnCF,KAAK,CAACG,oBAAoB,CAAE,IAAI,EAAE,CAAE,CAAC;MACrCF,KAAK,CAACE,oBAAoB,CAAE,IAAI,EAAE,CAAE,CAAC;MACrCD,KAAK,CAACC,oBAAoB,CAAE,IAAI,EAAE,CAAE,CAAC;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAA3hB,GAAA;IAAAE,KAAA,EAED,SAAA0hB,eAAgB5J,CAAC,EAAG;MAEnB,IAAMsJ,EAAE,GAAGtJ,CAAC,CAACgG,QAAQ;MAErB,IAAI,CAACxC,GAAG,CAEP8F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAEzB,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAthB,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAU1F,CAAC,EAAG;MAEb,OAAO,IAAI,CAAC6J,gBAAgB,CAAE,IAAI,EAAE7J,CAAE,CAAC;IAExC;EAAC;IAAAhY,GAAA;IAAAE,KAAA,EAED,SAAA4hB,YAAa9J,CAAC,EAAG;MAEhB,OAAO,IAAI,CAAC6J,gBAAgB,CAAE7J,CAAC,EAAE,IAAK,CAAC;IAExC;EAAC;IAAAhY,GAAA;IAAAE,KAAA,EAED,SAAA2hB,iBAAkBnH,CAAC,EAAEC,CAAC,EAAG;MAExB,IAAMoH,EAAE,GAAGrH,CAAC,CAACsD,QAAQ;MACrB,IAAMgE,EAAE,GAAGrH,CAAC,CAACqD,QAAQ;MACrB,IAAMoD,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMiE,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;QAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;QAAEI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;QAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;QAAEO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;QAAES,GAAG,GAAGT,EAAE,CAAE,CAAC,CAAE;QAAEU,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;MAEjD,IAAMW,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;QAAEW,GAAG,GAAGX,EAAE,CAAE,CAAC,CAAE;QAAEY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMa,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;QAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;QAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;QAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;QAAEkB,GAAG,GAAGlB,EAAE,CAAE,CAAC,CAAE;MAEjDZ,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,GAAGe,GAAG;MAE3C9B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG;MAE3C9B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAljB,GAAA;IAAAE,KAAA,EAED,SAAAyd,eAAgBhE,CAAC,EAAG;MAEnB,IAAMyH,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBoD,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MACxCyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MACxCyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAijB,YAAA,EAAc;MAEb,IAAM/B,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMtD,CAAC,GAAG0G,EAAE,CAAE,CAAC,CAAE;QAAEzG,CAAC,GAAGyG,EAAE,CAAE,CAAC,CAAE;QAAExG,CAAC,GAAGwG,EAAE,CAAE,CAAC,CAAE;QAC1CgC,CAAC,GAAGhC,EAAE,CAAE,CAAC,CAAE;QAAErD,CAAC,GAAGqD,EAAE,CAAE,CAAC,CAAE;QAAEiC,CAAC,GAAGjC,EAAE,CAAE,CAAC,CAAE;QACrCkC,CAAC,GAAGlC,EAAE,CAAE,CAAC,CAAE;QAAEmC,CAAC,GAAGnC,EAAE,CAAE,CAAC,CAAE;QAAEtb,CAAC,GAAGsb,EAAE,CAAE,CAAC,CAAE;MAEtC,OAAO1G,CAAC,GAAGqD,CAAC,GAAGjY,CAAC,GAAG4U,CAAC,GAAG2I,CAAC,GAAGE,CAAC,GAAG5I,CAAC,GAAGyI,CAAC,GAAGtd,CAAC,GAAG6U,CAAC,GAAG0I,CAAC,GAAGC,CAAC,GAAG1I,CAAC,GAAGwI,CAAC,GAAGG,CAAC,GAAG3I,CAAC,GAAGmD,CAAC,GAAGuF,CAAC;IAE7E;EAAC;IAAAtjB,GAAA;IAAAE,KAAA,EAED,SAAAsjB,OAAA,EAAS;MAER,IAAMpC,EAAE,GAAG,IAAI,CAACpD,QAAQ;QAEvB0C,GAAG,GAAGU,EAAE,CAAE,CAAC,CAAE;QAAEP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAC3CT,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAC3CR,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,CAAC,CAAE;QAE3CqC,GAAG,GAAGvC,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG;QAC3B2C,GAAG,GAAGzC,GAAG,GAAGL,GAAG,GAAGM,GAAG,GAAGP,GAAG;QAC3BgD,GAAG,GAAG5C,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG;QAE3BgD,GAAG,GAAGlD,GAAG,GAAG+C,GAAG,GAAG5C,GAAG,GAAG6C,GAAG,GAAG1C,GAAG,GAAG2C,GAAG;MAExC,IAAKC,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAACpI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAE7D,IAAMqI,MAAM,GAAG,CAAC,GAAGD,GAAG;MAEtBxC,EAAE,CAAE,CAAC,CAAE,GAAGqC,GAAG,GAAGI,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEJ,GAAG,GAAGD,GAAG,GAAGG,GAAG,GAAGL,GAAG,IAAKgD,MAAM;MAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEH,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAK+C,MAAM;MAE5CzC,EAAE,CAAE,CAAC,CAAE,GAAGsC,GAAG,GAAGG,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEF,GAAG,GAAGR,GAAG,GAAGM,GAAG,GAAGJ,GAAG,IAAKiD,MAAM;MAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEJ,GAAG,GAAGL,GAAG,GAAGM,GAAG,GAAGP,GAAG,IAAKmD,MAAM;MAE5CzC,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG,GAAGE,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEP,GAAG,GAAGD,GAAG,GAAGG,GAAG,GAAGL,GAAG,IAAKmD,MAAM;MAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEN,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAKkD,MAAM;MAE5C,OAAO,IAAI;IAEZ;EAAC;IAAA7jB,GAAA;IAAAE,KAAA,EAED,SAAA4jB,UAAA,EAAY;MAEX,IAAIC,GAAG;MACP,IAAM/L,CAAC,GAAG,IAAI,CAACgG,QAAQ;MAEvB+F,GAAG,GAAG/L,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAG+L,GAAG;MAC3CA,GAAG,GAAG/L,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAG+L,GAAG;MAC3CA,GAAG,GAAG/L,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAG+L,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA/jB,GAAA;IAAAE,KAAA,EAED,SAAA8jB,gBAAiBC,OAAO,EAAG;MAE1B,OAAO,IAAI,CAACrC,cAAc,CAAEqC,OAAQ,CAAC,CAACT,MAAM,CAAC,CAAC,CAACM,SAAS,CAAC,CAAC;IAE3D;EAAC;IAAA9jB,GAAA;IAAAE,KAAA,EAED,SAAAgkB,mBAAoBC,CAAC,EAAG;MAEvB,IAAMnM,CAAC,GAAG,IAAI,CAACgG,QAAQ;MAEvBmG,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MACfmM,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MACfmM,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MACfmM,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MACfmM,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MACfmM,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MACfmM,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MACfmM,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MACfmM,CAAC,CAAE,CAAC,CAAE,GAAGnM,CAAC,CAAE,CAAC,CAAE;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAAhY,GAAA;IAAAE,KAAA,EAED,SAAAkkB,eAAgBC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAElD,IAAM/J,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE2J,QAAS,CAAC;MAC9B,IAAM9K,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE0J,QAAS,CAAC;MAE9B,IAAI,CAACjJ,GAAG,CACP+I,EAAE,GAAG3J,CAAC,EAAE2J,EAAE,GAAG5K,CAAC,EAAE,CAAE4K,EAAE,IAAK3J,CAAC,GAAG8J,EAAE,GAAG/K,CAAC,GAAGgL,EAAE,CAAE,GAAGD,EAAE,GAAGL,EAAE,EACpD,CAAEG,EAAE,GAAG7K,CAAC,EAAE6K,EAAE,GAAG5J,CAAC,EAAE,CAAE4J,EAAE,IAAK,CAAE7K,CAAC,GAAG+K,EAAE,GAAG9J,CAAC,GAAG+J,EAAE,CAAE,GAAGA,EAAE,GAAGL,EAAE,EACxD,CAAC,EAAE,CAAC,EAAE,CACP,CAAC;MAED,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAtkB,GAAA;IAAAE,KAAA,EAEA,SAAA0kB,MAAOL,EAAE,EAAEC,EAAE,EAAG;MAEf,IAAI,CAAC1C,WAAW,CAAE+C,GAAG,CAACC,SAAS,CAAEP,EAAE,EAAEC,EAAG,CAAE,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAxkB,GAAA;IAAAE,KAAA,EAED,SAAA6kB,OAAQ9F,KAAK,EAAG;MAEf,IAAI,CAAC6C,WAAW,CAAE+C,GAAG,CAACG,YAAY,CAAE,CAAE/F,KAAM,CAAE,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAjf,GAAA;IAAAE,KAAA,EAED,SAAA+kB,UAAWZ,EAAE,EAAEC,EAAE,EAAG;MAEnB,IAAI,CAACxC,WAAW,CAAE+C,GAAG,CAACK,eAAe,CAAEb,EAAE,EAAEC,EAAG,CAAE,CAAC;MAEjD,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAtkB,GAAA;IAAAE,KAAA,EAEA,SAAAglB,gBAAiBhN,CAAC,EAAEM,CAAC,EAAG;MAEvB,IAAKN,CAAC,CAACsE,SAAS,EAAG;QAElB,IAAI,CAAChB,GAAG,CAEP,CAAC,EAAE,CAAC,EAAEtD,CAAC,CAACA,CAAC,EACT,CAAC,EAAE,CAAC,EAAEA,CAAC,CAACM,CAAC,EACT,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAEF,CAAC,MAAM;QAEN,IAAI,CAACgD,GAAG,CAEP,CAAC,EAAE,CAAC,EAAEtD,CAAC,EACP,CAAC,EAAE,CAAC,EAAEM,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAEF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA8kB,aAAc/F,KAAK,EAAG;MAErB;;MAEA,IAAMrE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEmE,KAAM,CAAC;MAC3B,IAAMtF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEkE,KAAM,CAAC;MAE3B,IAAI,CAACzD,GAAG,CAEPZ,CAAC,EAAE,CAAEjB,CAAC,EAAE,CAAC,EACTA,CAAC,EAAEiB,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAA4kB,UAAW5M,CAAC,EAAEM,CAAC,EAAG;MAEjB,IAAI,CAACgD,GAAG,CAEPtD,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAEM,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAEP,CAAC;MAED,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAxY,GAAA;IAAAE,KAAA,EAEA,SAAA2f,OAAQsF,MAAM,EAAG;MAEhB,IAAM/D,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAG6D,MAAM,CAACnH,QAAQ;MAE1B,KAAM,IAAIlY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAKsb,EAAE,CAAEtb,CAAC,CAAE,KAAKwb,EAAE,CAAExb,CAAC,CAAE,EAAG,OAAO,KAAK;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAE9B,KAAM,IAAIja,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACkY,QAAQ,CAAElY,CAAC,CAAE,GAAG6Q,KAAK,CAAE7Q,CAAC,GAAGia,MAAM,CAAE;MAEzC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMqB,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBrH,KAAK,CAAEoJ,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MACzBzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7B,OAAOzK,KAAK;IAEb;EAAC;IAAA3W,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC2Z,SAAS,CAAE,IAAI,CAAC9B,QAAS,CAAC;IAEzD;EAAC;EAAA,OAAAyC,OAAA;AAAA;AAAAjhB,OAAA,CAAAihB,OAAA,GAAAA,OAAA;AAIF,IAAMoE,GAAG,GAAG,aAAc,IAAIpE,OAAO,CAAC,CAAC;AAEvC,SAAS2E,gBAAgBA,CAAEzO,KAAK,EAAG;EAElC;;EAEA,KAAM,IAAI7Q,CAAC,GAAG6Q,KAAK,CAAC9Q,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAI,CAAC,EAAE,EAAGA,CAAC,EAAG;IAE9C,IAAK6Q,KAAK,CAAE7Q,CAAC,CAAE,IAAI,KAAK,EAAG,OAAO,IAAI,CAAC,CAAC;EAEzC;;EAEA,OAAO,KAAK;AAEb;AAEA,IAAMuf,YAAY,GAAG;EACpBnJ,SAAS,EAAEA,SAAS;EACpBH,UAAU,EAAEA,UAAU;EACtBuJ,iBAAiB,EAAEA,iBAAiB;EACpCrJ,UAAU,EAAEA,UAAU;EACtBH,WAAW,EAAEA,WAAW;EACxBE,UAAU,EAAEA,UAAU;EACtBH,WAAW,EAAEA,WAAW;EACxBD,YAAY,EAAEA,YAAY;EAC1B2J,YAAY,EAAEA;AACf,CAAC;AAED,SAASC,aAAaA,CAAEzjB,IAAI,EAAE0jB,MAAM,EAAG;EAEtC,OAAO,IAAIJ,YAAY,CAAEtjB,IAAI,CAAE,CAAE0jB,MAAO,CAAC;AAE1C;AAEA,SAASC,eAAeA,CAAEtf,IAAI,EAAG;EAEhC,OAAOuf,QAAQ,CAACD,eAAe,CAAE,8BAA8B,EAAEtf,IAAK,CAAC;AAExE;AAEA,SAASwf,mBAAmBA,CAAA,EAAG;EAE9B,IAAMC,MAAM,GAAGH,eAAe,CAAE,QAAS,CAAC;EAC1CG,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;EAC9B,OAAOF,MAAM;AAEd;AAEA,IAAMG,MAAM,GAAG,CAAC,CAAC;AAEjB,SAASC,QAAQA,CAAEC,OAAO,EAAG;EAE5B,IAAKA,OAAO,IAAIF,MAAM,EAAG;EAEzBA,MAAM,CAAEE,OAAO,CAAE,GAAG,IAAI;EAExBzK,OAAO,CAACC,IAAI,CAAEwK,OAAQ,CAAC;AAExB;AAEA,SAASC,YAAYA,CAAEvL,CAAC,EAAG;EAE1B,OAASA,CAAC,GAAG,OAAO,GAAKA,CAAC,GAAG,YAAY,GAAG5D,IAAI,CAACmD,GAAG,CAAES,CAAC,GAAG,YAAY,GAAG,YAAY,EAAE,GAAI,CAAC;AAE7F;AAEA,SAASwL,YAAYA,CAAExL,CAAC,EAAG;EAE1B,OAASA,CAAC,GAAG,SAAS,GAAKA,CAAC,GAAG,KAAK,GAAG,KAAK,GAAK5D,IAAI,CAACmD,GAAG,CAAES,CAAC,EAAE,OAAQ,CAAG,GAAG,KAAK;AAElF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMyL,gCAAgC,GAAG,aAAc,IAAI5F,OAAO,CAAC,CAAC,CAACX,SAAS,CAAE,CAC/E,SAAS,EAAE,SAAS,EAAE,SAAS,EAC/B,SAAS,EAAE,SAAS,EAAE,SAAS,EAC/B,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAChC,CAAC;AAEH,IAAMwG,gCAAgC,GAAG,aAAc,IAAI7F,OAAO,CAAC,CAAC,CAACX,SAAS,CAAE,CAC/E,SAAS,EAAE,CAAE,SAAS,EAAE,CAAE,SAAS,EACnC,CAAE,SAAS,EAAE,SAAS,EAAE,CAAE,SAAS,EACnC,SAAS,EAAE,SAAS,EAAE,SAAS,CAC9B,CAAC;AAEH,SAASyG,qBAAqBA,CAAEC,KAAK,EAAG;EAEvC;EACA,OAAOA,KAAK,CAACC,mBAAmB,CAAC,CAAC,CAAC3I,YAAY,CAAEwI,gCAAiC,CAAC;AAEpF;AAEA,SAASI,qBAAqBA,CAAEF,KAAK,EAAG;EAEvC;EACA,OAAOA,KAAK,CAAC1I,YAAY,CAAEuI,gCAAiC,CAAC,CAACM,mBAAmB,CAAC,CAAC;AAEpF;;AAEA;AACA,IAAMC,SAAS,IAAAC,UAAA,OAAAC,eAAA,CAAAD,UAAA,EACZxT,oBAAoB,EAAI,UAAEmT,KAAK;EAAA,OAAMA,KAAK;AAAA,IAAAM,eAAA,CAAAD,UAAA,EAC1CzT,cAAc,EAAI,UAAEoT,KAAK;EAAA,OAAMA,KAAK,CAACC,mBAAmB,CAAC,CAAC;AAAA,IAAAK,eAAA,CAAAD,UAAA,EAC1DvT,mBAAmB,EAAIiT,qBAAqB,GAAAM,UAAA,CAC9C;;AAED;AACA,IAAME,WAAW,IAAAC,YAAA,OAAAF,eAAA,CAAAE,YAAA,EACd3T,oBAAoB,EAAI,UAAEmT,KAAK;EAAA,OAAMA,KAAK;AAAA,IAAAM,eAAA,CAAAE,YAAA,EAC1C5T,cAAc,EAAI,UAAEoT,KAAK;EAAA,OAAMA,KAAK,CAACG,mBAAmB,CAAC,CAAC;AAAA,IAAAG,eAAA,CAAAE,YAAA,EAC1D1T,mBAAmB,EAAIoT,qBAAqB,GAAAM,YAAA,CAC9C;AAED,IAAMC,eAAe,GAAG;EAEvBC,OAAO,EAAE,IAAI;EAEb,IAAIC,UAAUA,CAAA,EAAG;IAEhB1L,OAAO,CAACC,IAAI,CAAE,4EAA6E,CAAC;IAE5F,OAAO,CAAE,IAAI,CAACwL,OAAO;EAEtB,CAAC;EAED,IAAIC,UAAUA,CAAEA,UAAU,EAAG;IAE5B1L,OAAO,CAACC,IAAI,CAAE,4EAA6E,CAAC;IAE5F,IAAI,CAACwL,OAAO,GAAG,CAAEC,UAAU;EAE5B,CAAC;EAED,IAAIC,iBAAiBA,CAAA,EAAG;IAEvB,OAAO/T,oBAAoB;EAE5B,CAAC;EAED,IAAI+T,iBAAiBA,CAAEC,UAAU,EAAG;IAEnC5L,OAAO,CAACC,IAAI,CAAE,wDAAyD,CAAC;EAEzE,CAAC;EAED4L,OAAO,EAAE,SAAAA,QAAWd,KAAK,EAAEe,gBAAgB,EAAEC,gBAAgB,EAAG;IAE/D,IAAK,IAAI,CAACN,OAAO,KAAK,KAAK,IAAIK,gBAAgB,KAAKC,gBAAgB,IAAI,CAAED,gBAAgB,IAAI,CAAEC,gBAAgB,EAAG;MAElH,OAAOhB,KAAK;IAEb;IAEA,IAAMiB,cAAc,GAAGb,SAAS,CAAEW,gBAAgB,CAAE;IACpD,IAAMG,gBAAgB,GAAGX,WAAW,CAAES,gBAAgB,CAAE;IAExD,IAAKC,cAAc,KAAKljB,SAAS,IAAImjB,gBAAgB,KAAKnjB,SAAS,EAAG;MAErE,MAAM,IAAIV,KAAK,0CAAA8jB,MAAA,CAA2CJ,gBAAgB,cAAAI,MAAA,CAAWH,gBAAgB,QAAM,CAAC;IAE7G;IAEA,OAAOE,gBAAgB,CAAED,cAAc,CAAEjB,KAAM,CAAE,CAAC;EAEnD,CAAC;EAEDoB,qBAAqB,EAAE,SAAAA,sBAAWpB,KAAK,EAAEgB,gBAAgB,EAAG;IAE3D,OAAO,IAAI,CAACF,OAAO,CAAEd,KAAK,EAAE,IAAI,CAACY,iBAAiB,EAAEI,gBAAiB,CAAC;EAEvE,CAAC;EAEDK,mBAAmB,EAAE,SAAAA,oBAAWrB,KAAK,EAAEe,gBAAgB,EAAG;IAEzD,OAAO,IAAI,CAACD,OAAO,CAAEd,KAAK,EAAEe,gBAAgB,EAAE,IAAI,CAACH,iBAAkB,CAAC;EAEvE;AAED,CAAC;AAAC5nB,OAAA,CAAAynB,eAAA,GAAAA,eAAA;AAEF,IAAIa,OAAO;AAAC,IAENC,UAAU;EAAA,SAAAA,WAAA;IAAA1f,eAAA,OAAA0f,UAAA;EAAA;EAAAlf,YAAA,CAAAkf,UAAA;IAAA/nB,GAAA;IAAAE,KAAA,EAEf,SAAA8nB,WAAmBC,KAAK,EAAG;MAE1B,IAAK,SAAS,CAACC,IAAI,CAAED,KAAK,CAACE,GAAI,CAAC,EAAG;QAElC,OAAOF,KAAK,CAACE,GAAG;MAEjB;MAEA,IAAK,OAAOC,iBAAiB,KAAK,WAAW,EAAG;QAE/C,OAAOH,KAAK,CAACE,GAAG;MAEjB;MAEA,IAAItC,MAAM;MAEV,IAAKoC,KAAK,YAAYG,iBAAiB,EAAG;QAEzCvC,MAAM,GAAGoC,KAAK;MAEf,CAAC,MAAM;QAEN,IAAKH,OAAO,KAAKvjB,SAAS,EAAGujB,OAAO,GAAGpC,eAAe,CAAE,QAAS,CAAC;QAElEoC,OAAO,CAACO,KAAK,GAAGJ,KAAK,CAACI,KAAK;QAC3BP,OAAO,CAACQ,MAAM,GAAGL,KAAK,CAACK,MAAM;QAE7B,IAAM7mB,OAAO,GAAGqmB,OAAO,CAACS,UAAU,CAAE,IAAK,CAAC;QAE1C,IAAKN,KAAK,YAAYO,SAAS,EAAG;UAEjC/mB,OAAO,CAACgnB,YAAY,CAAER,KAAK,EAAE,CAAC,EAAE,CAAE,CAAC;QAEpC,CAAC,MAAM;UAENxmB,OAAO,CAACinB,SAAS,CAAET,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;QAE5D;QAEAzC,MAAM,GAAGiC,OAAO;MAEjB;MAEA,IAAKjC,MAAM,CAACwC,KAAK,GAAG,IAAI,IAAIxC,MAAM,CAACyC,MAAM,GAAG,IAAI,EAAG;QAElD7M,OAAO,CAACC,IAAI,CAAE,6EAA6E,EAAEuM,KAAM,CAAC;QAEpG,OAAOpC,MAAM,CAAC8C,SAAS,CAAE,YAAY,EAAE,GAAI,CAAC;MAE7C,CAAC,MAAM;QAEN,OAAO9C,MAAM,CAAC8C,SAAS,CAAE,WAAY,CAAC;MAEvC;IAED;EAAC;IAAA3oB,GAAA;IAAAE,KAAA,EAED,SAAA0oB,aAAqBX,KAAK,EAAG;MAE5B,IAAO,OAAOY,gBAAgB,KAAK,WAAW,IAAIZ,KAAK,YAAYY,gBAAgB,IAChF,OAAOT,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOU,WAAW,KAAK,WAAW,IAAIb,KAAK,YAAYa,WAAa,EAAG;QAEzE,IAAMjD,MAAM,GAAGH,eAAe,CAAE,QAAS,CAAC;QAE1CG,MAAM,CAACwC,KAAK,GAAGJ,KAAK,CAACI,KAAK;QAC1BxC,MAAM,CAACyC,MAAM,GAAGL,KAAK,CAACK,MAAM;QAE5B,IAAM7mB,OAAO,GAAGokB,MAAM,CAAC0C,UAAU,CAAE,IAAK,CAAC;QACzC9mB,OAAO,CAACinB,SAAS,CAAET,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;QAE3D,IAAMS,SAAS,GAAGtnB,OAAO,CAACunB,YAAY,CAAE,CAAC,EAAE,CAAC,EAAEf,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;QACzE,IAAMW,IAAI,GAAGF,SAAS,CAACE,IAAI;QAE3B,KAAM,IAAInjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmjB,IAAI,CAACpjB,MAAM,EAAEC,CAAC,EAAG,EAAG;UAExCmjB,IAAI,CAAEnjB,CAAC,CAAE,GAAGqgB,YAAY,CAAE8C,IAAI,CAAEnjB,CAAC,CAAE,GAAG,GAAI,CAAC,GAAG,GAAG;QAElD;QAEArE,OAAO,CAACgnB,YAAY,CAAEM,SAAS,EAAE,CAAC,EAAE,CAAE,CAAC;QAEvC,OAAOlD,MAAM;MAEd,CAAC,MAAM,IAAKoC,KAAK,CAACgB,IAAI,EAAG;QAExB,IAAMA,KAAI,GAAGhB,KAAK,CAACgB,IAAI,CAAC7hB,KAAK,CAAE,CAAE,CAAC;QAElC,KAAM,IAAItB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGmjB,KAAI,CAACpjB,MAAM,EAAEC,EAAC,EAAG,EAAG;UAExC,IAAKmjB,KAAI,YAAYlN,UAAU,IAAIkN,KAAI,YAAY3D,iBAAiB,EAAG;YAEtE2D,KAAI,CAAEnjB,EAAC,CAAE,GAAGkR,IAAI,CAACsC,KAAK,CAAE6M,YAAY,CAAE8C,KAAI,CAAEnjB,EAAC,CAAE,GAAG,GAAI,CAAC,GAAG,GAAI,CAAC;UAEhE,CAAC,MAAM;YAEN;;YAEAmjB,KAAI,CAAEnjB,EAAC,CAAE,GAAGqgB,YAAY,CAAE8C,KAAI,CAAEnjB,EAAC,CAAG,CAAC;UAEtC;QAED;QAEA,OAAO;UACNmjB,IAAI,EAAEA,KAAI;UACVZ,KAAK,EAAEJ,KAAK,CAACI,KAAK;UAClBC,MAAM,EAAEL,KAAK,CAACK;QACf,CAAC;MAEF,CAAC,MAAM;QAEN7M,OAAO,CAACC,IAAI,CAAE,6FAA8F,CAAC;QAC7G,OAAOuM,KAAK;MAEb;IAED;EAAC;EAAA,OAAAF,UAAA;AAAA;AAAAvoB,OAAA,CAAAuoB,UAAA,GAAAA,UAAA;AAIF,IAAImB,QAAQ,GAAG,CAAC;AAAC,IAEXC,MAAM;EAEX,SAAAA,OAAaF,IAAI,GAAG,IAAI,EAAG;IAAA5gB,eAAA,OAAA8gB,MAAA;IAE1B,IAAI,CAACC,QAAQ,GAAG,IAAI;IAEpB1pB,MAAM,CAACI,cAAc,CAAE,IAAI,EAAE,IAAI,EAAE;MAAEI,KAAK,EAAEgpB,QAAQ;IAAI,CAAE,CAAC;IAE3D,IAAI,CAACzR,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1B,IAAI,CAAC8R,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACI,OAAO,GAAG,CAAC;EAEjB;EAACxgB,YAAA,CAAAsgB,MAAA;IAAAnpB,GAAA;IAAAwb,GAAA,EAED,SAAAA,IAAiBtb,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACmpB,OAAO,EAAG;IAEtC;EAAC;IAAArpB,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKhlB,SAAS,IAAI,OAAOglB,IAAI,KAAK,QAAU;MAEvE,IAAK,CAAEC,YAAY,IAAID,IAAI,CAACE,MAAM,CAAE,IAAI,CAAChS,IAAI,CAAE,KAAKlT,SAAS,EAAG;QAE/D,OAAOglB,IAAI,CAACE,MAAM,CAAE,IAAI,CAAChS,IAAI,CAAE;MAEhC;MAEA,IAAMiS,MAAM,GAAG;QACdjS,IAAI,EAAE,IAAI,CAACA,IAAI;QACfkS,GAAG,EAAE;MACN,CAAC;MAED,IAAMV,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAKA,IAAI,KAAK,IAAI,EAAG;QAEpB,IAAIU,GAAG;QAEP,IAAKC,KAAK,CAACC,OAAO,CAAEZ,IAAK,CAAC,EAAG;UAE5B;;UAEAU,GAAG,GAAG,EAAE;UAER,KAAM,IAAI7jB,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGqS,IAAI,CAACpjB,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;YAE/C,IAAKmjB,IAAI,CAAEnjB,CAAC,CAAE,CAACgkB,aAAa,EAAG;cAE9BH,GAAG,CAACrkB,IAAI,CAAEykB,cAAc,CAAEd,IAAI,CAAEnjB,CAAC,CAAE,CAACmiB,KAAM,CAAE,CAAC;YAE9C,CAAC,MAAM;cAEN0B,GAAG,CAACrkB,IAAI,CAAEykB,cAAc,CAAEd,IAAI,CAAEnjB,CAAC,CAAG,CAAE,CAAC;YAExC;UAED;QAED,CAAC,MAAM;UAEN;;UAEA6jB,GAAG,GAAGI,cAAc,CAAEd,IAAK,CAAC;QAE7B;QAEAS,MAAM,CAACC,GAAG,GAAGA,GAAG;MAEjB;MAEA,IAAK,CAAEH,YAAY,EAAG;QAErBD,IAAI,CAACE,MAAM,CAAE,IAAI,CAAChS,IAAI,CAAE,GAAGiS,MAAM;MAElC;MAEA,OAAOA,MAAM;IAEd;EAAC;EAAA,OAAAP,MAAA;AAAA;AAAA3pB,OAAA,CAAA2pB,MAAA,GAAAA,MAAA;AAIF,SAASY,cAAcA,CAAE9B,KAAK,EAAG;EAEhC,IAAO,OAAOY,gBAAgB,KAAK,WAAW,IAAIZ,KAAK,YAAYY,gBAAgB,IAChF,OAAOT,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOU,WAAW,KAAK,WAAW,IAAIb,KAAK,YAAYa,WAAa,EAAG;IAEzE;;IAEA,OAAOf,UAAU,CAACC,UAAU,CAAEC,KAAM,CAAC;EAEtC,CAAC,MAAM;IAEN,IAAKA,KAAK,CAACgB,IAAI,EAAG;MAEjB;;MAEA,OAAO;QACNA,IAAI,EAAEW,KAAK,CAACI,IAAI,CAAE/B,KAAK,CAACgB,IAAK,CAAC;QAC9BZ,KAAK,EAAEJ,KAAK,CAACI,KAAK;QAClBC,MAAM,EAAEL,KAAK,CAACK,MAAM;QACpBvmB,IAAI,EAAEkmB,KAAK,CAACgB,IAAI,CAAC9iB,WAAW,CAACC;MAC9B,CAAC;IAEF,CAAC,MAAM;MAENqV,OAAO,CAACC,IAAI,CAAE,6CAA8C,CAAC;MAC7D,OAAO,CAAC,CAAC;IAEV;EAED;AAED;AAEA,IAAIuO,UAAU,GAAG,CAAC;AAAC,IAEbC,OAAO,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;EAEZ,SAAAA,QAAajC,KAAK,GAAGiC,OAAO,CAACK,aAAa,EAAEC,OAAO,GAAGN,OAAO,CAACO,eAAe,EAAEC,KAAK,GAAG7c,mBAAmB,EAAE8c,KAAK,GAAG9c,mBAAmB,EAAE+c,SAAS,GAAGxc,YAAY,EAAEyc,SAAS,GAAGtc,wBAAwB,EAAEuc,MAAM,GAAGzb,UAAU,EAAEtN,IAAI,GAAG0M,gBAAgB,EAAEsc,UAAU,GAAGb,OAAO,CAACc,kBAAkB,EAAE3D,UAAU,GAAGlU,YAAY,EAAG;IAAA,IAAA8X,MAAA;IAAA5iB,eAAA,OAAA6hB,OAAA;IAE3Te,MAAA,GAAAZ,MAAA,CAAAroB,IAAA;IAEAipB,MAAA,CAAKC,SAAS,GAAG,IAAI;IAErBxrB,MAAM,CAACI,cAAc,CAAAqrB,sBAAA,CAAAF,MAAA,GAAQ,IAAI,EAAE;MAAE/qB,KAAK,EAAE+pB,UAAU;IAAI,CAAE,CAAC;IAE7DgB,MAAA,CAAKxT,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1B8T,MAAA,CAAK7kB,IAAI,GAAG,EAAE;IAEd6kB,MAAA,CAAKG,MAAM,GAAG,IAAIjC,MAAM,CAAElB,KAAM,CAAC;IACjCgD,MAAA,CAAKI,OAAO,GAAG,EAAE;IAEjBJ,MAAA,CAAKT,OAAO,GAAGA,OAAO;IACtBS,MAAA,CAAKK,OAAO,GAAG,CAAC;IAEhBL,MAAA,CAAKP,KAAK,GAAGA,KAAK;IAClBO,MAAA,CAAKN,KAAK,GAAGA,KAAK;IAElBM,MAAA,CAAKL,SAAS,GAAGA,SAAS;IAC1BK,MAAA,CAAKJ,SAAS,GAAGA,SAAS;IAE1BI,MAAA,CAAKF,UAAU,GAAGA,UAAU;IAE5BE,MAAA,CAAKH,MAAM,GAAGA,MAAM;IACpBG,MAAA,CAAKM,cAAc,GAAG,IAAI;IAC1BN,MAAA,CAAKlpB,IAAI,GAAGA,IAAI;IAEhBkpB,MAAA,CAAKlL,MAAM,GAAG,IAAIzD,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IACjC2O,MAAA,CAAKO,MAAM,GAAG,IAAIlP,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IACjC2O,MAAA,CAAK3K,MAAM,GAAG,IAAIhE,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IACjC2O,MAAA,CAAKxG,QAAQ,GAAG,CAAC;IAEjBwG,MAAA,CAAKQ,gBAAgB,GAAG,IAAI;IAC5BR,MAAA,CAAK9F,MAAM,GAAG,IAAI1E,OAAO,CAAC,CAAC;IAE3BwK,MAAA,CAAKS,eAAe,GAAG,IAAI;IAC3BT,MAAA,CAAKU,gBAAgB,GAAG,KAAK;IAC7BV,MAAA,CAAKW,KAAK,GAAG,IAAI;IACjBX,MAAA,CAAKY,eAAe,GAAG,CAAC,CAAC,CAAC;;IAE1B,IAAK,OAAOxE,UAAU,KAAK,QAAQ,EAAG;MAErC4D,MAAA,CAAK5D,UAAU,GAAGA,UAAU;IAE7B,CAAC,MAAM;MAAE;;MAERpB,QAAQ,CAAE,qEAAsE,CAAC;MACjFgF,MAAA,CAAK5D,UAAU,GAAGA,UAAU,KAAKvU,YAAY,GAAGM,cAAc,GAAGD,YAAY;IAE9E;IAGA8X,MAAA,CAAKa,QAAQ,GAAG,CAAC,CAAC;IAElBb,MAAA,CAAK5B,OAAO,GAAG,CAAC;IAChB4B,MAAA,CAAKc,QAAQ,GAAG,IAAI;IAEpBd,MAAA,CAAKe,qBAAqB,GAAG,KAAK,CAAC,CAAC;IACpCf,MAAA,CAAKgB,gBAAgB,GAAG,KAAK,CAAC,CAAC;IAAA,OAAAhB,MAAA;EAEhC;EAACpiB,YAAA,CAAAqhB,OAAA;IAAAlqB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAAC2O,MAAM,CAACnC,IAAI;IAExB,CAAC;IAAAzN,GAAA,EAED,SAAAA,IAAWtb,KAAK,GAAG,IAAI,EAAG;MAEzB,IAAI,CAACkrB,MAAM,CAACnC,IAAI,GAAG/oB,KAAK;IAEzB;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAgsB,aAAA,EAAe;MAEd,IAAI,CAAC/G,MAAM,CAACf,cAAc,CAAE,IAAI,CAACrE,MAAM,CAAC7H,CAAC,EAAE,IAAI,CAAC6H,MAAM,CAACvH,CAAC,EAAE,IAAI,CAACgT,MAAM,CAACtT,CAAC,EAAE,IAAI,CAACsT,MAAM,CAAChT,CAAC,EAAE,IAAI,CAACiM,QAAQ,EAAE,IAAI,CAACnE,MAAM,CAACpI,CAAC,EAAE,IAAI,CAACoI,MAAM,CAAC9H,CAAE,CAAC;IAEtI;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAChlB,IAAI,GAAGglB,MAAM,CAAChlB,IAAI;MAEvB,IAAI,CAACglB,MAAM,GAAGA,MAAM,CAACA,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGD,MAAM,CAACC,OAAO,CAACjkB,KAAK,CAAE,CAAE,CAAC;MAExC,IAAI,CAACojB,OAAO,GAAGY,MAAM,CAACZ,OAAO;MAC7B,IAAI,CAACc,OAAO,GAAGF,MAAM,CAACE,OAAO;MAE7B,IAAI,CAACZ,KAAK,GAAGU,MAAM,CAACV,KAAK;MACzB,IAAI,CAACC,KAAK,GAAGS,MAAM,CAACT,KAAK;MAEzB,IAAI,CAACC,SAAS,GAAGQ,MAAM,CAACR,SAAS;MACjC,IAAI,CAACC,SAAS,GAAGO,MAAM,CAACP,SAAS;MAEjC,IAAI,CAACE,UAAU,GAAGK,MAAM,CAACL,UAAU;MAEnC,IAAI,CAACD,MAAM,GAAGM,MAAM,CAACN,MAAM;MAC3B,IAAI,CAACS,cAAc,GAAGH,MAAM,CAACG,cAAc;MAC3C,IAAI,CAACxpB,IAAI,GAAGqpB,MAAM,CAACrpB,IAAI;MAEvB,IAAI,CAACge,MAAM,CAAC9C,IAAI,CAAEmO,MAAM,CAACrL,MAAO,CAAC;MACjC,IAAI,CAACyL,MAAM,CAACvO,IAAI,CAAEmO,MAAM,CAACI,MAAO,CAAC;MACjC,IAAI,CAAClL,MAAM,CAACrD,IAAI,CAAEmO,MAAM,CAAC9K,MAAO,CAAC;MACjC,IAAI,CAACmE,QAAQ,GAAG2G,MAAM,CAAC3G,QAAQ;MAE/B,IAAI,CAACgH,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;MAC/C,IAAI,CAACtG,MAAM,CAAClI,IAAI,CAAEmO,MAAM,CAACjG,MAAO,CAAC;MAEjC,IAAI,CAACuG,eAAe,GAAGN,MAAM,CAACM,eAAe;MAC7C,IAAI,CAACC,gBAAgB,GAAGP,MAAM,CAACO,gBAAgB;MAC/C,IAAI,CAACC,KAAK,GAAGR,MAAM,CAACQ,KAAK;MACzB,IAAI,CAACC,eAAe,GAAGT,MAAM,CAACS,eAAe;MAC7C,IAAI,CAACxE,UAAU,GAAG+D,MAAM,CAAC/D,UAAU;MAEnC,IAAI,CAACyE,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAS,CAAE,CAAC;MAE/D,IAAI,CAACQ,WAAW,GAAG,IAAI;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKhlB,SAAS,IAAI,OAAOglB,IAAI,KAAK,QAAU;MAEvE,IAAK,CAAEC,YAAY,IAAID,IAAI,CAACgD,QAAQ,CAAE,IAAI,CAAC9U,IAAI,CAAE,KAAKlT,SAAS,EAAG;QAEjE,OAAOglB,IAAI,CAACgD,QAAQ,CAAE,IAAI,CAAC9U,IAAI,CAAE;MAElC;MAEA,IAAMiS,MAAM,GAAG;QAEd8C,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZtnB,IAAI,EAAE,SAAS;UACfR,SAAS,EAAE;QACZ,CAAC;QAEDkW,IAAI,EAAE,IAAI,CAACA,IAAI;QACfrR,IAAI,EAAE,IAAI,CAACA,IAAI;QAEf6hB,KAAK,EAAE,IAAI,CAACmD,MAAM,CAAC9B,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QAEtC+S,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBc,OAAO,EAAE,IAAI,CAACA,OAAO;QAErBE,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAACtT,CAAC,EAAE,IAAI,CAACsT,MAAM,CAAChT,CAAC,CAAE;QACxCuH,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAAC7H,CAAC,EAAE,IAAI,CAAC6H,MAAM,CAACvH,CAAC,CAAE;QACxC8H,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAACpI,CAAC,EAAE,IAAI,CAACoI,MAAM,CAAC9H,CAAC,CAAE;QACxCiM,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAEvBzjB,IAAI,EAAE,CAAE,IAAI,CAAC0pB,KAAK,EAAE,IAAI,CAACC,KAAK,CAAE;QAEhCG,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBS,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCxpB,IAAI,EAAE,IAAI,CAACA,IAAI;QACfslB,UAAU,EAAE,IAAI,CAACA,UAAU;QAE3BwD,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBD,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBG,UAAU,EAAE,IAAI,CAACA,UAAU;QAE3Ba,KAAK,EAAE,IAAI,CAACA,KAAK;QAEjBF,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvCE,eAAe,EAAE,IAAI,CAACA;MAEvB,CAAC;MAED,IAAKnsB,MAAM,CAACkH,IAAI,CAAE,IAAI,CAACklB,QAAS,CAAC,CAACjmB,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAACoC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9E,IAAK,CAAEtC,YAAY,EAAG;QAErBD,IAAI,CAACgD,QAAQ,CAAE,IAAI,CAAC9U,IAAI,CAAE,GAAGiS,MAAM;MAEpC;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAA1pB,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAAChW,aAAa,CAAE;QAAE1U,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;IAAA/B,GAAA;IAAAE,KAAA,EAED,SAAAwsB,YAAaC,EAAE,EAAG;MAEjB,IAAK,IAAI,CAACnC,OAAO,KAAKld,SAAS,EAAG,OAAOqf,EAAE;MAE3CA,EAAE,CAAC7O,YAAY,CAAE,IAAI,CAACqH,MAAO,CAAC;MAE9B,IAAKwH,EAAE,CAACzU,CAAC,GAAG,CAAC,IAAIyU,EAAE,CAACzU,CAAC,GAAG,CAAC,EAAG;QAE3B,QAAS,IAAI,CAACwS,KAAK;UAElB,KAAK9c,cAAc;YAElB+e,EAAE,CAACzU,CAAC,GAAGyU,EAAE,CAACzU,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAEqT,EAAE,CAACzU,CAAE,CAAC;YAChC;UAED,KAAKrK,mBAAmB;YAEvB8e,EAAE,CAACzU,CAAC,GAAGyU,EAAE,CAACzU,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;YACvB;UAED,KAAKpK,sBAAsB;YAE1B,IAAKkJ,IAAI,CAACgC,GAAG,CAAEhC,IAAI,CAACsC,KAAK,CAAEqT,EAAE,CAACzU,CAAE,CAAC,GAAG,CAAE,CAAC,KAAK,CAAC,EAAG;cAE/CyU,EAAE,CAACzU,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAEuS,EAAE,CAACzU,CAAE,CAAC,GAAGyU,EAAE,CAACzU,CAAC;YAEhC,CAAC,MAAM;cAENyU,EAAE,CAACzU,CAAC,GAAGyU,EAAE,CAACzU,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAEqT,EAAE,CAACzU,CAAE,CAAC;YAEjC;YAEA;QAEF;MAED;MAEA,IAAKyU,EAAE,CAACnU,CAAC,GAAG,CAAC,IAAImU,EAAE,CAACnU,CAAC,GAAG,CAAC,EAAG;QAE3B,QAAS,IAAI,CAACmS,KAAK;UAElB,KAAK/c,cAAc;YAElB+e,EAAE,CAACnU,CAAC,GAAGmU,EAAE,CAACnU,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAEqT,EAAE,CAACnU,CAAE,CAAC;YAChC;UAED,KAAK3K,mBAAmB;YAEvB8e,EAAE,CAACnU,CAAC,GAAGmU,EAAE,CAACnU,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;YACvB;UAED,KAAK1K,sBAAsB;YAE1B,IAAKkJ,IAAI,CAACgC,GAAG,CAAEhC,IAAI,CAACsC,KAAK,CAAEqT,EAAE,CAACnU,CAAE,CAAC,GAAG,CAAE,CAAC,KAAK,CAAC,EAAG;cAE/CmU,EAAE,CAACnU,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAEuS,EAAE,CAACnU,CAAE,CAAC,GAAGmU,EAAE,CAACnU,CAAC;YAEhC,CAAC,MAAM;cAENmU,EAAE,CAACnU,CAAC,GAAGmU,EAAE,CAACnU,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAEqT,EAAE,CAACnU,CAAE,CAAC;YAEjC;YAEA;QAEF;MAED;MAEA,IAAK,IAAI,CAACoT,KAAK,EAAG;QAEjBe,EAAE,CAACnU,CAAC,GAAG,CAAC,GAAGmU,EAAE,CAACnU,CAAC;MAEhB;MAEA,OAAOmU,EAAE;IAEV;EAAC;IAAA3sB,GAAA;IAAAwb,GAAA,EAED,SAAAA,IAAiBtb,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErB,IAAI,CAACmpB,OAAO,EAAG;QACf,IAAI,CAAC+B,MAAM,CAACkB,WAAW,GAAG,IAAI;MAE/B;IAED;EAAC;IAAAtsB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAe;MAAE;;MAEhBwJ,QAAQ,CAAE,qEAAsE,CAAC;MACjF,OAAO,IAAI,CAACoB,UAAU,KAAKjU,cAAc,GAAGN,YAAY,GAAGD,cAAc;IAE1E,CAAC;IAAA2I,GAAA,EAED,SAAAA,IAAcoR,QAAQ,EAAG;MAAE;;MAE1B3G,QAAQ,CAAE,qEAAsE,CAAC;MACjF,IAAI,CAACoB,UAAU,GAAGuF,QAAQ,KAAK9Z,YAAY,GAAGM,cAAc,GAAGD,YAAY;IAE5E;EAAC;EAAA,OAAA+W,OAAA;AAAA,EAlToBpU,eAAe;AAAAtW,OAAA,CAAA0qB,OAAA,GAAAA,OAAA;AAsTrCA,OAAO,CAACK,aAAa,GAAG,IAAI;AAC5BL,OAAO,CAACO,eAAe,GAAGnd,SAAS;AACnC4c,OAAO,CAACc,kBAAkB,GAAG,CAAC;AAAC,IAEzB6B,OAAO,0BAAAC,iBAAA;EAEZ,SAAAD,QAAa3U,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAEuU,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;IAAA3kB,eAAA,OAAAwkB,OAAA;IAEzCA,OAAO,CAACltB,SAAS,CAACstB,SAAS,GAAG,IAAI;IAElC,IAAI,CAAC/U,CAAC,GAAGA,CAAC;IACV,IAAI,CAACM,CAAC,GAAGA,CAAC;IACV,IAAI,CAACuU,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EAEX;EAACnkB,YAAA,CAAAgkB,OAAA;IAAA7sB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACsQ,CAAC;IAEd,CAAC;IAAAvR,GAAA,EAED,SAAAA,IAAWtb,KAAK,EAAG;MAElB,IAAI,CAAC6sB,CAAC,GAAG7sB,KAAK;IAEf;EAAC;IAAAF,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAACuQ,CAAC;IAEd,CAAC;IAAAxR,GAAA,EAED,SAAAA,IAAYtb,KAAK,EAAG;MAEnB,IAAI,CAAC8sB,CAAC,GAAG9sB,KAAK;IAEf;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKtD,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAEC,CAAC,EAAG;MAEjB,IAAI,CAAC9U,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;MACV,IAAI,CAACuU,CAAC,GAAGA,CAAC;MACV,IAAI,CAACC,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAwc,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACzE,CAAC,GAAGyE,MAAM;MACf,IAAI,CAACnE,CAAC,GAAGmE,MAAM;MACf,IAAI,CAACoQ,CAAC,GAAGpQ,MAAM;MACf,IAAI,CAACqQ,CAAC,GAAGrQ,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA0c,KAAM1E,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAA2c,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAgtB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAitB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA4c,aAAcvG,KAAK,EAAErW,KAAK,EAAG;MAE5B,QAASqW,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAAC2B,CAAC,GAAGhY,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACsY,CAAC,GAAGtY,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC6sB,CAAC,GAAG7sB,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC8sB,CAAC,GAAG9sB,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAG0S,KAAM,CAAC;MAE9D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA6c,aAAcxG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAAC2B,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACM,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACuU,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACC,CAAC;QACrB;UAAS,MAAM,IAAInpB,KAAK,CAAE,yBAAyB,GAAG0S,KAAM,CAAC;MAE9D;IAED;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAAC+R,CAAC,EAAE,IAAI,CAACM,CAAC,EAAE,IAAI,CAACuU,CAAC,EAAE,IAAI,CAACC,CAAE,CAAC;IAE9D;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMC,CAAC,EAAG;MAET,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC;MACZ,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;MACZ,IAAI,CAACuU,CAAC,GAAG7P,CAAC,CAAC6P,CAAC;MACZ,IAAI,CAACC,CAAC,GAAK9P,CAAC,CAAC8P,CAAC,KAAKzoB,SAAS,GAAK2Y,CAAC,CAAC8P,CAAC,GAAG,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAKD,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAACuU,CAAC,IAAI7P,CAAC,CAAC6P,CAAC;MACb,IAAI,CAACC,CAAC,IAAI9P,CAAC,CAAC8P,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAkd,UAAWzD,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MACX,IAAI,CAACoT,CAAC,IAAIpT,CAAC;MACX,IAAI,CAACqT,CAAC,IAAIrT,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAmd,WAAY3C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAACuU,CAAC,GAAGrS,CAAC,CAACqS,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAClB,IAAI,CAACC,CAAC,GAAGtS,CAAC,CAACsS,CAAC,GAAGrS,CAAC,CAACqS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAod,gBAAiBJ,CAAC,EAAEvD,CAAC,EAAG;MAEvB,IAAI,CAACzB,CAAC,IAAIgF,CAAC,CAAChF,CAAC,GAAGyB,CAAC;MACjB,IAAI,CAACnB,CAAC,IAAI0E,CAAC,CAAC1E,CAAC,GAAGmB,CAAC;MACjB,IAAI,CAACoT,CAAC,IAAI7P,CAAC,CAAC6P,CAAC,GAAGpT,CAAC;MACjB,IAAI,CAACqT,CAAC,IAAI9P,CAAC,CAAC8P,CAAC,GAAGrT,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAqd,IAAKL,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAACuU,CAAC,IAAI7P,CAAC,CAAC6P,CAAC;MACb,IAAI,CAACC,CAAC,IAAI9P,CAAC,CAAC8P,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAsd,UAAW7D,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MACX,IAAI,CAACoT,CAAC,IAAIpT,CAAC;MACX,IAAI,CAACqT,CAAC,IAAIrT,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAud,WAAY/C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAACuU,CAAC,GAAGrS,CAAC,CAACqS,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAClB,IAAI,CAACC,CAAC,GAAGtS,CAAC,CAACsS,CAAC,GAAGrS,CAAC,CAACqS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAUR,CAAC,EAAG;MAEb,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAACuU,CAAC,IAAI7P,CAAC,CAAC6P,CAAC;MACb,IAAI,CAACC,CAAC,IAAI9P,CAAC,CAAC8P,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAyd,eAAgBhB,MAAM,EAAG;MAExB,IAAI,CAACzE,CAAC,IAAIyE,MAAM;MAChB,IAAI,CAACnE,CAAC,IAAImE,MAAM;MAChB,IAAI,CAACoQ,CAAC,IAAIpQ,MAAM;MAChB,IAAI,CAACqQ,CAAC,IAAIrQ,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcpV,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEuU,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;MACpD,IAAMjP,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE,GAAGiP,CAAC;MAC3D,IAAI,CAACxU,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE,GAAGiP,CAAC;MAC3D,IAAI,CAACD,CAAC,GAAGhP,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE,GAAGiP,CAAC;MAC5D,IAAI,CAACA,CAAC,GAAGjP,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE,GAAGiP,CAAC;MAE5D,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA2d,aAAclB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAO,CAAC;IAEzC;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAAmtB,2BAA4B5S,CAAC,EAAG;MAE/B;;MAEA;;MAEA,IAAI,CAACuS,CAAC,GAAG,CAAC,GAAGhW,IAAI,CAACkI,IAAI,CAAEzE,CAAC,CAACuS,CAAE,CAAC;MAE7B,IAAMrT,CAAC,GAAG3C,IAAI,CAAC2H,IAAI,CAAE,CAAC,GAAGlE,CAAC,CAACuS,CAAC,GAAGvS,CAAC,CAACuS,CAAE,CAAC;MAEpC,IAAKrT,CAAC,GAAG,MAAM,EAAG;QAEjB,IAAI,CAACzB,CAAC,GAAG,CAAC;QACV,IAAI,CAACM,CAAC,GAAG,CAAC;QACV,IAAI,CAACuU,CAAC,GAAG,CAAC;MAEX,CAAC,MAAM;QAEN,IAAI,CAAC7U,CAAC,GAAGuC,CAAC,CAACvC,CAAC,GAAGyB,CAAC;QAChB,IAAI,CAACnB,CAAC,GAAGiC,CAAC,CAACjC,CAAC,GAAGmB,CAAC;QAChB,IAAI,CAACoT,CAAC,GAAGtS,CAAC,CAACsS,CAAC,GAAGpT,CAAC;MAEjB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAotB,+BAAgCtV,CAAC,EAAG;MAEnC;;MAEA;;MAEA,IAAI6G,KAAK,EAAE3G,CAAC,EAAEM,CAAC,EAAEuU,CAAC,CAAC,CAAC;MACpB,IAAMQ,OAAO,GAAG,IAAI;QAAG;QACtBC,QAAQ,GAAG,GAAG;QAAG;;QAEjBpM,EAAE,GAAGpJ,CAAC,CAACgG,QAAQ;QAEfyP,GAAG,GAAGrM,EAAE,CAAE,CAAC,CAAE;QAAEsM,GAAG,GAAGtM,EAAE,CAAE,CAAC,CAAE;QAAEuM,GAAG,GAAGvM,EAAE,CAAE,CAAC,CAAE;QAC3CwM,GAAG,GAAGxM,EAAE,CAAE,CAAC,CAAE;QAAEyM,GAAG,GAAGzM,EAAE,CAAE,CAAC,CAAE;QAAE0M,GAAG,GAAG1M,EAAE,CAAE,CAAC,CAAE;QAC3C2M,GAAG,GAAG3M,EAAE,CAAE,CAAC,CAAE;QAAE4M,GAAG,GAAG5M,EAAE,CAAE,CAAC,CAAE;QAAE6M,GAAG,GAAG7M,EAAE,CAAE,EAAE,CAAE;MAE7C,IAAOpK,IAAI,CAACgC,GAAG,CAAE0U,GAAG,GAAGE,GAAI,CAAC,GAAGL,OAAO,IAC/BvW,IAAI,CAACgC,GAAG,CAAE2U,GAAG,GAAGI,GAAI,CAAC,GAAGR,OAAS,IACjCvW,IAAI,CAACgC,GAAG,CAAE8U,GAAG,GAAGE,GAAI,CAAC,GAAGT,OAAS,EAAG;QAE1C;QACA;QACA;;QAEA,IAAOvW,IAAI,CAACgC,GAAG,CAAE0U,GAAG,GAAGE,GAAI,CAAC,GAAGJ,QAAQ,IAChCxW,IAAI,CAACgC,GAAG,CAAE2U,GAAG,GAAGI,GAAI,CAAC,GAAGP,QAAU,IAClCxW,IAAI,CAACgC,GAAG,CAAE8U,GAAG,GAAGE,GAAI,CAAC,GAAGR,QAAU,IAClCxW,IAAI,CAACgC,GAAG,CAAEyU,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAE,CAAC,GAAGT,QAAU,EAAG;UAErD;;UAEA,IAAI,CAAChS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;UAEtB,OAAO,IAAI,CAAC,CAAC;QAEd;;QAEA;;QAEAqD,KAAK,GAAG7H,IAAI,CAACC,EAAE;QAEf,IAAMiX,EAAE,GAAG,CAAET,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMU,EAAE,GAAG,CAAEN,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMO,EAAE,GAAG,CAAEH,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMI,EAAE,GAAG,CAAEX,GAAG,GAAGE,GAAG,IAAK,CAAC;QAC5B,IAAMU,EAAE,GAAG,CAAEX,GAAG,GAAGI,GAAG,IAAK,CAAC;QAC5B,IAAMQ,EAAE,GAAG,CAAET,GAAG,GAAGE,GAAG,IAAK,CAAC;QAE5B,IAAOE,EAAE,GAAGC,EAAE,IAAQD,EAAE,GAAGE,EAAI,EAAG;UAEjC;;UAEA,IAAKF,EAAE,GAAGX,OAAO,EAAG;YAEnBrV,CAAC,GAAG,CAAC;YACLM,CAAC,GAAG,WAAW;YACfuU,CAAC,GAAG,WAAW;UAEhB,CAAC,MAAM;YAEN7U,CAAC,GAAGlB,IAAI,CAAC2H,IAAI,CAAEuP,EAAG,CAAC;YACnB1V,CAAC,GAAG6V,EAAE,GAAGnW,CAAC;YACV6U,CAAC,GAAGuB,EAAE,GAAGpW,CAAC;UAEX;QAED,CAAC,MAAM,IAAKiW,EAAE,GAAGC,EAAE,EAAG;UAErB;;UAEA,IAAKD,EAAE,GAAGZ,OAAO,EAAG;YAEnBrV,CAAC,GAAG,WAAW;YACfM,CAAC,GAAG,CAAC;YACLuU,CAAC,GAAG,WAAW;UAEhB,CAAC,MAAM;YAENvU,CAAC,GAAGxB,IAAI,CAAC2H,IAAI,CAAEwP,EAAG,CAAC;YACnBjW,CAAC,GAAGmW,EAAE,GAAG7V,CAAC;YACVuU,CAAC,GAAGwB,EAAE,GAAG/V,CAAC;UAEX;QAED,CAAC,MAAM;UAEN;;UAEA,IAAK4V,EAAE,GAAGb,OAAO,EAAG;YAEnBrV,CAAC,GAAG,WAAW;YACfM,CAAC,GAAG,WAAW;YACfuU,CAAC,GAAG,CAAC;UAEN,CAAC,MAAM;YAENA,CAAC,GAAG/V,IAAI,CAAC2H,IAAI,CAAEyP,EAAG,CAAC;YACnBlW,CAAC,GAAGoW,EAAE,GAAGvB,CAAC;YACVvU,CAAC,GAAG+V,EAAE,GAAGxB,CAAC;UAEX;QAED;QAEA,IAAI,CAACvR,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAElO,KAAM,CAAC;QAE1B,OAAO,IAAI,CAAC,CAAC;MAEd;;MAEA;;MAEA,IAAIlF,CAAC,GAAG3C,IAAI,CAAC2H,IAAI,CAAE,CAAEqP,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAE,GAC/C,CAAEH,GAAG,GAAGI,GAAG,KAAOJ,GAAG,GAAGI,GAAG,CAAE,GAC7B,CAAEH,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAG,CAAC,CAAC,CAAC;;MAElC,IAAK1W,IAAI,CAACgC,GAAG,CAAEW,CAAE,CAAC,GAAG,KAAK,EAAGA,CAAC,GAAG,CAAC;;MAElC;MACA;;MAEA,IAAI,CAACzB,CAAC,GAAG,CAAE8V,GAAG,GAAGF,GAAG,IAAKnU,CAAC;MAC1B,IAAI,CAACnB,CAAC,GAAG,CAAEmV,GAAG,GAAGI,GAAG,IAAKpU,CAAC;MAC1B,IAAI,CAACoT,CAAC,GAAG,CAAEa,GAAG,GAAGF,GAAG,IAAK/T,CAAC;MAC1B,IAAI,CAACqT,CAAC,GAAGhW,IAAI,CAACkI,IAAI,CAAE,CAAEuO,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAC,IAAK,CAAE,CAAC;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAjuB,GAAA;IAAAE,KAAA,EAED,SAAA0X,IAAKsF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAEgF,CAAC,CAAChF,CAAE,CAAC;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAE0E,CAAC,CAAC1E,CAAE,CAAC;MAChC,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACY,GAAG,CAAE,IAAI,CAACmV,CAAC,EAAE7P,CAAC,CAAC6P,CAAE,CAAC;MAChC,IAAI,CAACC,CAAC,GAAGhW,IAAI,CAACY,GAAG,CAAE,IAAI,CAACoV,CAAC,EAAE9P,CAAC,CAAC8P,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA2X,IAAKqF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEgF,CAAC,CAAChF,CAAE,CAAC;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAE0E,CAAC,CAAC1E,CAAE,CAAC;MAChC,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACa,GAAG,CAAE,IAAI,CAACkV,CAAC,EAAE7P,CAAC,CAAC6P,CAAE,CAAC;MAChC,IAAI,CAACC,CAAC,GAAGhW,IAAI,CAACa,GAAG,CAAE,IAAI,CAACmV,CAAC,EAAE9P,CAAC,CAAC8P,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAyX,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACa,GAAG,CAAED,GAAG,CAACmV,CAAC,EAAE/V,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACkV,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACC,CAAC,GAAGhW,IAAI,CAACa,GAAG,CAAED,GAAG,CAACoV,CAAC,EAAEhW,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACmV,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA+d,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAACjG,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACjG,CAAE,CAAE,CAAC;MACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC3F,CAAE,CAAE,CAAC;MACvD,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC4O,CAAE,CAAE,CAAC;MACvD,IAAI,CAACC,CAAC,GAAGhW,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC6O,CAAE,CAAE,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAke,YAAaxG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMhS,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;MAE5B,OAAO,IAAI,CAACgY,YAAY,CAAEhY,MAAM,IAAI,CAAE,CAAC,CAAC8X,cAAc,CAAE3G,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEhS,MAAO,CAAE,CAAE,CAAC;IAEnG;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAoZ,MAAA,EAAQ;MAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAE,CAAC;MAC7B,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACyT,CAAE,CAAC;MAC7B,IAAI,CAACC,CAAC,GAAGhW,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC0T,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAka,KAAA,EAAO;MAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAE,CAAC;MAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAE,CAAC;MAC5B,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC2S,CAAE,CAAC;MAC5B,IAAI,CAACC,CAAC,GAAGhW,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC4S,CAAE,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAkc,MAAA,EAAQ;MAEP,IAAI,CAAClE,CAAC,GAAGlB,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAClE,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAC5D,CAAE,CAAC;MAC7B,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAC2Q,CAAE,CAAC;MAC7B,IAAI,CAACC,CAAC,GAAGhW,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAC4Q,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAme,YAAA,EAAc;MAEb,IAAI,CAACnG,CAAC,GAAGlB,IAAI,CAACsH,KAAK,CAAE,IAAI,CAACpG,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsH,KAAK,CAAE,IAAI,CAAC9F,CAAE,CAAC;MAC7B,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACsH,KAAK,CAAE,IAAI,CAACyO,CAAE,CAAC;MAC7B,IAAI,CAACC,CAAC,GAAGhW,IAAI,CAACsH,KAAK,CAAE,IAAI,CAAC0O,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAqe,OAAA,EAAS;MAER,IAAI,CAACrG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACuU,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACC,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAse,IAAKtB,CAAC,EAAG;MAER,OAAO,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACuU,CAAC,GAAG7P,CAAC,CAAC6P,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG9P,CAAC,CAAC8P,CAAC;IAEjE;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAwe,SAAA,EAAW;MAEV,OAAO,IAAI,CAACxG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACuU,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;IAE7E;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA2F,OAAA,EAAS;MAER,OAAOmR,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACzG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACuU,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAE,CAAC;IAE1F;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA0e,gBAAA,EAAkB;MAEjB,OAAO5H,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAE,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAE,CAAC,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAAC+T,CAAE,CAAC,GAAG/V,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACgU,CAAE,CAAC;IAEzF;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAic,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC0B,YAAY,CAAE,IAAI,CAAChY,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC;IAE/C;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAsf,UAAW3Z,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACsW,SAAS,CAAC,CAAC,CAACwB,cAAc,CAAE9X,MAAO,CAAC;IAEjD;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAuY,KAAMyE,CAAC,EAAEuC,KAAK,EAAG;MAEhB,IAAI,CAACvH,CAAC,IAAI,CAAEgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKuH,KAAK;MAClC,IAAI,CAACjH,CAAC,IAAI,CAAE0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKiH,KAAK;MAClC,IAAI,CAACsN,CAAC,IAAI,CAAE7P,CAAC,CAAC6P,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKtN,KAAK;MAClC,IAAI,CAACuN,CAAC,IAAI,CAAE9P,CAAC,CAAC8P,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKvN,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAAwf,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAACvH,CAAC,GAAGyH,EAAE,CAACzH,CAAC,GAAG,CAAE0H,EAAE,CAAC1H,CAAC,GAAGyH,EAAE,CAACzH,CAAC,IAAKuH,KAAK;MACvC,IAAI,CAACjH,CAAC,GAAGmH,EAAE,CAACnH,CAAC,GAAG,CAAEoH,EAAE,CAACpH,CAAC,GAAGmH,EAAE,CAACnH,CAAC,IAAKiH,KAAK;MACvC,IAAI,CAACsN,CAAC,GAAGpN,EAAE,CAACoN,CAAC,GAAG,CAAEnN,EAAE,CAACmN,CAAC,GAAGpN,EAAE,CAACoN,CAAC,IAAKtN,KAAK;MACvC,IAAI,CAACuN,CAAC,GAAGrN,EAAE,CAACqN,CAAC,GAAG,CAAEpN,EAAE,CAACoN,CAAC,GAAGrN,EAAE,CAACqN,CAAC,IAAKvN,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQ3C,CAAC,EAAG;MAEX,OAAWA,CAAC,CAAChF,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQgF,CAAC,CAAC1E,CAAC,KAAK,IAAI,CAACA,CAAG,IAAM0E,CAAC,CAAC6P,CAAC,KAAK,IAAI,CAACA,CAAG,IAAM7P,CAAC,CAAC8P,CAAC,KAAK,IAAI,CAACA,CAAG;IAE9F;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAAC7H,CAAC,GAAGvB,KAAK,CAAEoJ,MAAM,CAAE;MACxB,IAAI,CAACvH,CAAC,GAAG7B,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAACgN,CAAC,GAAGpW,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAACiN,CAAC,GAAGrW,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjCpJ,KAAK,CAAEoJ,MAAM,CAAE,GAAG,IAAI,CAAC7H,CAAC;MACxBvB,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACvH,CAAC;MAC5B7B,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACgN,CAAC;MAC5BpW,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACiN,CAAC;MAE5B,OAAOrW,KAAK;IAEb;EAAC;IAAA3W,GAAA;IAAAE,KAAA,EAED,SAAA+f,oBAAqBC,SAAS,EAAE3J,KAAK,EAAG;MAEvC,IAAI,CAAC2B,CAAC,GAAGgI,SAAS,CAACC,IAAI,CAAE5J,KAAM,CAAC;MAChC,IAAI,CAACiC,CAAC,GAAG0H,SAAS,CAACE,IAAI,CAAE7J,KAAM,CAAC;MAChC,IAAI,CAACwW,CAAC,GAAG7M,SAAS,CAACsO,IAAI,CAAEjY,KAAM,CAAC;MAChC,IAAI,CAACyW,CAAC,GAAG9M,SAAS,CAACuO,IAAI,CAAElY,KAAM,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAmX,OAAA,EAAS;MAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAAC0V,CAAC,GAAG/V,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAAC2V,CAAC,GAAGhW,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAArX,GAAA,EAAA8sB,iBAAA;IAAA5sB,KAAA,eAAAX,mBAAA,GAAA8G,IAAA,CAED,SAAAnG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAuf,OAAAmO,SAAA;QAAA,kBAAAA,SAAA,CAAAxnB,IAAA,GAAAwnB,SAAA,CAAA9pB,IAAA;UAAA;YAAA8pB,SAAA,CAAA9pB,IAAA;YAEC,OAAM,IAAI,CAACsT,CAAC;UAAA;YAAAwW,SAAA,CAAA9pB,IAAA;YACZ,OAAM,IAAI,CAAC4T,CAAC;UAAA;YAAAkW,SAAA,CAAA9pB,IAAA;YACZ,OAAM,IAAI,CAACmoB,CAAC;UAAA;YAAA2B,SAAA,CAAA9pB,IAAA;YACZ,OAAM,IAAI,CAACooB,CAAC;UAAA;UAAA;YAAA,OAAA0B,SAAA,CAAArnB,IAAA;QAAA;MAAA,GAAAnH,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAA2sB,OAAA;AAAA,EAPEzsB,MAAM,CAACE,QAAQ;AAWnB;AACA;AACA;AACA;AACA;AAJAd,OAAA,CAAAqtB,OAAA,GAAAA,OAAA;AAAA,IAKM8B,YAAY,0BAAAC,iBAAA;EAAAxE,SAAA,CAAAuE,YAAA,EAAAC,iBAAA;EAAA,IAAAC,OAAA,GAAAvE,YAAA,CAAAqE,YAAA;EAEjB,SAAAA,aAAatG,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEwG,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAC,MAAA;IAAA1mB,eAAA,OAAAsmB,YAAA;IAElDI,MAAA,GAAAF,OAAA,CAAA7sB,IAAA;IAEA+sB,MAAA,CAAKC,cAAc,GAAG,IAAI;IAE1BD,MAAA,CAAK1G,KAAK,GAAGA,KAAK;IAClB0G,MAAA,CAAKzG,MAAM,GAAGA,MAAM;IACpByG,MAAA,CAAKE,KAAK,GAAG,CAAC;IAEdF,MAAA,CAAKG,OAAO,GAAG,IAAIrC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAExE,KAAK,EAAEC,MAAO,CAAC;IACjDyG,MAAA,CAAKI,WAAW,GAAG,KAAK;IAExBJ,MAAA,CAAKK,QAAQ,GAAG,IAAIvC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAExE,KAAK,EAAEC,MAAO,CAAC;IAElD,IAAML,KAAK,GAAG;MAAEI,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA,MAAM;MAAE2G,KAAK,EAAE;IAAE,CAAC;IAExD,IAAKH,OAAO,CAAClC,QAAQ,KAAKroB,SAAS,EAAG;MAErC;MACA0hB,QAAQ,CAAE,kFAAmF,CAAC;MAC9F6I,OAAO,CAACzH,UAAU,GAAGyH,OAAO,CAAClC,QAAQ,KAAK9Z,YAAY,GAAGM,cAAc,GAAGD,YAAY;IAEvF;IAEA4b,MAAA,CAAKM,OAAO,GAAG,IAAInF,OAAO,CAAEjC,KAAK,EAAE6G,OAAO,CAACtE,OAAO,EAAEsE,OAAO,CAACpE,KAAK,EAAEoE,OAAO,CAACnE,KAAK,EAAEmE,OAAO,CAAClE,SAAS,EAAEkE,OAAO,CAACjE,SAAS,EAAEiE,OAAO,CAAChE,MAAM,EAAEgE,OAAO,CAAC/sB,IAAI,EAAE+sB,OAAO,CAAC/D,UAAU,EAAE+D,OAAO,CAACzH,UAAW,CAAC;IAC9L0H,MAAA,CAAKM,OAAO,CAACrD,qBAAqB,GAAG,IAAI;IAEzC+C,MAAA,CAAKM,OAAO,CAACzD,KAAK,GAAG,KAAK;IAC1BmD,MAAA,CAAKM,OAAO,CAAC3D,eAAe,GAAGoD,OAAO,CAACpD,eAAe,KAAKnnB,SAAS,GAAGuqB,OAAO,CAACpD,eAAe,GAAG,KAAK;IACtGqD,MAAA,CAAKM,OAAO,CAAC9D,cAAc,GAAGuD,OAAO,CAACvD,cAAc,KAAKhnB,SAAS,GAAGuqB,OAAO,CAACvD,cAAc,GAAG,IAAI;IAClGwD,MAAA,CAAKM,OAAO,CAACxE,SAAS,GAAGiE,OAAO,CAACjE,SAAS,KAAKtmB,SAAS,GAAGuqB,OAAO,CAACjE,SAAS,GAAGzc,YAAY;IAE3F2gB,MAAA,CAAKO,WAAW,GAAGR,OAAO,CAACQ,WAAW,KAAK/qB,SAAS,GAAGuqB,OAAO,CAACQ,WAAW,GAAG,IAAI;IACjFP,MAAA,CAAKQ,aAAa,GAAGT,OAAO,CAACS,aAAa,KAAKhrB,SAAS,GAAGuqB,OAAO,CAACS,aAAa,GAAG,KAAK;IAExFR,MAAA,CAAKS,YAAY,GAAGV,OAAO,CAACU,YAAY,KAAKjrB,SAAS,GAAGuqB,OAAO,CAACU,YAAY,GAAG,IAAI;IAEpFT,MAAA,CAAKU,OAAO,GAAGX,OAAO,CAACW,OAAO,KAAKlrB,SAAS,GAAGuqB,OAAO,CAACW,OAAO,GAAG,CAAC;IAAC,OAAAV,MAAA;EAEpE;EAAClmB,YAAA,CAAA8lB,YAAA;IAAA3uB,GAAA;IAAAE,KAAA,EAED,SAAAwvB,QAASrH,KAAK,EAAEC,MAAM,EAAE2G,KAAK,GAAG,CAAC,EAAG;MAEnC,IAAK,IAAI,CAAC5G,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKA,MAAM,IAAI,IAAI,CAAC2G,KAAK,KAAKA,KAAK,EAAG;QAE7E,IAAI,CAAC5G,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;QACpB,IAAI,CAAC2G,KAAK,GAAGA,KAAK;QAElB,IAAI,CAACI,OAAO,CAACpH,KAAK,CAACI,KAAK,GAAGA,KAAK;QAChC,IAAI,CAACgH,OAAO,CAACpH,KAAK,CAACK,MAAM,GAAGA,MAAM;QAClC,IAAI,CAAC+G,OAAO,CAACpH,KAAK,CAACgH,KAAK,GAAGA,KAAK;QAEhC,IAAI,CAACxC,OAAO,CAAC,CAAC;MAEf;MAEA,IAAI,CAAC2C,QAAQ,CAAC5T,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE6M,KAAK,EAAEC,MAAO,CAAC;MACxC,IAAI,CAAC4G,OAAO,CAAC1T,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE6M,KAAK,EAAEC,MAAO,CAAC;IAExC;EAAC;IAAAtoB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAC/C,KAAK,GAAG+C,MAAM,CAAC/C,KAAK;MACzB,IAAI,CAACC,MAAM,GAAG8C,MAAM,CAAC9C,MAAM;MAC3B,IAAI,CAAC2G,KAAK,GAAG7D,MAAM,CAAC6D,KAAK;MAEzB,IAAI,CAACC,OAAO,CAACjS,IAAI,CAAEmO,MAAM,CAAC8D,OAAQ,CAAC;MACnC,IAAI,CAACC,WAAW,GAAG/D,MAAM,CAAC+D,WAAW;MAErC,IAAI,CAACC,QAAQ,CAACnS,IAAI,CAAEmO,MAAM,CAACgE,QAAS,CAAC;MAErC,IAAI,CAACC,OAAO,GAAGjE,MAAM,CAACiE,OAAO,CAACrS,KAAK,CAAC,CAAC;MACrC,IAAI,CAACqS,OAAO,CAACrD,qBAAqB,GAAG,IAAI;;MAEzC;;MAEA,IAAM/D,KAAK,GAAGvoB,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACiE,OAAO,CAACpH,KAAM,CAAC;MACvD,IAAI,CAACoH,OAAO,CAACjE,MAAM,GAAG,IAAIjC,MAAM,CAAElB,KAAM,CAAC;MAEzC,IAAI,CAACqH,WAAW,GAAGlE,MAAM,CAACkE,WAAW;MACrC,IAAI,CAACC,aAAa,GAAGnE,MAAM,CAACmE,aAAa;MAEzC,IAAKnE,MAAM,CAACoE,YAAY,KAAK,IAAI,EAAG,IAAI,CAACA,YAAY,GAAGpE,MAAM,CAACoE,YAAY,CAACxS,KAAK,CAAC,CAAC;MAEnF,IAAI,CAACyS,OAAO,GAAGrE,MAAM,CAACqE,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAzvB,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAAChW,aAAa,CAAE;QAAE1U,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;EAAA,OAAA4sB,YAAA;AAAA,EAzGyB7Y,eAAe;AAAAtW,OAAA,CAAAmvB,YAAA,GAAAA,YAAA;AAAA,IA6GpCiB,iBAAiB,0BAAAC,aAAA;EAAAzF,SAAA,CAAAwF,iBAAA,EAAAC,aAAA;EAAA,IAAAC,OAAA,GAAAxF,YAAA,CAAAsF,iBAAA;EAEtB,SAAAA,kBAAavH,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEwG,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAiB,MAAA;IAAA1nB,eAAA,OAAAunB,iBAAA;IAElDG,MAAA,GAAAD,OAAA,CAAA9tB,IAAA,OAAOqmB,KAAK,EAAEC,MAAM,EAAEwG,OAAO;IAE7BiB,MAAA,CAAKC,mBAAmB,GAAG,IAAI;IAAC,OAAAD,MAAA;EAEjC;EAAC,OAAAlnB,YAAA,CAAA+mB,iBAAA;AAAA,EAR8BjB,YAAY;AAAAnvB,OAAA,CAAAowB,iBAAA,GAAAA,iBAAA;AAAA,IAYtCK,gBAAgB,0BAAAC,QAAA;EAAA9F,SAAA,CAAA6F,gBAAA,EAAAC,QAAA;EAAA,IAAAC,OAAA,GAAA7F,YAAA,CAAA2F,gBAAA;EAErB,SAAAA,iBAAahH,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE2G,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAmB,MAAA;IAAA/nB,eAAA,OAAA4nB,gBAAA;IAE5DG,MAAA,GAAAD,OAAA,CAAAnuB,IAAA,OAAO,IAAI;IAEXouB,MAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,MAAA,CAAKnI,KAAK,GAAG;MAAEgB,IAAI,EAAJA,IAAI;MAAEZ,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA,MAAM;MAAE2G,KAAK,EAALA;IAAM,CAAC;IAE3CmB,MAAA,CAAKxF,SAAS,GAAG7c,aAAa;IAC9BqiB,MAAA,CAAKvF,SAAS,GAAG9c,aAAa;IAE9BqiB,MAAA,CAAKE,KAAK,GAAGziB,mBAAmB;IAEhCuiB,MAAA,CAAK1E,eAAe,GAAG,KAAK;IAC5B0E,MAAA,CAAKxE,KAAK,GAAG,KAAK;IAClBwE,MAAA,CAAKvE,eAAe,GAAG,CAAC;IAAC,OAAAuE,MAAA;EAE1B;EAAC,OAAAvnB,YAAA,CAAAonB,gBAAA;AAAA,EAnB6B/F,OAAO;AAAA1qB,OAAA,CAAAywB,gBAAA,GAAAA,gBAAA;AAAA,IAuBhCM,sBAAsB,0BAAAC,kBAAA;EAAApG,SAAA,CAAAmG,sBAAA,EAAAC,kBAAA;EAAA,IAAAC,OAAA,GAAAnG,YAAA,CAAAiG,sBAAA;EAE3B,SAAAA,uBAAalI,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE2G,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAyB,MAAA;IAAAroB,eAAA,OAAAkoB,sBAAA;IAE/CG,MAAA,GAAAD,OAAA,CAAAzuB,IAAA,OAAOqmB,KAAK,EAAEC,MAAM;IAEpBoI,MAAA,CAAKC,wBAAwB,GAAG,IAAI;IAEpCD,MAAA,CAAKzB,KAAK,GAAGA,KAAK;IAElByB,MAAA,CAAKrB,OAAO,GAAG,IAAIY,gBAAgB,CAAE,IAAI,EAAE5H,KAAK,EAAEC,MAAM,EAAE2G,KAAM,CAAC;IAEjEyB,MAAA,CAAKrB,OAAO,CAACrD,qBAAqB,GAAG,IAAI;IAAC,OAAA0E,MAAA;EAE3C;EAAC,OAAA7nB,YAAA,CAAA0nB,sBAAA;AAAA,EAdmCX,iBAAiB;AAAApwB,OAAA,CAAA+wB,sBAAA,GAAAA,sBAAA;AAAA,IAkBhDK,aAAa,0BAAAC,SAAA;EAAAzG,SAAA,CAAAwG,aAAA,EAAAC,SAAA;EAAA,IAAAC,OAAA,GAAAxG,YAAA,CAAAsG,aAAA;EAElB,SAAAA,cAAa3H,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE2G,KAAK,GAAG,CAAC,EAAG;IAAA,IAAA8B,MAAA;IAAA1oB,eAAA,OAAAuoB,aAAA;IAE5D;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAG,MAAA,GAAAD,OAAA,CAAA9uB,IAAA,OAAO,IAAI;IAEX+uB,MAAA,CAAKC,eAAe,GAAG,IAAI;IAE3BD,MAAA,CAAK9I,KAAK,GAAG;MAAEgB,IAAI,EAAJA,IAAI;MAAEZ,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA,MAAM;MAAE2G,KAAK,EAALA;IAAM,CAAC;IAE3C8B,MAAA,CAAKnG,SAAS,GAAG7c,aAAa;IAC9BgjB,MAAA,CAAKlG,SAAS,GAAG9c,aAAa;IAE9BgjB,MAAA,CAAKT,KAAK,GAAGziB,mBAAmB;IAEhCkjB,MAAA,CAAKrF,eAAe,GAAG,KAAK;IAC5BqF,MAAA,CAAKnF,KAAK,GAAG,KAAK;IAClBmF,MAAA,CAAKlF,eAAe,GAAG,CAAC;IAAC,OAAAkF,MAAA;EAE1B;EAAC,OAAAloB,YAAA,CAAA+nB,aAAA;AAAA,EA3B0B1G,OAAO;AAAA1qB,OAAA,CAAAoxB,aAAA,GAAAA,aAAA;AAAA,IA+B7BK,mBAAmB,0BAAAC,mBAAA;EAAA9G,SAAA,CAAA6G,mBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAA7G,YAAA,CAAA2G,mBAAA;EAExB,SAAAA,oBAAa5I,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE2G,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAmC,MAAA;IAAA/oB,eAAA,OAAA4oB,mBAAA;IAE/CG,MAAA,GAAAD,OAAA,CAAAnvB,IAAA,OAAOqmB,KAAK,EAAEC,MAAM;IAEpB8I,MAAA,CAAKC,qBAAqB,GAAG,IAAI;IAEjCD,MAAA,CAAKnC,KAAK,GAAGA,KAAK;IAElBmC,MAAA,CAAK/B,OAAO,GAAG,IAAIuB,aAAa,CAAE,IAAI,EAAEvI,KAAK,EAAEC,MAAM,EAAE2G,KAAM,CAAC;IAE9DmC,MAAA,CAAK/B,OAAO,CAACrD,qBAAqB,GAAG,IAAI;IAAC,OAAAoF,MAAA;EAE3C;EAAC,OAAAvoB,YAAA,CAAAooB,mBAAA;AAAA,EAdgCrB,iBAAiB;AAAApwB,OAAA,CAAAyxB,mBAAA,GAAAA,mBAAA;AAAA,IAkB7CK,0BAA0B,0BAAAC,mBAAA;EAAAnH,SAAA,CAAAkH,0BAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAlH,YAAA,CAAAgH,0BAAA;EAE/B,SAAAA,2BAAajJ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEmJ,KAAK,GAAG,CAAC,EAAE3C,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAA4C,MAAA;IAAArpB,eAAA,OAAAipB,0BAAA;IAE7DI,MAAA,GAAAF,OAAA,CAAAxvB,IAAA,OAAOqmB,KAAK,EAAEC,MAAM,EAAEwG,OAAO;IAE7B4C,MAAA,CAAKC,4BAA4B,GAAG,IAAI;IAExC,IAAMtC,OAAO,GAAGqC,MAAA,CAAKrC,OAAO;IAE5BqC,MAAA,CAAKrC,OAAO,GAAG,EAAE;IAEjB,KAAM,IAAIvpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2rB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;MAElC4rB,MAAA,CAAKrC,OAAO,CAAEvpB,CAAC,CAAE,GAAGupB,OAAO,CAACrS,KAAK,CAAC,CAAC;MACnC0U,MAAA,CAAKrC,OAAO,CAAEvpB,CAAC,CAAE,CAACkmB,qBAAqB,GAAG,IAAI;IAE/C;IAAC,OAAA0F,MAAA;EAEF;EAAC7oB,YAAA,CAAAyoB,0BAAA;IAAAtxB,GAAA;IAAAE,KAAA,EAED,SAAAwvB,QAASrH,KAAK,EAAEC,MAAM,EAAE2G,KAAK,GAAG,CAAC,EAAG;MAEnC,IAAK,IAAI,CAAC5G,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKA,MAAM,IAAI,IAAI,CAAC2G,KAAK,KAAKA,KAAK,EAAG;QAE7E,IAAI,CAAC5G,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;QACpB,IAAI,CAAC2G,KAAK,GAAGA,KAAK;QAElB,KAAM,IAAInpB,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG,IAAI,CAACvC,OAAO,CAACxpB,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;UAEzD,IAAI,CAACupB,OAAO,CAAEvpB,CAAC,CAAE,CAACmiB,KAAK,CAACI,KAAK,GAAGA,KAAK;UACrC,IAAI,CAACgH,OAAO,CAAEvpB,CAAC,CAAE,CAACmiB,KAAK,CAACK,MAAM,GAAGA,MAAM;UACvC,IAAI,CAAC+G,OAAO,CAAEvpB,CAAC,CAAE,CAACmiB,KAAK,CAACgH,KAAK,GAAGA,KAAK;QAEtC;QAEA,IAAI,CAACxC,OAAO,CAAC,CAAC;MAEf;MAEA,IAAI,CAAC2C,QAAQ,CAAC5T,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE6M,KAAK,EAAEC,MAAO,CAAC;MACxC,IAAI,CAAC4G,OAAO,CAAC1T,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE6M,KAAK,EAAEC,MAAO,CAAC;IAExC;EAAC;IAAAtoB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACqB,OAAO,CAAC,CAAC;MAEd,IAAI,CAACpE,KAAK,GAAG+C,MAAM,CAAC/C,KAAK;MACzB,IAAI,CAACC,MAAM,GAAG8C,MAAM,CAAC9C,MAAM;MAC3B,IAAI,CAAC2G,KAAK,GAAG7D,MAAM,CAAC6D,KAAK;MAEzB,IAAI,CAACC,OAAO,CAACjS,IAAI,CAAEmO,MAAM,CAAC8D,OAAQ,CAAC;MACnC,IAAI,CAACC,WAAW,GAAG/D,MAAM,CAAC+D,WAAW;MAErC,IAAI,CAACC,QAAQ,CAACnS,IAAI,CAAEmO,MAAM,CAACgE,QAAS,CAAC;MAErC,IAAI,CAACE,WAAW,GAAGlE,MAAM,CAACkE,WAAW;MACrC,IAAI,CAACC,aAAa,GAAGnE,MAAM,CAACmE,aAAa;MAEzC,IAAKnE,MAAM,CAACoE,YAAY,KAAK,IAAI,EAAG,IAAI,CAACA,YAAY,GAAGpE,MAAM,CAACoE,YAAY,CAACxS,KAAK,CAAC,CAAC;MAEnF,IAAI,CAACqS,OAAO,CAACxpB,MAAM,GAAG,CAAC;MAEvB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGxG,MAAM,CAACiE,OAAO,CAACxpB,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAE3D,IAAI,CAACupB,OAAO,CAAEvpB,CAAC,CAAE,GAAGslB,MAAM,CAACiE,OAAO,CAAEvpB,CAAC,CAAE,CAACkX,KAAK,CAAC,CAAC;QAC/C,IAAI,CAACqS,OAAO,CAAEvpB,CAAC,CAAE,CAACkmB,qBAAqB,GAAG,IAAI;MAE/C;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAsF,0BAAA;AAAA,EA3EuC1B,iBAAiB;AAAApwB,OAAA,CAAA8xB,0BAAA,GAAAA,0BAAA;AAAA,IA+EpDO,UAAU,0BAAAC,iBAAA;EAEf,SAAAD,WAAa3Z,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAEuU,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;IAAA3kB,eAAA,OAAAwpB,UAAA;IAEzC,IAAI,CAACE,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,EAAE,GAAG9Z,CAAC;IACX,IAAI,CAAC+Z,EAAE,GAAGzZ,CAAC;IACX,IAAI,CAAC0Z,EAAE,GAAGnF,CAAC;IACX,IAAI,CAACoF,EAAE,GAAGnF,CAAC;EAEZ;EAACnkB,YAAA,CAAAgpB,UAAA;IAAA7xB,GAAA;IAAAyc,GAAA,EAuGD,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACuV,EAAE;IAEf,CAAC;IAAAxW,GAAA,EAED,SAAAA,IAAOtb,KAAK,EAAG;MAEd,IAAI,CAAC8xB,EAAE,GAAG9xB,KAAK;MACf,IAAI,CAACkyB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAApyB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACwV,EAAE;IAEf,CAAC;IAAAzW,GAAA,EAED,SAAAA,IAAOtb,KAAK,EAAG;MAEd,IAAI,CAAC+xB,EAAE,GAAG/xB,KAAK;MACf,IAAI,CAACkyB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAApyB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACyV,EAAE;IAEf,CAAC;IAAA1W,GAAA,EAED,SAAAA,IAAOtb,KAAK,EAAG;MAEd,IAAI,CAACgyB,EAAE,GAAGhyB,KAAK;MACf,IAAI,CAACkyB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAApyB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAAC0V,EAAE;IAEf,CAAC;IAAA3W,GAAA,EAED,SAAAA,IAAOtb,KAAK,EAAG;MAEd,IAAI,CAACiyB,EAAE,GAAGjyB,KAAK;MACf,IAAI,CAACkyB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKtD,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAEC,CAAC,EAAG;MAEjB,IAAI,CAACgF,EAAE,GAAG9Z,CAAC;MACX,IAAI,CAAC+Z,EAAE,GAAGzZ,CAAC;MACX,IAAI,CAAC0Z,EAAE,GAAGnF,CAAC;MACX,IAAI,CAACoF,EAAE,GAAGnF,CAAC;MAEX,IAAI,CAACoF,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAAC6rB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAG,CAAC;IAElE;EAAC;IAAAnyB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMoV,UAAU,EAAG;MAElB,IAAI,CAACL,EAAE,GAAGK,UAAU,CAACna,CAAC;MACtB,IAAI,CAAC+Z,EAAE,GAAGI,UAAU,CAAC7Z,CAAC;MACtB,IAAI,CAAC0Z,EAAE,GAAGG,UAAU,CAACtF,CAAC;MACtB,IAAI,CAACoF,EAAE,GAAGE,UAAU,CAACrF,CAAC;MAEtB,IAAI,CAACoF,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAoyB,aAAcC,KAAK,EAAEC,MAAM,EAAG;MAE7B,IAAMta,CAAC,GAAGqa,KAAK,CAACP,EAAE;QAAExZ,CAAC,GAAG+Z,KAAK,CAACN,EAAE;QAAElF,CAAC,GAAGwF,KAAK,CAACL,EAAE;QAAErX,KAAK,GAAG0X,KAAK,CAACE,MAAM;;MAEpE;MACA;MACA;;MAEA,IAAM3X,GAAG,GAAG9D,IAAI,CAAC8D,GAAG;MACpB,IAAMC,GAAG,GAAG/D,IAAI,CAAC+D,GAAG;MAEpB,IAAM2X,EAAE,GAAG5X,GAAG,CAAE5C,CAAC,GAAG,CAAE,CAAC;MACvB,IAAM8C,EAAE,GAAGF,GAAG,CAAEtC,CAAC,GAAG,CAAE,CAAC;MACvB,IAAMma,EAAE,GAAG7X,GAAG,CAAEiS,CAAC,GAAG,CAAE,CAAC;MAEvB,IAAM6F,EAAE,GAAG7X,GAAG,CAAE7C,CAAC,GAAG,CAAE,CAAC;MACvB,IAAM+C,EAAE,GAAGF,GAAG,CAAEvC,CAAC,GAAG,CAAE,CAAC;MACvB,IAAMqa,EAAE,GAAG9X,GAAG,CAAEgS,CAAC,GAAG,CAAE,CAAC;MAEvB,QAASlS,KAAK;QAEb,KAAK,KAAK;UACT,IAAI,CAACmX,EAAE,GAAGY,EAAE,GAAG5X,EAAE,GAAG2X,EAAE,GAAGD,EAAE,GAAGzX,EAAE,GAAG4X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGzX,EAAE,GAAG0X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG1X,EAAE,GAAG6X,EAAE,GAAGD,EAAE,GAAG3X,EAAE,GAAG0X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG3X,EAAE,GAAG4X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG5X,EAAE,GAAG2X,EAAE,GAAGD,EAAE,GAAGzX,EAAE,GAAG4X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGzX,EAAE,GAAG0X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG1X,EAAE,GAAG6X,EAAE,GAAGD,EAAE,GAAG3X,EAAE,GAAG0X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG3X,EAAE,GAAG4X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG5X,EAAE,GAAG2X,EAAE,GAAGD,EAAE,GAAGzX,EAAE,GAAG4X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGzX,EAAE,GAAG0X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG1X,EAAE,GAAG6X,EAAE,GAAGD,EAAE,GAAG3X,EAAE,GAAG0X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG3X,EAAE,GAAG4X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG5X,EAAE,GAAG2X,EAAE,GAAGD,EAAE,GAAGzX,EAAE,GAAG4X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGzX,EAAE,GAAG0X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG1X,EAAE,GAAG6X,EAAE,GAAGD,EAAE,GAAG3X,EAAE,GAAG0X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG3X,EAAE,GAAG4X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG5X,EAAE,GAAG2X,EAAE,GAAGD,EAAE,GAAGzX,EAAE,GAAG4X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGzX,EAAE,GAAG0X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG1X,EAAE,GAAG6X,EAAE,GAAGD,EAAE,GAAG3X,EAAE,GAAG0X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG3X,EAAE,GAAG4X,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACb,EAAE,GAAGY,EAAE,GAAG5X,EAAE,GAAG2X,EAAE,GAAGD,EAAE,GAAGzX,EAAE,GAAG4X,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAGzX,EAAE,GAAG0X,EAAE,GAAGC,EAAE,GAAG5X,EAAE,GAAG6X,EAAE;UACrC,IAAI,CAACX,EAAE,GAAGQ,EAAE,GAAG1X,EAAE,GAAG6X,EAAE,GAAGD,EAAE,GAAG3X,EAAE,GAAG0X,EAAE;UACrC,IAAI,CAACR,EAAE,GAAGO,EAAE,GAAG1X,EAAE,GAAG2X,EAAE,GAAGC,EAAE,GAAG3X,EAAE,GAAG4X,EAAE;UACrC;QAED;UACCpX,OAAO,CAACC,IAAI,CAAE,kEAAkE,GAAGb,KAAM,CAAC;MAE5F;MAEA,IAAK2X,MAAM,KAAK,KAAK,EAAG,IAAI,CAACJ,iBAAiB,CAAC,CAAC;MAEhD,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAA4yB,iBAAkBC,IAAI,EAAElU,KAAK,EAAG;MAE/B;;MAEA;;MAEA,IAAMmU,SAAS,GAAGnU,KAAK,GAAG,CAAC;QAAElF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEiY,SAAU,CAAC;MAEtD,IAAI,CAAChB,EAAE,GAAGe,IAAI,CAAC7a,CAAC,GAAGyB,CAAC;MACpB,IAAI,CAACsY,EAAE,GAAGc,IAAI,CAACva,CAAC,GAAGmB,CAAC;MACpB,IAAI,CAACuY,EAAE,GAAGa,IAAI,CAAChG,CAAC,GAAGpT,CAAC;MACpB,IAAI,CAACwY,EAAE,GAAGnb,IAAI,CAAC8D,GAAG,CAAEkY,SAAU,CAAC;MAE/B,IAAI,CAACZ,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAA+yB,sBAAuBjb,CAAC,EAAG;MAE1B;;MAEA;;MAEA,IAAMoJ,EAAE,GAAGpJ,CAAC,CAACgG,QAAQ;QAEpByP,GAAG,GAAGrM,EAAE,CAAE,CAAC,CAAE;QAAEsM,GAAG,GAAGtM,EAAE,CAAE,CAAC,CAAE;QAAEuM,GAAG,GAAGvM,EAAE,CAAE,CAAC,CAAE;QAC3CwM,GAAG,GAAGxM,EAAE,CAAE,CAAC,CAAE;QAAEyM,GAAG,GAAGzM,EAAE,CAAE,CAAC,CAAE;QAAE0M,GAAG,GAAG1M,EAAE,CAAE,CAAC,CAAE;QAC3C2M,GAAG,GAAG3M,EAAE,CAAE,CAAC,CAAE;QAAE4M,GAAG,GAAG5M,EAAE,CAAE,CAAC,CAAE;QAAE6M,GAAG,GAAG7M,EAAE,CAAE,EAAE,CAAE;QAE5C8R,KAAK,GAAGzF,GAAG,GAAGI,GAAG,GAAGI,GAAG;MAExB,IAAKiF,KAAK,GAAG,CAAC,EAAG;QAEhB,IAAMvZ,CAAC,GAAG,GAAG,GAAG3C,IAAI,CAAC2H,IAAI,CAAEuU,KAAK,GAAG,GAAI,CAAC;QAExC,IAAI,CAACf,EAAE,GAAG,IAAI,GAAGxY,CAAC;QAClB,IAAI,CAACqY,EAAE,GAAG,CAAEhE,GAAG,GAAGF,GAAG,IAAKnU,CAAC;QAC3B,IAAI,CAACsY,EAAE,GAAG,CAAEtE,GAAG,GAAGI,GAAG,IAAKpU,CAAC;QAC3B,IAAI,CAACuY,EAAE,GAAG,CAAEtE,GAAG,GAAGF,GAAG,IAAK/T,CAAC;MAE5B,CAAC,MAAM,IAAK8T,GAAG,GAAGI,GAAG,IAAIJ,GAAG,GAAGQ,GAAG,EAAG;QAEpC,IAAMtU,EAAC,GAAG,GAAG,GAAG3C,IAAI,CAAC2H,IAAI,CAAE,GAAG,GAAG8O,GAAG,GAAGI,GAAG,GAAGI,GAAI,CAAC;QAElD,IAAI,CAACkE,EAAE,GAAG,CAAEnE,GAAG,GAAGF,GAAG,IAAKnU,EAAC;QAC3B,IAAI,CAACqY,EAAE,GAAG,IAAI,GAAGrY,EAAC;QAClB,IAAI,CAACsY,EAAE,GAAG,CAAEvE,GAAG,GAAGE,GAAG,IAAKjU,EAAC;QAC3B,IAAI,CAACuY,EAAE,GAAG,CAAEvE,GAAG,GAAGI,GAAG,IAAKpU,EAAC;MAE5B,CAAC,MAAM,IAAKkU,GAAG,GAAGI,GAAG,EAAG;QAEvB,IAAMtU,GAAC,GAAG,GAAG,GAAG3C,IAAI,CAAC2H,IAAI,CAAE,GAAG,GAAGkP,GAAG,GAAGJ,GAAG,GAAGQ,GAAI,CAAC;QAElD,IAAI,CAACkE,EAAE,GAAG,CAAExE,GAAG,GAAGI,GAAG,IAAKpU,GAAC;QAC3B,IAAI,CAACqY,EAAE,GAAG,CAAEtE,GAAG,GAAGE,GAAG,IAAKjU,GAAC;QAC3B,IAAI,CAACsY,EAAE,GAAG,IAAI,GAAGtY,GAAC;QAClB,IAAI,CAACuY,EAAE,GAAG,CAAEpE,GAAG,GAAGE,GAAG,IAAKrU,GAAC;MAE5B,CAAC,MAAM;QAEN,IAAMA,GAAC,GAAG,GAAG,GAAG3C,IAAI,CAAC2H,IAAI,CAAE,GAAG,GAAGsP,GAAG,GAAGR,GAAG,GAAGI,GAAI,CAAC;QAElD,IAAI,CAACsE,EAAE,GAAG,CAAEvE,GAAG,GAAGF,GAAG,IAAK/T,GAAC;QAC3B,IAAI,CAACqY,EAAE,GAAG,CAAErE,GAAG,GAAGI,GAAG,IAAKpU,GAAC;QAC3B,IAAI,CAACsY,EAAE,GAAG,CAAEnE,GAAG,GAAGE,GAAG,IAAKrU,GAAC;QAC3B,IAAI,CAACuY,EAAE,GAAG,IAAI,GAAGvY,GAAC;MAEnB;MAEA,IAAI,CAACyY,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAizB,mBAAoBC,KAAK,EAAEC,GAAG,EAAG;MAEhC;;MAEA,IAAIlP,CAAC,GAAGiP,KAAK,CAAC5U,GAAG,CAAE6U,GAAI,CAAC,GAAG,CAAC;MAE5B,IAAKlP,CAAC,GAAG5a,MAAM,CAAC+pB,OAAO,EAAG;QAEzB;;QAEAnP,CAAC,GAAG,CAAC;QAEL,IAAKnN,IAAI,CAACgC,GAAG,CAAEoa,KAAK,CAAClb,CAAE,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAEoa,KAAK,CAACrG,CAAE,CAAC,EAAG;UAEhD,IAAI,CAACiF,EAAE,GAAG,CAAEoB,KAAK,CAAC5a,CAAC;UACnB,IAAI,CAACyZ,EAAE,GAAGmB,KAAK,CAAClb,CAAC;UACjB,IAAI,CAACga,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAGhO,CAAC;QAEZ,CAAC,MAAM;UAEN,IAAI,CAAC6N,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAG,CAAEmB,KAAK,CAACrG,CAAC;UACnB,IAAI,CAACmF,EAAE,GAAGkB,KAAK,CAAC5a,CAAC;UACjB,IAAI,CAAC2Z,EAAE,GAAGhO,CAAC;QAEZ;MAED,CAAC,MAAM;QAEN;;QAEA,IAAI,CAAC6N,EAAE,GAAGoB,KAAK,CAAC5a,CAAC,GAAG6a,GAAG,CAACtG,CAAC,GAAGqG,KAAK,CAACrG,CAAC,GAAGsG,GAAG,CAAC7a,CAAC;QAC3C,IAAI,CAACyZ,EAAE,GAAGmB,KAAK,CAACrG,CAAC,GAAGsG,GAAG,CAACnb,CAAC,GAAGkb,KAAK,CAAClb,CAAC,GAAGmb,GAAG,CAACtG,CAAC;QAC3C,IAAI,CAACmF,EAAE,GAAGkB,KAAK,CAAClb,CAAC,GAAGmb,GAAG,CAAC7a,CAAC,GAAG4a,KAAK,CAAC5a,CAAC,GAAG6a,GAAG,CAACnb,CAAC;QAC3C,IAAI,CAACia,EAAE,GAAGhO,CAAC;MAEZ;MAEA,OAAO,IAAI,CAAChI,SAAS,CAAC,CAAC;IAExB;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAA6e,QAAStE,CAAC,EAAG;MAEZ,OAAO,CAAC,GAAGzD,IAAI,CAACkI,IAAI,CAAElI,IAAI,CAACgC,GAAG,CAAErB,KAAK,CAAE,IAAI,CAAC6G,GAAG,CAAE/D,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAE,CAAC;IAEnE;EAAC;IAAAza,GAAA;IAAAE,KAAA,EAED,SAAAqzB,cAAe9Y,CAAC,EAAE+Y,IAAI,EAAG;MAExB,IAAM3U,KAAK,GAAG,IAAI,CAACE,OAAO,CAAEtE,CAAE,CAAC;MAE/B,IAAKoE,KAAK,KAAK,CAAC,EAAG,OAAO,IAAI;MAE9B,IAAMnG,CAAC,GAAG1B,IAAI,CAACY,GAAG,CAAE,CAAC,EAAE4b,IAAI,GAAG3U,KAAM,CAAC;MAErC,IAAI,CAAC4U,KAAK,CAAEhZ,CAAC,EAAE/B,CAAE,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAAmhB,SAAA,EAAW;MAEV,OAAO,IAAI,CAAC7F,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE9B;EAAC;IAAAxb,GAAA;IAAAE,KAAA,EAED,SAAAsjB,OAAA,EAAS;MAER;;MAEA,OAAO,IAAI,CAACkQ,SAAS,CAAC,CAAC;IAExB;EAAC;IAAA1zB,GAAA;IAAAE,KAAA,EAED,SAAAwzB,UAAA,EAAY;MAEX,IAAI,CAAC1B,EAAE,IAAI,CAAE,CAAC;MACd,IAAI,CAACC,EAAE,IAAI,CAAE,CAAC;MACd,IAAI,CAACC,EAAE,IAAI,CAAE,CAAC;MAEd,IAAI,CAACE,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAse,IAAKtB,CAAC,EAAG;MAER,OAAO,IAAI,CAAC8U,EAAE,GAAG9U,CAAC,CAAC8U,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG/U,CAAC,CAAC+U,EAAE,GAAG,IAAI,CAACC,EAAE,GAAGhV,CAAC,CAACgV,EAAE,GAAG,IAAI,CAACC,EAAE,GAAGjV,CAAC,CAACiV,EAAE;IAEzE;EAAC;IAAAnyB,GAAA;IAAAE,KAAA,EAED,SAAAwe,SAAA,EAAW;MAEV,OAAO,IAAI,CAACsT,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE;IAErF;EAAC;IAAAnyB,GAAA;IAAAE,KAAA,EAED,SAAA2F,OAAA,EAAS;MAER,OAAOmR,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACqT,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAG,CAAC;IAElG;EAAC;IAAAnyB,GAAA;IAAAE,KAAA,EAED,SAAAic,UAAA,EAAY;MAEX,IAAIvF,CAAC,GAAG,IAAI,CAAC/Q,MAAM,CAAC,CAAC;MAErB,IAAK+Q,CAAC,KAAK,CAAC,EAAG;QAEd,IAAI,CAACob,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;MAEZ,CAAC,MAAM;QAENvb,CAAC,GAAG,CAAC,GAAGA,CAAC;QAET,IAAI,CAACob,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGpb,CAAC;QACrB,IAAI,CAACqb,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGrb,CAAC;QACrB,IAAI,CAACsb,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGtb,CAAC;QACrB,IAAI,CAACub,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGvb,CAAC;MAEtB;MAEA,IAAI,CAACwb,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAUjD,CAAC,EAAG;MAEb,OAAO,IAAI,CAACkZ,mBAAmB,CAAE,IAAI,EAAElZ,CAAE,CAAC;IAE3C;EAAC;IAAAza,GAAA;IAAAE,KAAA,EAED,SAAA4hB,YAAarH,CAAC,EAAG;MAEhB,OAAO,IAAI,CAACkZ,mBAAmB,CAAElZ,CAAC,EAAE,IAAK,CAAC;IAE3C;EAAC;IAAAza,GAAA;IAAAE,KAAA,EAED,SAAAyzB,oBAAqBjZ,CAAC,EAAEC,CAAC,EAAG;MAE3B;;MAEA,IAAMiZ,GAAG,GAAGlZ,CAAC,CAACsX,EAAE;QAAE6B,GAAG,GAAGnZ,CAAC,CAACuX,EAAE;QAAE6B,GAAG,GAAGpZ,CAAC,CAACwX,EAAE;QAAE6B,GAAG,GAAGrZ,CAAC,CAACyX,EAAE;MACpD,IAAM6B,GAAG,GAAGrZ,CAAC,CAACqX,EAAE;QAAEiC,GAAG,GAAGtZ,CAAC,CAACsX,EAAE;QAAEiC,GAAG,GAAGvZ,CAAC,CAACuX,EAAE;QAAEiC,GAAG,GAAGxZ,CAAC,CAACwX,EAAE;MAEpD,IAAI,CAACH,EAAE,GAAG4B,GAAG,GAAGO,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG;MACvD,IAAI,CAAChC,EAAE,GAAG4B,GAAG,GAAGM,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGM,GAAG;MACvD,IAAI,CAAChC,EAAE,GAAG4B,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGN,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG;MACvD,IAAI,CAAC7B,EAAE,GAAG4B,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG;MAEvD,IAAI,CAAC9B,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAuzB,MAAOW,EAAE,EAAE1b,CAAC,EAAG;MAEd,IAAKA,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI;MAC1B,IAAKA,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI,CAACuE,IAAI,CAAEmX,EAAG,CAAC;MAErC,IAAMlc,CAAC,GAAG,IAAI,CAAC8Z,EAAE;QAAExZ,CAAC,GAAG,IAAI,CAACyZ,EAAE;QAAElF,CAAC,GAAG,IAAI,CAACmF,EAAE;QAAElF,CAAC,GAAG,IAAI,CAACmF,EAAE;;MAExD;;MAEA,IAAIkC,YAAY,GAAGrH,CAAC,GAAGoH,EAAE,CAACjC,EAAE,GAAGja,CAAC,GAAGkc,EAAE,CAACpC,EAAE,GAAGxZ,CAAC,GAAG4b,EAAE,CAACnC,EAAE,GAAGlF,CAAC,GAAGqH,EAAE,CAAClC,EAAE;MAEhE,IAAKmC,YAAY,GAAG,CAAC,EAAG;QAEvB,IAAI,CAAClC,EAAE,GAAG,CAAEiC,EAAE,CAACjC,EAAE;QACjB,IAAI,CAACH,EAAE,GAAG,CAAEoC,EAAE,CAACpC,EAAE;QACjB,IAAI,CAACC,EAAE,GAAG,CAAEmC,EAAE,CAACnC,EAAE;QACjB,IAAI,CAACC,EAAE,GAAG,CAAEkC,EAAE,CAAClC,EAAE;QAEjBmC,YAAY,GAAG,CAAEA,YAAY;MAE9B,CAAC,MAAM;QAEN,IAAI,CAACpX,IAAI,CAAEmX,EAAG,CAAC;MAEhB;MAEA,IAAKC,YAAY,IAAI,GAAG,EAAG;QAE1B,IAAI,CAAClC,EAAE,GAAGnF,CAAC;QACX,IAAI,CAACgF,EAAE,GAAG9Z,CAAC;QACX,IAAI,CAAC+Z,EAAE,GAAGzZ,CAAC;QACX,IAAI,CAAC0Z,EAAE,GAAGnF,CAAC;QAEX,OAAO,IAAI;MAEZ;MAEA,IAAMuH,eAAe,GAAG,GAAG,GAAGD,YAAY,GAAGA,YAAY;MAEzD,IAAKC,eAAe,IAAI/qB,MAAM,CAAC+pB,OAAO,EAAG;QAExC,IAAM3Z,CAAC,GAAG,CAAC,GAAGjB,CAAC;QACf,IAAI,CAACyZ,EAAE,GAAGxY,CAAC,GAAGqT,CAAC,GAAGtU,CAAC,GAAG,IAAI,CAACyZ,EAAE;QAC7B,IAAI,CAACH,EAAE,GAAGrY,CAAC,GAAGzB,CAAC,GAAGQ,CAAC,GAAG,IAAI,CAACsZ,EAAE;QAC7B,IAAI,CAACC,EAAE,GAAGtY,CAAC,GAAGnB,CAAC,GAAGE,CAAC,GAAG,IAAI,CAACuZ,EAAE;QAC7B,IAAI,CAACC,EAAE,GAAGvY,CAAC,GAAGoT,CAAC,GAAGrU,CAAC,GAAG,IAAI,CAACwZ,EAAE;QAE7B,IAAI,CAAC/V,SAAS,CAAC,CAAC;QAChB,IAAI,CAACiW,iBAAiB,CAAC,CAAC;QAExB,OAAO,IAAI;MAEZ;MAEA,IAAMmC,YAAY,GAAGvd,IAAI,CAAC2H,IAAI,CAAE2V,eAAgB,CAAC;MACjD,IAAME,SAAS,GAAGxd,IAAI,CAAC8H,KAAK,CAAEyV,YAAY,EAAEF,YAAa,CAAC;MAC1D,IAAMI,MAAM,GAAGzd,IAAI,CAAC+D,GAAG,CAAE,CAAE,CAAC,GAAGrC,CAAC,IAAK8b,SAAU,CAAC,GAAGD,YAAY;QAC9DG,MAAM,GAAG1d,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAG8b,SAAU,CAAC,GAAGD,YAAY;MAElD,IAAI,CAACpC,EAAE,GAAKnF,CAAC,GAAGyH,MAAM,GAAG,IAAI,CAACtC,EAAE,GAAGuC,MAAQ;MAC3C,IAAI,CAAC1C,EAAE,GAAK9Z,CAAC,GAAGuc,MAAM,GAAG,IAAI,CAACzC,EAAE,GAAG0C,MAAQ;MAC3C,IAAI,CAACzC,EAAE,GAAKzZ,CAAC,GAAGic,MAAM,GAAG,IAAI,CAACxC,EAAE,GAAGyC,MAAQ;MAC3C,IAAI,CAACxC,EAAE,GAAKnF,CAAC,GAAG0H,MAAM,GAAG,IAAI,CAACvC,EAAE,GAAGwC,MAAQ;MAE3C,IAAI,CAACtC,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAy0B,iBAAkBC,EAAE,EAAER,EAAE,EAAE1b,CAAC,EAAG;MAE7B,OAAO,IAAI,CAACuE,IAAI,CAAE2X,EAAG,CAAC,CAACnB,KAAK,CAAEW,EAAE,EAAE1b,CAAE,CAAC;IAEtC;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAAmX,OAAA,EAAS;MAER;MACA;MACA;;MAEA,IAAMwd,EAAE,GAAG7d,IAAI,CAACK,MAAM,CAAC,CAAC;MACxB,IAAMyd,OAAO,GAAG9d,IAAI,CAAC2H,IAAI,CAAE,CAAC,GAAGkW,EAAG,CAAC;MACnC,IAAME,MAAM,GAAG/d,IAAI,CAAC2H,IAAI,CAAEkW,EAAG,CAAC;MAE9B,IAAMG,EAAE,GAAG,CAAC,GAAGhe,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtC,IAAM4d,EAAE,GAAG,CAAC,GAAGje,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtC,OAAO,IAAI,CAACmE,GAAG,CACdsZ,OAAO,GAAG9d,IAAI,CAAC8D,GAAG,CAAEka,EAAG,CAAC,EACxBD,MAAM,GAAG/d,IAAI,CAAC+D,GAAG,CAAEka,EAAG,CAAC,EACvBF,MAAM,GAAG/d,IAAI,CAAC8D,GAAG,CAAEma,EAAG,CAAC,EACvBH,OAAO,GAAG9d,IAAI,CAAC+D,GAAG,CAAEia,EAAG,CACxB,CAAC;IAEF;EAAC;IAAAh1B,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQwS,UAAU,EAAG;MAEpB,OAASA,UAAU,CAACL,EAAE,KAAK,IAAI,CAACA,EAAE,IAAQK,UAAU,CAACJ,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMI,UAAU,CAACH,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMG,UAAU,CAACF,EAAE,KAAK,IAAI,CAACA,EAAI;IAExI;EAAC;IAAAnyB,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACiS,EAAE,GAAGrb,KAAK,CAAEoJ,MAAM,CAAE;MACzB,IAAI,CAACkS,EAAE,GAAGtb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAC7B,IAAI,CAACmS,EAAE,GAAGvb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAC7B,IAAI,CAACoS,EAAE,GAAGxb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAE7B,IAAI,CAACqS,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjCpJ,KAAK,CAAEoJ,MAAM,CAAE,GAAG,IAAI,CAACiS,EAAE;MACzBrb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACkS,EAAE;MAC7Btb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACmS,EAAE;MAC7Bvb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACoS,EAAE;MAE7B,OAAOxb,KAAK;IAEb;EAAC;IAAA3W,GAAA;IAAAE,KAAA,EAED,SAAA+f,oBAAqBC,SAAS,EAAE3J,KAAK,EAAG;MAEvC,IAAI,CAACyb,EAAE,GAAG9R,SAAS,CAACC,IAAI,CAAE5J,KAAM,CAAC;MACjC,IAAI,CAAC0b,EAAE,GAAG/R,SAAS,CAACE,IAAI,CAAE7J,KAAM,CAAC;MACjC,IAAI,CAAC2b,EAAE,GAAGhS,SAAS,CAACsO,IAAI,CAAEjY,KAAM,CAAC;MACjC,IAAI,CAAC4b,EAAE,GAAGjS,SAAS,CAACuO,IAAI,CAAElY,KAAM,CAAC;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,OAAO,IAAI,CAACtJ,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAAhgB,GAAA;IAAAE,KAAA,EAED,SAAAg1B,UAAWC,QAAQ,EAAG;MAErB,IAAI,CAAC/C,iBAAiB,GAAG+C,QAAQ;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAn1B,GAAA;IAAAE,KAAA,EAED,SAAAkyB,kBAAA,EAAoB,CAAC;EAAC;IAAApyB,GAAA,EAAA8xB,iBAAA;IAAA5xB,KAAA,eAAAX,mBAAA,GAAA8G,IAAA,CAEtB,SAAAnG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAuf,OAAA6U,SAAA;QAAA,kBAAAA,SAAA,CAAAluB,IAAA,GAAAkuB,SAAA,CAAAxwB,IAAA;UAAA;YAAAwwB,SAAA,CAAAxwB,IAAA;YAEC,OAAM,IAAI,CAACotB,EAAE;UAAA;YAAAoD,SAAA,CAAAxwB,IAAA;YACb,OAAM,IAAI,CAACqtB,EAAE;UAAA;YAAAmD,SAAA,CAAAxwB,IAAA;YACb,OAAM,IAAI,CAACstB,EAAE;UAAA;YAAAkD,SAAA,CAAAxwB,IAAA;YACb,OAAM,IAAI,CAACutB,EAAE;UAAA;UAAA;YAAA,OAAAiD,SAAA,CAAA/tB,IAAA;QAAA;MAAA,GAAAnH,KAAA;IAAA,CAEb;EAAA;IAAAF,GAAA;IAAAE,KAAA,EAxpBD,SAAAm1B,UAAkBC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAEjd,CAAC,EAAG;MAEzE;;MAEA,IAAIkd,EAAE,GAAGJ,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC9BI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAE5B,IAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAChCM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAE5B,IAAKjd,CAAC,KAAK,CAAC,EAAG;QAEd4c,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGK,EAAE;QACzBN,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE;QACzBP,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE;QACzBR,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE;QACzB;MAED;MAEA,IAAKrd,CAAC,KAAK,CAAC,EAAG;QAEd4c,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGS,EAAE;QACzBV,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGU,EAAE;QACzBX,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGW,EAAE;QACzBZ,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGY,EAAE;QACzB;MAED;MAEA,IAAKJ,EAAE,KAAKI,EAAE,IAAIP,EAAE,KAAKI,EAAE,IAAIH,EAAE,KAAKI,EAAE,IAAIH,EAAE,KAAKI,EAAE,EAAG;QAEvD,IAAIvc,CAAC,GAAG,CAAC,GAAGjB,CAAC;QACb,IAAMoC,GAAG,GAAG8a,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE;UAChDC,GAAG,GAAKtb,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAG;UAC5Bub,MAAM,GAAG,CAAC,GAAGvb,GAAG,GAAGA,GAAG;;QAEvB;QACA,IAAKub,MAAM,GAAG9sB,MAAM,CAAC+pB,OAAO,EAAG;UAE9B,IAAMvY,GAAG,GAAG/D,IAAI,CAAC2H,IAAI,CAAE0X,MAAO,CAAC;YAC9BC,GAAG,GAAGtf,IAAI,CAAC8H,KAAK,CAAE/D,GAAG,EAAED,GAAG,GAAGsb,GAAI,CAAC;UAEnCzc,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEpB,CAAC,GAAG2c,GAAI,CAAC,GAAGvb,GAAG;UAC7BrC,CAAC,GAAG1B,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAG4d,GAAI,CAAC,GAAGvb,GAAG;QAE9B;QAEA,IAAMwb,IAAI,GAAG7d,CAAC,GAAG0d,GAAG;QAEpBR,EAAE,GAAGA,EAAE,GAAGjc,CAAC,GAAGqc,EAAE,GAAGO,IAAI;QACvBV,EAAE,GAAGA,EAAE,GAAGlc,CAAC,GAAGsc,EAAE,GAAGM,IAAI;QACvBT,EAAE,GAAGA,EAAE,GAAGnc,CAAC,GAAGuc,EAAE,GAAGK,IAAI;QACvBR,EAAE,GAAGA,EAAE,GAAGpc,CAAC,GAAGwc,EAAE,GAAGI,IAAI;;QAEvB;QACA,IAAK5c,CAAC,KAAK,CAAC,GAAGjB,CAAC,EAAG;UAElB,IAAM2K,CAAC,GAAG,CAAC,GAAGrM,IAAI,CAAC2H,IAAI,CAAEiX,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAG,CAAC;UAEhEH,EAAE,IAAIvS,CAAC;UACPwS,EAAE,IAAIxS,CAAC;UACPyS,EAAE,IAAIzS,CAAC;UACP0S,EAAE,IAAI1S,CAAC;QAER;MAED;MAEAiS,GAAG,CAAEC,SAAS,CAAE,GAAGK,EAAE;MACrBN,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE;MACzBP,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE;MACzBR,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE;IAE1B;EAAC;IAAA/1B,GAAA;IAAAE,KAAA,EAED,SAAAs2B,wBAAgClB,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAG;MAEpF,IAAMC,EAAE,GAAGJ,IAAI,CAAEC,UAAU,CAAE;MAC7B,IAAMI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAEjC,IAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,CAAE;MAC7B,IAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAEjCL,GAAG,CAAEC,SAAS,CAAE,GAAGK,EAAE,GAAGO,EAAE,GAAGJ,EAAE,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE;MACxDX,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE,GAAGM,EAAE,GAAGJ,EAAE,GAAGE,EAAE,GAAGH,EAAE,GAAGE,EAAE,GAAGJ,EAAE,GAAGM,EAAE;MAC5DZ,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE,GAAGN,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE;MAC5DV,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE,GAAGI,EAAE,GAAGP,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE;MAE5D,OAAOZ,GAAG;IAEX;EAAC;EAAA,OAAAzD,UAAA;AAAA,EA8iBEzxB,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAAqyB,UAAA,GAAAA,UAAA;AAAA,IAWb4E,OAAO,0BAAAC,iBAAA;EAEZ,SAAAD,QAAave,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAEuU,CAAC,GAAG,CAAC,EAAG;IAAA1kB,eAAA,OAAAouB,OAAA;IAElCA,OAAO,CAAC92B,SAAS,CAACg3B,SAAS,GAAG,IAAI;IAElC,IAAI,CAACze,CAAC,GAAGA,CAAC;IACV,IAAI,CAACM,CAAC,GAAGA,CAAC;IACV,IAAI,CAACuU,CAAC,GAAGA,CAAC;EAEX;EAAClkB,YAAA,CAAA4tB,OAAA;IAAAz2B,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKtD,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAEd,IAAKA,CAAC,KAAKxoB,SAAS,EAAGwoB,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC,CAAC;;MAEnC,IAAI,CAAC7U,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;MACV,IAAI,CAACuU,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAwc,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACzE,CAAC,GAAGyE,MAAM;MACf,IAAI,CAACnE,CAAC,GAAGmE,MAAM;MACf,IAAI,CAACoQ,CAAC,GAAGpQ,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA0c,KAAM1E,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAA2c,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAgtB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA4c,aAAcvG,KAAK,EAAErW,KAAK,EAAG;MAE5B,QAASqW,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAAC2B,CAAC,GAAGhY,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACsY,CAAC,GAAGtY,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAAC6sB,CAAC,GAAG7sB,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAG0S,KAAM,CAAC;MAE9D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA6c,aAAcxG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAAC2B,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACM,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACuU,CAAC;QACrB;UAAS,MAAM,IAAIlpB,KAAK,CAAE,yBAAyB,GAAG0S,KAAM,CAAC;MAE9D;IAED;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAAC+R,CAAC,EAAE,IAAI,CAACM,CAAC,EAAE,IAAI,CAACuU,CAAE,CAAC;IAEtD;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMC,CAAC,EAAG;MAET,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC;MACZ,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;MACZ,IAAI,CAACuU,CAAC,GAAG7P,CAAC,CAAC6P,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAKD,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAACuU,CAAC,IAAI7P,CAAC,CAAC6P,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAkd,UAAWzD,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MACX,IAAI,CAACoT,CAAC,IAAIpT,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAmd,WAAY3C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAACuU,CAAC,GAAGrS,CAAC,CAACqS,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAod,gBAAiBJ,CAAC,EAAEvD,CAAC,EAAG;MAEvB,IAAI,CAACzB,CAAC,IAAIgF,CAAC,CAAChF,CAAC,GAAGyB,CAAC;MACjB,IAAI,CAACnB,CAAC,IAAI0E,CAAC,CAAC1E,CAAC,GAAGmB,CAAC;MACjB,IAAI,CAACoT,CAAC,IAAI7P,CAAC,CAAC6P,CAAC,GAAGpT,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAqd,IAAKL,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAACuU,CAAC,IAAI7P,CAAC,CAAC6P,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAsd,UAAW7D,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MACX,IAAI,CAACoT,CAAC,IAAIpT,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAud,WAAY/C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAACuU,CAAC,GAAGrS,CAAC,CAACqS,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAUR,CAAC,EAAG;MAEb,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAACuU,CAAC,IAAI7P,CAAC,CAAC6P,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAyd,eAAgBhB,MAAM,EAAG;MAExB,IAAI,CAACzE,CAAC,IAAIyE,MAAM;MAChB,IAAI,CAACnE,CAAC,IAAImE,MAAM;MAChB,IAAI,CAACoQ,CAAC,IAAIpQ,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA02B,gBAAiBlc,CAAC,EAAEC,CAAC,EAAG;MAEvB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAACuU,CAAC,GAAGrS,CAAC,CAACqS,CAAC,GAAGpS,CAAC,CAACoS,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA22B,WAAYtE,KAAK,EAAG;MAEnB,OAAO,IAAI,CAACuE,eAAe,CAAEC,aAAa,CAACzE,YAAY,CAAEC,KAAM,CAAE,CAAC;IAEnE;EAAC;IAAAvyB,GAAA;IAAAE,KAAA,EAED,SAAA82B,eAAgBjE,IAAI,EAAElU,KAAK,EAAG;MAE7B,OAAO,IAAI,CAACiY,eAAe,CAAEC,aAAa,CAACjE,gBAAgB,CAAEC,IAAI,EAAElU,KAAM,CAAE,CAAC;IAE7E;EAAC;IAAA7e,GAAA;IAAAE,KAAA,EAED,SAAA4d,aAAc9F,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEuU,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMhP,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC;MAC7C,IAAI,CAACvU,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC;MAC7C,IAAI,CAACA,CAAC,GAAGhP,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+2B,kBAAmBjf,CAAC,EAAG;MAEtB,OAAO,IAAI,CAAC8F,YAAY,CAAE9F,CAAE,CAAC,CAACmE,SAAS,CAAC,CAAC;IAE1C;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcpV,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEuU,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMhP,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAMgP,CAAC,GAAG,CAAC,IAAKjP,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE,CAAE;MAEjE,IAAI,CAAC7F,CAAC,GAAG,CAAE6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE,IAAKiP,CAAC;MAC/D,IAAI,CAACxU,CAAC,GAAG,CAAEuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE,IAAKiP,CAAC;MAC/D,IAAI,CAACD,CAAC,GAAG,CAAEhP,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE,IAAKiP,CAAC;MAEhE,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA42B,gBAAiBrc,CAAC,EAAG;MAEpB,IAAMvC,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEuU,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMmK,EAAE,GAAGzc,CAAC,CAACvC,CAAC;QAAEif,EAAE,GAAG1c,CAAC,CAACjC,CAAC;QAAE4e,EAAE,GAAG3c,CAAC,CAACsS,CAAC;QAAEsK,EAAE,GAAG5c,CAAC,CAACuS,CAAC;;MAE5C;;MAEA,IAAMsK,EAAE,GAAGD,EAAE,GAAGnf,CAAC,GAAGif,EAAE,GAAGpK,CAAC,GAAGqK,EAAE,GAAG5e,CAAC;MACnC,IAAM+e,EAAE,GAAGF,EAAE,GAAG7e,CAAC,GAAG4e,EAAE,GAAGlf,CAAC,GAAGgf,EAAE,GAAGnK,CAAC;MACnC,IAAMyK,EAAE,GAAGH,EAAE,GAAGtK,CAAC,GAAGmK,EAAE,GAAG1e,CAAC,GAAG2e,EAAE,GAAGjf,CAAC;MACnC,IAAMuf,EAAE,GAAG,CAAEP,EAAE,GAAGhf,CAAC,GAAGif,EAAE,GAAG3e,CAAC,GAAG4e,EAAE,GAAGrK,CAAC;;MAErC;;MAEA,IAAI,CAAC7U,CAAC,GAAGof,EAAE,GAAGD,EAAE,GAAGI,EAAE,GAAG,CAAEP,EAAE,GAAGK,EAAE,GAAG,CAAEH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE;MACpD,IAAI,CAAC3e,CAAC,GAAG+e,EAAE,GAAGF,EAAE,GAAGI,EAAE,GAAG,CAAEN,EAAE,GAAGK,EAAE,GAAG,CAAEN,EAAE,GAAGI,EAAE,GAAG,CAAEF,EAAE;MACpD,IAAI,CAACrK,CAAC,GAAGyK,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE,GAAGE,EAAE,GAAG,CAAEH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE;MAEpD,OAAO,IAAI;IAEZ;EAAC;IAAAl3B,GAAA;IAAAE,KAAA,EAED,SAAAw3B,QAASC,MAAM,EAAG;MAEjB,OAAO,IAAI,CAACvK,YAAY,CAAEuK,MAAM,CAACC,kBAAmB,CAAC,CAACxK,YAAY,CAAEuK,MAAM,CAACE,gBAAiB,CAAC;IAE9F;EAAC;IAAA73B,GAAA;IAAAE,KAAA,EAED,SAAA43B,UAAWH,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACvK,YAAY,CAAEuK,MAAM,CAACI,uBAAwB,CAAC,CAAC3K,YAAY,CAAEuK,MAAM,CAACK,WAAY,CAAC;IAE9F;EAAC;IAAAh4B,GAAA;IAAAE,KAAA,EAED,SAAA+3B,mBAAoBjgB,CAAC,EAAG;MAEvB;MACA;;MAEA,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEuU,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMhP,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC;MAC7C,IAAI,CAACvU,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGgP,CAAC;MAC7C,IAAI,CAACA,CAAC,GAAGhP,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGgP,CAAC;MAE9C,OAAO,IAAI,CAAC5Q,SAAS,CAAC,CAAC;IAExB;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAA0d,OAAQV,CAAC,EAAG;MAEX,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAACuU,CAAC,IAAI7P,CAAC,CAAC6P,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA2d,aAAclB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAO,CAAC;IAEzC;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA0X,IAAKsF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAEgF,CAAC,CAAChF,CAAE,CAAC;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAE0E,CAAC,CAAC1E,CAAE,CAAC;MAChC,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACY,GAAG,CAAE,IAAI,CAACmV,CAAC,EAAE7P,CAAC,CAAC6P,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA2X,IAAKqF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEgF,CAAC,CAAChF,CAAE,CAAC;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAE0E,CAAC,CAAC1E,CAAE,CAAC;MAChC,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACa,GAAG,CAAE,IAAI,CAACkV,CAAC,EAAE7P,CAAC,CAAC6P,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAyX,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MACrD,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACa,GAAG,CAAED,GAAG,CAACmV,CAAC,EAAE/V,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACkV,CAAC,EAAE,IAAI,CAACA,CAAE,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+d,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAACjG,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACjG,CAAE,CAAE,CAAC;MACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC3F,CAAE,CAAE,CAAC;MACvD,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC4O,CAAE,CAAE,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAke,YAAaxG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMhS,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;MAE5B,OAAO,IAAI,CAACgY,YAAY,CAAEhY,MAAM,IAAI,CAAE,CAAC,CAAC8X,cAAc,CAAE3G,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEhS,MAAO,CAAE,CAAE,CAAC;IAEnG;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAoZ,MAAA,EAAQ;MAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAE,CAAC;MAC7B,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACyT,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAka,KAAA,EAAO;MAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAE,CAAC;MAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAE,CAAC;MAC5B,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC2S,CAAE,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAkc,MAAA,EAAQ;MAEP,IAAI,CAAClE,CAAC,GAAGlB,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAClE,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAC5D,CAAE,CAAC;MAC7B,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACoF,KAAK,CAAE,IAAI,CAAC2Q,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAme,YAAA,EAAc;MAEb,IAAI,CAACnG,CAAC,GAAGlB,IAAI,CAACsH,KAAK,CAAE,IAAI,CAACpG,CAAE,CAAC;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsH,KAAK,CAAE,IAAI,CAAC9F,CAAE,CAAC;MAC7B,IAAI,CAACuU,CAAC,GAAG/V,IAAI,CAACsH,KAAK,CAAE,IAAI,CAACyO,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAqe,OAAA,EAAS;MAER,IAAI,CAACrG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACuU,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAse,IAAKtB,CAAC,EAAG;MAER,OAAO,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACuU,CAAC,GAAG7P,CAAC,CAAC6P,CAAC;IAElD;;IAEA;EAAA;IAAA/sB,GAAA;IAAAE,KAAA,EAEA,SAAAwe,SAAA,EAAW;MAEV,OAAO,IAAI,CAACxG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACuU,CAAC,GAAG,IAAI,CAACA,CAAC;IAE3D;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA2F,OAAA,EAAS;MAER,OAAOmR,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACzG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACuU,CAAC,GAAG,IAAI,CAACA,CAAE,CAAC;IAExE;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA0e,gBAAA,EAAkB;MAEjB,OAAO5H,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAE,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAE,CAAC,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAAC+T,CAAE,CAAC;IAEpE;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAic,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC0B,YAAY,CAAE,IAAI,CAAChY,MAAM,CAAC,CAAC,IAAI,CAAE,CAAC;IAE/C;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAsf,UAAW3Z,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACsW,SAAS,CAAC,CAAC,CAACwB,cAAc,CAAE9X,MAAO,CAAC;IAEjD;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAuY,KAAMyE,CAAC,EAAEuC,KAAK,EAAG;MAEhB,IAAI,CAACvH,CAAC,IAAI,CAAEgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKuH,KAAK;MAClC,IAAI,CAACjH,CAAC,IAAI,CAAE0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKiH,KAAK;MAClC,IAAI,CAACsN,CAAC,IAAI,CAAE7P,CAAC,CAAC6P,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKtN,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAAwf,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAACvH,CAAC,GAAGyH,EAAE,CAACzH,CAAC,GAAG,CAAE0H,EAAE,CAAC1H,CAAC,GAAGyH,EAAE,CAACzH,CAAC,IAAKuH,KAAK;MACvC,IAAI,CAACjH,CAAC,GAAGmH,EAAE,CAACnH,CAAC,GAAG,CAAEoH,EAAE,CAACpH,CAAC,GAAGmH,EAAE,CAACnH,CAAC,IAAKiH,KAAK;MACvC,IAAI,CAACsN,CAAC,GAAGpN,EAAE,CAACoN,CAAC,GAAG,CAAEnN,EAAE,CAACmN,CAAC,GAAGpN,EAAE,CAACoN,CAAC,IAAKtN,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAAue,MAAOvB,CAAC,EAAG;MAEV,OAAO,IAAI,CAACgb,YAAY,CAAE,IAAI,EAAEhb,CAAE,CAAC;IAEpC;EAAC;IAAAld,GAAA;IAAAE,KAAA,EAED,SAAAg4B,aAAcxd,CAAC,EAAEC,CAAC,EAAG;MAEpB,IAAMwd,EAAE,GAAGzd,CAAC,CAACxC,CAAC;QAAEkgB,EAAE,GAAG1d,CAAC,CAAClC,CAAC;QAAE6f,EAAE,GAAG3d,CAAC,CAACqS,CAAC;MAClC,IAAMuL,EAAE,GAAG3d,CAAC,CAACzC,CAAC;QAAEqgB,EAAE,GAAG5d,CAAC,CAACnC,CAAC;QAAEggB,EAAE,GAAG7d,CAAC,CAACoS,CAAC;MAElC,IAAI,CAAC7U,CAAC,GAAGkgB,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;MAC1B,IAAI,CAAC/f,CAAC,GAAG6f,EAAE,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE;MAC1B,IAAI,CAACzL,CAAC,GAAGoL,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;MAE1B,OAAO,IAAI;IAEZ;EAAC;IAAAt4B,GAAA;IAAAE,KAAA,EAED,SAAAu4B,gBAAiBvb,CAAC,EAAG;MAEpB,IAAM8B,WAAW,GAAG9B,CAAC,CAACwB,QAAQ,CAAC,CAAC;MAEhC,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAO,IAAI,CAACxD,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEnD,IAAMmB,MAAM,GAAGO,CAAC,CAACsB,GAAG,CAAE,IAAK,CAAC,GAAGQ,WAAW;MAE1C,OAAO,IAAI,CAAC/B,IAAI,CAAEC,CAAE,CAAC,CAACS,cAAc,CAAEhB,MAAO,CAAC;IAE/C;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAAw4B,eAAgBC,WAAW,EAAG;MAE7BC,SAAS,CAAC3b,IAAI,CAAE,IAAK,CAAC,CAACwb,eAAe,CAAEE,WAAY,CAAC;MAErD,OAAO,IAAI,CAACpb,GAAG,CAAEqb,SAAU,CAAC;IAE7B;EAAC;IAAA54B,GAAA;IAAAE,KAAA,EAED,SAAA24B,QAASC,MAAM,EAAG;MAEjB;MACA;;MAEA,OAAO,IAAI,CAACvb,GAAG,CAAEqb,SAAS,CAAC3b,IAAI,CAAE6b,MAAO,CAAC,CAACnb,cAAc,CAAE,CAAC,GAAG,IAAI,CAACa,GAAG,CAAEsa,MAAO,CAAE,CAAE,CAAC;IAErF;EAAC;IAAA94B,GAAA;IAAAE,KAAA,EAED,SAAA6e,QAAS7B,CAAC,EAAG;MAEZ,IAAM8B,WAAW,GAAGhI,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACD,QAAQ,CAAC,CAAC,GAAGxB,CAAC,CAACwB,QAAQ,CAAC,CAAE,CAAC;MAE/D,IAAKM,WAAW,KAAK,CAAC,EAAG,OAAOhI,IAAI,CAACC,EAAE,GAAG,CAAC;MAE3C,IAAMgI,KAAK,GAAG,IAAI,CAACT,GAAG,CAAEtB,CAAE,CAAC,GAAG8B,WAAW;;MAEzC;;MAEA,OAAOhI,IAAI,CAACkI,IAAI,CAAEvH,KAAK,CAAEsH,KAAK,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;IAE3C;EAAC;IAAAjf,GAAA;IAAAE,KAAA,EAED,SAAAif,WAAYjC,CAAC,EAAG;MAEf,OAAOlG,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACS,iBAAiB,CAAElC,CAAE,CAAE,CAAC;IAEhD;EAAC;IAAAld,GAAA;IAAAE,KAAA,EAED,SAAAkf,kBAAmBlC,CAAC,EAAG;MAEtB,IAAMmC,EAAE,GAAG,IAAI,CAACnH,CAAC,GAAGgF,CAAC,CAAChF,CAAC;QAAEoH,EAAE,GAAG,IAAI,CAAC9G,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;QAAEugB,EAAE,GAAG,IAAI,CAAChM,CAAC,GAAG7P,CAAC,CAAC6P,CAAC;MAE7D,OAAO1N,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGyZ,EAAE,GAAGA,EAAE;IAEnC;EAAC;IAAA/4B,GAAA;IAAAE,KAAA,EAED,SAAAqf,oBAAqBrC,CAAC,EAAG;MAExB,OAAOlG,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,GAAGgF,CAAC,CAAChF,CAAE,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,GAAG0E,CAAC,CAAC1E,CAAE,CAAC,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAAC+T,CAAC,GAAG7P,CAAC,CAAC6P,CAAE,CAAC;IAEtF;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA84B,iBAAkBrf,CAAC,EAAG;MAErB,OAAO,IAAI,CAACsf,sBAAsB,CAAEtf,CAAC,CAACuf,MAAM,EAAEvf,CAAC,CAACwf,GAAG,EAAExf,CAAC,CAACsF,KAAM,CAAC;IAE/D;EAAC;IAAAjf,GAAA;IAAAE,KAAA,EAED,SAAA+4B,uBAAwBC,MAAM,EAAEC,GAAG,EAAEla,KAAK,EAAG;MAE5C,IAAMma,YAAY,GAAGpiB,IAAI,CAAC+D,GAAG,CAAEoe,GAAI,CAAC,GAAGD,MAAM;MAE7C,IAAI,CAAChhB,CAAC,GAAGkhB,YAAY,GAAGpiB,IAAI,CAAC+D,GAAG,CAAEkE,KAAM,CAAC;MACzC,IAAI,CAACzG,CAAC,GAAGxB,IAAI,CAAC8D,GAAG,CAAEqe,GAAI,CAAC,GAAGD,MAAM;MACjC,IAAI,CAACnM,CAAC,GAAGqM,YAAY,GAAGpiB,IAAI,CAAC8D,GAAG,CAAEmE,KAAM,CAAC;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAjf,GAAA;IAAAE,KAAA,EAED,SAAAm5B,mBAAoBze,CAAC,EAAG;MAEvB,OAAO,IAAI,CAAC0e,wBAAwB,CAAE1e,CAAC,CAACse,MAAM,EAAEte,CAAC,CAACqE,KAAK,EAAErE,CAAC,CAACpC,CAAE,CAAC;IAE/D;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAo5B,yBAA0BJ,MAAM,EAAEja,KAAK,EAAEzG,CAAC,EAAG;MAE5C,IAAI,CAACN,CAAC,GAAGghB,MAAM,GAAGliB,IAAI,CAAC+D,GAAG,CAAEkE,KAAM,CAAC;MACnC,IAAI,CAACzG,CAAC,GAAGA,CAAC;MACV,IAAI,CAACuU,CAAC,GAAGmM,MAAM,GAAGliB,IAAI,CAAC8D,GAAG,CAAEmE,KAAM,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAjf,GAAA;IAAAE,KAAA,EAED,SAAAq5B,sBAAuBvhB,CAAC,EAAG;MAE1B,IAAM+F,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,EAAE,CAAE;MAChB,IAAI,CAACvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE;MAChB,IAAI,CAACgP,CAAC,GAAGhP,CAAC,CAAE,EAAE,CAAE;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA/d,GAAA;IAAAE,KAAA,EAED,SAAAs5B,mBAAoBxhB,CAAC,EAAG;MAEvB,IAAMuM,EAAE,GAAG,IAAI,CAACkV,mBAAmB,CAAEzhB,CAAC,EAAE,CAAE,CAAC,CAACnS,MAAM,CAAC,CAAC;MACpD,IAAM2e,EAAE,GAAG,IAAI,CAACiV,mBAAmB,CAAEzhB,CAAC,EAAE,CAAE,CAAC,CAACnS,MAAM,CAAC,CAAC;MACpD,IAAM6zB,EAAE,GAAG,IAAI,CAACD,mBAAmB,CAAEzhB,CAAC,EAAE,CAAE,CAAC,CAACnS,MAAM,CAAC,CAAC;MAEpD,IAAI,CAACqS,CAAC,GAAGqM,EAAE;MACX,IAAI,CAAC/L,CAAC,GAAGgM,EAAE;MACX,IAAI,CAACuI,CAAC,GAAG2M,EAAE;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA15B,GAAA;IAAAE,KAAA,EAED,SAAAu5B,oBAAqBzhB,CAAC,EAAEzB,KAAK,EAAG;MAE/B,OAAO,IAAI,CAACuJ,SAAS,CAAE9H,CAAC,CAACgG,QAAQ,EAAEzH,KAAK,GAAG,CAAE,CAAC;IAE/C;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAyhB,qBAAsB3J,CAAC,EAAEzB,KAAK,EAAG;MAEhC,OAAO,IAAI,CAACuJ,SAAS,CAAE9H,CAAC,CAACgG,QAAQ,EAAEzH,KAAK,GAAG,CAAE,CAAC;IAE/C;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAoyB,aAAcvU,CAAC,EAAG;MAEjB,IAAI,CAAC7F,CAAC,GAAG6F,CAAC,CAACiU,EAAE;MACb,IAAI,CAACxZ,CAAC,GAAGuF,CAAC,CAACkU,EAAE;MACb,IAAI,CAAClF,CAAC,GAAGhP,CAAC,CAACmU,EAAE;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAlyB,GAAA;IAAAE,KAAA,EAED,SAAAy5B,aAAc/e,CAAC,EAAG;MAEjB,IAAI,CAAC1C,CAAC,GAAG0C,CAAC,CAACuJ,CAAC;MACZ,IAAI,CAAC3L,CAAC,GAAGoC,CAAC,CAAC0I,CAAC;MACZ,IAAI,CAACyJ,CAAC,GAAGnS,CAAC,CAACD,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQ3C,CAAC,EAAG;MAEX,OAAWA,CAAC,CAAChF,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQgF,CAAC,CAAC1E,CAAC,KAAK,IAAI,CAACA,CAAG,IAAM0E,CAAC,CAAC6P,CAAC,KAAK,IAAI,CAACA,CAAG;IAExE;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAAC7H,CAAC,GAAGvB,KAAK,CAAEoJ,MAAM,CAAE;MACxB,IAAI,CAACvH,CAAC,GAAG7B,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAACgN,CAAC,GAAGpW,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjCpJ,KAAK,CAAEoJ,MAAM,CAAE,GAAG,IAAI,CAAC7H,CAAC;MACxBvB,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACvH,CAAC;MAC5B7B,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACgN,CAAC;MAE5B,OAAOpW,KAAK;IAEb;EAAC;IAAA3W,GAAA;IAAAE,KAAA,EAED,SAAA+f,oBAAqBC,SAAS,EAAE3J,KAAK,EAAG;MAEvC,IAAI,CAAC2B,CAAC,GAAGgI,SAAS,CAACC,IAAI,CAAE5J,KAAM,CAAC;MAChC,IAAI,CAACiC,CAAC,GAAG0H,SAAS,CAACE,IAAI,CAAE7J,KAAM,CAAC;MAChC,IAAI,CAACwW,CAAC,GAAG7M,SAAS,CAACsO,IAAI,CAAEjY,KAAM,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAmX,OAAA,EAAS;MAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,CAAC,CAAC;MACtB,IAAI,CAAC0V,CAAC,GAAG/V,IAAI,CAACK,MAAM,CAAC,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAArX,GAAA;IAAAE,KAAA,EAED,SAAA05B,gBAAA,EAAkB;MAEjB;;MAEA,IAAMC,CAAC,GAAG,CAAE7iB,IAAI,CAACK,MAAM,CAAC,CAAC,GAAG,GAAG,IAAK,CAAC;MACrC,IAAMqB,CAAC,GAAG1B,IAAI,CAACK,MAAM,CAAC,CAAC,GAAGL,IAAI,CAACC,EAAE,GAAG,CAAC;MACrC,IAAMoM,CAAC,GAAGrM,IAAI,CAAC2H,IAAI,CAAE,CAAC,GAAA3H,IAAA,CAAAmD,GAAA,CAAG0f,CAAC,EAAI,CAAC,CAAC,CAAC;MAEjC,IAAI,CAAC3hB,CAAC,GAAGmL,CAAC,GAAGrM,IAAI,CAAC8D,GAAG,CAAEpC,CAAE,CAAC;MAC1B,IAAI,CAACF,CAAC,GAAG6K,CAAC,GAAGrM,IAAI,CAAC+D,GAAG,CAAErC,CAAE,CAAC;MAC1B,IAAI,CAACqU,CAAC,GAAG8M,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAA75B,GAAA,EAAA02B,iBAAA;IAAAx2B,KAAA,eAAAX,mBAAA,GAAA8G,IAAA,CAED,SAAAnG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAuf,OAAAuZ,SAAA;QAAA,kBAAAA,SAAA,CAAA5yB,IAAA,GAAA4yB,SAAA,CAAAl1B,IAAA;UAAA;YAAAk1B,SAAA,CAAAl1B,IAAA;YAEC,OAAM,IAAI,CAACsT,CAAC;UAAA;YAAA4hB,SAAA,CAAAl1B,IAAA;YACZ,OAAM,IAAI,CAAC4T,CAAC;UAAA;YAAAshB,SAAA,CAAAl1B,IAAA;YACZ,OAAM,IAAI,CAACmoB,CAAC;UAAA;UAAA;YAAA,OAAA+M,SAAA,CAAAzyB,IAAA;QAAA;MAAA,GAAAnH,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAu2B,OAAA;AAAA,EANEr2B,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAAi3B,OAAA,GAAAA,OAAA;AAUnB,IAAMmC,SAAS,GAAG,aAAc,IAAInC,OAAO,CAAC,CAAC;AAC7C,IAAMM,aAAa,GAAG,aAAc,IAAIlF,UAAU,CAAC,CAAC;AAAC,IAE/CkI,IAAI;EAET,SAAAA,KAAaniB,GAAG,GAAG,IAAI6e,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CAAC,EAAEniB,GAAG,GAAG,IAAI4e,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CAAC,EAAG;IAAA3xB,eAAA,OAAA0xB,IAAA;IAE/H,IAAI,CAACE,MAAM,GAAG,IAAI;IAElB,IAAI,CAACriB,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAAChP,YAAA,CAAAkxB,IAAA;IAAA/5B,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK5D,GAAG,EAAEC,GAAG,EAAG;MAEf,IAAI,CAACD,GAAG,CAACqF,IAAI,CAAErF,GAAI,CAAC;MACpB,IAAI,CAACC,GAAG,CAACoF,IAAI,CAAEpF,GAAI,CAAC;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAA7X,GAAA;IAAAE,KAAA,EAED,SAAAg6B,aAAcvjB,KAAK,EAAG;MAErB,IAAI,CAACwjB,SAAS,CAAC,CAAC;MAEhB,KAAM,IAAIr0B,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGjb,KAAK,CAAC9Q,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,IAAI,CAAC,EAAG;QAEpD,IAAI,CAACs0B,aAAa,CAAEC,SAAS,CAACva,SAAS,CAAEnJ,KAAK,EAAE7Q,CAAE,CAAE,CAAC;MAEtD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAo6B,uBAAwBpa,SAAS,EAAG;MAEnC,IAAI,CAACia,SAAS,CAAC,CAAC;MAEhB,KAAM,IAAIr0B,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG1R,SAAS,CAACuR,KAAK,EAAE3rB,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAErD,IAAI,CAACs0B,aAAa,CAAEC,SAAS,CAACpa,mBAAmB,CAAEC,SAAS,EAAEpa,CAAE,CAAE,CAAC;MAEpE;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAq6B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAACL,SAAS,CAAC,CAAC;MAEhB,KAAM,IAAIr0B,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG4I,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAEnD,IAAI,CAACs0B,aAAa,CAAEI,MAAM,CAAE10B,CAAC,CAAG,CAAC;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAu6B,qBAAsBna,MAAM,EAAEoa,IAAI,EAAG;MAEpC,IAAMC,QAAQ,GAAGN,SAAS,CAACpd,IAAI,CAAEyd,IAAK,CAAC,CAAC/c,cAAc,CAAE,GAAI,CAAC;MAE7D,IAAI,CAAC/F,GAAG,CAACqF,IAAI,CAAEqD,MAAO,CAAC,CAAC/C,GAAG,CAAEod,QAAS,CAAC;MACvC,IAAI,CAAC9iB,GAAG,CAACoF,IAAI,CAAEqD,MAAO,CAAC,CAACnD,GAAG,CAAEwd,QAAS,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA36B,GAAA;IAAAE,KAAA,EAED,SAAA06B,cAAe9zB,MAAM,EAAE+zB,OAAO,GAAG,KAAK,EAAG;MAExC,IAAI,CAACV,SAAS,CAAC,CAAC;MAEhB,OAAO,IAAI,CAACW,cAAc,CAAEh0B,MAAM,EAAE+zB,OAAQ,CAAC;IAE9C;EAAC;IAAA76B,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAM8d,GAAG,EAAG;MAEX,IAAI,CAACnjB,GAAG,CAACqF,IAAI,CAAE8d,GAAG,CAACnjB,GAAI,CAAC;MACxB,IAAI,CAACC,GAAG,CAACoF,IAAI,CAAE8d,GAAG,CAACljB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA7X,GAAA;IAAAE,KAAA,EAED,SAAAi6B,UAAA,EAAY;MAEX,IAAI,CAACviB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACN,GAAG,CAACY,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACmV,CAAC,GAAG,CAAEiN,QAAQ;MACjD,IAAI,CAACniB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACX,GAAG,CAACkV,CAAC,GAAG,CAAEiN,QAAQ;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAh6B,GAAA;IAAAE,KAAA,EAED,SAAA86B,QAAA,EAAU;MAET;;MAEA,OAAS,IAAI,CAACnjB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAQ,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAG,IAAM,IAAI,CAACX,GAAG,CAACkV,CAAC,GAAG,IAAI,CAACnV,GAAG,CAACmV,CAAG;IAEjG;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+6B,UAAWxyB,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACuyB,OAAO,CAAC,CAAC,GAAGvyB,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,GAAG/S,MAAM,CAAC4U,UAAU,CAAE,IAAI,CAACzF,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC,CAAC8F,cAAc,CAAE,GAAI,CAAC;IAE9G;EAAC;IAAA3d,GAAA;IAAAE,KAAA,EAED,SAAAg7B,QAASzyB,MAAM,EAAG;MAEjB,OAAO,IAAI,CAACuyB,OAAO,CAAC,CAAC,GAAGvyB,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,GAAG/S,MAAM,CAACgV,UAAU,CAAE,IAAI,CAAC5F,GAAG,EAAE,IAAI,CAACD,GAAI,CAAC;IAExF;EAAC;IAAA5X,GAAA;IAAAE,KAAA,EAED,SAAAk6B,cAAee,KAAK,EAAG;MAEtB,IAAI,CAACvjB,GAAG,CAACA,GAAG,CAAEujB,KAAM,CAAC;MACrB,IAAI,CAACtjB,GAAG,CAACA,GAAG,CAAEsjB,KAAM,CAAC;MAErB,OAAO,IAAI;IAEZ;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAAk7B,eAAgBC,MAAM,EAAG;MAExB,IAAI,CAACzjB,GAAG,CAAC2F,GAAG,CAAE8d,MAAO,CAAC;MACtB,IAAI,CAACxjB,GAAG,CAACsF,GAAG,CAAEke,MAAO,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAr7B,GAAA;IAAAE,KAAA,EAED,SAAAo7B,eAAgB3e,MAAM,EAAG;MAExB,IAAI,CAAC/E,GAAG,CAACwF,SAAS,CAAE,CAAET,MAAO,CAAC;MAC9B,IAAI,CAAC9E,GAAG,CAACuF,SAAS,CAAET,MAAO,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA46B,eAAgBh0B,MAAM,EAAE+zB,OAAO,GAAG,KAAK,EAAG;MAEzC;MACA;;MAEA/zB,MAAM,CAACy0B,iBAAiB,CAAE,KAAK,EAAE,KAAM,CAAC;MAExC,IAAKz0B,MAAM,CAAC00B,WAAW,KAAKj3B,SAAS,EAAG;QAEvC,IAAKuC,MAAM,CAAC00B,WAAW,KAAK,IAAI,EAAG;UAElC10B,MAAM,CAAC20B,kBAAkB,CAAC,CAAC;QAE5B;QAEAC,MAAM,CAACze,IAAI,CAAEnW,MAAM,CAAC00B,WAAY,CAAC;QACjCE,MAAM,CAACtO,YAAY,CAAEtmB,MAAM,CAACkxB,WAAY,CAAC;QAEzC,IAAI,CAAC2D,KAAK,CAAED,MAAO,CAAC;MAErB,CAAC,MAAM;QAEN,IAAME,QAAQ,GAAG90B,MAAM,CAAC80B,QAAQ;QAEhC,IAAKA,QAAQ,KAAKr3B,SAAS,EAAG;UAE7B,IAAKs2B,OAAO,IAAIe,QAAQ,CAACC,UAAU,KAAKt3B,SAAS,IAAIq3B,QAAQ,CAACC,UAAU,CAACC,QAAQ,KAAKv3B,SAAS,EAAG;YAEjG,IAAMu3B,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;YAC7C,KAAM,IAAIh2B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGklB,QAAQ,CAACrK,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;cAElDu0B,SAAS,CAACpa,mBAAmB,CAAE6b,QAAQ,EAAEh2B,CAAE,CAAC,CAACsnB,YAAY,CAAEtmB,MAAM,CAACkxB,WAAY,CAAC;cAC/E,IAAI,CAACoC,aAAa,CAAEC,SAAU,CAAC;YAEhC;UAED,CAAC,MAAM;YAEN,IAAKuB,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;cAEpCI,QAAQ,CAACH,kBAAkB,CAAC,CAAC;YAE9B;YAEAC,MAAM,CAACze,IAAI,CAAE2e,QAAQ,CAACJ,WAAY,CAAC;YACnCE,MAAM,CAACtO,YAAY,CAAEtmB,MAAM,CAACkxB,WAAY,CAAC;YAEzC,IAAI,CAAC2D,KAAK,CAAED,MAAO,CAAC;UAErB;QAED;MAED;MAEA,IAAMK,QAAQ,GAAGj1B,MAAM,CAACi1B,QAAQ;MAEhC,KAAM,IAAIj2B,GAAC,GAAG,CAAC,EAAE8Q,EAAC,GAAGmlB,QAAQ,CAACl2B,MAAM,EAAEC,GAAC,GAAG8Q,EAAC,EAAE9Q,GAAC,EAAG,EAAG;QAEnD,IAAI,CAACg1B,cAAc,CAAEiB,QAAQ,CAAEj2B,GAAC,CAAE,EAAE+0B,OAAQ,CAAC;MAE9C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA76B,GAAA;IAAAE,KAAA,EAED,SAAA87B,cAAeb,KAAK,EAAG;MAEtB,OAAOA,KAAK,CAACjjB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAIijB,KAAK,CAACjjB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAClDijB,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAI2iB,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,IAC5C2iB,KAAK,CAACpO,CAAC,GAAG,IAAI,CAACnV,GAAG,CAACmV,CAAC,IAAIoO,KAAK,CAACpO,CAAC,GAAG,IAAI,CAAClV,GAAG,CAACkV,CAAC,GAAG,KAAK,GAAG,IAAI;IAE7D;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+7B,YAAalB,GAAG,EAAG;MAElB,OAAO,IAAI,CAACnjB,GAAG,CAACM,CAAC,IAAI6iB,GAAG,CAACnjB,GAAG,CAACM,CAAC,IAAI6iB,GAAG,CAACljB,GAAG,CAACK,CAAC,IAAI,IAAI,CAACL,GAAG,CAACK,CAAC,IACxD,IAAI,CAACN,GAAG,CAACY,CAAC,IAAIuiB,GAAG,CAACnjB,GAAG,CAACY,CAAC,IAAIuiB,GAAG,CAACljB,GAAG,CAACW,CAAC,IAAI,IAAI,CAACX,GAAG,CAACW,CAAC,IAClD,IAAI,CAACZ,GAAG,CAACmV,CAAC,IAAIgO,GAAG,CAACnjB,GAAG,CAACmV,CAAC,IAAIgO,GAAG,CAACljB,GAAG,CAACkV,CAAC,IAAI,IAAI,CAAClV,GAAG,CAACkV,CAAC;IAEpD;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAg8B,aAAcf,KAAK,EAAE1yB,MAAM,EAAG;MAE7B;MACA;;MAEA,OAAOA,MAAM,CAAC+S,GAAG,CAChB,CAAE2f,KAAK,CAACjjB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,KAAO,IAAI,CAACL,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,CAAE,EACtD,CAAEijB,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,KAAO,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,CAAE,EACtD,CAAE2iB,KAAK,CAACpO,CAAC,GAAG,IAAI,CAACnV,GAAG,CAACmV,CAAC,KAAO,IAAI,CAAClV,GAAG,CAACkV,CAAC,GAAG,IAAI,CAACnV,GAAG,CAACmV,CAAC,CACrD,CAAC;IAEF;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAi8B,cAAepB,GAAG,EAAG;MAEpB;MACA,OAAOA,GAAG,CAACljB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAI6iB,GAAG,CAACnjB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IACtD6iB,GAAG,CAACljB,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAIuiB,GAAG,CAACnjB,GAAG,CAACY,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,IAChDuiB,GAAG,CAACljB,GAAG,CAACkV,CAAC,GAAG,IAAI,CAACnV,GAAG,CAACmV,CAAC,IAAIgO,GAAG,CAACnjB,GAAG,CAACmV,CAAC,GAAG,IAAI,CAAClV,GAAG,CAACkV,CAAC,GAAG,KAAK,GAAG,IAAI;IAEjE;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAk8B,iBAAkBC,MAAM,EAAG;MAE1B;MACA,IAAI,CAACC,UAAU,CAAED,MAAM,CAAC/b,MAAM,EAAE+Z,SAAU,CAAC;;MAE3C;MACA,OAAOA,SAAS,CAACjb,iBAAiB,CAAEid,MAAM,CAAC/b,MAAO,CAAC,IAAM+b,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAQ;IAEzF;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAAq8B,gBAAiBC,KAAK,EAAG;MAExB;MACA;;MAEA,IAAI5kB,GAAG,EAAEC,GAAG;MAEZ,IAAK2kB,KAAK,CAAC1D,MAAM,CAAC5gB,CAAC,GAAG,CAAC,EAAG;QAEzBN,GAAG,GAAG4kB,KAAK,CAAC1D,MAAM,CAAC5gB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC;QACjCL,GAAG,GAAG2kB,KAAK,CAAC1D,MAAM,CAAC5gB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;MAElC,CAAC,MAAM;QAENN,GAAG,GAAG4kB,KAAK,CAAC1D,MAAM,CAAC5gB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;QACjCL,GAAG,GAAG2kB,KAAK,CAAC1D,MAAM,CAAC5gB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC;MAElC;MAEA,IAAKskB,KAAK,CAAC1D,MAAM,CAACtgB,CAAC,GAAG,CAAC,EAAG;QAEzBZ,GAAG,IAAI4kB,KAAK,CAAC1D,MAAM,CAACtgB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC;QAClCX,GAAG,IAAI2kB,KAAK,CAAC1D,MAAM,CAACtgB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC;MAEnC,CAAC,MAAM;QAENZ,GAAG,IAAI4kB,KAAK,CAAC1D,MAAM,CAACtgB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC;QAClCX,GAAG,IAAI2kB,KAAK,CAAC1D,MAAM,CAACtgB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC;MAEnC;MAEA,IAAKgkB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,CAAC,EAAG;QAEzBnV,GAAG,IAAI4kB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,IAAI,CAACnV,GAAG,CAACmV,CAAC;QAClClV,GAAG,IAAI2kB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,IAAI,CAAClV,GAAG,CAACkV,CAAC;MAEnC,CAAC,MAAM;QAENnV,GAAG,IAAI4kB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,IAAI,CAAClV,GAAG,CAACkV,CAAC;QAClClV,GAAG,IAAI2kB,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,IAAI,CAACnV,GAAG,CAACmV,CAAC;MAEnC;MAEA,OAASnV,GAAG,IAAI,CAAE4kB,KAAK,CAACC,QAAQ,IAAI5kB,GAAG,IAAI,CAAE2kB,KAAK,CAACC,QAAQ;IAE5D;EAAC;IAAAz8B,GAAA;IAAAE,KAAA,EAED,SAAAw8B,mBAAoBC,QAAQ,EAAG;MAE9B,IAAK,IAAI,CAAC3B,OAAO,CAAC,CAAC,EAAG;QAErB,OAAO,KAAK;MAEb;;MAEA;MACA,IAAI,CAACC,SAAS,CAAE2B,OAAQ,CAAC;MACzBC,QAAQ,CAACpf,UAAU,CAAE,IAAI,CAAC5F,GAAG,EAAE+kB,OAAQ,CAAC;;MAExC;MACAE,KAAK,CAACrf,UAAU,CAAEkf,QAAQ,CAACjiB,CAAC,EAAEkiB,OAAQ,CAAC;MACvCG,KAAK,CAACtf,UAAU,CAAEkf,QAAQ,CAAChiB,CAAC,EAAEiiB,OAAQ,CAAC;MACvCI,KAAK,CAACvf,UAAU,CAAEkf,QAAQ,CAAC/hB,CAAC,EAAEgiB,OAAQ,CAAC;;MAEvC;MACAK,GAAG,CAACxf,UAAU,CAAEsf,KAAK,EAAED,KAAM,CAAC;MAC9BI,GAAG,CAACzf,UAAU,CAAEuf,KAAK,EAAED,KAAM,CAAC;MAC9BI,GAAG,CAAC1f,UAAU,CAAEqf,KAAK,EAAEE,KAAM,CAAC;;MAE9B;MACA;MACA;MACA,IAAII,IAAI,GAAG,CACV,CAAC,EAAE,CAAEH,GAAG,CAAClQ,CAAC,EAAEkQ,GAAG,CAACzkB,CAAC,EAAE,CAAC,EAAE,CAAE0kB,GAAG,CAACnQ,CAAC,EAAEmQ,GAAG,CAAC1kB,CAAC,EAAE,CAAC,EAAE,CAAE2kB,GAAG,CAACpQ,CAAC,EAAEoQ,GAAG,CAAC3kB,CAAC,EACvDykB,GAAG,CAAClQ,CAAC,EAAE,CAAC,EAAE,CAAEkQ,GAAG,CAAC/kB,CAAC,EAAEglB,GAAG,CAACnQ,CAAC,EAAE,CAAC,EAAE,CAAEmQ,GAAG,CAAChlB,CAAC,EAAEilB,GAAG,CAACpQ,CAAC,EAAE,CAAC,EAAE,CAAEoQ,GAAG,CAACjlB,CAAC,EACvD,CAAE+kB,GAAG,CAACzkB,CAAC,EAAEykB,GAAG,CAAC/kB,CAAC,EAAE,CAAC,EAAE,CAAEglB,GAAG,CAAC1kB,CAAC,EAAE0kB,GAAG,CAAChlB,CAAC,EAAE,CAAC,EAAE,CAAEilB,GAAG,CAAC3kB,CAAC,EAAE2kB,GAAG,CAACjlB,CAAC,EAAE,CAAC,CACvD;MACD,IAAK,CAAEmlB,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAS,CAAC,EAAG;QAE1D,OAAO,KAAK;MAEb;;MAEA;MACAO,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACpC,IAAK,CAAEC,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAS,CAAC,EAAG;QAE1D,OAAO,KAAK;MAEb;;MAEA;MACA;MACAS,eAAe,CAACpF,YAAY,CAAE+E,GAAG,EAAEC,GAAI,CAAC;MACxCE,IAAI,GAAG,CAAEE,eAAe,CAACplB,CAAC,EAAEolB,eAAe,CAAC9kB,CAAC,EAAE8kB,eAAe,CAACvQ,CAAC,CAAE;MAElE,OAAOsQ,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAS,CAAC;IAEzD;EAAC;IAAA78B,GAAA;IAAAE,KAAA,EAED,SAAAo8B,WAAYnB,KAAK,EAAE1yB,MAAM,EAAG;MAE3B,OAAOA,MAAM,CAACwU,IAAI,CAAEke,KAAM,CAAC,CAACxjB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC;IAExD;EAAC;IAAA7X,GAAA;IAAAE,KAAA,EAED,SAAAq9B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO,IAAI,CAACmB,UAAU,CAAEnB,KAAK,EAAEd,SAAU,CAAC,CAAClb,UAAU,CAAEgc,KAAM,CAAC;IAE/D;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAAs9B,kBAAmB/0B,MAAM,EAAG;MAE3B,IAAK,IAAI,CAACuyB,OAAO,CAAC,CAAC,EAAG;QAErBvyB,MAAM,CAAC0xB,SAAS,CAAC,CAAC;MAEnB,CAAC,MAAM;QAEN,IAAI,CAACc,SAAS,CAAExyB,MAAM,CAAC6X,MAAO,CAAC;QAE/B7X,MAAM,CAACywB,MAAM,GAAG,IAAI,CAACgC,OAAO,CAAEb,SAAU,CAAC,CAACx0B,MAAM,CAAC,CAAC,GAAG,GAAG;MAEzD;MAEA,OAAO4C,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAu9B,UAAW1C,GAAG,EAAG;MAEhB,IAAI,CAACnjB,GAAG,CAACC,GAAG,CAAEkjB,GAAG,CAACnjB,GAAI,CAAC;MACvB,IAAI,CAACC,GAAG,CAACD,GAAG,CAAEmjB,GAAG,CAACljB,GAAI,CAAC;;MAEvB;MACA,IAAK,IAAI,CAACmjB,OAAO,CAAC,CAAC,EAAG,IAAI,CAACb,SAAS,CAAC,CAAC;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAn6B,GAAA;IAAAE,KAAA,EAED,SAAAy7B,MAAOZ,GAAG,EAAG;MAEZ,IAAI,CAACnjB,GAAG,CAACA,GAAG,CAAEmjB,GAAG,CAACnjB,GAAI,CAAC;MACvB,IAAI,CAACC,GAAG,CAACA,GAAG,CAAEkjB,GAAG,CAACljB,GAAI,CAAC;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA7X,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcjI,MAAM,EAAG;MAEtB;MACA,IAAK,IAAI,CAAC6V,OAAO,CAAC,CAAC,EAAG,OAAO,IAAI;;MAEjC;MACA0C,OAAO,CAAE,CAAC,CAAE,CAACliB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACmV,CAAE,CAAC,CAACK,YAAY,CAAEjI,MAAO,CAAC,CAAC,CAAC;MAC/EuY,OAAO,CAAE,CAAC,CAAE,CAACliB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACX,GAAG,CAACkV,CAAE,CAAC,CAACK,YAAY,CAAEjI,MAAO,CAAC,CAAC,CAAC;MAC/EuY,OAAO,CAAE,CAAC,CAAE,CAACliB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACmV,CAAE,CAAC,CAACK,YAAY,CAAEjI,MAAO,CAAC,CAAC,CAAC;MAC/EuY,OAAO,CAAE,CAAC,CAAE,CAACliB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACX,GAAG,CAACkV,CAAE,CAAC,CAACK,YAAY,CAAEjI,MAAO,CAAC,CAAC,CAAC;MAC/EuY,OAAO,CAAE,CAAC,CAAE,CAACliB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACmV,CAAE,CAAC,CAACK,YAAY,CAAEjI,MAAO,CAAC,CAAC,CAAC;MAC/EuY,OAAO,CAAE,CAAC,CAAE,CAACliB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACX,GAAG,CAACkV,CAAE,CAAC,CAACK,YAAY,CAAEjI,MAAO,CAAC,CAAC,CAAC;MAC/EuY,OAAO,CAAE,CAAC,CAAE,CAACliB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACmV,CAAE,CAAC,CAACK,YAAY,CAAEjI,MAAO,CAAC,CAAC,CAAC;MAC/EuY,OAAO,CAAE,CAAC,CAAE,CAACliB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACX,GAAG,CAACkV,CAAE,CAAC,CAACK,YAAY,CAAEjI,MAAO,CAAC,CAAC,CAAC;;MAE/E,IAAI,CAACoV,aAAa,CAAEmD,OAAQ,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA19B,GAAA;IAAAE,KAAA,EAED,SAAA+kB,UAAWlF,MAAM,EAAG;MAEnB,IAAI,CAACnI,GAAG,CAACuF,GAAG,CAAE4C,MAAO,CAAC;MACtB,IAAI,CAAClI,GAAG,CAACsF,GAAG,CAAE4C,MAAO,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQkb,GAAG,EAAG;MAEb,OAAOA,GAAG,CAACnjB,GAAG,CAACiI,MAAM,CAAE,IAAI,CAACjI,GAAI,CAAC,IAAImjB,GAAG,CAACljB,GAAG,CAACgI,MAAM,CAAE,IAAI,CAAChI,GAAI,CAAC;IAEhE;EAAC;EAAA,OAAAkiB,IAAA;AAAA;AAAAv6B,OAAA,CAAAu6B,IAAA,GAAAA,IAAA;AAIF,IAAM2D,OAAO,GAAG,CACf,aAAc,IAAIjH,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,EAC3B,aAAc,IAAIA,OAAO,CAAC,CAAC,CAC3B;AAED,IAAM4D,SAAS,GAAG,aAAc,IAAI5D,OAAO,CAAC,CAAC;AAE7C,IAAMiF,MAAM,GAAG,aAAc,IAAI3B,IAAI,CAAC,CAAC;;AAEvC;;AAEA,IAAM+C,KAAK,GAAG,aAAc,IAAIrG,OAAO,CAAC,CAAC;AACzC,IAAMsG,KAAK,GAAG,aAAc,IAAItG,OAAO,CAAC,CAAC;AACzC,IAAMuG,KAAK,GAAG,aAAc,IAAIvG,OAAO,CAAC,CAAC;;AAEzC;;AAEA,IAAMwG,GAAG,GAAG,aAAc,IAAIxG,OAAO,CAAC,CAAC;AACvC,IAAMyG,GAAG,GAAG,aAAc,IAAIzG,OAAO,CAAC,CAAC;AACvC,IAAM0G,GAAG,GAAG,aAAc,IAAI1G,OAAO,CAAC,CAAC;AAEvC,IAAMmG,OAAO,GAAG,aAAc,IAAInG,OAAO,CAAC,CAAC;AAC3C,IAAMoG,QAAQ,GAAG,aAAc,IAAIpG,OAAO,CAAC,CAAC;AAC5C,IAAM6G,eAAe,GAAG,aAAc,IAAI7G,OAAO,CAAC,CAAC;AACnD,IAAMkH,SAAS,GAAG,aAAc,IAAIlH,OAAO,CAAC,CAAC;AAE7C,SAAS4G,UAAUA,CAAED,IAAI,EAAEQ,EAAE,EAAEje,EAAE,EAAEC,EAAE,EAAEie,OAAO,EAAG;EAEhD,KAAM,IAAI/3B,CAAC,GAAG,CAAC,EAAEg4B,CAAC,GAAGV,IAAI,CAACv3B,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAIg4B,CAAC,EAAEh4B,CAAC,IAAI,CAAC,EAAG;IAEtD63B,SAAS,CAAC7d,SAAS,CAAEsd,IAAI,EAAEt3B,CAAE,CAAC;IAC9B;IACA,IAAMqe,CAAC,GAAG0Z,OAAO,CAAC3lB,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAE2kB,SAAS,CAACzlB,CAAE,CAAC,GAAG2lB,OAAO,CAACrlB,CAAC,GAAGxB,IAAI,CAACgC,GAAG,CAAE2kB,SAAS,CAACnlB,CAAE,CAAC,GAAGqlB,OAAO,CAAC9Q,CAAC,GAAG/V,IAAI,CAACgC,GAAG,CAAE2kB,SAAS,CAAC5Q,CAAE,CAAC;IACzH;IACA,IAAMgR,EAAE,GAAGH,EAAE,CAACpf,GAAG,CAAEmf,SAAU,CAAC;IAC9B,IAAMK,EAAE,GAAGre,EAAE,CAACnB,GAAG,CAAEmf,SAAU,CAAC;IAC9B,IAAMM,EAAE,GAAGre,EAAE,CAACpB,GAAG,CAAEmf,SAAU,CAAC;IAC9B;IACA,IAAK3mB,IAAI,CAACa,GAAG,CAAE,CAAEb,IAAI,CAACa,GAAG,CAAEkmB,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAC,EAAEjnB,IAAI,CAACY,GAAG,CAAEmmB,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAE,CAAC,GAAG9Z,CAAC,EAAG;MAEvE;MACA;MACA,OAAO,KAAK;IAEb;EAED;EAEA,OAAO,IAAI;AAEZ;AAEA,IAAM+Z,MAAM,GAAG,aAAc,IAAInE,IAAI,CAAC,CAAC;AACvC,IAAMoE,KAAK,GAAG,aAAc,IAAI1H,OAAO,CAAC,CAAC;AACzC,IAAM2H,KAAK,GAAG,aAAc,IAAI3H,OAAO,CAAC,CAAC;AAAC,IAEpC4H,MAAM;EAEX,SAAAA,OAAa/d,MAAM,GAAG,IAAImW,OAAO,CAAC,CAAC,EAAEyC,MAAM,GAAG,CAAE,CAAC,EAAG;IAAA7wB,eAAA,OAAAg2B,MAAA;IAEnD,IAAI,CAAC/d,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC4Y,MAAM,GAAGA,MAAM;EAErB;EAACrwB,YAAA,CAAAw1B,MAAA;IAAAr+B,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK8E,MAAM,EAAE4Y,MAAM,EAAG;MAErB,IAAI,CAAC5Y,MAAM,CAACrD,IAAI,CAAEqD,MAAO,CAAC;MAC1B,IAAI,CAAC4Y,MAAM,GAAGA,MAAM;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAAq6B,cAAeC,MAAM,EAAE8D,cAAc,EAAG;MAEvC,IAAMhe,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKge,cAAc,KAAK/5B,SAAS,EAAG;QAEnC+b,MAAM,CAACrD,IAAI,CAAEqhB,cAAe,CAAC;MAE9B,CAAC,MAAM;QAENJ,MAAM,CAAC3D,aAAa,CAAEC,MAAO,CAAC,CAACS,SAAS,CAAE3a,MAAO,CAAC;MAEnD;MAEA,IAAIie,WAAW,GAAG,CAAC;MAEnB,KAAM,IAAIz4B,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG4I,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAEnDy4B,WAAW,GAAGvnB,IAAI,CAACa,GAAG,CAAE0mB,WAAW,EAAEje,MAAM,CAAClB,iBAAiB,CAAEob,MAAM,CAAE10B,CAAC,CAAG,CAAE,CAAC;MAE/E;MAEA,IAAI,CAACozB,MAAM,GAAGliB,IAAI,CAAC2H,IAAI,CAAE4f,WAAY,CAAC;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAv+B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMof,MAAM,EAAG;MAEd,IAAI,CAAC/b,MAAM,CAACrD,IAAI,CAAEof,MAAM,CAAC/b,MAAO,CAAC;MACjC,IAAI,CAAC4Y,MAAM,GAAGmD,MAAM,CAACnD,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAA86B,QAAA,EAAU;MAET,OAAS,IAAI,CAAC9B,MAAM,GAAG,CAAC;IAEzB;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAAi6B,UAAA,EAAY;MAEX,IAAI,CAAC7Z,MAAM,CAAC9E,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAC1B,IAAI,CAAC0d,MAAM,GAAG,CAAE,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAA87B,cAAeb,KAAK,EAAG;MAEtB,OAASA,KAAK,CAAC/b,iBAAiB,CAAE,IAAI,CAACkB,MAAO,CAAC,IAAM,IAAI,CAAC4Y,MAAM,GAAG,IAAI,CAACA,MAAQ;IAEjF;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAAq9B,gBAAiBpC,KAAK,EAAG;MAExB,OAASA,KAAK,CAAChc,UAAU,CAAE,IAAI,CAACmB,MAAO,CAAC,GAAG,IAAI,CAAC4Y,MAAM;IAEvD;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAAk8B,iBAAkBC,MAAM,EAAG;MAE1B,IAAMmC,SAAS,GAAG,IAAI,CAACtF,MAAM,GAAGmD,MAAM,CAACnD,MAAM;MAE7C,OAAOmD,MAAM,CAAC/b,MAAM,CAAClB,iBAAiB,CAAE,IAAI,CAACkB,MAAO,CAAC,IAAMke,SAAS,GAAGA,SAAW;IAEnF;EAAC;IAAAx+B,GAAA;IAAAE,KAAA,EAED,SAAAi8B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAACqB,gBAAgB,CAAE,IAAK,CAAC;IAEpC;EAAC;IAAAp8B,GAAA;IAAAE,KAAA,EAED,SAAAq8B,gBAAiBC,KAAK,EAAG;MAExB,OAAOxlB,IAAI,CAACgC,GAAG,CAAEwjB,KAAK,CAACe,eAAe,CAAE,IAAI,CAACjd,MAAO,CAAE,CAAC,IAAI,IAAI,CAAC4Y,MAAM;IAEvE;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAAo8B,WAAYnB,KAAK,EAAE1yB,MAAM,EAAG;MAE3B,IAAMg2B,aAAa,GAAG,IAAI,CAACne,MAAM,CAAClB,iBAAiB,CAAE+b,KAAM,CAAC;MAE5D1yB,MAAM,CAACwU,IAAI,CAAEke,KAAM,CAAC;MAEpB,IAAKsD,aAAa,GAAK,IAAI,CAACvF,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;QAEpDzwB,MAAM,CAAC8U,GAAG,CAAE,IAAI,CAAC+C,MAAO,CAAC,CAACnE,SAAS,CAAC,CAAC;QACrC1T,MAAM,CAACkV,cAAc,CAAE,IAAI,CAACub,MAAO,CAAC,CAAC/b,GAAG,CAAE,IAAI,CAACmD,MAAO,CAAC;MAExD;MAEA,OAAO7X,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAw+B,eAAgBj2B,MAAM,EAAG;MAExB,IAAK,IAAI,CAACuyB,OAAO,CAAC,CAAC,EAAG;QAErB;QACAvyB,MAAM,CAAC0xB,SAAS,CAAC,CAAC;QAClB,OAAO1xB,MAAM;MAEd;MAEAA,MAAM,CAAC+S,GAAG,CAAE,IAAI,CAAC8E,MAAM,EAAE,IAAI,CAACA,MAAO,CAAC;MACtC7X,MAAM,CAAC6yB,cAAc,CAAE,IAAI,CAACpC,MAAO,CAAC;MAEpC,OAAOzwB,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcjI,MAAM,EAAG;MAEtB,IAAI,CAAC7E,MAAM,CAAC8M,YAAY,CAAEjI,MAAO,CAAC;MAClC,IAAI,CAAC+T,MAAM,GAAG,IAAI,CAACA,MAAM,GAAG/T,MAAM,CAACwZ,iBAAiB,CAAC,CAAC;MAEtD,OAAO,IAAI;IAEZ;EAAC;IAAA3+B,GAAA;IAAAE,KAAA,EAED,SAAA+kB,UAAWlF,MAAM,EAAG;MAEnB,IAAI,CAACO,MAAM,CAACnD,GAAG,CAAE4C,MAAO,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAAk6B,cAAee,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACH,OAAO,CAAC,CAAC,EAAG;QAErB,IAAI,CAAC1a,MAAM,CAACrD,IAAI,CAAEke,KAAM,CAAC;QAEzB,IAAI,CAACjC,MAAM,GAAG,CAAC;QAEf,OAAO,IAAI;MAEZ;MAEAiF,KAAK,CAAC1gB,UAAU,CAAE0d,KAAK,EAAE,IAAI,CAAC7a,MAAO,CAAC;MAEtC,IAAM5B,QAAQ,GAAGyf,KAAK,CAACzf,QAAQ,CAAC,CAAC;MAEjC,IAAKA,QAAQ,GAAK,IAAI,CAACwa,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;QAE/C;;QAEA,IAAMrzB,MAAM,GAAGmR,IAAI,CAAC2H,IAAI,CAAED,QAAS,CAAC;QAEpC,IAAMkgB,KAAK,GAAG,CAAE/4B,MAAM,GAAG,IAAI,CAACqzB,MAAM,IAAK,GAAG;QAE5C,IAAI,CAAC5Y,MAAM,CAAChD,eAAe,CAAE6gB,KAAK,EAAES,KAAK,GAAG/4B,MAAO,CAAC;QAEpD,IAAI,CAACqzB,MAAM,IAAI0F,KAAK;MAErB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5+B,GAAA;IAAAE,KAAA,EAED,SAAAy7B,MAAOU,MAAM,EAAG;MAEf,IAAKA,MAAM,CAACrB,OAAO,CAAC,CAAC,EAAG;QAEvB,OAAO,IAAI;MAEZ;MAEA,IAAK,IAAI,CAACA,OAAO,CAAC,CAAC,EAAG;QAErB,IAAI,CAAC/d,IAAI,CAAEof,MAAO,CAAC;QAEnB,OAAO,IAAI;MAEZ;MAEA,IAAK,IAAI,CAAC/b,MAAM,CAACT,MAAM,CAAEwc,MAAM,CAAC/b,MAAO,CAAC,KAAK,IAAI,EAAG;QAElD,IAAI,CAAC4Y,MAAM,GAAGliB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACqhB,MAAM,EAAEmD,MAAM,CAACnD,MAAO,CAAC;MAEtD,CAAC,MAAM;QAENkF,KAAK,CAAC3gB,UAAU,CAAE4e,MAAM,CAAC/b,MAAM,EAAE,IAAI,CAACA,MAAO,CAAC,CAACd,SAAS,CAAE6c,MAAM,CAACnD,MAAO,CAAC;QAEzE,IAAI,CAACkB,aAAa,CAAE+D,KAAK,CAAClhB,IAAI,CAAEof,MAAM,CAAC/b,MAAO,CAAC,CAACnD,GAAG,CAAEihB,KAAM,CAAE,CAAC;QAE9D,IAAI,CAAChE,aAAa,CAAE+D,KAAK,CAAClhB,IAAI,CAAEof,MAAM,CAAC/b,MAAO,CAAC,CAAC/C,GAAG,CAAE6gB,KAAM,CAAE,CAAC;MAE/D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAp+B,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQwc,MAAM,EAAG;MAEhB,OAAOA,MAAM,CAAC/b,MAAM,CAACT,MAAM,CAAE,IAAI,CAACS,MAAO,CAAC,IAAM+b,MAAM,CAACnD,MAAM,KAAK,IAAI,CAACA,MAAQ;IAEhF;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAohB,MAAA;AAAA;AAAA7+B,OAAA,CAAA6+B,MAAA,GAAAA,MAAA;AAIF,IAAMQ,SAAS,GAAG,aAAc,IAAIpI,OAAO,CAAC,CAAC;AAC7C,IAAMqI,UAAU,GAAG,aAAc,IAAIrI,OAAO,CAAC,CAAC;AAC9C,IAAMsI,OAAO,GAAG,aAAc,IAAItI,OAAO,CAAC,CAAC;AAC3C,IAAMuI,KAAK,GAAG,aAAc,IAAIvI,OAAO,CAAC,CAAC;AAEzC,IAAMwI,MAAM,GAAG,aAAc,IAAIxI,OAAO,CAAC,CAAC;AAC1C,IAAMyI,MAAM,GAAG,aAAc,IAAIzI,OAAO,CAAC,CAAC;AAC1C,IAAM0I,SAAS,GAAG,aAAc,IAAI1I,OAAO,CAAC,CAAC;AAAC,IAExC2I,GAAG;EAER,SAAAA,IAAaC,MAAM,GAAG,IAAI5I,OAAO,CAAC,CAAC,EAAE6I,SAAS,GAAG,IAAI7I,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EAAG;IAAApuB,eAAA,OAAA+2B,GAAA;IAE3E,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAE3B;EAACz2B,YAAA,CAAAu2B,GAAA;IAAAp/B,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK6jB,MAAM,EAAEC,SAAS,EAAG;MAExB,IAAI,CAACD,MAAM,CAACpiB,IAAI,CAAEoiB,MAAO,CAAC;MAC1B,IAAI,CAACC,SAAS,CAACriB,IAAI,CAAEqiB,SAAU,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAt/B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMsiB,GAAG,EAAG;MAEX,IAAI,CAACF,MAAM,CAACpiB,IAAI,CAAEsiB,GAAG,CAACF,MAAO,CAAC;MAC9B,IAAI,CAACC,SAAS,CAACriB,IAAI,CAAEsiB,GAAG,CAACD,SAAU,CAAC;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAAt/B,GAAA;IAAAE,KAAA,EAED,SAAAs/B,GAAI9mB,CAAC,EAAEjQ,MAAM,EAAG;MAEf,OAAOA,MAAM,CAACwU,IAAI,CAAE,IAAI,CAACoiB,MAAO,CAAC,CAAC/hB,eAAe,CAAE,IAAI,CAACgiB,SAAS,EAAE5mB,CAAE,CAAC;IAEvE;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAAu/B,OAAQviB,CAAC,EAAG;MAEX,IAAI,CAACoiB,SAAS,CAACriB,IAAI,CAAEC,CAAE,CAAC,CAACK,GAAG,CAAE,IAAI,CAAC8hB,MAAO,CAAC,CAACljB,SAAS,CAAC,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAAw/B,OAAQhnB,CAAC,EAAG;MAEX,IAAI,CAAC2mB,MAAM,CAACpiB,IAAI,CAAE,IAAI,CAACuiB,EAAE,CAAE9mB,CAAC,EAAEmmB,SAAU,CAAE,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA7+B,GAAA;IAAAE,KAAA,EAED,SAAAy/B,oBAAqBxE,KAAK,EAAE1yB,MAAM,EAAG;MAEpCA,MAAM,CAACgV,UAAU,CAAE0d,KAAK,EAAE,IAAI,CAACkE,MAAO,CAAC;MAEvC,IAAMO,iBAAiB,GAAGn3B,MAAM,CAAC+V,GAAG,CAAE,IAAI,CAAC8gB,SAAU,CAAC;MAEtD,IAAKM,iBAAiB,GAAG,CAAC,EAAG;QAE5B,OAAOn3B,MAAM,CAACwU,IAAI,CAAE,IAAI,CAACoiB,MAAO,CAAC;MAElC;MAEA,OAAO52B,MAAM,CAACwU,IAAI,CAAE,IAAI,CAACoiB,MAAO,CAAC,CAAC/hB,eAAe,CAAE,IAAI,CAACgiB,SAAS,EAAEM,iBAAkB,CAAC;IAEvF;EAAC;IAAA5/B,GAAA;IAAAE,KAAA,EAED,SAAAq9B,gBAAiBpC,KAAK,EAAG;MAExB,OAAOnkB,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACkhB,iBAAiB,CAAE1E,KAAM,CAAE,CAAC;IAEpD;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA2/B,kBAAmB1E,KAAK,EAAG;MAE1B,IAAMyE,iBAAiB,GAAGf,SAAS,CAACphB,UAAU,CAAE0d,KAAK,EAAE,IAAI,CAACkE,MAAO,CAAC,CAAC7gB,GAAG,CAAE,IAAI,CAAC8gB,SAAU,CAAC;;MAE1F;;MAEA,IAAKM,iBAAiB,GAAG,CAAC,EAAG;QAE5B,OAAO,IAAI,CAACP,MAAM,CAACjgB,iBAAiB,CAAE+b,KAAM,CAAC;MAE9C;MAEA0D,SAAS,CAAC5hB,IAAI,CAAE,IAAI,CAACoiB,MAAO,CAAC,CAAC/hB,eAAe,CAAE,IAAI,CAACgiB,SAAS,EAAEM,iBAAkB,CAAC;MAElF,OAAOf,SAAS,CAACzf,iBAAiB,CAAE+b,KAAM,CAAC;IAE5C;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA4/B,oBAAqBlC,EAAE,EAAEje,EAAE,EAAEogB,kBAAkB,EAAEC,sBAAsB,EAAG;MAEzE;MACA;MACA;MACA;MACA;MACA;;MAEAlB,UAAU,CAAC7hB,IAAI,CAAE2gB,EAAG,CAAC,CAACzgB,GAAG,CAAEwC,EAAG,CAAC,CAAChC,cAAc,CAAE,GAAI,CAAC;MACrDohB,OAAO,CAAC9hB,IAAI,CAAE0C,EAAG,CAAC,CAACpC,GAAG,CAAEqgB,EAAG,CAAC,CAACzhB,SAAS,CAAC,CAAC;MACxC6iB,KAAK,CAAC/hB,IAAI,CAAE,IAAI,CAACoiB,MAAO,CAAC,CAAC9hB,GAAG,CAAEuhB,UAAW,CAAC;MAE3C,IAAMmB,SAAS,GAAGrC,EAAE,CAACze,UAAU,CAAEQ,EAAG,CAAC,GAAG,GAAG;MAC3C,IAAMugB,GAAG,GAAG,CAAE,IAAI,CAACZ,SAAS,CAAC9gB,GAAG,CAAEugB,OAAQ,CAAC;MAC3C,IAAMoB,EAAE,GAAGnB,KAAK,CAACxgB,GAAG,CAAE,IAAI,CAAC8gB,SAAU,CAAC;MACtC,IAAMjnB,EAAE,GAAG,CAAE2mB,KAAK,CAACxgB,GAAG,CAAEugB,OAAQ,CAAC;MACjC,IAAMnkB,CAAC,GAAGokB,KAAK,CAACtgB,QAAQ,CAAC,CAAC;MAC1B,IAAMkF,GAAG,GAAG5M,IAAI,CAACgC,GAAG,CAAE,CAAC,GAAGknB,GAAG,GAAGA,GAAI,CAAC;MACrC,IAAIE,EAAE,EAAExN,EAAE,EAAEyN,OAAO,EAAEC,MAAM;MAE3B,IAAK1c,GAAG,GAAG,CAAC,EAAG;QAEd;;QAEAwc,EAAE,GAAGF,GAAG,GAAG7nB,EAAE,GAAG8nB,EAAE;QAClBvN,EAAE,GAAGsN,GAAG,GAAGC,EAAE,GAAG9nB,EAAE;QAClBioB,MAAM,GAAGL,SAAS,GAAGrc,GAAG;QAExB,IAAKwc,EAAE,IAAI,CAAC,EAAG;UAEd,IAAKxN,EAAE,IAAI,CAAE0N,MAAM,EAAG;YAErB,IAAK1N,EAAE,IAAI0N,MAAM,EAAG;cAEnB;cACA;;cAEA,IAAMC,MAAM,GAAG,CAAC,GAAG3c,GAAG;cACtBwc,EAAE,IAAIG,MAAM;cACZ3N,EAAE,IAAI2N,MAAM;cACZF,OAAO,GAAGD,EAAE,IAAKA,EAAE,GAAGF,GAAG,GAAGtN,EAAE,GAAG,CAAC,GAAGuN,EAAE,CAAE,GAAGvN,EAAE,IAAKsN,GAAG,GAAGE,EAAE,GAAGxN,EAAE,GAAG,CAAC,GAAGva,EAAE,CAAE,GAAGuC,CAAC;YAEhF,CAAC,MAAM;cAEN;;cAEAgY,EAAE,GAAGqN,SAAS;cACdG,EAAE,GAAGppB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIqoB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAG,CAAC;cACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGva,EAAE,CAAE,GAAGuC,CAAC;YAE/C;UAED,CAAC,MAAM;YAEN;;YAEAgY,EAAE,GAAG,CAAEqN,SAAS;YAChBG,EAAE,GAAGppB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIqoB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAG,CAAC;YACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGva,EAAE,CAAE,GAAGuC,CAAC;UAE/C;QAED,CAAC,MAAM;UAEN,IAAKgY,EAAE,IAAI,CAAE0N,MAAM,EAAG;YAErB;;YAEAF,EAAE,GAAGppB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAI,CAAEqoB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAG,CAAC;YAChDvN,EAAE,GAAKwN,EAAE,GAAG,CAAC,GAAK,CAAEH,SAAS,GAAGjpB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEooB,SAAS,EAAE,CAAE5nB,EAAG,CAAC,EAAE4nB,SAAU,CAAC;YACpFI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGva,EAAE,CAAE,GAAGuC,CAAC;UAE/C,CAAC,MAAM,IAAKgY,EAAE,IAAI0N,MAAM,EAAG;YAE1B;;YAEAF,EAAE,GAAG,CAAC;YACNxN,EAAE,GAAG5b,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEooB,SAAS,EAAE,CAAE5nB,EAAG,CAAC,EAAE4nB,SAAU,CAAC;YACzDI,OAAO,GAAGzN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGva,EAAE,CAAE,GAAGuC,CAAC;UAEnC,CAAC,MAAM;YAEN;;YAEAwlB,EAAE,GAAGppB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIqoB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAG,CAAC;YAC9CvN,EAAE,GAAKwN,EAAE,GAAG,CAAC,GAAKH,SAAS,GAAGjpB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAEooB,SAAS,EAAE,CAAE5nB,EAAG,CAAC,EAAE4nB,SAAU,CAAC;YAClFI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGva,EAAE,CAAE,GAAGuC,CAAC;UAE/C;QAED;MAED,CAAC,MAAM;QAEN;;QAEAgY,EAAE,GAAKsN,GAAG,GAAG,CAAC,GAAK,CAAED,SAAS,GAAGA,SAAS;QAC1CG,EAAE,GAAGppB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAIqoB,GAAG,GAAGtN,EAAE,GAAGuN,EAAE,CAAG,CAAC;QACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGxN,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGva,EAAE,CAAE,GAAGuC,CAAC;MAE/C;MAEA,IAAKmlB,kBAAkB,EAAG;QAEzBA,kBAAkB,CAAC9iB,IAAI,CAAE,IAAI,CAACoiB,MAAO,CAAC,CAAC/hB,eAAe,CAAE,IAAI,CAACgiB,SAAS,EAAEc,EAAG,CAAC;MAE7E;MAEA,IAAKJ,sBAAsB,EAAG;QAE7BA,sBAAsB,CAAC/iB,IAAI,CAAE6hB,UAAW,CAAC,CAACxhB,eAAe,CAAEyhB,OAAO,EAAEnM,EAAG,CAAC;MAEzE;MAEA,OAAOyN,OAAO;IAEf;EAAC;IAAArgC,GAAA;IAAAE,KAAA,EAED,SAAAsgC,gBAAiBnE,MAAM,EAAE5zB,MAAM,EAAG;MAEjCo2B,SAAS,CAACphB,UAAU,CAAE4e,MAAM,CAAC/b,MAAM,EAAE,IAAI,CAAC+e,MAAO,CAAC;MAClD,IAAMoB,GAAG,GAAG5B,SAAS,CAACrgB,GAAG,CAAE,IAAI,CAAC8gB,SAAU,CAAC;MAC3C,IAAM/nB,EAAE,GAAGsnB,SAAS,CAACrgB,GAAG,CAAEqgB,SAAU,CAAC,GAAG4B,GAAG,GAAGA,GAAG;MACjD,IAAMC,OAAO,GAAGrE,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAM;MAE7C,IAAK3hB,EAAE,GAAGmpB,OAAO,EAAG,OAAO,IAAI;MAE/B,IAAMC,GAAG,GAAG3pB,IAAI,CAAC2H,IAAI,CAAE+hB,OAAO,GAAGnpB,EAAG,CAAC;;MAErC;MACA,IAAMqpB,EAAE,GAAGH,GAAG,GAAGE,GAAG;;MAEpB;MACA,IAAME,EAAE,GAAGJ,GAAG,GAAGE,GAAG;;MAEpB;MACA,IAAKE,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI;;MAEzB;MACA;MACA;MACA,IAAKD,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI,CAACpB,EAAE,CAAEqB,EAAE,EAAEp4B,MAAO,CAAC;;MAE1C;MACA,OAAO,IAAI,CAAC+2B,EAAE,CAAEoB,EAAE,EAAEn4B,MAAO,CAAC;IAE7B;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAk8B,iBAAkBC,MAAM,EAAG;MAE1B,OAAO,IAAI,CAACwD,iBAAiB,CAAExD,MAAM,CAAC/b,MAAO,CAAC,IAAM+b,MAAM,CAACnD,MAAM,GAAGmD,MAAM,CAACnD,MAAQ;IAEpF;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAA4gC,gBAAiBtE,KAAK,EAAG;MAExB,IAAMxd,WAAW,GAAGwd,KAAK,CAAC1D,MAAM,CAACta,GAAG,CAAE,IAAI,CAAC8gB,SAAU,CAAC;MAEtD,IAAKtgB,WAAW,KAAK,CAAC,EAAG;QAExB;QACA,IAAKwd,KAAK,CAACe,eAAe,CAAE,IAAI,CAAC8B,MAAO,CAAC,KAAK,CAAC,EAAG;UAEjD,OAAO,CAAC;QAET;;QAEA;;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAM3mB,CAAC,GAAG,EAAI,IAAI,CAAC2mB,MAAM,CAAC7gB,GAAG,CAAEge,KAAK,CAAC1D,MAAO,CAAC,GAAG0D,KAAK,CAACC,QAAQ,CAAE,GAAGzd,WAAW;;MAE9E;;MAEA,OAAOtG,CAAC,IAAI,CAAC,GAAGA,CAAC,GAAG,IAAI;IAEzB;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAA6gC,eAAgBvE,KAAK,EAAE/zB,MAAM,EAAG;MAE/B,IAAMiQ,CAAC,GAAG,IAAI,CAACooB,eAAe,CAAEtE,KAAM,CAAC;MAEvC,IAAK9jB,CAAC,KAAK,IAAI,EAAG;QAEjB,OAAO,IAAI;MAEZ;MAEA,OAAO,IAAI,CAAC8mB,EAAE,CAAE9mB,CAAC,EAAEjQ,MAAO,CAAC;IAE5B;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAq8B,gBAAiBC,KAAK,EAAG;MAExB;;MAEA,IAAMwE,WAAW,GAAGxE,KAAK,CAACe,eAAe,CAAE,IAAI,CAAC8B,MAAO,CAAC;MAExD,IAAK2B,WAAW,KAAK,CAAC,EAAG;QAExB,OAAO,IAAI;MAEZ;MAEA,IAAMhiB,WAAW,GAAGwd,KAAK,CAAC1D,MAAM,CAACta,GAAG,CAAE,IAAI,CAAC8gB,SAAU,CAAC;MAEtD,IAAKtgB,WAAW,GAAGgiB,WAAW,GAAG,CAAC,EAAG;QAEpC,OAAO,IAAI;MAEZ;;MAEA;;MAEA,OAAO,KAAK;IAEb;EAAC;IAAAhhC,GAAA;IAAAE,KAAA,EAED,SAAA+gC,aAAclG,GAAG,EAAEtyB,MAAM,EAAG;MAE3B,IAAIy4B,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK;MAE1C,IAAMC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAClC,SAAS,CAACpnB,CAAC;QACnCupB,OAAO,GAAG,CAAC,GAAG,IAAI,CAACnC,SAAS,CAAC9mB,CAAC;QAC9BkpB,OAAO,GAAG,CAAC,GAAG,IAAI,CAACpC,SAAS,CAACvS,CAAC;MAE/B,IAAMsS,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKmC,OAAO,IAAI,CAAC,EAAG;QAEnBN,IAAI,GAAG,CAAEnG,GAAG,CAACnjB,GAAG,CAACM,CAAC,GAAGmnB,MAAM,CAACnnB,CAAC,IAAKspB,OAAO;QACzCL,IAAI,GAAG,CAAEpG,GAAG,CAACljB,GAAG,CAACK,CAAC,GAAGmnB,MAAM,CAACnnB,CAAC,IAAKspB,OAAO;MAE1C,CAAC,MAAM;QAENN,IAAI,GAAG,CAAEnG,GAAG,CAACljB,GAAG,CAACK,CAAC,GAAGmnB,MAAM,CAACnnB,CAAC,IAAKspB,OAAO;QACzCL,IAAI,GAAG,CAAEpG,GAAG,CAACnjB,GAAG,CAACM,CAAC,GAAGmnB,MAAM,CAACnnB,CAAC,IAAKspB,OAAO;MAE1C;MAEA,IAAKC,OAAO,IAAI,CAAC,EAAG;QAEnBL,KAAK,GAAG,CAAErG,GAAG,CAACnjB,GAAG,CAACY,CAAC,GAAG6mB,MAAM,CAAC7mB,CAAC,IAAKipB,OAAO;QAC1CJ,KAAK,GAAG,CAAEtG,GAAG,CAACljB,GAAG,CAACW,CAAC,GAAG6mB,MAAM,CAAC7mB,CAAC,IAAKipB,OAAO;MAE3C,CAAC,MAAM;QAENL,KAAK,GAAG,CAAErG,GAAG,CAACljB,GAAG,CAACW,CAAC,GAAG6mB,MAAM,CAAC7mB,CAAC,IAAKipB,OAAO;QAC1CJ,KAAK,GAAG,CAAEtG,GAAG,CAACnjB,GAAG,CAACY,CAAC,GAAG6mB,MAAM,CAAC7mB,CAAC,IAAKipB,OAAO;MAE3C;MAEA,IAAOP,IAAI,GAAGG,KAAK,IAAQD,KAAK,GAAGD,IAAM,EAAG,OAAO,IAAI;MAEvD,IAAKC,KAAK,GAAGF,IAAI,IAAIt7B,KAAK,CAAEs7B,IAAK,CAAC,EAAGA,IAAI,GAAGE,KAAK;MAEjD,IAAKC,KAAK,GAAGF,IAAI,IAAIv7B,KAAK,CAAEu7B,IAAK,CAAC,EAAGA,IAAI,GAAGE,KAAK;MAEjD,IAAKK,OAAO,IAAI,CAAC,EAAG;QAEnBJ,KAAK,GAAG,CAAEvG,GAAG,CAACnjB,GAAG,CAACmV,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;QAC1CH,KAAK,GAAG,CAAExG,GAAG,CAACljB,GAAG,CAACkV,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;MAE3C,CAAC,MAAM;QAENJ,KAAK,GAAG,CAAEvG,GAAG,CAACljB,GAAG,CAACkV,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;QAC1CH,KAAK,GAAG,CAAExG,GAAG,CAACnjB,GAAG,CAACmV,CAAC,GAAGsS,MAAM,CAACtS,CAAC,IAAK2U,OAAO;MAE3C;MAEA,IAAOR,IAAI,GAAGK,KAAK,IAAQD,KAAK,GAAGH,IAAM,EAAG,OAAO,IAAI;MAEvD,IAAKG,KAAK,GAAGJ,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGI,KAAK;MAEjD,IAAKC,KAAK,GAAGJ,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGI,KAAK;;MAEjD;;MAEA,IAAKJ,IAAI,GAAG,CAAC,EAAG,OAAO,IAAI;MAE3B,OAAO,IAAI,CAAC3B,EAAE,CAAE0B,IAAI,IAAI,CAAC,GAAGA,IAAI,GAAGC,IAAI,EAAE14B,MAAO,CAAC;IAElD;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAi8B,cAAepB,GAAG,EAAG;MAEpB,OAAO,IAAI,CAACkG,YAAY,CAAElG,GAAG,EAAE8D,SAAU,CAAC,KAAK,IAAI;IAEpD;EAAC;IAAA7+B,GAAA;IAAAE,KAAA,EAED,SAAAyhC,kBAAmBjnB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEgnB,eAAe,EAAEn5B,MAAM,EAAG;MAErD;;MAEA;;MAEAw2B,MAAM,CAACxhB,UAAU,CAAE9C,CAAC,EAAED,CAAE,CAAC;MACzBwkB,MAAM,CAACzhB,UAAU,CAAE7C,CAAC,EAAEF,CAAE,CAAC;MACzBykB,SAAS,CAACjH,YAAY,CAAE+G,MAAM,EAAEC,MAAO,CAAC;;MAExC;MACA;MACA;MACA;MACA;MACA,IAAI2C,GAAG,GAAG,IAAI,CAACvC,SAAS,CAAC9gB,GAAG,CAAE2gB,SAAU,CAAC;MACzC,IAAI2C,IAAI;MAER,IAAKD,GAAG,GAAG,CAAC,EAAG;QAEd,IAAKD,eAAe,EAAG,OAAO,IAAI;QAClCE,IAAI,GAAG,CAAC;MAET,CAAC,MAAM,IAAKD,GAAG,GAAG,CAAC,EAAG;QAErBC,IAAI,GAAG,CAAE,CAAC;QACVD,GAAG,GAAG,CAAEA,GAAG;MAEZ,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;MAEA7C,KAAK,CAACvhB,UAAU,CAAE,IAAI,CAAC4hB,MAAM,EAAE3kB,CAAE,CAAC;MAClC,IAAMqnB,MAAM,GAAGD,IAAI,GAAG,IAAI,CAACxC,SAAS,CAAC9gB,GAAG,CAAE0gB,MAAM,CAAChH,YAAY,CAAE8G,KAAK,EAAEE,MAAO,CAAE,CAAC;;MAEhF;MACA,IAAK6C,MAAM,GAAG,CAAC,EAAG;QAEjB,OAAO,IAAI;MAEZ;MAEA,IAAMC,MAAM,GAAGF,IAAI,GAAG,IAAI,CAACxC,SAAS,CAAC9gB,GAAG,CAAEygB,MAAM,CAACxgB,KAAK,CAAEugB,KAAM,CAAE,CAAC;;MAEjE;MACA,IAAKgD,MAAM,GAAG,CAAC,EAAG;QAEjB,OAAO,IAAI;MAEZ;;MAEA;MACA,IAAKD,MAAM,GAAGC,MAAM,GAAGH,GAAG,EAAG;QAE5B,OAAO,IAAI;MAEZ;;MAEA;MACA,IAAMI,GAAG,GAAG,CAAEH,IAAI,GAAG9C,KAAK,CAACxgB,GAAG,CAAE2gB,SAAU,CAAC;;MAE3C;MACA,IAAK8C,GAAG,GAAG,CAAC,EAAG;QAEd,OAAO,IAAI;MAEZ;;MAEA;MACA,OAAO,IAAI,CAACzC,EAAE,CAAEyC,GAAG,GAAGJ,GAAG,EAAEp5B,MAAO,CAAC;IAEpC;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcnJ,OAAO,EAAG;MAEvB,IAAI,CAACob,MAAM,CAACjS,YAAY,CAAEnJ,OAAQ,CAAC;MACnC,IAAI,CAACqb,SAAS,CAACrH,kBAAkB,CAAEhU,OAAQ,CAAC;MAE5C,OAAO,IAAI;IAEZ;EAAC;IAAAjkB,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQ0f,GAAG,EAAG;MAEb,OAAOA,GAAG,CAACF,MAAM,CAACxf,MAAM,CAAE,IAAI,CAACwf,MAAO,CAAC,IAAIE,GAAG,CAACD,SAAS,CAACzf,MAAM,CAAE,IAAI,CAACyf,SAAU,CAAC;IAElF;EAAC;IAAAt/B,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAmiB,GAAA;AAAA;AAAA5/B,OAAA,CAAA4/B,GAAA,GAAAA,GAAA;AAAA,IAII8C,OAAO;EAEZ,SAAAA,QAAaxhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEuhB,GAAG,EAAEthB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEqhB,GAAG,EAAEphB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEmhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;IAAAp6B,eAAA,OAAA65B,OAAA;IAE7FA,OAAO,CAACviC,SAAS,CAAC+iC,SAAS,GAAG,IAAI;IAElC,IAAI,CAAC1kB,QAAQ,GAAG,CAEf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;IAED,IAAK0C,GAAG,KAAKnc,SAAS,EAAG;MAExB,IAAI,CAACiX,GAAG,CAAEkF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEuhB,GAAG,EAAEthB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEqhB,GAAG,EAAEphB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEmhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;IAE3F;EAED;EAAC55B,YAAA,CAAAq5B,OAAA;IAAAliC,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKkF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEuhB,GAAG,EAAEthB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEqhB,GAAG,EAAEphB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEmhB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAErF,IAAMrhB,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBoD,EAAE,CAAE,CAAC,CAAE,GAAGV,GAAG;MAAEU,EAAE,CAAE,CAAC,CAAE,GAAGT,GAAG;MAAES,EAAE,CAAE,CAAC,CAAE,GAAGR,GAAG;MAAEQ,EAAE,CAAE,EAAE,CAAE,GAAG+gB,GAAG;MAC3D/gB,EAAE,CAAE,CAAC,CAAE,GAAGP,GAAG;MAAEO,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;MAAEM,EAAE,CAAE,CAAC,CAAE,GAAGL,GAAG;MAAEK,EAAE,CAAE,EAAE,CAAE,GAAGghB,GAAG;MAC3DhhB,EAAE,CAAE,CAAC,CAAE,GAAGJ,GAAG;MAAEI,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;MAAEG,EAAE,CAAE,EAAE,CAAE,GAAGF,GAAG;MAAEE,EAAE,CAAE,EAAE,CAAE,GAAGihB,GAAG;MAC5DjhB,EAAE,CAAE,CAAC,CAAE,GAAGkhB,GAAG;MAAElhB,EAAE,CAAE,CAAC,CAAE,GAAGmhB,GAAG;MAAEnhB,EAAE,CAAE,EAAE,CAAE,GAAGohB,GAAG;MAAEphB,EAAE,CAAE,EAAE,CAAE,GAAGqhB,GAAG;MAE5D,OAAO,IAAI;IAEZ;EAAC;IAAAziC,GAAA;IAAAE,KAAA,EAED,SAAAmhB,SAAA,EAAW;MAEV,IAAI,CAAC7F,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAxb,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAIklB,OAAO,CAAC,CAAC,CAACpiB,SAAS,CAAE,IAAI,CAAC9B,QAAS,CAAC;IAEhD;EAAC;IAAAhe,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMjF,CAAC,EAAG;MAET,IAAMoJ,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAGtJ,CAAC,CAACgG,QAAQ;MAErBoD,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAC1EF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAC1EF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAC9EF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAElF,OAAO,IAAI;IAEZ;EAAC;IAAAthB,GAAA;IAAAE,KAAA,EAED,SAAAyiC,aAAc3qB,CAAC,EAAG;MAEjB,IAAMoJ,EAAE,GAAG,IAAI,CAACpD,QAAQ;QAAEsD,EAAE,GAAGtJ,CAAC,CAACgG,QAAQ;MAEzCoD,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MACnBF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MACnBF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAEnB,OAAO,IAAI;IAEZ;EAAC;IAAAthB,GAAA;IAAAE,KAAA,EAED,SAAA0iC,eAAgB5qB,CAAC,EAAG;MAEnB,IAAMsJ,EAAE,GAAGtJ,CAAC,CAACgG,QAAQ;MAErB,IAAI,CAACxC,GAAG,CAEP8F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAthB,GAAA;IAAAE,KAAA,EAED,SAAAqhB,aAAcC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEnCF,KAAK,CAACiY,mBAAmB,CAAE,IAAI,EAAE,CAAE,CAAC;MACpChY,KAAK,CAACgY,mBAAmB,CAAE,IAAI,EAAE,CAAE,CAAC;MACpC/X,KAAK,CAAC+X,mBAAmB,CAAE,IAAI,EAAE,CAAE,CAAC;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAAz5B,GAAA;IAAAE,KAAA,EAED,SAAA2iC,UAAWrhB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEhC,IAAI,CAAClG,GAAG,CACPgG,KAAK,CAACtJ,CAAC,EAAEuJ,KAAK,CAACvJ,CAAC,EAAEwJ,KAAK,CAACxJ,CAAC,EAAE,CAAC,EAC5BsJ,KAAK,CAAChJ,CAAC,EAAEiJ,KAAK,CAACjJ,CAAC,EAAEkJ,KAAK,CAAClJ,CAAC,EAAE,CAAC,EAC5BgJ,KAAK,CAACuL,CAAC,EAAEtL,KAAK,CAACsL,CAAC,EAAErL,KAAK,CAACqL,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CACV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA4iC,gBAAiB9qB,CAAC,EAAG;MAEpB;;MAEA,IAAMoJ,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAGtJ,CAAC,CAACgG,QAAQ;MAErB,IAAM+kB,MAAM,GAAG,CAAC,GAAGC,KAAK,CAACvJ,mBAAmB,CAAEzhB,CAAC,EAAE,CAAE,CAAC,CAACnS,MAAM,CAAC,CAAC;MAC7D,IAAMo9B,MAAM,GAAG,CAAC,GAAGD,KAAK,CAACvJ,mBAAmB,CAAEzhB,CAAC,EAAE,CAAE,CAAC,CAACnS,MAAM,CAAC,CAAC;MAC7D,IAAMq9B,MAAM,GAAG,CAAC,GAAGF,KAAK,CAACvJ,mBAAmB,CAAEzhB,CAAC,EAAE,CAAE,CAAC,CAACnS,MAAM,CAAC,CAAC;MAE7Dub,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAGyhB,MAAM;MAC1B3hB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAGyhB,MAAM;MAC1B3hB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAGyhB,MAAM;MAC1B3hB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG2hB,MAAM;MAC1B7hB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG2hB,MAAM;MAC1B7hB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG2hB,MAAM;MAC1B7hB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG4hB,MAAM;MAC1B9hB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG4hB,MAAM;MAC1B9hB,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE,GAAG4hB,MAAM;MAC5B9hB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAphB,GAAA;IAAAE,KAAA,EAED,SAAAijC,sBAAuB5Q,KAAK,EAAG;MAE9B,IAAMnR,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAM9F,CAAC,GAAGqa,KAAK,CAACra,CAAC;QAAEM,CAAC,GAAG+Z,KAAK,CAAC/Z,CAAC;QAAEuU,CAAC,GAAGwF,KAAK,CAACxF,CAAC;MAC3C,IAAMrS,CAAC,GAAG1D,IAAI,CAAC8D,GAAG,CAAE5C,CAAE,CAAC;QAAEyC,CAAC,GAAG3D,IAAI,CAAC+D,GAAG,CAAE7C,CAAE,CAAC;MAC1C,IAAM0C,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEtC,CAAE,CAAC;QAAE4K,CAAC,GAAGpM,IAAI,CAAC+D,GAAG,CAAEvC,CAAE,CAAC;MAC1C,IAAMuF,CAAC,GAAG/G,IAAI,CAAC8D,GAAG,CAAEiS,CAAE,CAAC;QAAE1J,CAAC,GAAGrM,IAAI,CAAC+D,GAAG,CAAEgS,CAAE,CAAC;MAE1C,IAAKwF,KAAK,CAAC1X,KAAK,KAAK,KAAK,EAAG;QAE5B,IAAMkH,EAAE,GAAGrH,CAAC,GAAGqD,CAAC;UAAEqlB,EAAE,GAAG1oB,CAAC,GAAG2I,CAAC;UAAErB,EAAE,GAAGrH,CAAC,GAAGoD,CAAC;UAAEslB,EAAE,GAAG1oB,CAAC,GAAG0I,CAAC;QAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGxG,CAAC,GAAGmD,CAAC;QACfqD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAExG,CAAC,GAAGyI,CAAC;QACjBjC,EAAE,CAAE,CAAC,CAAE,GAAGgC,CAAC;QAEXhC,EAAE,CAAE,CAAC,CAAE,GAAGgiB,EAAE,GAAGphB,EAAE,GAAGoB,CAAC;QACrBhC,EAAE,CAAE,CAAC,CAAE,GAAGW,EAAE,GAAGshB,EAAE,GAAGjgB,CAAC;QACrBhC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEzG,CAAC,GAAGC,CAAC;QAEjBwG,EAAE,CAAE,CAAC,CAAE,GAAGiiB,EAAE,GAAGthB,EAAE,GAAGqB,CAAC;QACrBhC,EAAE,CAAE,CAAC,CAAE,GAAGY,EAAE,GAAGohB,EAAE,GAAGhgB,CAAC;QACrBhC,EAAE,CAAE,EAAE,CAAE,GAAG1G,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK2X,KAAK,CAAC1X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAMyoB,EAAE,GAAG1oB,CAAC,GAAGmD,CAAC;UAAEwlB,EAAE,GAAG3oB,CAAC,GAAGyI,CAAC;UAAEmgB,EAAE,GAAGpgB,CAAC,GAAGrF,CAAC;UAAE0lB,EAAE,GAAGrgB,CAAC,GAAGC,CAAC;QAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGkiB,EAAE,GAAGG,EAAE,GAAG9oB,CAAC;QACrByG,EAAE,CAAE,CAAC,CAAE,GAAGoiB,EAAE,GAAG7oB,CAAC,GAAG4oB,EAAE;QACrBniB,EAAE,CAAE,CAAC,CAAE,GAAG1G,CAAC,GAAG0I,CAAC;QAEfhC,EAAE,CAAE,CAAC,CAAE,GAAG1G,CAAC,GAAG2I,CAAC;QACfjC,EAAE,CAAE,CAAC,CAAE,GAAG1G,CAAC,GAAGqD,CAAC;QACfqD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEzG,CAAC;QAEbyG,EAAE,CAAE,CAAC,CAAE,GAAGmiB,EAAE,GAAG5oB,CAAC,GAAG6oB,EAAE;QACrBpiB,EAAE,CAAE,CAAC,CAAE,GAAGqiB,EAAE,GAAGH,EAAE,GAAG3oB,CAAC;QACrByG,EAAE,CAAE,EAAE,CAAE,GAAG1G,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK2X,KAAK,CAAC1X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAMyoB,GAAE,GAAG1oB,CAAC,GAAGmD,CAAC;UAAEwlB,GAAE,GAAG3oB,CAAC,GAAGyI,CAAC;UAAEmgB,GAAE,GAAGpgB,CAAC,GAAGrF,CAAC;UAAE0lB,GAAE,GAAGrgB,CAAC,GAAGC,CAAC;QAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGkiB,GAAE,GAAGG,GAAE,GAAG9oB,CAAC;QACrByG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE1G,CAAC,GAAG2I,CAAC;QACjBjC,EAAE,CAAE,CAAC,CAAE,GAAGoiB,GAAE,GAAGD,GAAE,GAAG5oB,CAAC;QAErByG,EAAE,CAAE,CAAC,CAAE,GAAGmiB,GAAE,GAAGC,GAAE,GAAG7oB,CAAC;QACrByG,EAAE,CAAE,CAAC,CAAE,GAAG1G,CAAC,GAAGqD,CAAC;QACfqD,EAAE,CAAE,CAAC,CAAE,GAAGqiB,GAAE,GAAGH,GAAE,GAAG3oB,CAAC;QAErByG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE1G,CAAC,GAAG0I,CAAC;QACjBhC,EAAE,CAAE,CAAC,CAAE,GAAGzG,CAAC;QACXyG,EAAE,CAAE,EAAE,CAAE,GAAG1G,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK2X,KAAK,CAAC1X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAMkH,GAAE,GAAGrH,CAAC,GAAGqD,CAAC;UAAEqlB,GAAE,GAAG1oB,CAAC,GAAG2I,CAAC;UAAErB,GAAE,GAAGrH,CAAC,GAAGoD,CAAC;UAAEslB,GAAE,GAAG1oB,CAAC,GAAG0I,CAAC;QAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGxG,CAAC,GAAGmD,CAAC;QACfqD,EAAE,CAAE,CAAC,CAAE,GAAGY,GAAE,GAAGoB,CAAC,GAAGggB,GAAE;QACrBhiB,EAAE,CAAE,CAAC,CAAE,GAAGW,GAAE,GAAGqB,CAAC,GAAGigB,GAAE;QAErBjiB,EAAE,CAAE,CAAC,CAAE,GAAGxG,CAAC,GAAGyI,CAAC;QACfjC,EAAE,CAAE,CAAC,CAAE,GAAGiiB,GAAE,GAAGjgB,CAAC,GAAGrB,GAAE;QACrBX,EAAE,CAAE,CAAC,CAAE,GAAGgiB,GAAE,GAAGhgB,CAAC,GAAGpB,GAAE;QAErBZ,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEgC,CAAC;QACbhC,EAAE,CAAE,CAAC,CAAE,GAAGzG,CAAC,GAAGC,CAAC;QACfwG,EAAE,CAAE,EAAE,CAAE,GAAG1G,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK2X,KAAK,CAAC1X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAM6oB,EAAE,GAAGhpB,CAAC,GAAGE,CAAC;UAAE+oB,EAAE,GAAGjpB,CAAC,GAAG0I,CAAC;UAAEwgB,EAAE,GAAGjpB,CAAC,GAAGC,CAAC;UAAEipB,EAAE,GAAGlpB,CAAC,GAAGyI,CAAC;QAEpDhC,EAAE,CAAE,CAAC,CAAE,GAAGxG,CAAC,GAAGmD,CAAC;QACfqD,EAAE,CAAE,CAAC,CAAE,GAAGyiB,EAAE,GAAGH,EAAE,GAAGrgB,CAAC;QACrBjC,EAAE,CAAE,CAAC,CAAE,GAAGwiB,EAAE,GAAGvgB,CAAC,GAAGsgB,EAAE;QAErBviB,EAAE,CAAE,CAAC,CAAE,GAAGiC,CAAC;QACXjC,EAAE,CAAE,CAAC,CAAE,GAAG1G,CAAC,GAAGqD,CAAC;QACfqD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEzG,CAAC,GAAGoD,CAAC;QAEjBqD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEgC,CAAC,GAAGrF,CAAC;QACjBqD,EAAE,CAAE,CAAC,CAAE,GAAGuiB,EAAE,GAAGtgB,CAAC,GAAGugB,EAAE;QACrBxiB,EAAE,CAAE,EAAE,CAAE,GAAGsiB,EAAE,GAAGG,EAAE,GAAGxgB,CAAC;MAEvB,CAAC,MAAM,IAAKkP,KAAK,CAAC1X,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAM6oB,GAAE,GAAGhpB,CAAC,GAAGE,CAAC;UAAE+oB,GAAE,GAAGjpB,CAAC,GAAG0I,CAAC;UAAEwgB,GAAE,GAAGjpB,CAAC,GAAGC,CAAC;UAAEipB,GAAE,GAAGlpB,CAAC,GAAGyI,CAAC;QAEpDhC,EAAE,CAAE,CAAC,CAAE,GAAGxG,CAAC,GAAGmD,CAAC;QACfqD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEiC,CAAC;QACbjC,EAAE,CAAE,CAAC,CAAE,GAAGgC,CAAC,GAAGrF,CAAC;QAEfqD,EAAE,CAAE,CAAC,CAAE,GAAGsiB,GAAE,GAAGrgB,CAAC,GAAGwgB,GAAE;QACrBziB,EAAE,CAAE,CAAC,CAAE,GAAG1G,CAAC,GAAGqD,CAAC;QACfqD,EAAE,CAAE,CAAC,CAAE,GAAGuiB,GAAE,GAAGtgB,CAAC,GAAGugB,GAAE;QAErBxiB,EAAE,CAAE,CAAC,CAAE,GAAGwiB,GAAE,GAAGvgB,CAAC,GAAGsgB,GAAE;QACrBviB,EAAE,CAAE,CAAC,CAAE,GAAGzG,CAAC,GAAGoD,CAAC;QACfqD,EAAE,CAAE,EAAE,CAAE,GAAGyiB,GAAE,GAAGxgB,CAAC,GAAGqgB,GAAE;MAEvB;;MAEA;MACAtiB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MACXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MACXA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;;MAEZ;MACAA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAphB,GAAA;IAAAE,KAAA,EAED,SAAA4jC,2BAA4BrpB,CAAC,EAAG;MAE/B,OAAO,IAAI,CAACspB,OAAO,CAAEC,KAAK,EAAEvpB,CAAC,EAAEwpB,IAAK,CAAC;IAEtC;EAAC;IAAAjkC,GAAA;IAAAE,KAAA,EAED,SAAAu/B,OAAQyE,GAAG,EAAEz7B,MAAM,EAAE07B,EAAE,EAAG;MAEzB,IAAM/iB,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBkU,EAAE,CAACzU,UAAU,CAAEymB,GAAG,EAAEz7B,MAAO,CAAC;MAE5B,IAAKypB,EAAE,CAACxT,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAG;QAE1B;;QAEAwT,EAAE,CAACnF,CAAC,GAAG,CAAC;MAET;MAEAmF,EAAE,CAAC/V,SAAS,CAAC,CAAC;MACd6V,EAAE,CAACkG,YAAY,CAAEiM,EAAE,EAAEjS,EAAG,CAAC;MAEzB,IAAKF,EAAE,CAACtT,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAG;QAE1B;;QAEA,IAAK1H,IAAI,CAACgC,GAAG,CAAEmrB,EAAE,CAACpX,CAAE,CAAC,KAAK,CAAC,EAAG;UAE7BmF,EAAE,CAACha,CAAC,IAAI,MAAM;QAEf,CAAC,MAAM;UAENga,EAAE,CAACnF,CAAC,IAAI,MAAM;QAEf;QAEAmF,EAAE,CAAC/V,SAAS,CAAC,CAAC;QACd6V,EAAE,CAACkG,YAAY,CAAEiM,EAAE,EAAEjS,EAAG,CAAC;MAE1B;MAEAF,EAAE,CAAC7V,SAAS,CAAC,CAAC;MACd8V,EAAE,CAACiG,YAAY,CAAEhG,EAAE,EAAEF,EAAG,CAAC;MAEzB5Q,EAAE,CAAE,CAAC,CAAE,GAAG4Q,EAAE,CAAC9Z,CAAC;MAAEkJ,EAAE,CAAE,CAAC,CAAE,GAAG6Q,EAAE,CAAC/Z,CAAC;MAAEkJ,EAAE,CAAE,CAAC,CAAE,GAAG8Q,EAAE,CAACha,CAAC;MAC9CkJ,EAAE,CAAE,CAAC,CAAE,GAAG4Q,EAAE,CAACxZ,CAAC;MAAE4I,EAAE,CAAE,CAAC,CAAE,GAAG6Q,EAAE,CAACzZ,CAAC;MAAE4I,EAAE,CAAE,CAAC,CAAE,GAAG8Q,EAAE,CAAC1Z,CAAC;MAC9C4I,EAAE,CAAE,CAAC,CAAE,GAAG4Q,EAAE,CAACjF,CAAC;MAAE3L,EAAE,CAAE,CAAC,CAAE,GAAG6Q,EAAE,CAAClF,CAAC;MAAE3L,EAAE,CAAE,EAAE,CAAE,GAAG8Q,EAAE,CAACnF,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAU1F,CAAC,EAAG;MAEb,OAAO,IAAI,CAAC6J,gBAAgB,CAAE,IAAI,EAAE7J,CAAE,CAAC;IAExC;EAAC;IAAAhY,GAAA;IAAAE,KAAA,EAED,SAAA4hB,YAAa9J,CAAC,EAAG;MAEhB,OAAO,IAAI,CAAC6J,gBAAgB,CAAE7J,CAAC,EAAE,IAAK,CAAC;IAExC;EAAC;IAAAhY,GAAA;IAAAE,KAAA,EAED,SAAA2hB,iBAAkBnH,CAAC,EAAEC,CAAC,EAAG;MAExB,IAAMoH,EAAE,GAAGrH,CAAC,CAACsD,QAAQ;MACrB,IAAMgE,EAAE,GAAGrH,CAAC,CAACqD,QAAQ;MACrB,IAAMoD,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMiE,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;QAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;QAAEI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;QAAEqiB,GAAG,GAAGriB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;QAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;QAAEO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;QAAEsiB,GAAG,GAAGtiB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;QAAES,GAAG,GAAGT,EAAE,CAAE,CAAC,CAAE;QAAEU,GAAG,GAAGV,EAAE,CAAE,EAAE,CAAE;QAAEuiB,GAAG,GAAGviB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAMwiB,GAAG,GAAGxiB,EAAE,CAAE,CAAC,CAAE;QAAEyiB,GAAG,GAAGziB,EAAE,CAAE,CAAC,CAAE;QAAE0iB,GAAG,GAAG1iB,EAAE,CAAE,EAAE,CAAE;QAAE2iB,GAAG,GAAG3iB,EAAE,CAAE,EAAE,CAAE;MAElE,IAAMW,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;QAAEW,GAAG,GAAGX,EAAE,CAAE,CAAC,CAAE;QAAEY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;QAAE2iB,GAAG,GAAG3iB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMa,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;QAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;QAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;QAAE4iB,GAAG,GAAG5iB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;QAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;QAAEkB,GAAG,GAAGlB,EAAE,CAAE,EAAE,CAAE;QAAE6iB,GAAG,GAAG7iB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAM8iB,GAAG,GAAG9iB,EAAE,CAAE,CAAC,CAAE;QAAE+iB,GAAG,GAAG/iB,EAAE,CAAE,CAAC,CAAE;QAAEgjB,GAAG,GAAGhjB,EAAE,CAAE,EAAE,CAAE;QAAEijB,GAAG,GAAGjjB,EAAE,CAAE,EAAE,CAAE;MAElEZ,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGohB,GAAG,GAAGU,GAAG;MACvD1jB,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG,GAAGmhB,GAAG,GAAGW,GAAG;MACvD3jB,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,GAAGe,GAAG,GAAGkhB,GAAG,GAAGY,GAAG;MACvD5jB,EAAE,CAAE,EAAE,CAAE,GAAGa,GAAG,GAAG0iB,GAAG,GAAGziB,GAAG,GAAG0iB,GAAG,GAAGziB,GAAG,GAAG0iB,GAAG,GAAGT,GAAG,GAAGa,GAAG;MAExD7jB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGqhB,GAAG,GAAGS,GAAG;MACvD1jB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGohB,GAAG,GAAGU,GAAG;MACvD3jB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGmhB,GAAG,GAAGW,GAAG;MACvD5jB,EAAE,CAAE,EAAE,CAAE,GAAGgB,GAAG,GAAGuiB,GAAG,GAAGtiB,GAAG,GAAGuiB,GAAG,GAAGtiB,GAAG,GAAGuiB,GAAG,GAAGR,GAAG,GAAGY,GAAG;MAExD7jB,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGshB,GAAG,GAAGQ,GAAG;MACvD1jB,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGqhB,GAAG,GAAGS,GAAG;MACvD3jB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGohB,GAAG,GAAGU,GAAG;MACxD5jB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGoiB,GAAG,GAAGniB,GAAG,GAAGoiB,GAAG,GAAGniB,GAAG,GAAGoiB,GAAG,GAAGP,GAAG,GAAGW,GAAG;MAExD7jB,EAAE,CAAE,CAAC,CAAE,GAAGmjB,GAAG,GAAG7hB,GAAG,GAAG8hB,GAAG,GAAG3hB,GAAG,GAAG4hB,GAAG,GAAGzhB,GAAG,GAAG0hB,GAAG,GAAGI,GAAG;MACvD1jB,EAAE,CAAE,CAAC,CAAE,GAAGmjB,GAAG,GAAG5hB,GAAG,GAAG6hB,GAAG,GAAG1hB,GAAG,GAAG2hB,GAAG,GAAGxhB,GAAG,GAAGyhB,GAAG,GAAGK,GAAG;MACvD3jB,EAAE,CAAE,EAAE,CAAE,GAAGmjB,GAAG,GAAG3hB,GAAG,GAAG4hB,GAAG,GAAGzhB,GAAG,GAAG0hB,GAAG,GAAGvhB,GAAG,GAAGwhB,GAAG,GAAGM,GAAG;MACxD5jB,EAAE,CAAE,EAAE,CAAE,GAAGmjB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGO,GAAG;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAjlC,GAAA;IAAAE,KAAA,EAED,SAAAyd,eAAgBhE,CAAC,EAAG;MAEnB,IAAMyH,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBoD,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,EAAE,CAAE,IAAIzH,CAAC;MACvDyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,EAAE,CAAE,IAAIzH,CAAC;MACvDyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,EAAE,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,EAAE,CAAE,IAAIzH,CAAC;MACxDyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,CAAC,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,EAAE,CAAE,IAAIzH,CAAC;MAAEyH,EAAE,CAAE,EAAE,CAAE,IAAIzH,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAijB,YAAA,EAAc;MAEb,IAAM/B,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAM0C,GAAG,GAAGU,EAAE,CAAE,CAAC,CAAE;QAAET,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAER,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAE+gB,GAAG,GAAG/gB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEghB,GAAG,GAAGhhB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,EAAE,CAAE;QAAEihB,GAAG,GAAGjhB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAMkhB,GAAG,GAAGlhB,EAAE,CAAE,CAAC,CAAE;QAAEmhB,GAAG,GAAGnhB,EAAE,CAAE,CAAC,CAAE;QAAEohB,GAAG,GAAGphB,EAAE,CAAE,EAAE,CAAE;QAAEqhB,GAAG,GAAGrhB,EAAE,CAAE,EAAE,CAAE;;MAElE;MACA;;MAEA,OACCkhB,GAAG,IACF,CAAEH,GAAG,GAAGphB,GAAG,GAAGE,GAAG,GACdL,GAAG,GAAGwhB,GAAG,GAAGnhB,GAAG,GACfkhB,GAAG,GAAGrhB,GAAG,GAAGI,GAAG,GACfP,GAAG,GAAGyhB,GAAG,GAAGlhB,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGuhB,GAAG,GACf1hB,GAAG,GAAGI,GAAG,GAAGshB,GAAG,CAClB,GACDE,GAAG,IACF,CAAE7hB,GAAG,GAAGK,GAAG,GAAGshB,GAAG,GACd3hB,GAAG,GAAG0hB,GAAG,GAAGlhB,GAAG,GACfihB,GAAG,GAAGthB,GAAG,GAAGK,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAGwhB,GAAG,GACfzhB,GAAG,GAAGwhB,GAAG,GAAGphB,GAAG,GACfmhB,GAAG,GAAGphB,GAAG,GAAGC,GAAG,CAClB,GACDwhB,GAAG,IACF,CAAE9hB,GAAG,GAAG0hB,GAAG,GAAGnhB,GAAG,GACdP,GAAG,GAAGI,GAAG,GAAGuhB,GAAG,GACfF,GAAG,GAAGthB,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGwhB,GAAG,GACfF,GAAG,GAAGrhB,GAAG,GAAGE,GAAG,GACfL,GAAG,GAAGyhB,GAAG,GAAGphB,GAAG,CAClB,GACDyhB,GAAG,IACF,CAAE7hB,GAAG,GAAGE,GAAG,GAAGE,GAAG,GACdN,GAAG,GAAGK,GAAG,GAAGE,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGC,GAAG,CAClB;IAIH;EAAC;IAAAhhB,GAAA;IAAAE,KAAA,EAED,SAAA4jB,UAAA,EAAY;MAEX,IAAM1C,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAI+F,GAAG;MAEPA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;MAC/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;MAC/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;MAE/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;MACjDA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;MACjDA,GAAG,GAAG3C,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAA/jB,GAAA;IAAAE,KAAA,EAED,SAAAglC,YAAahtB,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAEtB,IAAM3L,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAK9F,CAAC,CAACye,SAAS,EAAG;QAElBvV,EAAE,CAAE,EAAE,CAAE,GAAGlJ,CAAC,CAACA,CAAC;QACdkJ,EAAE,CAAE,EAAE,CAAE,GAAGlJ,CAAC,CAACM,CAAC;QACd4I,EAAE,CAAE,EAAE,CAAE,GAAGlJ,CAAC,CAAC6U,CAAC;MAEf,CAAC,MAAM;QAEN3L,EAAE,CAAE,EAAE,CAAE,GAAGlJ,CAAC;QACZkJ,EAAE,CAAE,EAAE,CAAE,GAAG5I,CAAC;QACZ4I,EAAE,CAAE,EAAE,CAAE,GAAG2L,CAAC;MAEb;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAsjB,OAAA,EAAS;MAER;MACA,IAAMpC,EAAE,GAAG,IAAI,CAACpD,QAAQ;QAEvB0C,GAAG,GAAGU,EAAE,CAAE,CAAC,CAAE;QAAEP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAAEkhB,GAAG,GAAGlhB,EAAE,CAAE,CAAC,CAAE;QAC1DT,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAAEmhB,GAAG,GAAGnhB,EAAE,CAAE,CAAC,CAAE;QAC1DR,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,EAAE,CAAE;QAAEohB,GAAG,GAAGphB,EAAE,CAAE,EAAE,CAAE;QAC5D+gB,GAAG,GAAG/gB,EAAE,CAAE,EAAE,CAAE;QAAEghB,GAAG,GAAGhhB,EAAE,CAAE,EAAE,CAAE;QAAEihB,GAAG,GAAGjhB,EAAE,CAAE,EAAE,CAAE;QAAEqhB,GAAG,GAAGrhB,EAAE,CAAE,EAAE,CAAE;QAE9DqC,GAAG,GAAG1C,GAAG,GAAGshB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGlhB,GAAG,GAAGqhB,GAAG,GAAGH,GAAG,GAAGnhB,GAAG,GAAGuhB,GAAG,GAAG1hB,GAAG,GAAGuhB,GAAG,GAAGG,GAAG,GAAGzhB,GAAG,GAAGE,GAAG,GAAGwhB,GAAG,GAAG3hB,GAAG,GAAGI,GAAG,GAAGuhB,GAAG;QAC/G/e,GAAG,GAAGye,GAAG,GAAGjhB,GAAG,GAAGqhB,GAAG,GAAG3hB,GAAG,GAAGyhB,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGlhB,GAAG,GAAGuhB,GAAG,GAAG7hB,GAAG,GAAG0hB,GAAG,GAAGG,GAAG,GAAG5hB,GAAG,GAAGK,GAAG,GAAGwhB,GAAG,GAAG9hB,GAAG,GAAGO,GAAG,GAAGuhB,GAAG;QAC/G9e,GAAG,GAAG/C,GAAG,GAAGwhB,GAAG,GAAGG,GAAG,GAAGJ,GAAG,GAAGphB,GAAG,GAAGwhB,GAAG,GAAGJ,GAAG,GAAGrhB,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAGyhB,GAAG,GAAGI,GAAG,GAAG5hB,GAAG,GAAGE,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAGI,GAAG,GAAG0hB,GAAG;QAC/G0C,GAAG,GAAGhD,GAAG,GAAGphB,GAAG,GAAGE,GAAG,GAAGL,GAAG,GAAGwhB,GAAG,GAAGnhB,GAAG,GAAGkhB,GAAG,GAAGrhB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGyhB,GAAG,GAAGlhB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGuhB,GAAG,GAAG1hB,GAAG,GAAGI,GAAG,GAAGshB,GAAG;MAEhH,IAAMze,GAAG,GAAGlD,GAAG,GAAG+C,GAAG,GAAG5C,GAAG,GAAG6C,GAAG,GAAG1C,GAAG,GAAG2C,GAAG,GAAG2e,GAAG,GAAG6C,GAAG;MAEzD,IAAKvhB,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAACpI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAElF,IAAMqI,MAAM,GAAG,CAAC,GAAGD,GAAG;MAEtBxC,EAAE,CAAE,CAAC,CAAE,GAAGqC,GAAG,GAAGI,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEghB,GAAG,GAAGlhB,GAAG,GAAGohB,GAAG,GAAGvhB,GAAG,GAAGshB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGphB,GAAG,GAAGwhB,GAAG,GAAG3hB,GAAG,GAAGwhB,GAAG,GAAGG,GAAG,GAAGzhB,GAAG,GAAGC,GAAG,GAAGyhB,GAAG,GAAG5hB,GAAG,GAAGK,GAAG,GAAGuhB,GAAG,IAAK5e,MAAM;MAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEN,GAAG,GAAGuhB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGnhB,GAAG,GAAGqhB,GAAG,GAAGF,GAAG,GAAGphB,GAAG,GAAGuhB,GAAG,GAAG1hB,GAAG,GAAGwhB,GAAG,GAAGE,GAAG,GAAGzhB,GAAG,GAAGE,GAAG,GAAGyhB,GAAG,GAAG5hB,GAAG,GAAGI,GAAG,GAAGwhB,GAAG,IAAK5e,MAAM;MAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEL,GAAG,GAAGE,GAAG,GAAGqhB,GAAG,GAAGxhB,GAAG,GAAGI,GAAG,GAAGohB,GAAG,GAAGvhB,GAAG,GAAGC,GAAG,GAAGuhB,GAAG,GAAG1hB,GAAG,GAAGK,GAAG,GAAGqhB,GAAG,GAAGzhB,GAAG,GAAGE,GAAG,GAAGwhB,GAAG,GAAG3hB,GAAG,GAAGI,GAAG,GAAGuhB,GAAG,IAAK3e,MAAM;MAEhIzC,EAAE,CAAE,CAAC,CAAE,GAAGsC,GAAG,GAAGG,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAER,GAAG,GAAGyhB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGjhB,GAAG,GAAGohB,GAAG,GAAGH,GAAG,GAAGnhB,GAAG,GAAGwhB,GAAG,GAAG9hB,GAAG,GAAG2hB,GAAG,GAAGG,GAAG,GAAG5hB,GAAG,GAAGI,GAAG,GAAGyhB,GAAG,GAAG/hB,GAAG,GAAGQ,GAAG,GAAGuhB,GAAG,IAAK5e,MAAM;MAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE+gB,GAAG,GAAGlhB,GAAG,GAAGqhB,GAAG,GAAG3hB,GAAG,GAAG0hB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGnhB,GAAG,GAAGuhB,GAAG,GAAG7hB,GAAG,GAAG2hB,GAAG,GAAGE,GAAG,GAAG5hB,GAAG,GAAGK,GAAG,GAAGyhB,GAAG,GAAG/hB,GAAG,GAAGO,GAAG,GAAGwhB,GAAG,IAAK5e,MAAM;MAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAET,GAAG,GAAGO,GAAG,GAAGohB,GAAG,GAAG1hB,GAAG,GAAGK,GAAG,GAAGqhB,GAAG,GAAG1hB,GAAG,GAAGI,GAAG,GAAGuhB,GAAG,GAAG7hB,GAAG,GAAGQ,GAAG,GAAGqhB,GAAG,GAAG5hB,GAAG,GAAGK,GAAG,GAAGwhB,GAAG,GAAG9hB,GAAG,GAAGO,GAAG,GAAGuhB,GAAG,IAAK3e,MAAM;MAEhIzC,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG,GAAGE,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE+gB,GAAG,GAAGphB,GAAG,GAAGuhB,GAAG,GAAG1hB,GAAG,GAAGwhB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGthB,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAG0hB,GAAG,GAAGI,GAAG,GAAG5hB,GAAG,GAAGC,GAAG,GAAG4hB,GAAG,GAAG/hB,GAAG,GAAGK,GAAG,GAAG0hB,GAAG,IAAK5e,MAAM;MAChIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAET,GAAG,GAAGyhB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGrhB,GAAG,GAAGwhB,GAAG,GAAGH,GAAG,GAAGthB,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAG0hB,GAAG,GAAGG,GAAG,GAAG5hB,GAAG,GAAGE,GAAG,GAAG4hB,GAAG,GAAG/hB,GAAG,GAAGI,GAAG,GAAG2hB,GAAG,IAAK5e,MAAM;MACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAER,GAAG,GAAGE,GAAG,GAAGwhB,GAAG,GAAG3hB,GAAG,GAAGI,GAAG,GAAGuhB,GAAG,GAAG1hB,GAAG,GAAGC,GAAG,GAAG0hB,GAAG,GAAG7hB,GAAG,GAAGK,GAAG,GAAGwhB,GAAG,GAAG5hB,GAAG,GAAGE,GAAG,GAAG2hB,GAAG,GAAG9hB,GAAG,GAAGI,GAAG,GAAG0hB,GAAG,IAAK3e,MAAM;MAEjIzC,EAAE,CAAE,EAAE,CAAE,GAAG+jB,GAAG,GAAGthB,MAAM;MACvBzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAER,GAAG,GAAGwhB,GAAG,GAAGphB,GAAG,GAAGmhB,GAAG,GAAGphB,GAAG,GAAGC,GAAG,GAAGmhB,GAAG,GAAGthB,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAG0hB,GAAG,GAAGlhB,GAAG,GAAGN,GAAG,GAAGC,GAAG,GAAGwhB,GAAG,GAAG3hB,GAAG,GAAGK,GAAG,GAAGshB,GAAG,IAAKxe,MAAM;MACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE+gB,GAAG,GAAGrhB,GAAG,GAAGE,GAAG,GAAGL,GAAG,GAAGyhB,GAAG,GAAGphB,GAAG,GAAGmhB,GAAG,GAAGthB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAG0hB,GAAG,GAAGnhB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGwhB,GAAG,GAAG3hB,GAAG,GAAGI,GAAG,GAAGuhB,GAAG,IAAKxe,MAAM;MACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAET,GAAG,GAAGI,GAAG,GAAGC,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGK,GAAG,GAAGE,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAGI,GAAG,GAAGI,GAAG,IAAK2C,MAAM;MAEjI,OAAO,IAAI;IAEZ;EAAC;IAAA7jB,GAAA;IAAAE,KAAA,EAED,SAAA0kB,MAAO1H,CAAC,EAAG;MAEV,IAAMkE,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAM9F,CAAC,GAAGgF,CAAC,CAAChF,CAAC;QAAEM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;QAAEuU,CAAC,GAAG7P,CAAC,CAAC6P,CAAC;MAE/B3L,EAAE,CAAE,CAAC,CAAE,IAAIlJ,CAAC;MAAEkJ,EAAE,CAAE,CAAC,CAAE,IAAI5I,CAAC;MAAE4I,EAAE,CAAE,CAAC,CAAE,IAAI2L,CAAC;MACxC3L,EAAE,CAAE,CAAC,CAAE,IAAIlJ,CAAC;MAAEkJ,EAAE,CAAE,CAAC,CAAE,IAAI5I,CAAC;MAAE4I,EAAE,CAAE,CAAC,CAAE,IAAI2L,CAAC;MACxC3L,EAAE,CAAE,CAAC,CAAE,IAAIlJ,CAAC;MAAEkJ,EAAE,CAAE,CAAC,CAAE,IAAI5I,CAAC;MAAE4I,EAAE,CAAE,EAAE,CAAE,IAAI2L,CAAC;MACzC3L,EAAE,CAAE,CAAC,CAAE,IAAIlJ,CAAC;MAAEkJ,EAAE,CAAE,CAAC,CAAE,IAAI5I,CAAC;MAAE4I,EAAE,CAAE,EAAE,CAAE,IAAI2L,CAAC;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAy+B,kBAAA,EAAoB;MAEnB,IAAMvd,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAMonB,QAAQ,GAAGhkB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAC1E,IAAMikB,QAAQ,GAAGjkB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAC1E,IAAMkkB,QAAQ,GAAGlkB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAE5E,OAAOpK,IAAI,CAAC2H,IAAI,CAAE3H,IAAI,CAACa,GAAG,CAAEutB,QAAQ,EAAEC,QAAQ,EAAEC,QAAS,CAAE,CAAC;IAE7D;EAAC;IAAAtlC,GAAA;IAAAE,KAAA,EAED,SAAAglB,gBAAiBhN,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAE1B,IAAK7U,CAAC,CAACye,SAAS,EAAG;QAElB,IAAI,CAACnb,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEtD,CAAC,CAACA,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,CAAC,CAACM,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEN,CAAC,CAAC6U,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAEF,CAAC,MAAM;QAEN,IAAI,CAACvR,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEtD,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEM,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEuU,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAEF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAqlC,cAAetmB,KAAK,EAAG;MAEtB,IAAMrE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEmE,KAAM,CAAC;QAAEtF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEkE,KAAM,CAAC;MAElD,IAAI,CAACzD,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAEZ,CAAC,EAAE,CAAEjB,CAAC,EAAE,CAAC,EACZ,CAAC,EAAEA,CAAC,EAAEiB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAAslC,cAAevmB,KAAK,EAAG;MAEtB,IAAMrE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEmE,KAAM,CAAC;QAAEtF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEkE,KAAM,CAAC;MAElD,IAAI,CAACzD,GAAG,CAENZ,CAAC,EAAE,CAAC,EAAEjB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAEA,CAAC,EAAE,CAAC,EAAEiB,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEX,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAAulC,cAAexmB,KAAK,EAAG;MAEtB,IAAMrE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEmE,KAAM,CAAC;QAAEtF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEkE,KAAM,CAAC;MAElD,IAAI,CAACzD,GAAG,CAEPZ,CAAC,EAAE,CAAEjB,CAAC,EAAE,CAAC,EAAE,CAAC,EACZA,CAAC,EAAEiB,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAAwlC,iBAAkB3S,IAAI,EAAElU,KAAK,EAAG;MAE/B;;MAEA,IAAMjE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE+D,KAAM,CAAC;MAC3B,IAAMlF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE8D,KAAM,CAAC;MAC3B,IAAMnG,CAAC,GAAG,CAAC,GAAGkC,CAAC;MACf,IAAM1C,CAAC,GAAG6a,IAAI,CAAC7a,CAAC;QAAEM,CAAC,GAAGua,IAAI,CAACva,CAAC;QAAEuU,CAAC,GAAGgG,IAAI,CAAChG,CAAC;MACxC,IAAM1I,EAAE,GAAG3L,CAAC,GAAGR,CAAC;QAAEoM,EAAE,GAAG5L,CAAC,GAAGF,CAAC;MAE5B,IAAI,CAACgD,GAAG,CAEP6I,EAAE,GAAGnM,CAAC,GAAG0C,CAAC,EAAEyJ,EAAE,GAAG7L,CAAC,GAAGmB,CAAC,GAAGoT,CAAC,EAAE1I,EAAE,GAAG0I,CAAC,GAAGpT,CAAC,GAAGnB,CAAC,EAAE,CAAC,EAC7C6L,EAAE,GAAG7L,CAAC,GAAGmB,CAAC,GAAGoT,CAAC,EAAEzI,EAAE,GAAG9L,CAAC,GAAGoC,CAAC,EAAE0J,EAAE,GAAGyI,CAAC,GAAGpT,CAAC,GAAGzB,CAAC,EAAE,CAAC,EAC7CmM,EAAE,GAAG0I,CAAC,GAAGpT,CAAC,GAAGnB,CAAC,EAAE8L,EAAE,GAAGyI,CAAC,GAAGpT,CAAC,GAAGzB,CAAC,EAAEQ,CAAC,GAAGqU,CAAC,GAAGA,CAAC,GAAGnS,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAA4kB,UAAW5M,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAEpB,IAAI,CAACvR,GAAG,CAEPtD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAEM,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAEuU,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAylC,UAAWtX,EAAE,EAAEC,EAAE,EAAEsX,EAAE,EAAErX,EAAE,EAAEsX,EAAE,EAAEC,EAAE,EAAG;MAEnC,IAAI,CAACtqB,GAAG,CAEP,CAAC,EAAEoqB,EAAE,EAAEC,EAAE,EAAE,CAAC,EACZxX,EAAE,EAAE,CAAC,EAAEyX,EAAE,EAAE,CAAC,EACZxX,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAEV,CAAC;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAvuB,GAAA;IAAAE,KAAA,EAED,SAAA6jC,QAASjI,QAAQ,EAAEzJ,UAAU,EAAEzN,KAAK,EAAG;MAEtC,IAAMxD,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAM9F,CAAC,GAAGma,UAAU,CAACL,EAAE;QAAExZ,CAAC,GAAG6Z,UAAU,CAACJ,EAAE;QAAElF,CAAC,GAAGsF,UAAU,CAACH,EAAE;QAAElF,CAAC,GAAGqF,UAAU,CAACF,EAAE;MAChF,IAAM4T,EAAE,GAAG7tB,CAAC,GAAGA,CAAC;QAAE8tB,EAAE,GAAGxtB,CAAC,GAAGA,CAAC;QAAEytB,EAAE,GAAGlZ,CAAC,GAAGA,CAAC;MACxC,IAAMmB,EAAE,GAAGhW,CAAC,GAAG6tB,EAAE;QAAE1X,EAAE,GAAGnW,CAAC,GAAG8tB,EAAE;QAAE1X,EAAE,GAAGpW,CAAC,GAAG+tB,EAAE;MAC3C,IAAM9X,EAAE,GAAG3V,CAAC,GAAGwtB,EAAE;QAAEzX,EAAE,GAAG/V,CAAC,GAAGytB,EAAE;QAAE7X,EAAE,GAAGrB,CAAC,GAAGkZ,EAAE;MAC3C,IAAMC,EAAE,GAAGlZ,CAAC,GAAG+Y,EAAE;QAAEI,EAAE,GAAGnZ,CAAC,GAAGgZ,EAAE;QAAEI,EAAE,GAAGpZ,CAAC,GAAGiZ,EAAE;MAE3C,IAAM1hB,EAAE,GAAGK,KAAK,CAAC1M,CAAC;QAAEsM,EAAE,GAAGI,KAAK,CAACpM,CAAC;QAAEkhB,EAAE,GAAG9U,KAAK,CAACmI,CAAC;MAE9C3L,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,IAAK+M,EAAE,GAAGC,EAAE,CAAE,IAAK7J,EAAE;MAClCnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEiN,EAAE,GAAG+X,EAAE,IAAK7hB,EAAE;MAC1BnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEkN,EAAE,GAAG6X,EAAE,IAAK5hB,EAAE;MAC1BnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEiN,EAAE,GAAG+X,EAAE,IAAK5hB,EAAE;MAC1BpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,IAAK8M,EAAE,GAAGE,EAAE,CAAE,IAAK5J,EAAE;MAClCpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEmN,EAAE,GAAG2X,EAAE,IAAK1hB,EAAE;MAC1BpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEkN,EAAE,GAAG6X,EAAE,IAAKzM,EAAE;MAC1BtY,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEmN,EAAE,GAAG2X,EAAE,IAAKxM,EAAE;MAC1BtY,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,IAAK8M,EAAE,GAAGC,EAAE,CAAE,IAAKuL,EAAE;MACnCtY,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZA,EAAE,CAAE,EAAE,CAAE,GAAG0a,QAAQ,CAAC5jB,CAAC;MACrBkJ,EAAE,CAAE,EAAE,CAAE,GAAG0a,QAAQ,CAACtjB,CAAC;MACrB4I,EAAE,CAAE,EAAE,CAAE,GAAG0a,QAAQ,CAAC/O,CAAC;MACrB3L,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAphB,GAAA;IAAAE,KAAA,EAED,SAAAmmC,UAAWvK,QAAQ,EAAEzJ,UAAU,EAAEzN,KAAK,EAAG;MAExC,IAAMxD,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExB,IAAIuG,EAAE,GAAGye,KAAK,CAACxnB,GAAG,CAAE4F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAG,CAAC,CAACvb,MAAM,CAAC,CAAC;MACxD,IAAM2e,EAAE,GAAGwe,KAAK,CAACxnB,GAAG,CAAE4F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAG,CAAC,CAACvb,MAAM,CAAC,CAAC;MAC1D,IAAM6zB,EAAE,GAAGsJ,KAAK,CAACxnB,GAAG,CAAE4F,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAAG,CAAC,CAACvb,MAAM,CAAC,CAAC;;MAE3D;MACA,IAAM+d,GAAG,GAAG,IAAI,CAACT,WAAW,CAAC,CAAC;MAC9B,IAAKS,GAAG,GAAG,CAAC,EAAGW,EAAE,GAAG,CAAEA,EAAE;MAExBuX,QAAQ,CAAC5jB,CAAC,GAAGkJ,EAAE,CAAE,EAAE,CAAE;MACrB0a,QAAQ,CAACtjB,CAAC,GAAG4I,EAAE,CAAE,EAAE,CAAE;MACrB0a,QAAQ,CAAC/O,CAAC,GAAG3L,EAAE,CAAE,EAAE,CAAE;;MAErB;MACAklB,KAAK,CAACrpB,IAAI,CAAE,IAAK,CAAC;MAElB,IAAMspB,KAAK,GAAG,CAAC,GAAGhiB,EAAE;MACpB,IAAMiiB,KAAK,GAAG,CAAC,GAAGhiB,EAAE;MACpB,IAAMiiB,KAAK,GAAG,CAAC,GAAG/M,EAAE;MAEpB4M,KAAK,CAACtoB,QAAQ,CAAE,CAAC,CAAE,IAAIuoB,KAAK;MAC5BD,KAAK,CAACtoB,QAAQ,CAAE,CAAC,CAAE,IAAIuoB,KAAK;MAC5BD,KAAK,CAACtoB,QAAQ,CAAE,CAAC,CAAE,IAAIuoB,KAAK;MAE5BD,KAAK,CAACtoB,QAAQ,CAAE,CAAC,CAAE,IAAIwoB,KAAK;MAC5BF,KAAK,CAACtoB,QAAQ,CAAE,CAAC,CAAE,IAAIwoB,KAAK;MAC5BF,KAAK,CAACtoB,QAAQ,CAAE,CAAC,CAAE,IAAIwoB,KAAK;MAE5BF,KAAK,CAACtoB,QAAQ,CAAE,CAAC,CAAE,IAAIyoB,KAAK;MAC5BH,KAAK,CAACtoB,QAAQ,CAAE,CAAC,CAAE,IAAIyoB,KAAK;MAC5BH,KAAK,CAACtoB,QAAQ,CAAE,EAAE,CAAE,IAAIyoB,KAAK;MAE7BpU,UAAU,CAACY,qBAAqB,CAAEqT,KAAM,CAAC;MAEzC1hB,KAAK,CAAC1M,CAAC,GAAGqM,EAAE;MACZK,KAAK,CAACpM,CAAC,GAAGgM,EAAE;MACZI,KAAK,CAACmI,CAAC,GAAG2M,EAAE;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAA15B,GAAA;IAAAE,KAAA,EAED,SAAAwmC,gBAAiBC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,gBAAgB,GAAGrxB,qBAAqB,EAAG;MAEhG,IAAMwL,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAM9F,CAAC,GAAG,CAAC,GAAG6uB,IAAI,IAAKH,KAAK,GAAGD,IAAI,CAAE;MACrC,IAAMnuB,CAAC,GAAG,CAAC,GAAGuuB,IAAI,IAAKF,GAAG,GAAGC,MAAM,CAAE;MAErC,IAAMpsB,CAAC,GAAG,CAAEksB,KAAK,GAAGD,IAAI,KAAOC,KAAK,GAAGD,IAAI,CAAE;MAC7C,IAAMhsB,CAAC,GAAG,CAAEksB,GAAG,GAAGC,MAAM,KAAOD,GAAG,GAAGC,MAAM,CAAE;MAE7C,IAAIlsB,CAAC,EAAEwI,CAAC;MAER,IAAK6jB,gBAAgB,KAAKrxB,qBAAqB,EAAG;QAEjDgF,CAAC,GAAG,EAAIosB,GAAG,GAAGD,IAAI,CAAE,IAAKC,GAAG,GAAGD,IAAI,CAAE;QACrC3jB,CAAC,GAAK,CAAE,CAAC,GAAG4jB,GAAG,GAAGD,IAAI,IAAOC,GAAG,GAAGD,IAAI,CAAE;MAE1C,CAAC,MAAM,IAAKE,gBAAgB,KAAKpxB,sBAAsB,EAAG;QAEzD+E,CAAC,GAAG,CAAEosB,GAAG,IAAKA,GAAG,GAAGD,IAAI,CAAE;QAC1B3jB,CAAC,GAAK,CAAE4jB,GAAG,GAAGD,IAAI,IAAOC,GAAG,GAAGD,IAAI,CAAE;MAEtC,CAAC,MAAM;QAEN,MAAM,IAAIljC,KAAK,CAAE,8DAA8D,GAAGojC,gBAAiB,CAAC;MAErG;MAEA7lB,EAAE,CAAE,CAAC,CAAE,GAAGlJ,CAAC;MAAEkJ,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG1G,CAAC;MAAG0G,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACpDA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG5I,CAAC;MAAE4I,EAAE,CAAE,CAAC,CAAE,GAAGzG,CAAC;MAAGyG,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACpDA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGxG,CAAC;MAAGwG,EAAE,CAAE,EAAE,CAAE,GAAGgC,CAAC;MACrDhC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEtD,OAAO,IAAI;IAEZ;EAAC;IAAAphB,GAAA;IAAAE,KAAA,EAED,SAAAgnC,iBAAkBP,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,gBAAgB,GAAGrxB,qBAAqB,EAAG;MAEjG,IAAMwL,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMgP,CAAC,GAAG,GAAG,IAAK4Z,KAAK,GAAGD,IAAI,CAAE;MAChC,IAAMpjB,CAAC,GAAG,GAAG,IAAKsjB,GAAG,GAAGC,MAAM,CAAE;MAChC,IAAMK,CAAC,GAAG,GAAG,IAAKH,GAAG,GAAGD,IAAI,CAAE;MAE9B,IAAM7uB,CAAC,GAAG,CAAE0uB,KAAK,GAAGD,IAAI,IAAK3Z,CAAC;MAC9B,IAAMxU,CAAC,GAAG,CAAEquB,GAAG,GAAGC,MAAM,IAAKvjB,CAAC;MAE9B,IAAIwJ,CAAC,EAAEqa,IAAI;MAEX,IAAKH,gBAAgB,KAAKrxB,qBAAqB,EAAG;QAEjDmX,CAAC,GAAG,CAAEia,GAAG,GAAGD,IAAI,IAAKI,CAAC;QACtBC,IAAI,GAAG,CAAE,CAAC,GAAGD,CAAC;MAEf,CAAC,MAAM,IAAKF,gBAAgB,KAAKpxB,sBAAsB,EAAG;QAEzDkX,CAAC,GAAGga,IAAI,GAAGI,CAAC;QACZC,IAAI,GAAG,CAAE,CAAC,GAAGD,CAAC;MAEf,CAAC,MAAM;QAEN,MAAM,IAAItjC,KAAK,CAAE,+DAA+D,GAAGojC,gBAAiB,CAAC;MAEtG;MAEA7lB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG4L,CAAC;MAAE5L,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAGA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAElJ,CAAC;MAC5DkJ,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGmC,CAAC;MAAEnC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE5I,CAAC;MAC7D4I,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAGA,EAAE,CAAE,EAAE,CAAE,GAAGgmB,IAAI;MAAEhmB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE2L,CAAC;MAC5D3L,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAIA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAGA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAAGA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAAphB,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQsF,MAAM,EAAG;MAEhB,IAAM/D,EAAE,GAAG,IAAI,CAACpD,QAAQ;MACxB,IAAMsD,EAAE,GAAG6D,MAAM,CAACnH,QAAQ;MAE1B,KAAM,IAAIlY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;QAE/B,IAAKsb,EAAE,CAAEtb,CAAC,CAAE,KAAKwb,EAAE,CAAExb,CAAC,CAAE,EAAG,OAAO,KAAK;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAE9B,KAAM,IAAIja,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;QAE/B,IAAI,CAACkY,QAAQ,CAAElY,CAAC,CAAE,GAAG6Q,KAAK,CAAE7Q,CAAC,GAAGia,MAAM,CAAE;MAEzC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMqB,EAAE,GAAG,IAAI,CAACpD,QAAQ;MAExBrH,KAAK,CAAEoJ,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MACzBzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BzK,KAAK,CAAEoJ,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BzK,KAAK,CAAEoJ,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAE/BzK,KAAK,CAAEoJ,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BzK,KAAK,CAAEoJ,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BzK,KAAK,CAAEoJ,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BzK,KAAK,CAAEoJ,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAE/B,OAAOzK,KAAK;IAEb;EAAC;EAAA,OAAAurB,OAAA;AAAA;AAAA1iC,OAAA,CAAA0iC,OAAA,GAAAA,OAAA;AAIF,IAAMc,KAAK,GAAG,aAAc,IAAIvM,OAAO,CAAC,CAAC;AACzC,IAAM6P,KAAK,GAAG,aAAc,IAAIpE,OAAO,CAAC,CAAC;AACzC,IAAM8B,KAAK,GAAG,aAAc,IAAIvN,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAClD,IAAMwN,IAAI,GAAG,aAAc,IAAIxN,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACjD,IAAMzE,EAAE,GAAG,aAAc,IAAIyE,OAAO,CAAC,CAAC;AACtC,IAAMxE,EAAE,GAAG,aAAc,IAAIwE,OAAO,CAAC,CAAC;AACtC,IAAMvE,EAAE,GAAG,aAAc,IAAIuE,OAAO,CAAC,CAAC;AAEtC,IAAM4Q,OAAO,GAAG,aAAc,IAAInF,OAAO,CAAC,CAAC;AAC3C,IAAMoF,aAAa,GAAG,aAAc,IAAIzV,UAAU,CAAC,CAAC;AAAC,IAE/C0V,KAAK,0BAAAC,iBAAA;EAEV,SAAAD,MAAarvB,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAEuU,CAAC,GAAG,CAAC,EAAElS,KAAK,GAAG0sB,KAAK,CAACE,aAAa,EAAG;IAAAp/B,eAAA,OAAAk/B,KAAA;IAE/D,IAAI,CAACG,OAAO,GAAG,IAAI;IAEnB,IAAI,CAAC1V,EAAE,GAAG9Z,CAAC;IACX,IAAI,CAAC+Z,EAAE,GAAGzZ,CAAC;IACX,IAAI,CAAC0Z,EAAE,GAAGnF,CAAC;IACX,IAAI,CAAC0F,MAAM,GAAG5X,KAAK;EAEpB;EAAChS,YAAA,CAAA0+B,KAAA;IAAAvnC,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACuV,EAAE;IAEf,CAAC;IAAAxW,GAAA,EAED,SAAAA,IAAOtb,KAAK,EAAG;MAEd,IAAI,CAAC8xB,EAAE,GAAG9xB,KAAK;MACf,IAAI,CAACkyB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAApyB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACwV,EAAE;IAEf,CAAC;IAAAzW,GAAA,EAED,SAAAA,IAAOtb,KAAK,EAAG;MAEd,IAAI,CAAC+xB,EAAE,GAAG/xB,KAAK;MACf,IAAI,CAACkyB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAApyB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACyV,EAAE;IAEf,CAAC;IAAA1W,GAAA,EAED,SAAAA,IAAOtb,KAAK,EAAG;MAEd,IAAI,CAACgyB,EAAE,GAAGhyB,KAAK;MACf,IAAI,CAACkyB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAApyB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACgW,MAAM;IAEnB,CAAC;IAAAjX,GAAA,EAED,SAAAA,IAAWtb,KAAK,EAAG;MAElB,IAAI,CAACuyB,MAAM,GAAGvyB,KAAK;MACnB,IAAI,CAACkyB,iBAAiB,CAAC,CAAC;IAEzB;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKtD,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAElS,KAAK,GAAG,IAAI,CAAC4X,MAAM,EAAG;MAEnC,IAAI,CAACT,EAAE,GAAG9Z,CAAC;MACX,IAAI,CAAC+Z,EAAE,GAAGzZ,CAAC;MACX,IAAI,CAAC0Z,EAAE,GAAGnF,CAAC;MACX,IAAI,CAAC0F,MAAM,GAAG5X,KAAK;MAEnB,IAAI,CAACuX,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAAC6rB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACO,MAAO,CAAC;IAEtE;EAAC;IAAAzyB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMsV,KAAK,EAAG;MAEb,IAAI,CAACP,EAAE,GAAGO,KAAK,CAACP,EAAE;MAClB,IAAI,CAACC,EAAE,GAAGM,KAAK,CAACN,EAAE;MAClB,IAAI,CAACC,EAAE,GAAGK,KAAK,CAACL,EAAE;MAClB,IAAI,CAACO,MAAM,GAAGF,KAAK,CAACE,MAAM;MAE1B,IAAI,CAACL,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAA+yB,sBAAuBjb,CAAC,EAAE6C,KAAK,GAAG,IAAI,CAAC4X,MAAM,EAAED,MAAM,GAAG,IAAI,EAAG;MAE9D;;MAEA,IAAMpR,EAAE,GAAGpJ,CAAC,CAACgG,QAAQ;MACrB,IAAMyP,GAAG,GAAGrM,EAAE,CAAE,CAAC,CAAE;QAAEsM,GAAG,GAAGtM,EAAE,CAAE,CAAC,CAAE;QAAEuM,GAAG,GAAGvM,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMwM,GAAG,GAAGxM,EAAE,CAAE,CAAC,CAAE;QAAEyM,GAAG,GAAGzM,EAAE,CAAE,CAAC,CAAE;QAAE0M,GAAG,GAAG1M,EAAE,CAAE,CAAC,CAAE;MACjD,IAAM2M,GAAG,GAAG3M,EAAE,CAAE,CAAC,CAAE;QAAE4M,GAAG,GAAG5M,EAAE,CAAE,CAAC,CAAE;QAAE6M,GAAG,GAAG7M,EAAE,CAAE,EAAE,CAAE;MAElD,QAASvG,KAAK;QAEb,KAAK,KAAK;UAET,IAAI,CAACoX,EAAE,GAAGjb,IAAI,CAAC2wB,IAAI,CAAEhwB,KAAK,CAAEgW,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE3C,IAAK3W,IAAI,CAACgC,GAAG,CAAE2U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACqE,EAAE,GAAGhb,IAAI,CAAC8H,KAAK,CAAE,CAAEgP,GAAG,EAAEG,GAAI,CAAC;YAClC,IAAI,CAACiE,EAAE,GAAGlb,IAAI,CAAC8H,KAAK,CAAE,CAAE4O,GAAG,EAAED,GAAI,CAAC;UAEnC,CAAC,MAAM;YAEN,IAAI,CAACuE,EAAE,GAAGhb,IAAI,CAAC8H,KAAK,CAAEkP,GAAG,EAAEH,GAAI,CAAC;YAChC,IAAI,CAACqE,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACF,EAAE,GAAGhb,IAAI,CAAC2wB,IAAI,CAAE,CAAEhwB,KAAK,CAAEmW,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE7C,IAAK9W,IAAI,CAACgC,GAAG,CAAE8U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACmE,EAAE,GAAGjb,IAAI,CAAC8H,KAAK,CAAE6O,GAAG,EAAEM,GAAI,CAAC;YAChC,IAAI,CAACiE,EAAE,GAAGlb,IAAI,CAAC8H,KAAK,CAAE8O,GAAG,EAAEC,GAAI,CAAC;UAEjC,CAAC,MAAM;YAEN,IAAI,CAACoE,EAAE,GAAGjb,IAAI,CAAC8H,KAAK,CAAE,CAAEiP,GAAG,EAAEN,GAAI,CAAC;YAClC,IAAI,CAACyE,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACF,EAAE,GAAGhb,IAAI,CAAC2wB,IAAI,CAAEhwB,KAAK,CAAEqW,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE3C,IAAKhX,IAAI,CAACgC,GAAG,CAAEgV,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACiE,EAAE,GAAGjb,IAAI,CAAC8H,KAAK,CAAE,CAAEiP,GAAG,EAAEE,GAAI,CAAC;YAClC,IAAI,CAACiE,EAAE,GAAGlb,IAAI,CAAC8H,KAAK,CAAE,CAAE4O,GAAG,EAAEG,GAAI,CAAC;UAEnC,CAAC,MAAM;YAEN,IAAI,CAACoE,EAAE,GAAG,CAAC;YACX,IAAI,CAACC,EAAE,GAAGlb,IAAI,CAAC8H,KAAK,CAAE8O,GAAG,EAAEH,GAAI,CAAC;UAEjC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACwE,EAAE,GAAGjb,IAAI,CAAC2wB,IAAI,CAAE,CAAEhwB,KAAK,CAAEoW,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE7C,IAAK/W,IAAI,CAACgC,GAAG,CAAE+U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACiE,EAAE,GAAGhb,IAAI,CAAC8H,KAAK,CAAEkP,GAAG,EAAEC,GAAI,CAAC;YAChC,IAAI,CAACiE,EAAE,GAAGlb,IAAI,CAAC8H,KAAK,CAAE8O,GAAG,EAAEH,GAAI,CAAC;UAEjC,CAAC,MAAM;YAEN,IAAI,CAACuE,EAAE,GAAG,CAAC;YACX,IAAI,CAACE,EAAE,GAAGlb,IAAI,CAAC8H,KAAK,CAAE,CAAE4O,GAAG,EAAEG,GAAI,CAAC;UAEnC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACqE,EAAE,GAAGlb,IAAI,CAAC2wB,IAAI,CAAEhwB,KAAK,CAAEiW,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE3C,IAAK5W,IAAI,CAACgC,GAAG,CAAE4U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACoE,EAAE,GAAGhb,IAAI,CAAC8H,KAAK,CAAE,CAAEgP,GAAG,EAAED,GAAI,CAAC;YAClC,IAAI,CAACoE,EAAE,GAAGjb,IAAI,CAAC8H,KAAK,CAAE,CAAEiP,GAAG,EAAEN,GAAI,CAAC;UAEnC,CAAC,MAAM;YAEN,IAAI,CAACuE,EAAE,GAAG,CAAC;YACX,IAAI,CAACC,EAAE,GAAGjb,IAAI,CAAC8H,KAAK,CAAE6O,GAAG,EAAEM,GAAI,CAAC;UAEjC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACiE,EAAE,GAAGlb,IAAI,CAAC2wB,IAAI,CAAE,CAAEhwB,KAAK,CAAE+V,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;UAE7C,IAAK1W,IAAI,CAACgC,GAAG,CAAE0U,GAAI,CAAC,GAAG,SAAS,EAAG;YAElC,IAAI,CAACsE,EAAE,GAAGhb,IAAI,CAAC8H,KAAK,CAAEkP,GAAG,EAAEH,GAAI,CAAC;YAChC,IAAI,CAACoE,EAAE,GAAGjb,IAAI,CAAC8H,KAAK,CAAE6O,GAAG,EAAEF,GAAI,CAAC;UAEjC,CAAC,MAAM;YAEN,IAAI,CAACuE,EAAE,GAAGhb,IAAI,CAAC8H,KAAK,CAAE,CAAEgP,GAAG,EAAEG,GAAI,CAAC;YAClC,IAAI,CAACgE,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED;UAECxW,OAAO,CAACC,IAAI,CAAE,sEAAsE,GAAGb,KAAM,CAAC;MAEhG;MAEA,IAAI,CAAC4X,MAAM,GAAG5X,KAAK;MAEnB,IAAK2X,MAAM,KAAK,IAAI,EAAG,IAAI,CAACJ,iBAAiB,CAAC,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAA0nC,kBAAmBntB,CAAC,EAAEI,KAAK,EAAE2X,MAAM,EAAG;MAErC6U,OAAO,CAACvD,0BAA0B,CAAErpB,CAAE,CAAC;MAEvC,OAAO,IAAI,CAACwY,qBAAqB,CAAEoU,OAAO,EAAExsB,KAAK,EAAE2X,MAAO,CAAC;IAE5D;EAAC;IAAAxyB,GAAA;IAAAE,KAAA,EAED,SAAA2nC,eAAgB3qB,CAAC,EAAErC,KAAK,GAAG,IAAI,CAAC4X,MAAM,EAAG;MAExC,OAAO,IAAI,CAACjX,GAAG,CAAE0B,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAC,EAAElS,KAAM,CAAC;IAExC;EAAC;IAAA7a,GAAA;IAAAE,KAAA,EAED,SAAA4nC,QAASC,QAAQ,EAAG;MAEnB;;MAEAT,aAAa,CAAChV,YAAY,CAAE,IAAK,CAAC;MAElC,OAAO,IAAI,CAACsV,iBAAiB,CAAEN,aAAa,EAAES,QAAS,CAAC;IAEzD;EAAC;IAAA/nC,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQ0S,KAAK,EAAG;MAEf,OAASA,KAAK,CAACP,EAAE,KAAK,IAAI,CAACA,EAAE,IAAQO,KAAK,CAACN,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMM,KAAK,CAACL,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMK,KAAK,CAACE,MAAM,KAAK,IAAI,CAACA,MAAQ;IAE5H;EAAC;IAAAzyB,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAG;MAElB,IAAI,CAACqb,EAAE,GAAGrb,KAAK,CAAE,CAAC,CAAE;MACpB,IAAI,CAACsb,EAAE,GAAGtb,KAAK,CAAE,CAAC,CAAE;MACpB,IAAI,CAACub,EAAE,GAAGvb,KAAK,CAAE,CAAC,CAAE;MACpB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKpS,SAAS,EAAG,IAAI,CAACkuB,MAAM,GAAG9b,KAAK,CAAE,CAAC,CAAE;MAExD,IAAI,CAACyb,iBAAiB,CAAC,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjCpJ,KAAK,CAAEoJ,MAAM,CAAE,GAAG,IAAI,CAACiS,EAAE;MACzBrb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACkS,EAAE;MAC7Btb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACmS,EAAE;MAC7Bvb,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC0S,MAAM;MAEjC,OAAO9b,KAAK;IAEb;EAAC;IAAA3W,GAAA;IAAAE,KAAA,EAED,SAAAg1B,UAAWC,QAAQ,EAAG;MAErB,IAAI,CAAC/C,iBAAiB,GAAG+C,QAAQ;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAn1B,GAAA;IAAAE,KAAA,EAED,SAAAkyB,kBAAA,EAAoB,CAAC;EAAC;IAAApyB,GAAA,EAAAwnC,iBAAA;IAAAtnC,KAAA,eAAAX,mBAAA,GAAA8G,IAAA,CAEtB,SAAAnG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAuf,OAAAynB,SAAA;QAAA,kBAAAA,SAAA,CAAA9gC,IAAA,GAAA8gC,SAAA,CAAApjC,IAAA;UAAA;YAAAojC,SAAA,CAAApjC,IAAA;YAEC,OAAM,IAAI,CAACotB,EAAE;UAAA;YAAAgW,SAAA,CAAApjC,IAAA;YACb,OAAM,IAAI,CAACqtB,EAAE;UAAA;YAAA+V,SAAA,CAAApjC,IAAA;YACb,OAAM,IAAI,CAACstB,EAAE;UAAA;YAAA8V,SAAA,CAAApjC,IAAA;YACb,OAAM,IAAI,CAAC6tB,MAAM;UAAA;UAAA;YAAA,OAAAuV,SAAA,CAAA3gC,IAAA;QAAA;MAAA,GAAAnH,KAAA;IAAA,CAEjB;EAAA;EAAA,OAAAqnC,KAAA;AAAA,EAPEnnC,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAA+nC,KAAA,GAAAA,KAAA;AAWnBA,KAAK,CAACE,aAAa,GAAG,KAAK;AAAC,IAEtBQ,MAAM;EAEX,SAAAA,OAAA,EAAc;IAAA5/B,eAAA,OAAA4/B,MAAA;IAEb,IAAI,CAACC,IAAI,GAAG,CAAC,GAAG,CAAC;EAElB;EAACr/B,YAAA,CAAAo/B,MAAA;IAAAjoC,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK8P,OAAO,EAAG;MAEd,IAAI,CAAC4c,IAAI,GAAG,CAAE,CAAC,IAAI5c,OAAO,GAAG,CAAC,MAAO,CAAC;IAEvC;EAAC;IAAAtrB,GAAA;IAAAE,KAAA,EAED,SAAAioC,OAAQ7c,OAAO,EAAG;MAEjB,IAAI,CAAC4c,IAAI,IAAI,CAAC,IAAI5c,OAAO,GAAG,CAAC;IAE9B;EAAC;IAAAtrB,GAAA;IAAAE,KAAA,EAED,SAAAkoC,UAAA,EAAY;MAEX,IAAI,CAACF,IAAI,GAAG,UAAU,GAAG,CAAC;IAE3B;EAAC;IAAAloC,GAAA;IAAAE,KAAA,EAED,SAAAmoC,OAAQ/c,OAAO,EAAG;MAEjB,IAAI,CAAC4c,IAAI,IAAI,CAAC,IAAI5c,OAAO,GAAG,CAAC;IAE9B;EAAC;IAAAtrB,GAAA;IAAAE,KAAA,EAED,SAAAooC,QAAShd,OAAO,EAAG;MAElB,IAAI,CAAC4c,IAAI,IAAI,EAAI,CAAC,IAAI5c,OAAO,GAAG,CAAC,CAAE;IAEpC;EAAC;IAAAtrB,GAAA;IAAAE,KAAA,EAED,SAAAqoC,WAAA,EAAa;MAEZ,IAAI,CAACL,IAAI,GAAG,CAAC;IAEd;EAAC;IAAAloC,GAAA;IAAAE,KAAA,EAED,SAAAgoB,KAAMsgB,MAAM,EAAG;MAEd,OAAO,CAAE,IAAI,CAACN,IAAI,GAAGM,MAAM,CAACN,IAAI,MAAO,CAAC;IAEzC;EAAC;IAAAloC,GAAA;IAAAE,KAAA,EAED,SAAAuoC,UAAWnd,OAAO,EAAG;MAEpB,OAAO,CAAE,IAAI,CAAC4c,IAAI,IAAK,CAAC,IAAI5c,OAAO,GAAG,CAAC,CAAE,MAAO,CAAC;IAElD;EAAC;EAAA,OAAA2c,MAAA;AAAA;AAAAzoC,OAAA,CAAAyoC,MAAA,GAAAA,MAAA;AAIF,IAAIS,WAAW,GAAG,CAAC;AAEnB,IAAMC,KAAK,GAAG,aAAc,IAAIlS,OAAO,CAAC,CAAC;AACzC,IAAMmS,GAAG,GAAG,aAAc,IAAI/W,UAAU,CAAC,CAAC;AAC1C,IAAMgX,KAAK,GAAG,aAAc,IAAI3G,OAAO,CAAC,CAAC;AACzC,IAAM4G,OAAO,GAAG,aAAc,IAAIrS,OAAO,CAAC,CAAC;AAE3C,IAAMsS,WAAW,GAAG,aAAc,IAAItS,OAAO,CAAC,CAAC;AAC/C,IAAMuS,QAAQ,GAAG,aAAc,IAAIvS,OAAO,CAAC,CAAC;AAC5C,IAAMwS,aAAa,GAAG,aAAc,IAAIpX,UAAU,CAAC,CAAC;AAEpD,IAAMqX,MAAM,GAAG,aAAc,IAAIzS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACnD,IAAM0S,MAAM,GAAG,aAAc,IAAI1S,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AACnD,IAAM2S,MAAM,GAAG,aAAc,IAAI3S,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAEnD,IAAM4S,WAAW,GAAG;EAAEtnC,IAAI,EAAE;AAAQ,CAAC;AACrC,IAAMunC,aAAa,GAAG;EAAEvnC,IAAI,EAAE;AAAU,CAAC;AAAC,IAEpCwnC,QAAQ,0BAAAC,iBAAA;EAAApf,SAAA,CAAAmf,QAAA,EAAAC,iBAAA;EAAA,IAAAC,OAAA,GAAAnf,YAAA,CAAAif,QAAA;EAEb,SAAAA,SAAA,EAAc;IAAA,IAAAG,OAAA;IAAArhC,eAAA,OAAAkhC,QAAA;IAEbG,OAAA,GAAAD,OAAA,CAAAznC,IAAA;IAEA0nC,OAAA,CAAKC,UAAU,GAAG,IAAI;IAEtBjqC,MAAM,CAACI,cAAc,CAAAqrB,sBAAA,CAAAue,OAAA,GAAQ,IAAI,EAAE;MAAExpC,KAAK,EAAEwoC,WAAW;IAAI,CAAE,CAAC;IAE9DgB,OAAA,CAAKjyB,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1BuyB,OAAA,CAAKtjC,IAAI,GAAG,EAAE;IACdsjC,OAAA,CAAK3nC,IAAI,GAAG,UAAU;IAEtB2nC,OAAA,CAAKE,MAAM,GAAG,IAAI;IAClBF,OAAA,CAAK3N,QAAQ,GAAG,EAAE;IAElB2N,OAAA,CAAKvF,EAAE,GAAGoF,QAAQ,CAACM,UAAU,CAAC7sB,KAAK,CAAC,CAAC;IAErC,IAAM8e,QAAQ,GAAG,IAAIrF,OAAO,CAAC,CAAC;IAC9B,IAAMhS,QAAQ,GAAG,IAAI8iB,KAAK,CAAC,CAAC;IAC5B,IAAMlV,UAAU,GAAG,IAAIR,UAAU,CAAC,CAAC;IACnC,IAAMjN,KAAK,GAAG,IAAI6R,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAEpC,SAASqT,gBAAgBA,CAAA,EAAG;MAE3BzX,UAAU,CAACC,YAAY,CAAE7N,QAAQ,EAAE,KAAM,CAAC;IAE3C;IAEA,SAASslB,kBAAkBA,CAAA,EAAG;MAE7BtlB,QAAQ,CAACmjB,iBAAiB,CAAEvV,UAAU,EAAE9tB,SAAS,EAAE,KAAM,CAAC;IAE3D;IAEAkgB,QAAQ,CAACyQ,SAAS,CAAE4U,gBAAiB,CAAC;IACtCzX,UAAU,CAAC6C,SAAS,CAAE6U,kBAAmB,CAAC;IAE1CrqC,MAAM,CAACsqC,gBAAgB,CAAA7e,sBAAA,CAAAue,OAAA,GAAQ;MAC9B5N,QAAQ,EAAE;QACTj7B,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAE47B;MACR,CAAC;MACDrX,QAAQ,EAAE;QACT5jB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAEukB;MACR,CAAC;MACD4N,UAAU,EAAE;QACXxxB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAEmyB;MACR,CAAC;MACDzN,KAAK,EAAE;QACN/jB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAE0kB;MACR,CAAC;MACDqlB,eAAe,EAAE;QAChB/pC,KAAK,EAAE,IAAIgiC,OAAO,CAAC;MACpB,CAAC;MACDgI,YAAY,EAAE;QACbhqC,KAAK,EAAE,IAAIugB,OAAO,CAAC;MACpB;IACD,CAAE,CAAC;IAEHipB,OAAA,CAAKvkB,MAAM,GAAG,IAAI+c,OAAO,CAAC,CAAC;IAC3BwH,OAAA,CAAK1R,WAAW,GAAG,IAAIkK,OAAO,CAAC,CAAC;IAEhCwH,OAAA,CAAKje,gBAAgB,GAAG8d,QAAQ,CAACY,0BAA0B;IAC3DT,OAAA,CAAKU,sBAAsB,GAAG,KAAK;IAEnCV,OAAA,CAAKW,qBAAqB,GAAGd,QAAQ,CAACe,gCAAgC,CAAC,CAAC;;IAExEZ,OAAA,CAAKlB,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;IAC1ByB,OAAA,CAAKa,OAAO,GAAG,IAAI;IAEnBb,OAAA,CAAKc,UAAU,GAAG,KAAK;IACvBd,OAAA,CAAKe,aAAa,GAAG,KAAK;IAE1Bf,OAAA,CAAKgB,aAAa,GAAG,IAAI;IACzBhB,OAAA,CAAKiB,WAAW,GAAG,CAAC;IAEpBjB,OAAA,CAAKkB,UAAU,GAAG,EAAE;IAEpBlB,OAAA,CAAK5d,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAA4d,OAAA;EAEpB;EAAC7gC,YAAA,CAAA0gC,QAAA;IAAAvpC,GAAA;IAAAE,KAAA,EAED,SAAA2qC,eAAA,CAAgB,0DAA2D,CAAC;EAAC;IAAA7qC,GAAA;IAAAE,KAAA,EAE7E,SAAA4qC,cAAA,CAAe,0DAA2D,CAAC;EAAC;IAAA9qC,GAAA;IAAAE,KAAA,EAE5E,SAAAktB,aAAcjI,MAAM,EAAG;MAEtB,IAAK,IAAI,CAACsG,gBAAgB,EAAG,IAAI,CAACS,YAAY,CAAC,CAAC;MAEhD,IAAI,CAAC/G,MAAM,CAACrD,WAAW,CAAEqD,MAAO,CAAC;MAEjC,IAAI,CAACA,MAAM,CAACkhB,SAAS,CAAE,IAAI,CAACvK,QAAQ,EAAE,IAAI,CAACzJ,UAAU,EAAE,IAAI,CAACzN,KAAM,CAAC;IAEpE;EAAC;IAAA5kB,GAAA;IAAAE,KAAA,EAED,SAAA42B,gBAAiBrc,CAAC,EAAG;MAEpB,IAAI,CAAC4X,UAAU,CAACvQ,WAAW,CAAErH,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAza,GAAA;IAAAE,KAAA,EAED,SAAA6qC,yBAA0BhY,IAAI,EAAElU,KAAK,EAAG;MAEvC;;MAEA,IAAI,CAACwT,UAAU,CAACS,gBAAgB,CAAEC,IAAI,EAAElU,KAAM,CAAC;IAEhD;EAAC;IAAA7e,GAAA;IAAAE,KAAA,EAED,SAAA8qC,qBAAsBzY,KAAK,EAAG;MAE7B,IAAI,CAACF,UAAU,CAACC,YAAY,CAAEC,KAAK,EAAE,IAAK,CAAC;IAE5C;EAAC;IAAAvyB,GAAA;IAAAE,KAAA,EAED,SAAA+qC,sBAAuBjzB,CAAC,EAAG;MAE1B;;MAEA,IAAI,CAACqa,UAAU,CAACY,qBAAqB,CAAEjb,CAAE,CAAC;IAE3C;EAAC;IAAAhY,GAAA;IAAAE,KAAA,EAED,SAAAgrC,0BAA2BzwB,CAAC,EAAG;MAE9B;;MAEA,IAAI,CAAC4X,UAAU,CAACpV,IAAI,CAAExC,CAAE,CAAC;IAE1B;EAAC;IAAAza,GAAA;IAAAE,KAAA,EAED,SAAAirC,aAAcpY,IAAI,EAAElU,KAAK,EAAG;MAE3B;MACA;;MAEA+pB,GAAG,CAAC9V,gBAAgB,CAAEC,IAAI,EAAElU,KAAM,CAAC;MAEnC,IAAI,CAACwT,UAAU,CAAC3U,QAAQ,CAAEkrB,GAAI,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA5oC,GAAA;IAAAE,KAAA,EAED,SAAAkrC,kBAAmBrY,IAAI,EAAElU,KAAK,EAAG;MAEhC;MACA;MACA;;MAEA+pB,GAAG,CAAC9V,gBAAgB,CAAEC,IAAI,EAAElU,KAAM,CAAC;MAEnC,IAAI,CAACwT,UAAU,CAACvQ,WAAW,CAAE8mB,GAAI,CAAC;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAA5oC,GAAA;IAAAE,KAAA,EAED,SAAAmrC,QAASxsB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACssB,YAAY,CAAEjC,MAAM,EAAErqB,KAAM,CAAC;IAE1C;EAAC;IAAA7e,GAAA;IAAAE,KAAA,EAED,SAAAorC,QAASzsB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACssB,YAAY,CAAEhC,MAAM,EAAEtqB,KAAM,CAAC;IAE1C;EAAC;IAAA7e,GAAA;IAAAE,KAAA,EAED,SAAAqrC,QAAS1sB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACssB,YAAY,CAAE/B,MAAM,EAAEvqB,KAAM,CAAC;IAE1C;EAAC;IAAA7e,GAAA;IAAAE,KAAA,EAED,SAAAsrC,gBAAiBzY,IAAI,EAAE0Y,QAAQ,EAAG;MAEjC;MACA;;MAEA9C,KAAK,CAAC1rB,IAAI,CAAE8V,IAAK,CAAC,CAAC+D,eAAe,CAAE,IAAI,CAACzE,UAAW,CAAC;MAErD,IAAI,CAACyJ,QAAQ,CAAC3e,GAAG,CAAEwrB,KAAK,CAAChrB,cAAc,CAAE8tB,QAAS,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAzrC,GAAA;IAAAE,KAAA,EAED,SAAAwrC,WAAYD,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAEtC,MAAM,EAAEuC,QAAS,CAAC;IAEhD;EAAC;IAAAzrC,GAAA;IAAAE,KAAA,EAED,SAAAyrC,WAAYF,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAErC,MAAM,EAAEsC,QAAS,CAAC;IAEhD;EAAC;IAAAzrC,GAAA;IAAAE,KAAA,EAED,SAAA0rC,WAAYH,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAEpC,MAAM,EAAEqC,QAAS,CAAC;IAEhD;EAAC;IAAAzrC,GAAA;IAAAE,KAAA,EAED,SAAA2rC,aAAcxQ,MAAM,EAAG;MAEtB,IAAI,CAACE,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,OAAOF,MAAM,CAACjO,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC;IAE/C;EAAC;IAAAh4B,GAAA;IAAAE,KAAA,EAED,SAAA4rC,aAAczQ,MAAM,EAAG;MAEtB,IAAI,CAACE,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,OAAOF,MAAM,CAACjO,YAAY,CAAEyb,KAAK,CAAC5rB,IAAI,CAAE,IAAI,CAAC+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAE,CAAC;IAEtE;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAAu/B,OAAQvnB,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAEjB;;MAEA,IAAK7U,CAAC,CAACye,SAAS,EAAG;QAElBmS,OAAO,CAAC7rB,IAAI,CAAE/E,CAAE,CAAC;MAElB,CAAC,MAAM;QAEN4wB,OAAO,CAACttB,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEuU,CAAE,CAAC;MAEvB;MAEA,IAAM6c,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAI,CAACrO,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErCwN,WAAW,CAACxP,qBAAqB,CAAE,IAAI,CAACvB,WAAY,CAAC;MAErD,IAAK,IAAI,CAAC+T,QAAQ,IAAI,IAAI,CAACC,OAAO,EAAG;QAEpCnD,KAAK,CAACpJ,MAAM,CAAEsJ,WAAW,EAAED,OAAO,EAAE,IAAI,CAAC3E,EAAG,CAAC;MAE9C,CAAC,MAAM;QAEN0E,KAAK,CAACpJ,MAAM,CAAEqJ,OAAO,EAAEC,WAAW,EAAE,IAAI,CAAC5E,EAAG,CAAC;MAE9C;MAEA,IAAI,CAAC9R,UAAU,CAACY,qBAAqB,CAAE4V,KAAM,CAAC;MAE9C,IAAKe,MAAM,EAAG;QAEbf,KAAK,CAAC/F,eAAe,CAAE8G,MAAM,CAAC5R,WAAY,CAAC;QAC3C4Q,GAAG,CAAC3V,qBAAqB,CAAE4V,KAAM,CAAC;QAClC,IAAI,CAACxW,UAAU,CAACvQ,WAAW,CAAE8mB,GAAG,CAACplB,MAAM,CAAC,CAAE,CAAC;MAE5C;IAED;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAKrW,MAAM,EAAG;MAEb,IAAKmlC,SAAS,CAACpmC,MAAM,GAAG,CAAC,EAAG;QAE3B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmmC,SAAS,CAACpmC,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE7C,IAAI,CAACqX,GAAG,CAAE8uB,SAAS,CAAEnmC,CAAC,CAAG,CAAC;QAE3B;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAKgB,MAAM,KAAK,IAAI,EAAG;QAEtB2U,OAAO,CAAChY,KAAK,CAAE,kEAAkE,EAAEqD,MAAO,CAAC;QAC3F,OAAO,IAAI;MAEZ;MAEA,IAAKA,MAAM,IAAIA,MAAM,CAAC6iC,UAAU,EAAG;QAElC,IAAK7iC,MAAM,CAAC8iC,MAAM,KAAK,IAAI,EAAG;UAE7B9iC,MAAM,CAAC8iC,MAAM,CAACsC,MAAM,CAAEplC,MAAO,CAAC;QAE/B;QAEAA,MAAM,CAAC8iC,MAAM,GAAG,IAAI;QACpB,IAAI,CAAC7N,QAAQ,CAACz2B,IAAI,CAAEwB,MAAO,CAAC;QAE5BA,MAAM,CAAC2P,aAAa,CAAE4yB,WAAY,CAAC;MAEpC,CAAC,MAAM;QAEN5tB,OAAO,CAAChY,KAAK,CAAE,+DAA+D,EAAEqD,MAAO,CAAC;MAEzF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9G,GAAA;IAAAE,KAAA,EAED,SAAAgsC,OAAQplC,MAAM,EAAG;MAEhB,IAAKmlC,SAAS,CAACpmC,MAAM,GAAG,CAAC,EAAG;QAE3B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmmC,SAAS,CAACpmC,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE7C,IAAI,CAAComC,MAAM,CAAED,SAAS,CAAEnmC,CAAC,CAAG,CAAC;QAE9B;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAMyQ,KAAK,GAAG,IAAI,CAACwlB,QAAQ,CAAC5lB,OAAO,CAAErP,MAAO,CAAC;MAE7C,IAAKyP,KAAK,KAAK,CAAE,CAAC,EAAG;QAEpBzP,MAAM,CAAC8iC,MAAM,GAAG,IAAI;QACpB,IAAI,CAAC7N,QAAQ,CAACvlB,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;QAEhCzP,MAAM,CAAC2P,aAAa,CAAE6yB,aAAc,CAAC;MAEtC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAtpC,GAAA;IAAAE,KAAA,EAED,SAAAisC,iBAAA,EAAmB;MAElB,IAAMvC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBA,MAAM,CAACsC,MAAM,CAAE,IAAK,CAAC;MAEtB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAlsC,GAAA;IAAAE,KAAA,EAED,SAAAksC,MAAA,EAAQ;MAEP,OAAO,IAAI,CAACF,MAAM,CAAAG,KAAA,CAAX,IAAI,EAAAC,kBAAA,CAAa,IAAI,CAACvQ,QAAQ,CAAC,CAAC;IAExC;EAAC;IAAA/7B,GAAA;IAAAE,KAAA,EAED,SAAAqsC,OAAQzlC,MAAM,EAAG;MAEhB;;MAEA;;MAEA,IAAI,CAACy0B,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErCsN,KAAK,CAAC5rB,IAAI,CAAE,IAAI,CAAC+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;MAEvC,IAAK1c,MAAM,CAAC8iC,MAAM,KAAK,IAAI,EAAG;QAE7B9iC,MAAM,CAAC8iC,MAAM,CAACrO,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;QAE9CsN,KAAK,CAACnrB,QAAQ,CAAE5W,MAAM,CAAC8iC,MAAM,CAAC5R,WAAY,CAAC;MAE5C;MAEAlxB,MAAM,CAACsmB,YAAY,CAAEyb,KAAM,CAAC;MAE5B,IAAI,CAAC1rB,GAAG,CAAErW,MAAO,CAAC;MAElBA,MAAM,CAACy0B,iBAAiB,CAAE,KAAK,EAAE,IAAK,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAv7B,GAAA;IAAAE,KAAA,EAED,SAAAssC,cAAeC,EAAE,EAAG;MAEnB,OAAO,IAAI,CAACC,mBAAmB,CAAE,IAAI,EAAED,EAAG,CAAC;IAE5C;EAAC;IAAAzsC,GAAA;IAAAE,KAAA,EAED,SAAAysC,gBAAiBvmC,IAAI,EAAG;MAEvB,OAAO,IAAI,CAACsmC,mBAAmB,CAAE,MAAM,EAAEtmC,IAAK,CAAC;IAEhD;EAAC;IAAApG,GAAA;IAAAE,KAAA,EAED,SAAAwsC,oBAAqBtmC,IAAI,EAAElG,KAAK,EAAG;MAElC,IAAK,IAAI,CAAEkG,IAAI,CAAE,KAAKlG,KAAK,EAAG,OAAO,IAAI;MAEzC,KAAM,IAAI4F,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAACmlB,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAExD,IAAM8mC,KAAK,GAAG,IAAI,CAAC7Q,QAAQ,CAAEj2B,CAAC,CAAE;QAChC,IAAMgB,MAAM,GAAG8lC,KAAK,CAACF,mBAAmB,CAAEtmC,IAAI,EAAElG,KAAM,CAAC;QAEvD,IAAK4G,MAAM,KAAKvC,SAAS,EAAG;UAE3B,OAAOuC,MAAM;QAEd;MAED;MAEA,OAAOvC,SAAS;IAEjB;EAAC;IAAAvE,GAAA;IAAAE,KAAA,EAED,SAAA2sC,qBAAsBzmC,IAAI,EAAElG,KAAK,EAAG;MAEnC,IAAIkD,MAAM,GAAG,EAAE;MAEf,IAAK,IAAI,CAAEgD,IAAI,CAAE,KAAKlG,KAAK,EAAGkD,MAAM,CAACkC,IAAI,CAAE,IAAK,CAAC;MAEjD,KAAM,IAAIQ,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAACmlB,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAExD,IAAMgnC,WAAW,GAAG,IAAI,CAAC/Q,QAAQ,CAAEj2B,CAAC,CAAE,CAAC+mC,oBAAoB,CAAEzmC,IAAI,EAAElG,KAAM,CAAC;QAE1E,IAAK4sC,WAAW,CAACjnC,MAAM,GAAG,CAAC,EAAG;UAE7BzC,MAAM,GAAGA,MAAM,CAACukB,MAAM,CAAEmlB,WAAY,CAAC;QAEtC;MAED;MAEA,OAAO1pC,MAAM;IAEd;EAAC;IAAApD,GAAA;IAAAE,KAAA,EAED,SAAA6sC,iBAAkBtkC,MAAM,EAAG;MAE1B,IAAI,CAAC8yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,OAAO9yB,MAAM,CAAC8wB,qBAAqB,CAAE,IAAI,CAACvB,WAAY,CAAC;IAExD;EAAC;IAAAh4B,GAAA;IAAAE,KAAA,EAED,SAAA8sC,mBAAoBvkC,MAAM,EAAG;MAE5B,IAAI,CAAC8yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,IAAI,CAACvD,WAAW,CAACqO,SAAS,CAAE0C,WAAW,EAAEtgC,MAAM,EAAEugC,QAAS,CAAC;MAE3D,OAAOvgC,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAA+sC,cAAexkC,MAAM,EAAG;MAEvB,IAAI,CAAC8yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,IAAI,CAACvD,WAAW,CAACqO,SAAS,CAAE0C,WAAW,EAAEE,aAAa,EAAExgC,MAAO,CAAC;MAEhE,OAAOA,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAgtC,kBAAmBzkC,MAAM,EAAG;MAE3B,IAAI,CAAC8yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,IAAMxd,CAAC,GAAG,IAAI,CAACia,WAAW,CAACha,QAAQ;MAEnC,OAAOvV,MAAM,CAAC+S,GAAG,CAAEuC,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,EAAE,CAAG,CAAC,CAAC5B,SAAS,CAAC,CAAC;IAEzD;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAAitC,QAAA,CAAS,6BAA8B,CAAC;EAAC;IAAAntC,GAAA;IAAAE,KAAA,EAEzC,SAAAktC,SAAUjY,QAAQ,EAAG;MAEpBA,QAAQ,CAAE,IAAK,CAAC;MAEhB,IAAM4G,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIj2B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGmlB,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEnDi2B,QAAQ,CAAEj2B,CAAC,CAAE,CAACsnC,QAAQ,CAAEjY,QAAS,CAAC;MAEnC;IAED;EAAC;IAAAn1B,GAAA;IAAAE,KAAA,EAED,SAAAmtC,gBAAiBlY,QAAQ,EAAG;MAE3B,IAAK,IAAI,CAACoV,OAAO,KAAK,KAAK,EAAG;MAE9BpV,QAAQ,CAAE,IAAK,CAAC;MAEhB,IAAM4G,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIj2B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGmlB,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEnDi2B,QAAQ,CAAEj2B,CAAC,CAAE,CAACunC,eAAe,CAAElY,QAAS,CAAC;MAE1C;IAED;EAAC;IAAAn1B,GAAA;IAAAE,KAAA,EAED,SAAAotC,kBAAmBnY,QAAQ,EAAG;MAE7B,IAAMyU,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBzU,QAAQ,CAAEyU,MAAO,CAAC;QAElBA,MAAM,CAAC0D,iBAAiB,CAAEnY,QAAS,CAAC;MAErC;IAED;EAAC;IAAAn1B,GAAA;IAAAE,KAAA,EAED,SAAAgsB,aAAA,EAAe;MAEd,IAAI,CAAC/G,MAAM,CAAC4e,OAAO,CAAE,IAAI,CAACjI,QAAQ,EAAE,IAAI,CAACzJ,UAAU,EAAE,IAAI,CAACzN,KAAM,CAAC;MAEjE,IAAI,CAACwlB,sBAAsB,GAAG,IAAI;IAEnC;EAAC;IAAApqC,GAAA;IAAAE,KAAA,EAED,SAAAqtC,kBAAmBC,KAAK,EAAG;MAE1B,IAAK,IAAI,CAAC/hB,gBAAgB,EAAG,IAAI,CAACS,YAAY,CAAC,CAAC;MAEhD,IAAK,IAAI,CAACke,sBAAsB,IAAIoD,KAAK,EAAG;QAE3C,IAAK,IAAI,CAAC5D,MAAM,KAAK,IAAI,EAAG;UAE3B,IAAI,CAAC5R,WAAW,CAAC/a,IAAI,CAAE,IAAI,CAACkI,MAAO,CAAC;QAErC,CAAC,MAAM;UAEN,IAAI,CAAC6S,WAAW,CAACnW,gBAAgB,CAAE,IAAI,CAAC+nB,MAAM,CAAC5R,WAAW,EAAE,IAAI,CAAC7S,MAAO,CAAC;QAE1E;QAEA,IAAI,CAACilB,sBAAsB,GAAG,KAAK;QAEnCoD,KAAK,GAAG,IAAI;MAEb;;MAEA;;MAEA,IAAMzR,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIj2B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGmlB,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEnD,IAAM8mC,KAAK,GAAG7Q,QAAQ,CAAEj2B,CAAC,CAAE;QAE3B,IAAK8mC,KAAK,CAACvC,qBAAqB,KAAK,IAAI,IAAImD,KAAK,KAAK,IAAI,EAAG;UAE7DZ,KAAK,CAACW,iBAAiB,CAAEC,KAAM,CAAC;QAEjC;MAED;IAED;EAAC;IAAAxtC,GAAA;IAAAE,KAAA,EAED,SAAAq7B,kBAAmBkS,aAAa,EAAEC,cAAc,EAAG;MAElD,IAAM9D,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAK6D,aAAa,KAAK,IAAI,IAAI7D,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACS,qBAAqB,KAAK,IAAI,EAAG;QAEzFT,MAAM,CAACrO,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAExC;MAEA,IAAK,IAAI,CAAC9P,gBAAgB,EAAG,IAAI,CAACS,YAAY,CAAC,CAAC;MAEhD,IAAK,IAAI,CAAC0d,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAAC5R,WAAW,CAAC/a,IAAI,CAAE,IAAI,CAACkI,MAAO,CAAC;MAErC,CAAC,MAAM;QAEN,IAAI,CAAC6S,WAAW,CAACnW,gBAAgB,CAAE,IAAI,CAAC+nB,MAAM,CAAC5R,WAAW,EAAE,IAAI,CAAC7S,MAAO,CAAC;MAE1E;;MAEA;;MAEA,IAAKuoB,cAAc,KAAK,IAAI,EAAG;QAE9B,IAAM3R,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,KAAM,IAAIj2B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGmlB,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAEnD,IAAM8mC,KAAK,GAAG7Q,QAAQ,CAAEj2B,CAAC,CAAE;UAE3B,IAAK8mC,KAAK,CAACvC,qBAAqB,KAAK,IAAI,EAAG;YAE3CuC,KAAK,CAACrR,iBAAiB,CAAE,KAAK,EAAE,IAAK,CAAC;UAEvC;QAED;MAED;IAED;EAAC;IAAAv7B,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd;MACA,IAAMC,YAAY,GAAKD,IAAI,KAAKhlB,SAAS,IAAI,OAAOglB,IAAI,KAAK,QAAU;MAEvE,IAAMG,MAAM,GAAG,CAAC,CAAC;;MAEjB;MACA;MACA;MACA,IAAKF,YAAY,EAAG;QAEnB;QACAD,IAAI,GAAG;UACNokB,UAAU,EAAE,CAAC,CAAC;UACdC,SAAS,EAAE,CAAC,CAAC;UACbrhB,QAAQ,EAAE,CAAC,CAAC;UACZ9C,MAAM,EAAE,CAAC,CAAC;UACVokB,MAAM,EAAE,CAAC,CAAC;UACVC,SAAS,EAAE,CAAC,CAAC;UACblD,UAAU,EAAE,CAAC,CAAC;UACdmD,KAAK,EAAE,CAAC;QACT,CAAC;QAEDrkB,MAAM,CAAC8C,QAAQ,GAAG;UACjBnD,OAAO,EAAE,GAAG;UACZtnB,IAAI,EAAE,QAAQ;UACdR,SAAS,EAAE;QACZ,CAAC;MAEF;;MAEA;;MAEA,IAAMuF,MAAM,GAAG,CAAC,CAAC;MAEjBA,MAAM,CAAC2Q,IAAI,GAAG,IAAI,CAACA,IAAI;MACvB3Q,MAAM,CAAC/E,IAAI,GAAG,IAAI,CAACA,IAAI;MAEvB,IAAK,IAAI,CAACqE,IAAI,KAAK,EAAE,EAAGU,MAAM,CAACV,IAAI,GAAG,IAAI,CAACA,IAAI;MAC/C,IAAK,IAAI,CAACokC,UAAU,KAAK,IAAI,EAAG1jC,MAAM,CAAC0jC,UAAU,GAAG,IAAI;MACxD,IAAK,IAAI,CAACC,aAAa,KAAK,IAAI,EAAG3jC,MAAM,CAAC2jC,aAAa,GAAG,IAAI;MAC9D,IAAK,IAAI,CAACF,OAAO,KAAK,KAAK,EAAGzjC,MAAM,CAACyjC,OAAO,GAAG,KAAK;MACpD,IAAK,IAAI,CAACG,aAAa,KAAK,KAAK,EAAG5jC,MAAM,CAAC4jC,aAAa,GAAG,KAAK;MAChE,IAAK,IAAI,CAACC,WAAW,KAAK,CAAC,EAAG7jC,MAAM,CAAC6jC,WAAW,GAAG,IAAI,CAACA,WAAW;MACnE,IAAKjrC,MAAM,CAACkH,IAAI,CAAE,IAAI,CAACklB,QAAS,CAAC,CAACjmB,MAAM,GAAG,CAAC,EAAGiB,MAAM,CAACglB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9EhlB,MAAM,CAAC0hC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACN,IAAI;MAChCphC,MAAM,CAACqe,MAAM,GAAG,IAAI,CAACA,MAAM,CAACnF,OAAO,CAAC,CAAC;MACrClZ,MAAM,CAACq9B,EAAE,GAAG,IAAI,CAACA,EAAE,CAACnkB,OAAO,CAAC,CAAC;MAE7B,IAAK,IAAI,CAACyL,gBAAgB,KAAK,KAAK,EAAG3kB,MAAM,CAAC2kB,gBAAgB,GAAG,KAAK;;MAEtE;;MAEA,IAAK,IAAI,CAACuiB,eAAe,EAAG;QAE3BlnC,MAAM,CAAC/E,IAAI,GAAG,eAAe;QAC7B+E,MAAM,CAAC2qB,KAAK,GAAG,IAAI,CAACA,KAAK;QACzB3qB,MAAM,CAACmnC,cAAc,GAAG,IAAI,CAACA,cAAc,CAAC3kB,MAAM,CAAC,CAAC;QACpD,IAAK,IAAI,CAAC4kB,aAAa,KAAK,IAAI,EAAGpnC,MAAM,CAAConC,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC5kB,MAAM,CAAC,CAAC;MAEtF;;MAEA;;MAEA,SAAS6kB,SAASA,CAAEC,OAAO,EAAEC,OAAO,EAAG;QAEtC,IAAKD,OAAO,CAAEC,OAAO,CAAC52B,IAAI,CAAE,KAAKlT,SAAS,EAAG;UAE5C6pC,OAAO,CAAEC,OAAO,CAAC52B,IAAI,CAAE,GAAG42B,OAAO,CAAC/kB,MAAM,CAAEC,IAAK,CAAC;QAEjD;QAEA,OAAO8kB,OAAO,CAAC52B,IAAI;MAEpB;MAEA,IAAK,IAAI,CAAC62B,OAAO,EAAG;QAEnB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtB,IAAK,IAAI,CAACA,UAAU,CAACC,OAAO,EAAG;YAE9B1nC,MAAM,CAACynC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACjlB,MAAM,CAAC,CAAC;UAE7C,CAAC,MAAM,IAAK,IAAI,CAACilB,UAAU,CAACrjB,SAAS,EAAG;YAEvCpkB,MAAM,CAACynC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACjlB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;UAExD;QAED;QAEA,IAAK,IAAI,CAACg3B,WAAW,IAAI,IAAI,CAACA,WAAW,CAACvjB,SAAS,IAAI,IAAI,CAACujB,WAAW,CAACziB,qBAAqB,KAAK,IAAI,EAAG;UAExGllB,MAAM,CAAC2nC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACnlB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QAE1D;MAED,CAAC,MAAM,IAAK,IAAI,CAACi3B,MAAM,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAG;QAEzD9nC,MAAM,CAAC80B,QAAQ,GAAGuS,SAAS,CAAE5kB,IAAI,CAACokB,UAAU,EAAE,IAAI,CAAC/R,QAAS,CAAC;QAE7D,IAAMiT,UAAU,GAAG,IAAI,CAACjT,QAAQ,CAACiT,UAAU;QAE3C,IAAKA,UAAU,KAAKtqC,SAAS,IAAIsqC,UAAU,CAAChB,MAAM,KAAKtpC,SAAS,EAAG;UAElE,IAAMspC,MAAM,GAAGgB,UAAU,CAAChB,MAAM;UAEhC,IAAKjkB,KAAK,CAACC,OAAO,CAAEgkB,MAAO,CAAC,EAAG;YAE9B,KAAM,IAAI/nC,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGi3B,MAAM,CAAChoC,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;cAEjD,IAAMgpC,KAAK,GAAGjB,MAAM,CAAE/nC,CAAC,CAAE;cAEzBqoC,SAAS,CAAE5kB,IAAI,CAACskB,MAAM,EAAEiB,KAAM,CAAC;YAEhC;UAED,CAAC,MAAM;YAENX,SAAS,CAAE5kB,IAAI,CAACskB,MAAM,EAAEA,MAAO,CAAC;UAEjC;QAED;MAED;MAEA,IAAK,IAAI,CAACkB,aAAa,EAAG;QAEzBjoC,MAAM,CAACkoC,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC/BloC,MAAM,CAACmoC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACjvB,OAAO,CAAC,CAAC;QAE7C,IAAK,IAAI,CAACkvB,QAAQ,KAAK3qC,SAAS,EAAG;UAElC4pC,SAAS,CAAE5kB,IAAI,CAACukB,SAAS,EAAE,IAAI,CAACoB,QAAS,CAAC;UAE1CpoC,MAAM,CAACooC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACz3B,IAAI;QAErC;MAED;MAEA,IAAK,IAAI,CAAC03B,QAAQ,KAAK5qC,SAAS,EAAG;QAElC,IAAKqlB,KAAK,CAACC,OAAO,CAAE,IAAI,CAACslB,QAAS,CAAC,EAAG;UAErC,IAAMC,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAItpC,GAAC,GAAG,CAAC,EAAE8Q,GAAC,GAAG,IAAI,CAACu4B,QAAQ,CAACtpC,MAAM,EAAEC,GAAC,GAAG8Q,GAAC,EAAE9Q,GAAC,EAAG,EAAG;YAExDspC,KAAK,CAAC9pC,IAAI,CAAE6oC,SAAS,CAAE5kB,IAAI,CAACqkB,SAAS,EAAE,IAAI,CAACuB,QAAQ,CAAErpC,GAAC,CAAG,CAAE,CAAC;UAE9D;UAEAgB,MAAM,CAACqoC,QAAQ,GAAGC,KAAK;QAExB,CAAC,MAAM;UAENtoC,MAAM,CAACqoC,QAAQ,GAAGhB,SAAS,CAAE5kB,IAAI,CAACqkB,SAAS,EAAE,IAAI,CAACuB,QAAS,CAAC;QAE7D;MAED;;MAEA;;MAEA,IAAK,IAAI,CAACpT,QAAQ,CAACl2B,MAAM,GAAG,CAAC,EAAG;QAE/BiB,MAAM,CAACi1B,QAAQ,GAAG,EAAE;QAEpB,KAAM,IAAIj2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACi2B,QAAQ,CAACl2B,MAAM,EAAEC,GAAC,EAAG,EAAG;UAEjDgB,MAAM,CAACi1B,QAAQ,CAACz2B,IAAI,CAAE,IAAI,CAACy2B,QAAQ,CAAEj2B,GAAC,CAAE,CAACwjB,MAAM,CAAEC,IAAK,CAAC,CAACziB,MAAO,CAAC;QAEjE;MAED;;MAEA;;MAEA,IAAK,IAAI,CAAC8jC,UAAU,CAAC/kC,MAAM,GAAG,CAAC,EAAG;QAEjCiB,MAAM,CAAC8jC,UAAU,GAAG,EAAE;QAEtB,KAAM,IAAI9kC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAC8kC,UAAU,CAAC/kC,MAAM,EAAEC,GAAC,EAAG,EAAG;UAEnD,IAAMupC,SAAS,GAAG,IAAI,CAACzE,UAAU,CAAE9kC,GAAC,CAAE;UAEtCgB,MAAM,CAAC8jC,UAAU,CAACtlC,IAAI,CAAE6oC,SAAS,CAAE5kB,IAAI,CAACqhB,UAAU,EAAEyE,SAAU,CAAE,CAAC;QAElE;MAED;MAEA,IAAK7lB,YAAY,EAAG;QAEnB,IAAMmkB,UAAU,GAAG2B,gBAAgB,CAAE/lB,IAAI,CAACokB,UAAW,CAAC;QACtD,IAAMC,SAAS,GAAG0B,gBAAgB,CAAE/lB,IAAI,CAACqkB,SAAU,CAAC;QACpD,IAAMrhB,QAAQ,GAAG+iB,gBAAgB,CAAE/lB,IAAI,CAACgD,QAAS,CAAC;QAClD,IAAM9C,MAAM,GAAG6lB,gBAAgB,CAAE/lB,IAAI,CAACE,MAAO,CAAC;QAC9C,IAAMokB,OAAM,GAAGyB,gBAAgB,CAAE/lB,IAAI,CAACskB,MAAO,CAAC;QAC9C,IAAMC,SAAS,GAAGwB,gBAAgB,CAAE/lB,IAAI,CAACukB,SAAU,CAAC;QACpD,IAAMlD,UAAU,GAAG0E,gBAAgB,CAAE/lB,IAAI,CAACqhB,UAAW,CAAC;QACtD,IAAMmD,KAAK,GAAGuB,gBAAgB,CAAE/lB,IAAI,CAACwkB,KAAM,CAAC;QAE5C,IAAKJ,UAAU,CAAC9nC,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAACikB,UAAU,GAAGA,UAAU;QAC3D,IAAKC,SAAS,CAAC/nC,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAACkkB,SAAS,GAAGA,SAAS;QACxD,IAAKrhB,QAAQ,CAAC1mB,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAAC6C,QAAQ,GAAGA,QAAQ;QACrD,IAAK9C,MAAM,CAAC5jB,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAACD,MAAM,GAAGA,MAAM;QAC/C,IAAKokB,OAAM,CAAChoC,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAACmkB,MAAM,GAAGA,OAAM;QAC/C,IAAKC,SAAS,CAACjoC,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAACokB,SAAS,GAAGA,SAAS;QACxD,IAAKlD,UAAU,CAAC/kC,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAACkhB,UAAU,GAAGA,UAAU;QAC3D,IAAKmD,KAAK,CAACloC,MAAM,GAAG,CAAC,EAAG6jB,MAAM,CAACqkB,KAAK,GAAGA,KAAK;MAE7C;MAEArkB,MAAM,CAAC5iB,MAAM,GAAGA,MAAM;MAEtB,OAAO4iB,MAAM;;MAEb;MACA;MACA;MACA,SAAS4lB,gBAAgBA,CAAEC,KAAK,EAAG;QAElC,IAAM/sC,MAAM,GAAG,EAAE;QACjB,KAAM,IAAMxC,GAAG,IAAIuvC,KAAK,EAAG;UAE1B,IAAMtmB,IAAI,GAAGsmB,KAAK,CAAEvvC,GAAG,CAAE;UACzB,OAAOipB,IAAI,CAACuD,QAAQ;UACpBhqB,MAAM,CAAC8C,IAAI,CAAE2jB,IAAK,CAAC;QAEpB;QAEA,OAAOzmB,MAAM;MAEd;IAED;EAAC;IAAAxC,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAOwyB,SAAS,EAAG;MAElB,OAAO,IAAI,IAAI,CAACrpC,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAI,EAAEuyB,SAAU,CAAC;IAEtD;EAAC;IAAAxvC,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,GAAG,IAAI,EAAG;MAEhC,IAAI,CAACppC,IAAI,GAAGglB,MAAM,CAAChlB,IAAI;MAEvB,IAAI,CAAC+9B,EAAE,CAAClnB,IAAI,CAAEmO,MAAM,CAAC+Y,EAAG,CAAC;MAEzB,IAAI,CAACrI,QAAQ,CAAC7e,IAAI,CAAEmO,MAAM,CAAC0Q,QAAS,CAAC;MACrC,IAAI,CAACrX,QAAQ,CAAC5J,KAAK,GAAGuQ,MAAM,CAAC3G,QAAQ,CAAC5J,KAAK;MAC3C,IAAI,CAACwX,UAAU,CAACpV,IAAI,CAAEmO,MAAM,CAACiH,UAAW,CAAC;MACzC,IAAI,CAACzN,KAAK,CAAC3H,IAAI,CAAEmO,MAAM,CAACxG,KAAM,CAAC;MAE/B,IAAI,CAACO,MAAM,CAAClI,IAAI,CAAEmO,MAAM,CAACjG,MAAO,CAAC;MACjC,IAAI,CAAC6S,WAAW,CAAC/a,IAAI,CAAEmO,MAAM,CAAC4M,WAAY,CAAC;MAE3C,IAAI,CAACvM,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;MAC/C,IAAI,CAAC2e,sBAAsB,GAAGhf,MAAM,CAACgf,sBAAsB;MAE3D,IAAI,CAACC,qBAAqB,GAAGjf,MAAM,CAACif,qBAAqB;MAEzD,IAAI,CAAC7B,MAAM,CAACN,IAAI,GAAG9c,MAAM,CAACod,MAAM,CAACN,IAAI;MACrC,IAAI,CAACqC,OAAO,GAAGnf,MAAM,CAACmf,OAAO;MAE7B,IAAI,CAACC,UAAU,GAAGpf,MAAM,CAACof,UAAU;MACnC,IAAI,CAACC,aAAa,GAAGrf,MAAM,CAACqf,aAAa;MAEzC,IAAI,CAACC,aAAa,GAAGtf,MAAM,CAACsf,aAAa;MACzC,IAAI,CAACC,WAAW,GAAGvf,MAAM,CAACuf,WAAW;MAErC,IAAI,CAACC,UAAU,GAAGxf,MAAM,CAACwf,UAAU,CAACxjC,KAAK,CAAC,CAAC;MAE3C,IAAI,CAAC0kB,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAS,CAAE,CAAC;MAE/D,IAAK0jB,SAAS,KAAK,IAAI,EAAG;QAEzB,KAAM,IAAI1pC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGslB,MAAM,CAAC2Q,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEnD,IAAM8mC,KAAK,GAAGxhB,MAAM,CAAC2Q,QAAQ,CAAEj2B,CAAC,CAAE;UAClC,IAAI,CAACqX,GAAG,CAAEyvB,KAAK,CAAC5vB,KAAK,CAAC,CAAE,CAAC;QAE1B;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAusB,QAAA;AAAA,EA55BqBzzB,eAAe;AAAAtW,OAAA,CAAA+pC,QAAA,GAAAA,QAAA;AAg6BtCA,QAAQ,CAACM,UAAU,GAAG,aAAc,IAAIpT,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAC1D8S,QAAQ,CAACY,0BAA0B,GAAG,IAAI;AAC1CZ,QAAQ,CAACe,gCAAgC,GAAG,IAAI;AAEhD,IAAMmF,KAAK,GAAG,aAAc,IAAIhZ,OAAO,CAAC,CAAC;AACzC,IAAMiZ,KAAK,GAAG,aAAc,IAAIjZ,OAAO,CAAC,CAAC;AACzC,IAAMkZ,KAAK,GAAG,aAAc,IAAIlZ,OAAO,CAAC,CAAC;AACzC,IAAMmZ,KAAK,GAAG,aAAc,IAAInZ,OAAO,CAAC,CAAC;AAEzC,IAAMoZ,IAAI,GAAG,aAAc,IAAIpZ,OAAO,CAAC,CAAC;AACxC,IAAMqZ,IAAI,GAAG,aAAc,IAAIrZ,OAAO,CAAC,CAAC;AACxC,IAAMsZ,IAAI,GAAG,aAAc,IAAItZ,OAAO,CAAC,CAAC;AACxC,IAAMuZ,IAAI,GAAG,aAAc,IAAIvZ,OAAO,CAAC,CAAC;AACxC,IAAMwZ,IAAI,GAAG,aAAc,IAAIxZ,OAAO,CAAC,CAAC;AACxC,IAAMyZ,IAAI,GAAG,aAAc,IAAIzZ,OAAO,CAAC,CAAC;AAExC,IAAI0Z,WAAW,GAAG,KAAK;AAAC,IAElBC,QAAQ;EAEb,SAAAA,SAAa11B,CAAC,GAAG,IAAI+b,OAAO,CAAC,CAAC,EAAE9b,CAAC,GAAG,IAAI8b,OAAO,CAAC,CAAC,EAAE7b,CAAC,GAAG,IAAI6b,OAAO,CAAC,CAAC,EAAG;IAAApuB,eAAA,OAAA+nC,QAAA;IAEtE,IAAI,CAAC11B,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EAEX;EAAC/R,YAAA,CAAAunC,QAAA;IAAApwC,GAAA;IAAAE,KAAA,EAkGD,SAAAsb,IAAKd,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAEd,IAAI,CAACF,CAAC,CAACuC,IAAI,CAAEvC,CAAE,CAAC;MAChB,IAAI,CAACC,CAAC,CAACsC,IAAI,CAAEtC,CAAE,CAAC;MAChB,IAAI,CAACC,CAAC,CAACqC,IAAI,CAAErC,CAAE,CAAC;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAAmwC,wBAAyB7V,MAAM,EAAE8V,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAE7C,IAAI,CAAC91B,CAAC,CAACuC,IAAI,CAAEud,MAAM,CAAE8V,EAAE,CAAG,CAAC;MAC3B,IAAI,CAAC31B,CAAC,CAACsC,IAAI,CAAEud,MAAM,CAAE+V,EAAE,CAAG,CAAC;MAC3B,IAAI,CAAC31B,CAAC,CAACqC,IAAI,CAAEud,MAAM,CAAEgW,EAAE,CAAG,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAxwC,GAAA;IAAAE,KAAA,EAED,SAAAuwC,2BAA4BvwB,SAAS,EAAEowB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAI,CAAC91B,CAAC,CAACuF,mBAAmB,CAAEC,SAAS,EAAEowB,EAAG,CAAC;MAC3C,IAAI,CAAC31B,CAAC,CAACsF,mBAAmB,CAAEC,SAAS,EAAEqwB,EAAG,CAAC;MAC3C,IAAI,CAAC31B,CAAC,CAACqF,mBAAmB,CAAEC,SAAS,EAAEswB,EAAG,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAxwC,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAM0f,QAAQ,EAAG;MAEhB,IAAI,CAACjiB,CAAC,CAACuC,IAAI,CAAE0f,QAAQ,CAACjiB,CAAE,CAAC;MACzB,IAAI,CAACC,CAAC,CAACsC,IAAI,CAAE0f,QAAQ,CAAChiB,CAAE,CAAC;MACzB,IAAI,CAACC,CAAC,CAACqC,IAAI,CAAE0f,QAAQ,CAAC/hB,CAAE,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAAwwC,QAAA,EAAU;MAETjB,KAAK,CAAChyB,UAAU,CAAE,IAAI,CAAC7C,CAAC,EAAE,IAAI,CAACD,CAAE,CAAC;MAClC+0B,KAAK,CAACjyB,UAAU,CAAE,IAAI,CAAC/C,CAAC,EAAE,IAAI,CAACC,CAAE,CAAC;MAElC,OAAO80B,KAAK,CAAChxB,KAAK,CAAEixB,KAAM,CAAC,CAAC7pC,MAAM,CAAC,CAAC,GAAG,GAAG;IAE3C;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAAywC,YAAaloC,MAAM,EAAG;MAErB,OAAOA,MAAM,CAAC4U,UAAU,CAAE,IAAI,CAAC3C,CAAC,EAAE,IAAI,CAACC,CAAE,CAAC,CAACwC,GAAG,CAAE,IAAI,CAACvC,CAAE,CAAC,CAAC+C,cAAc,CAAE,CAAC,GAAG,CAAE,CAAC;IAEjF;EAAC;IAAA3d,GAAA;IAAAE,KAAA,EAED,SAAA0wC,UAAWnoC,MAAM,EAAG;MAEnB,OAAO2nC,QAAQ,CAACQ,SAAS,CAAE,IAAI,CAACl2B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEnS,MAAO,CAAC;IAE5D;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAA2wC,SAAUpoC,MAAM,EAAG;MAElB,OAAOA,MAAM,CAACqoC,qBAAqB,CAAE,IAAI,CAACp2B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAE,CAAC;IAE9D;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAA6wC,aAAc5V,KAAK,EAAE1yB,MAAM,EAAG;MAE7B,OAAO2nC,QAAQ,CAACW,YAAY,CAAE5V,KAAK,EAAE,IAAI,CAACzgB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEnS,MAAO,CAAC;IAEtE;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAA8wC,MAAO7V,KAAK,EAAE8V,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE1oC,MAAM,EAAG;MAAE;;MAEvC,IAAK0nC,WAAW,KAAK,KAAK,EAAG;QAE5B10B,OAAO,CAACC,IAAI,CAAE,+EAAgF,CAAC;QAE/Fy0B,WAAW,GAAG,IAAI;MAEnB;MAEA,OAAOC,QAAQ,CAACgB,gBAAgB,CAAEjW,KAAK,EAAE,IAAI,CAACzgB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEq2B,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE1oC,MAAO,CAAC;IAEzF;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAkxC,iBAAkBjW,KAAK,EAAExb,EAAE,EAAEC,EAAE,EAAEyxB,EAAE,EAAE5oC,MAAM,EAAG;MAE7C,OAAO2nC,QAAQ,CAACgB,gBAAgB,CAAEjW,KAAK,EAAE,IAAI,CAACzgB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE+E,EAAE,EAAEC,EAAE,EAAEyxB,EAAE,EAAE5oC,MAAO,CAAC;IAEtF;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAA87B,cAAeb,KAAK,EAAG;MAEtB,OAAOiV,QAAQ,CAACpU,aAAa,CAAEb,KAAK,EAAE,IAAI,CAACzgB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAE,CAAC;IAE/D;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EAED,SAAAoxC,cAAehS,SAAS,EAAG;MAE1B,OAAO8Q,QAAQ,CAACkB,aAAa,CAAE,IAAI,CAAC52B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE0kB,SAAU,CAAC;IAEnE;EAAC;IAAAt/B,GAAA;IAAAE,KAAA,EAED,SAAAi8B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAAC2B,kBAAkB,CAAE,IAAK,CAAC;IAEtC;EAAC;IAAA18B,GAAA;IAAAE,KAAA,EAED,SAAAy/B,oBAAqBwH,CAAC,EAAE1+B,MAAM,EAAG;MAEhC,IAAMiS,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAIsC,CAAC,EAAE8P,CAAC;;MAER;MACA;MACA;MACA;MACA;;MAEA6iB,IAAI,CAACpyB,UAAU,CAAE9C,CAAC,EAAED,CAAE,CAAC;MACvBo1B,IAAI,CAACryB,UAAU,CAAE7C,CAAC,EAAEF,CAAE,CAAC;MACvBs1B,IAAI,CAACvyB,UAAU,CAAE0pB,CAAC,EAAEzsB,CAAE,CAAC;MACvB,IAAMpD,EAAE,GAAGu4B,IAAI,CAACrxB,GAAG,CAAEwxB,IAAK,CAAC;MAC3B,IAAMz4B,EAAE,GAAGu4B,IAAI,CAACtxB,GAAG,CAAEwxB,IAAK,CAAC;MAC3B,IAAK14B,EAAE,IAAI,CAAC,IAAIC,EAAE,IAAI,CAAC,EAAG;QAEzB;QACA,OAAO9O,MAAM,CAACwU,IAAI,CAAEvC,CAAE,CAAC;MAExB;MAEAu1B,IAAI,CAACxyB,UAAU,CAAE0pB,CAAC,EAAExsB,CAAE,CAAC;MACvB,IAAMnD,EAAE,GAAGq4B,IAAI,CAACrxB,GAAG,CAAEyxB,IAAK,CAAC;MAC3B,IAAMsB,EAAE,GAAGzB,IAAI,CAACtxB,GAAG,CAAEyxB,IAAK,CAAC;MAC3B,IAAKz4B,EAAE,IAAI,CAAC,IAAI+5B,EAAE,IAAI/5B,EAAE,EAAG;QAE1B;QACA,OAAO/O,MAAM,CAACwU,IAAI,CAAEtC,CAAE,CAAC;MAExB;MAEA,IAAM62B,EAAE,GAAGl6B,EAAE,GAAGi6B,EAAE,GAAG/5B,EAAE,GAAGD,EAAE;MAC5B,IAAKi6B,EAAE,IAAI,CAAC,IAAIl6B,EAAE,IAAI,CAAC,IAAIE,EAAE,IAAI,CAAC,EAAG;QAEpC0F,CAAC,GAAG5F,EAAE,IAAKA,EAAE,GAAGE,EAAE,CAAE;QACpB;QACA,OAAO/O,MAAM,CAACwU,IAAI,CAAEvC,CAAE,CAAC,CAAC4C,eAAe,CAAEuyB,IAAI,EAAE3yB,CAAE,CAAC;MAEnD;MAEAgzB,IAAI,CAACzyB,UAAU,CAAE0pB,CAAC,EAAEvsB,CAAE,CAAC;MACvB,IAAM62B,EAAE,GAAG5B,IAAI,CAACrxB,GAAG,CAAE0xB,IAAK,CAAC;MAC3B,IAAMwB,EAAE,GAAG5B,IAAI,CAACtxB,GAAG,CAAE0xB,IAAK,CAAC;MAC3B,IAAKwB,EAAE,IAAI,CAAC,IAAID,EAAE,IAAIC,EAAE,EAAG;QAE1B;QACA,OAAOjpC,MAAM,CAACwU,IAAI,CAAErC,CAAE,CAAC;MAExB;MAEA,IAAM+2B,EAAE,GAAGF,EAAE,GAAGl6B,EAAE,GAAGD,EAAE,GAAGo6B,EAAE;MAC5B,IAAKC,EAAE,IAAI,CAAC,IAAIp6B,EAAE,IAAI,CAAC,IAAIm6B,EAAE,IAAI,CAAC,EAAG;QAEpC1kB,CAAC,GAAGzV,EAAE,IAAKA,EAAE,GAAGm6B,EAAE,CAAE;QACpB;QACA,OAAOjpC,MAAM,CAACwU,IAAI,CAAEvC,CAAE,CAAC,CAAC4C,eAAe,CAAEwyB,IAAI,EAAE9iB,CAAE,CAAC;MAEnD;MAEA,IAAM4kB,EAAE,GAAGp6B,EAAE,GAAGk6B,EAAE,GAAGD,EAAE,GAAGF,EAAE;MAC5B,IAAKK,EAAE,IAAI,CAAC,IAAML,EAAE,GAAG/5B,EAAE,IAAM,CAAC,IAAMi6B,EAAE,GAAGC,EAAE,IAAM,CAAC,EAAG;QAEtD3B,IAAI,CAACtyB,UAAU,CAAE7C,CAAC,EAAED,CAAE,CAAC;QACvBqS,CAAC,GAAG,CAAEukB,EAAE,GAAG/5B,EAAE,KAAS+5B,EAAE,GAAG/5B,EAAE,IAAOi6B,EAAE,GAAGC,EAAE,CAAE,CAAE;QAC/C;QACA,OAAOjpC,MAAM,CAACwU,IAAI,CAAEtC,CAAE,CAAC,CAAC2C,eAAe,CAAEyyB,IAAI,EAAE/iB,CAAE,CAAC,CAAC,CAAC;MAErD;;MAEA;MACA,IAAM6kB,KAAK,GAAG,CAAC,IAAKD,EAAE,GAAGD,EAAE,GAAGH,EAAE,CAAE;MAClC;MACAt0B,CAAC,GAAGy0B,EAAE,GAAGE,KAAK;MACd7kB,CAAC,GAAGwkB,EAAE,GAAGK,KAAK;MAEd,OAAOppC,MAAM,CAACwU,IAAI,CAAEvC,CAAE,CAAC,CAAC4C,eAAe,CAAEuyB,IAAI,EAAE3yB,CAAE,CAAC,CAACI,eAAe,CAAEwyB,IAAI,EAAE9iB,CAAE,CAAC;IAE9E;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQ8c,QAAQ,EAAG;MAElB,OAAOA,QAAQ,CAACjiB,CAAC,CAACmF,MAAM,CAAE,IAAI,CAACnF,CAAE,CAAC,IAAIiiB,QAAQ,CAAChiB,CAAC,CAACkF,MAAM,CAAE,IAAI,CAAClF,CAAE,CAAC,IAAIgiB,QAAQ,CAAC/hB,CAAC,CAACiF,MAAM,CAAE,IAAI,CAACjF,CAAE,CAAC;IAEjG;EAAC;IAAA5a,GAAA;IAAAE,KAAA,EA1SD,SAAA0wC,UAAkBl2B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEnS,MAAM,EAAG;MAEnCA,MAAM,CAACgV,UAAU,CAAE7C,CAAC,EAAED,CAAE,CAAC;MACzB80B,KAAK,CAAChyB,UAAU,CAAE/C,CAAC,EAAEC,CAAE,CAAC;MACxBlS,MAAM,CAACgW,KAAK,CAAEgxB,KAAM,CAAC;MAErB,IAAMqC,cAAc,GAAGrpC,MAAM,CAACiW,QAAQ,CAAC,CAAC;MACxC,IAAKozB,cAAc,GAAG,CAAC,EAAG;QAEzB,OAAOrpC,MAAM,CAACkV,cAAc,CAAE,CAAC,GAAG3G,IAAI,CAAC2H,IAAI,CAAEmzB,cAAe,CAAE,CAAC;MAEhE;MAEA,OAAOrpC,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE7B;;IAEA;IACA;EAAA;IAAAxb,GAAA;IAAAE,KAAA,EACA,SAAA6wC,aAAqB5V,KAAK,EAAEzgB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEnS,MAAM,EAAG;MAE7CgnC,KAAK,CAAChyB,UAAU,CAAE7C,CAAC,EAAEF,CAAE,CAAC;MACxBg1B,KAAK,CAACjyB,UAAU,CAAE9C,CAAC,EAAED,CAAE,CAAC;MACxBi1B,KAAK,CAAClyB,UAAU,CAAE0d,KAAK,EAAEzgB,CAAE,CAAC;MAE5B,IAAMq3B,KAAK,GAAGtC,KAAK,CAACjxB,GAAG,CAAEixB,KAAM,CAAC;MAChC,IAAMuC,KAAK,GAAGvC,KAAK,CAACjxB,GAAG,CAAEkxB,KAAM,CAAC;MAChC,IAAMuC,KAAK,GAAGxC,KAAK,CAACjxB,GAAG,CAAEmxB,KAAM,CAAC;MAChC,IAAMuC,KAAK,GAAGxC,KAAK,CAAClxB,GAAG,CAAEkxB,KAAM,CAAC;MAChC,IAAMyC,KAAK,GAAGzC,KAAK,CAAClxB,GAAG,CAAEmxB,KAAM,CAAC;MAEhC,IAAMkC,KAAK,GAAKE,KAAK,GAAGG,KAAK,GAAGF,KAAK,GAAGA,KAAO;;MAE/C;MACA,IAAKH,KAAK,KAAK,CAAC,EAAG;QAElB;QACA;QACA,OAAOppC,MAAM,CAAC+S,GAAG,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAEnC;MAEA,IAAM42B,QAAQ,GAAG,CAAC,GAAGP,KAAK;MAC1B,IAAMhY,CAAC,GAAG,CAAEqY,KAAK,GAAGD,KAAK,GAAGD,KAAK,GAAGG,KAAK,IAAKC,QAAQ;MACtD,IAAMl1B,CAAC,GAAG,CAAE60B,KAAK,GAAGI,KAAK,GAAGH,KAAK,GAAGC,KAAK,IAAKG,QAAQ;;MAEtD;MACA,OAAO3pC,MAAM,CAAC+S,GAAG,CAAE,CAAC,GAAGqe,CAAC,GAAG3c,CAAC,EAAEA,CAAC,EAAE2c,CAAE,CAAC;IAErC;EAAC;IAAA75B,GAAA;IAAAE,KAAA,EAED,SAAA87B,cAAsBb,KAAK,EAAEzgB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAEtC,IAAI,CAACm2B,YAAY,CAAE5V,KAAK,EAAEzgB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEg1B,KAAM,CAAC;MAE1C,OAASA,KAAK,CAAC13B,CAAC,IAAI,CAAC,IAAQ03B,KAAK,CAACp3B,CAAC,IAAI,CAAG,IAAQo3B,KAAK,CAAC13B,CAAC,GAAG03B,KAAK,CAACp3B,CAAC,IAAM,CAAG;IAE9E;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA8wC,MAAc7V,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEoU,EAAE,EAAEpB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE1oC,MAAM,EAAG;MAAE;;MAE1D,IAAK0nC,WAAW,KAAK,KAAK,EAAG;QAE5B10B,OAAO,CAACC,IAAI,CAAE,+EAAgF,CAAC;QAE/Fy0B,WAAW,GAAG,IAAI;MAEnB;MAEA,OAAO,IAAI,CAACiB,gBAAgB,CAAEjW,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEoU,EAAE,EAAEpB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE1oC,MAAO,CAAC;IAEzE;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAkxC,iBAAyBjW,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEoU,EAAE,EAAE1yB,EAAE,EAAEC,EAAE,EAAEyxB,EAAE,EAAE5oC,MAAM,EAAG;MAEhE,IAAI,CAACsoC,YAAY,CAAE5V,KAAK,EAAE6C,EAAE,EAAEC,EAAE,EAAEoU,EAAE,EAAEzC,KAAM,CAAC;MAE7CnnC,MAAM,CAACiU,SAAS,CAAE,CAAE,CAAC;MACrBjU,MAAM,CAAC6U,eAAe,CAAEqC,EAAE,EAAEiwB,KAAK,CAAC13B,CAAE,CAAC;MACrCzP,MAAM,CAAC6U,eAAe,CAAEsC,EAAE,EAAEgwB,KAAK,CAACp3B,CAAE,CAAC;MACrC/P,MAAM,CAAC6U,eAAe,CAAE+zB,EAAE,EAAEzB,KAAK,CAAC7iB,CAAE,CAAC;MAErC,OAAOtkB,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAoxC,cAAsB52B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE0kB,SAAS,EAAG;MAE1CmQ,KAAK,CAAChyB,UAAU,CAAE7C,CAAC,EAAED,CAAE,CAAC;MACxB+0B,KAAK,CAACjyB,UAAU,CAAE/C,CAAC,EAAEC,CAAE,CAAC;;MAExB;MACA,OAAS80B,KAAK,CAAChxB,KAAK,CAAEixB,KAAM,CAAC,CAAClxB,GAAG,CAAE8gB,SAAU,CAAC,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;IAEpE;EAAC;EAAA,OAAA8Q,QAAA;AAAA;AAAA5wC,OAAA,CAAA4wC,QAAA,GAAAA,QAAA;AAgNF,IAAIkC,WAAW,GAAG,CAAC;AAAC,IAEdC,QAAQ,0BAAAC,iBAAA;EAAApoB,SAAA,CAAAmoB,QAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAnoB,YAAA,CAAAioB,QAAA;EAEb,SAAAA,SAAA,EAAc;IAAA,IAAAG,OAAA;IAAArqC,eAAA,OAAAkqC,QAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAzwC,IAAA;IAEA0wC,OAAA,CAAKC,UAAU,GAAG,IAAI;IAEtBjzC,MAAM,CAACI,cAAc,CAAAqrB,sBAAA,CAAAunB,OAAA,GAAQ,IAAI,EAAE;MAAExyC,KAAK,EAAEoyC,WAAW;IAAI,CAAE,CAAC;IAE9DI,OAAA,CAAKj7B,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1Bu7B,OAAA,CAAKtsC,IAAI,GAAG,EAAE;IACdssC,OAAA,CAAK3wC,IAAI,GAAG,UAAU;IAEtB2wC,OAAA,CAAKE,QAAQ,GAAG5nC,cAAc;IAC9B0nC,OAAA,CAAKG,IAAI,GAAGloC,SAAS;IACrB+nC,OAAA,CAAKI,YAAY,GAAG,KAAK;IAEzBJ,OAAA,CAAKK,OAAO,GAAG,CAAC;IAChBL,OAAA,CAAKM,WAAW,GAAG,KAAK;IACxBN,OAAA,CAAKO,SAAS,GAAG,KAAK;IAEtBP,OAAA,CAAKQ,QAAQ,GAAGpnC,cAAc;IAC9B4mC,OAAA,CAAKS,QAAQ,GAAGpnC,sBAAsB;IACtC2mC,OAAA,CAAKU,aAAa,GAAG/nC,WAAW;IAChCqnC,OAAA,CAAKW,aAAa,GAAG,IAAI;IACzBX,OAAA,CAAKY,aAAa,GAAG,IAAI;IACzBZ,OAAA,CAAKa,kBAAkB,GAAG,IAAI;IAE9Bb,OAAA,CAAKc,SAAS,GAAGhnC,cAAc;IAC/BkmC,OAAA,CAAKe,SAAS,GAAG,IAAI;IACrBf,OAAA,CAAKgB,UAAU,GAAG,IAAI;IAEtBhB,OAAA,CAAKiB,gBAAgB,GAAG,IAAI;IAC5BjB,OAAA,CAAKkB,WAAW,GAAGr/B,iBAAiB;IACpCm+B,OAAA,CAAKmB,UAAU,GAAG,CAAC;IACnBnB,OAAA,CAAKoB,eAAe,GAAG,IAAI;IAC3BpB,OAAA,CAAKqB,WAAW,GAAGtgC,aAAa;IAChCi/B,OAAA,CAAKsB,YAAY,GAAGvgC,aAAa;IACjCi/B,OAAA,CAAKuB,YAAY,GAAGxgC,aAAa;IACjCi/B,OAAA,CAAKwB,YAAY,GAAG,KAAK;IAEzBxB,OAAA,CAAKyB,cAAc,GAAG,IAAI;IAC1BzB,OAAA,CAAK0B,gBAAgB,GAAG,KAAK;IAC7B1B,OAAA,CAAK2B,WAAW,GAAG,KAAK;IAExB3B,OAAA,CAAK4B,UAAU,GAAG,IAAI;IAEtB5B,OAAA,CAAK6B,UAAU,GAAG,IAAI;IAEtB7B,OAAA,CAAK8B,SAAS,GAAG,IAAI,CAAC,CAAC;;IAEvB9B,OAAA,CAAK+B,aAAa,GAAG,KAAK;IAC1B/B,OAAA,CAAKgC,mBAAmB,GAAG,CAAC;IAC5BhC,OAAA,CAAKiC,kBAAkB,GAAG,CAAC;IAE3BjC,OAAA,CAAKkC,SAAS,GAAG,KAAK;IAEtBlC,OAAA,CAAKmC,eAAe,GAAG,KAAK;IAC5BnC,OAAA,CAAKoC,kBAAkB,GAAG,KAAK;IAC/BpC,OAAA,CAAKqC,eAAe,GAAG,KAAK;IAE5BrC,OAAA,CAAKnI,OAAO,GAAG,IAAI;IAEnBmI,OAAA,CAAKsC,UAAU,GAAG,IAAI;IAEtBtC,OAAA,CAAK5mB,QAAQ,GAAG,CAAC,CAAC;IAElB4mB,OAAA,CAAKrpB,OAAO,GAAG,CAAC;IAEhBqpB,OAAA,CAAKuC,UAAU,GAAG,CAAC;IAAC,OAAAvC,OAAA;EAErB;EAAC7pC,YAAA,CAAA0pC,QAAA;IAAAvyC,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAgB;MAEf,OAAO,IAAI,CAACw4B,UAAU;IAEvB,CAAC;IAAAz5B,GAAA,EAED,SAAAA,IAAetb,KAAK,EAAG;MAEtB,IAAK,IAAI,CAAC+0C,UAAU,GAAG,CAAC,KAAK/0C,KAAK,GAAG,CAAC,EAAG;QAExC,IAAI,CAACmpB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAAC4rB,UAAU,GAAG/0C,KAAK;IAExB;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAg1C,QAAA,CAAS,8BAA+B,CAAC;EAAC;IAAAl1C,GAAA;IAAAE,KAAA,EAE1C,SAAA2qC,eAAA,CAAgB,wDAAyD,CAAC;EAAC;IAAA7qC,GAAA;IAAAE,KAAA,EAE3E,SAAAi1C,gBAAA,CAAiB,8BAA+B,CAAC;EAAC;IAAAn1C,GAAA;IAAAE,KAAA,EAElD,SAAAk1C,sBAAA,EAAwB;MAEvB,OAAO,IAAI,CAACD,eAAe,CAACE,QAAQ,CAAC,CAAC;IAEvC;EAAC;IAAAr1C,GAAA;IAAAE,KAAA,EAED,SAAAo1C,UAAW9yC,MAAM,EAAG;MAEnB,IAAKA,MAAM,KAAK+B,SAAS,EAAG;MAE5B,KAAM,IAAMvE,GAAG,IAAIwC,MAAM,EAAG;QAE3B,IAAM+yC,QAAQ,GAAG/yC,MAAM,CAAExC,GAAG,CAAE;QAE9B,IAAKu1C,QAAQ,KAAKhxC,SAAS,EAAG;UAE7BkX,OAAO,CAACC,IAAI,+BAAAiM,MAAA,CAAiC3nB,GAAG,8BAA6B,CAAC;UAC9E;QAED;QAEA,IAAMw1C,YAAY,GAAG,IAAI,CAAEx1C,GAAG,CAAE;QAEhC,IAAKw1C,YAAY,KAAKjxC,SAAS,EAAG;UAEjCkX,OAAO,CAACC,IAAI,qBAAAiM,MAAA,CAAuB3nB,GAAG,mCAAA2nB,MAAA,CAAkC,IAAI,CAAC5lB,IAAI,MAAK,CAAC;UACvF;QAED;QAEA,IAAKyzC,YAAY,IAAIA,YAAY,CAAChH,OAAO,EAAG;UAE3CgH,YAAY,CAACh6B,GAAG,CAAE+5B,QAAS,CAAC;QAE7B,CAAC,MAAM,IAAOC,YAAY,IAAIA,YAAY,CAAC7e,SAAS,IAAQ4e,QAAQ,IAAIA,QAAQ,CAAC5e,SAAW,EAAG;UAE9F6e,YAAY,CAACv4B,IAAI,CAAEs4B,QAAS,CAAC;QAE9B,CAAC,MAAM;UAEN,IAAI,CAAEv1C,GAAG,CAAE,GAAGu1C,QAAQ;QAEvB;MAED;IAED;EAAC;IAAAv1C,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKhlB,SAAS,IAAI,OAAOglB,IAAI,KAAK,QAAU;MAEvE,IAAKC,YAAY,EAAG;QAEnBD,IAAI,GAAG;UACNgD,QAAQ,EAAE,CAAC,CAAC;UACZ9C,MAAM,EAAE,CAAC;QACV,CAAC;MAEF;MAEA,IAAMR,IAAI,GAAG;QACZuD,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZtnB,IAAI,EAAE,UAAU;UAChBR,SAAS,EAAE;QACZ;MACD,CAAC;;MAED;MACA0nB,IAAI,CAACxR,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBwR,IAAI,CAAClnB,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,IAAK,IAAI,CAACqE,IAAI,KAAK,EAAE,EAAG6iB,IAAI,CAAC7iB,IAAI,GAAG,IAAI,CAACA,IAAI;MAE7C,IAAK,IAAI,CAACogB,KAAK,IAAI,IAAI,CAACA,KAAK,CAACgoB,OAAO,EAAGvlB,IAAI,CAACzC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACivB,MAAM,CAAC,CAAC;MAExE,IAAK,IAAI,CAACC,SAAS,KAAKnxC,SAAS,EAAG0kB,IAAI,CAACysB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,SAAS,KAAKpxC,SAAS,EAAG0kB,IAAI,CAAC0sB,SAAS,GAAG,IAAI,CAACA,SAAS;MAEnE,IAAK,IAAI,CAACC,KAAK,KAAKrxC,SAAS,EAAG0kB,IAAI,CAAC2sB,KAAK,GAAG,IAAI,CAACA,KAAK;MACvD,IAAK,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAACrH,OAAO,EAAGvlB,IAAI,CAAC4sB,UAAU,GAAG,IAAI,CAACA,UAAU,CAACJ,MAAM,CAAC,CAAC;MAC5F,IAAK,IAAI,CAACK,cAAc,KAAKvxC,SAAS,EAAG0kB,IAAI,CAAC6sB,cAAc,GAAG,IAAI,CAACA,cAAc;MAClF,IAAK,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACvH,OAAO,EAAGvlB,IAAI,CAAC8sB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACN,MAAM,CAAC,CAAC;MACpF,IAAK,IAAI,CAACO,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,KAAK,CAAC,EAAG/sB,IAAI,CAAC+sB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAE7G,IAAK,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACzH,OAAO,EAAGvlB,IAAI,CAACgtB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACR,MAAM,CAAC,CAAC;MACpF,IAAK,IAAI,CAACS,iBAAiB,KAAK3xC,SAAS,EAAG0kB,IAAI,CAACitB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAC3F,IAAK,IAAI,CAACC,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC3H,OAAO,EAAGvlB,IAAI,CAACktB,aAAa,GAAG,IAAI,CAACA,aAAa,CAACV,MAAM,CAAC,CAAC;MACxG,IAAK,IAAI,CAACW,SAAS,KAAK7xC,SAAS,EAAG0kB,IAAI,CAACmtB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,SAAS,KAAK9xC,SAAS,EAAG0kB,IAAI,CAACotB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,kBAAkB,KAAK/xC,SAAS,EAAG0kB,IAAI,CAACqtB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAE9F,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACrrB,SAAS,EAAG;QAEvDjC,IAAI,CAACstB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACjtB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAE1D;MAEA,IAAK,IAAI,CAAC++B,qBAAqB,IAAI,IAAI,CAACA,qBAAqB,CAACtrB,SAAS,EAAG;QAEzEjC,IAAI,CAACutB,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACltB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAE5E;MAEA,IAAK,IAAI,CAACg/B,kBAAkB,IAAI,IAAI,CAACA,kBAAkB,CAACvrB,SAAS,EAAG;QAEnEjC,IAAI,CAACwtB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACntB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QACrEwR,IAAI,CAACytB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAAC12B,OAAO,CAAC,CAAC;MAEhE;MAEA,IAAK,IAAI,CAAC22B,WAAW,KAAKpyC,SAAS,EAAG0kB,IAAI,CAAC0tB,WAAW,GAAG,IAAI,CAACA,WAAW;MACzE,IAAK,IAAI,CAACC,cAAc,KAAKryC,SAAS,EAAG0kB,IAAI,CAAC2tB,cAAc,GAAG,IAAI,CAACA,cAAc;MAClF,IAAK,IAAI,CAACC,yBAAyB,KAAKtyC,SAAS,EAAG0kB,IAAI,CAAC4tB,yBAAyB,GAAG,IAAI,CAACA,yBAAyB;MAEnH,IAAK,IAAI,CAACC,cAAc,IAAI,IAAI,CAACA,cAAc,CAAC5rB,SAAS,EAAG;QAE3DjC,IAAI,CAAC6tB,cAAc,GAAG,IAAI,CAACA,cAAc,CAACxtB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAE9D;MAEA,IAAK,IAAI,CAACs/B,uBAAuB,IAAI,IAAI,CAACA,uBAAuB,CAAC7rB,SAAS,EAAG;QAE7EjC,IAAI,CAAC8tB,uBAAuB,GAAG,IAAI,CAACA,uBAAuB,CAACztB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAEhF;MAEA,IAAK,IAAI,CAACsT,UAAU,KAAKxmB,SAAS,EAAG0kB,IAAI,CAAC8B,UAAU,GAAG,IAAI,CAACA,UAAU;MACtE,IAAK,IAAI,CAACisB,kBAAkB,KAAKzyC,SAAS,EAAG0kB,IAAI,CAAC+tB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAE9F,IAAK,IAAI,CAACC,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC/rB,SAAS,EAAG;QAEzDjC,IAAI,CAACguB,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC3tB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAE5D;MAEA,IAAK,IAAI,CAACy/B,GAAG,IAAI,IAAI,CAACA,GAAG,CAAChsB,SAAS,EAAGjC,IAAI,CAACiuB,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC5tB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAC7E,IAAK,IAAI,CAAC0/B,MAAM,IAAI,IAAI,CAACA,MAAM,CAACjsB,SAAS,EAAGjC,IAAI,CAACkuB,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC7tB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MACzF,IAAK,IAAI,CAAC2/B,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAClsB,SAAS,EAAGjC,IAAI,CAACmuB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC9tB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAEjG,IAAK,IAAI,CAAC4/B,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACnsB,SAAS,EAAG;QAE/CjC,IAAI,CAACouB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC/tB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QACjDwR,IAAI,CAACquB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEhD;MAEA,IAAK,IAAI,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACrsB,SAAS,EAAG;QAEzCjC,IAAI,CAACsuB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACjuB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QAC3CwR,IAAI,CAACuuB,cAAc,GAAG,IAAI,CAACA,cAAc;MAE1C;MAEA,IAAK,IAAI,CAACC,OAAO,IAAI,IAAI,CAACA,OAAO,CAACvsB,SAAS,EAAG;QAE7CjC,IAAI,CAACwuB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACnuB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QAC/CwR,IAAI,CAACyuB,SAAS,GAAG,IAAI,CAACA,SAAS;MAEhC;MAEA,IAAK,IAAI,CAACC,SAAS,IAAI,IAAI,CAACA,SAAS,CAACzsB,SAAS,EAAG;QAEjDjC,IAAI,CAAC0uB,SAAS,GAAG,IAAI,CAACA,SAAS,CAACruB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QACnDwR,IAAI,CAAC2uB,aAAa,GAAG,IAAI,CAACA,aAAa;QACvC3uB,IAAI,CAAC4uB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC73B,OAAO,CAAC,CAAC;MAE9C;MAEA,IAAK,IAAI,CAAC83B,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC5sB,SAAS,EAAG;QAE7DjC,IAAI,CAAC6uB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACxuB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QAC/DwR,IAAI,CAAC8uB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAC/C9uB,IAAI,CAAC+uB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE9C;MAEA,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC/sB,SAAS,EAAGjC,IAAI,CAACgvB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC3uB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MACjH,IAAK,IAAI,CAACygC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAChtB,SAAS,EAAGjC,IAAI,CAACivB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC5uB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAEjH,IAAK,IAAI,CAAC0gC,WAAW,IAAI,IAAI,CAACA,WAAW,CAACjtB,SAAS,EAAGjC,IAAI,CAACkvB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC7uB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAC7G,IAAK,IAAI,CAAC2gC,WAAW,IAAI,IAAI,CAACA,WAAW,CAACltB,SAAS,EAAGjC,IAAI,CAACmvB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC9uB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAC7G,IAAK,IAAI,CAAC4gC,oBAAoB,IAAI,IAAI,CAACA,oBAAoB,CAACntB,SAAS,EAAGjC,IAAI,CAACovB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAAC/uB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MACjJ,IAAK,IAAI,CAAC6gC,gBAAgB,IAAI,IAAI,CAACA,gBAAgB,CAACptB,SAAS,EAAGjC,IAAI,CAACqvB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAAChvB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAEjI,IAAK,IAAI,CAAC8gC,MAAM,IAAI,IAAI,CAACA,MAAM,CAACrtB,SAAS,EAAG;QAE3CjC,IAAI,CAACsvB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACjvB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;QAE7C,IAAK,IAAI,CAAC+gC,OAAO,KAAKj0C,SAAS,EAAG0kB,IAAI,CAACuvB,OAAO,GAAG,IAAI,CAACA,OAAO;MAE9D;MAEA,IAAK,IAAI,CAACC,eAAe,KAAKl0C,SAAS,EAAG0kB,IAAI,CAACwvB,eAAe,GAAG,IAAI,CAACA,eAAe;MACrF,IAAK,IAAI,CAACC,YAAY,KAAKn0C,SAAS,EAAG0kB,IAAI,CAACyvB,YAAY,GAAG,IAAI,CAACA,YAAY;MAC5E,IAAK,IAAI,CAACC,eAAe,KAAKp0C,SAAS,EAAG0kB,IAAI,CAAC0vB,eAAe,GAAG,IAAI,CAACA,eAAe;MAErF,IAAK,IAAI,CAACC,WAAW,IAAI,IAAI,CAACA,WAAW,CAAC1tB,SAAS,EAAG;QAErDjC,IAAI,CAAC2vB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACtvB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAExD;MAEA,IAAK,IAAI,CAACohC,YAAY,KAAKt0C,SAAS,EAAG0kB,IAAI,CAAC4vB,YAAY,GAAG,IAAI,CAACA,YAAY;MAC5E,IAAK,IAAI,CAACC,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC5tB,SAAS,EAAGjC,IAAI,CAAC6vB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACxvB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MAC7H,IAAK,IAAI,CAACshC,SAAS,KAAKx0C,SAAS,EAAG0kB,IAAI,CAAC8vB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC9tB,SAAS,EAAGjC,IAAI,CAAC+vB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC1vB,MAAM,CAAEC,IAAK,CAAC,CAAC9R,IAAI;MACjH,IAAK,IAAI,CAACwhC,mBAAmB,KAAK10C,SAAS,IAAI,IAAI,CAAC00C,mBAAmB,KAAKjf,QAAQ,EAAG/Q,IAAI,CAACgwB,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MAC1I,IAAK,IAAI,CAACC,gBAAgB,KAAK30C,SAAS,EAAG0kB,IAAI,CAACiwB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACzD,MAAM,CAAC,CAAC;MAEjG,IAAK,IAAI,CAAC/a,IAAI,KAAKn2B,SAAS,EAAG0kB,IAAI,CAACyR,IAAI,GAAG,IAAI,CAACA,IAAI;MACpD,IAAK,IAAI,CAAC4Z,UAAU,KAAK,IAAI,EAAGrrB,IAAI,CAACqrB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjE,IAAK,IAAI,CAAC6E,eAAe,KAAK50C,SAAS,EAAG0kB,IAAI,CAACkwB,eAAe,GAAG,IAAI,CAACA,eAAe;MAErF,IAAK,IAAI,CAACvG,QAAQ,KAAK5nC,cAAc,EAAGie,IAAI,CAAC2pB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MACrE,IAAK,IAAI,CAACC,IAAI,KAAKloC,SAAS,EAAGse,IAAI,CAAC4pB,IAAI,GAAG,IAAI,CAACA,IAAI;MACpD,IAAK,IAAI,CAACC,YAAY,EAAG7pB,IAAI,CAAC6pB,YAAY,GAAG,IAAI;MAEjD,IAAK,IAAI,CAACC,OAAO,GAAG,CAAC,EAAG9pB,IAAI,CAAC8pB,OAAO,GAAG,IAAI,CAACA,OAAO;MACnD,IAAK,IAAI,CAACC,WAAW,KAAK,IAAI,EAAG/pB,IAAI,CAAC+pB,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpE/pB,IAAI,CAACuqB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/BvqB,IAAI,CAACwqB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/BxqB,IAAI,CAACyqB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjCzqB,IAAI,CAACsrB,UAAU,GAAG,IAAI,CAACA,UAAU;MAEjCtrB,IAAI,CAACirB,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCjrB,IAAI,CAAC0qB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAC7C1qB,IAAI,CAAC2qB,WAAW,GAAG,IAAI,CAACA,WAAW;MACnC3qB,IAAI,CAAC4qB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjC5qB,IAAI,CAAC6qB,eAAe,GAAG,IAAI,CAACA,eAAe;MAC3C7qB,IAAI,CAAC8qB,WAAW,GAAG,IAAI,CAACA,WAAW;MACnC9qB,IAAI,CAAC+qB,YAAY,GAAG,IAAI,CAACA,YAAY;MACrC/qB,IAAI,CAACgrB,YAAY,GAAG,IAAI,CAACA,YAAY;;MAErC;MACA,IAAK,IAAI,CAACxvB,QAAQ,KAAKlgB,SAAS,IAAI,IAAI,CAACkgB,QAAQ,KAAK,CAAC,EAAGwE,IAAI,CAACxE,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAEvF,IAAK,IAAI,CAACgwB,aAAa,KAAK,IAAI,EAAGxrB,IAAI,CAACwrB,aAAa,GAAG,IAAI;MAC5D,IAAK,IAAI,CAACC,mBAAmB,KAAK,CAAC,EAAGzrB,IAAI,CAACyrB,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MACzF,IAAK,IAAI,CAACC,kBAAkB,KAAK,CAAC,EAAG1rB,IAAI,CAAC0rB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAEtF,IAAK,IAAI,CAACyE,SAAS,KAAK70C,SAAS,IAAI,IAAI,CAAC60C,SAAS,KAAK,CAAC,EAAGnwB,IAAI,CAACmwB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC3F,IAAK,IAAI,CAACC,QAAQ,KAAK90C,SAAS,EAAG0kB,IAAI,CAACowB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAChE,IAAK,IAAI,CAACC,OAAO,KAAK/0C,SAAS,EAAG0kB,IAAI,CAACqwB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC7D,IAAK,IAAI,CAAC10B,KAAK,KAAKrgB,SAAS,EAAG0kB,IAAI,CAACrE,KAAK,GAAG,IAAI,CAACA,KAAK;MAEvD,IAAK,IAAI,CAACgwB,SAAS,KAAK,IAAI,EAAG3rB,IAAI,CAAC2rB,SAAS,GAAG,IAAI;MAEpD,IAAK,IAAI,CAAC2E,SAAS,GAAG,CAAC,EAAGtwB,IAAI,CAACswB,SAAS,GAAG,IAAI,CAACA,SAAS;MACzD,IAAK,IAAI,CAACtG,SAAS,KAAK,IAAI,EAAGhqB,IAAI,CAACgqB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC9D,IAAK,IAAI,CAAC4B,eAAe,KAAK,IAAI,EAAG5rB,IAAI,CAAC4rB,eAAe,GAAG,IAAI,CAACA,eAAe;MAChF,IAAK,IAAI,CAACC,kBAAkB,KAAK,IAAI,EAAG7rB,IAAI,CAAC6rB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MACzF,IAAK,IAAI,CAACC,eAAe,KAAK,IAAI,EAAG9rB,IAAI,CAAC8rB,eAAe,GAAG,IAAI,CAACA,eAAe;MAEhF,IAAK,IAAI,CAACyE,SAAS,KAAK,IAAI,EAAGvwB,IAAI,CAACuwB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC9D,IAAK,IAAI,CAACC,kBAAkB,GAAG,CAAC,EAAGxwB,IAAI,CAACwwB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MACpF,IAAK,IAAI,CAACC,gBAAgB,KAAK,OAAO,EAAGzwB,IAAI,CAACywB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MACtF,IAAK,IAAI,CAACC,iBAAiB,KAAK,OAAO,EAAG1wB,IAAI,CAAC0wB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEzF,IAAK,IAAI,CAACC,WAAW,KAAK,IAAI,EAAG3wB,IAAI,CAAC2wB,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpE,IAAK,IAAI,CAACrP,OAAO,KAAK,KAAK,EAAGthB,IAAI,CAACshB,OAAO,GAAG,KAAK;MAElD,IAAK,IAAI,CAACyK,UAAU,KAAK,KAAK,EAAG/rB,IAAI,CAAC+rB,UAAU,GAAG,KAAK;MAExD,IAAK,IAAI,CAAC6E,GAAG,KAAK,KAAK,EAAG5wB,IAAI,CAAC4wB,GAAG,GAAG,KAAK;MAE1C,IAAKn6C,MAAM,CAACkH,IAAI,CAAE,IAAI,CAACklB,QAAS,CAAC,CAACjmB,MAAM,GAAG,CAAC,EAAGojB,IAAI,CAAC6C,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE5E;;MAEA,SAASwjB,gBAAgBA,CAAEC,KAAK,EAAG;QAElC,IAAM/sC,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAMxC,GAAG,IAAIuvC,KAAK,EAAG;UAE1B,IAAMtmB,MAAI,GAAGsmB,KAAK,CAAEvvC,GAAG,CAAE;UACzB,OAAOipB,MAAI,CAACuD,QAAQ;UACpBhqB,MAAM,CAAC8C,IAAI,CAAE2jB,MAAK,CAAC;QAEpB;QAEA,OAAOzmB,MAAM;MAEd;MAEA,IAAKgnB,YAAY,EAAG;QAEnB,IAAM+C,QAAQ,GAAG+iB,gBAAgB,CAAE/lB,IAAI,CAACgD,QAAS,CAAC;QAClD,IAAM9C,MAAM,GAAG6lB,gBAAgB,CAAE/lB,IAAI,CAACE,MAAO,CAAC;QAE9C,IAAK8C,QAAQ,CAAC1mB,MAAM,GAAG,CAAC,EAAGojB,IAAI,CAACsD,QAAQ,GAAGA,QAAQ;QACnD,IAAK9C,MAAM,CAAC5jB,MAAM,GAAG,CAAC,EAAGojB,IAAI,CAACQ,MAAM,GAAGA,MAAM;MAE9C;MAEA,OAAOR,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAChlB,IAAI,GAAGglB,MAAM,CAAChlB,IAAI;MAEvB,IAAI,CAACwsC,QAAQ,GAAGxnB,MAAM,CAACwnB,QAAQ;MAC/B,IAAI,CAACC,IAAI,GAAGznB,MAAM,CAACynB,IAAI;MACvB,IAAI,CAACC,YAAY,GAAG1nB,MAAM,CAAC0nB,YAAY;MAEvC,IAAI,CAACC,OAAO,GAAG3nB,MAAM,CAAC2nB,OAAO;MAC7B,IAAI,CAACC,WAAW,GAAG5nB,MAAM,CAAC4nB,WAAW;MAErC,IAAI,CAACE,QAAQ,GAAG9nB,MAAM,CAAC8nB,QAAQ;MAC/B,IAAI,CAACC,QAAQ,GAAG/nB,MAAM,CAAC+nB,QAAQ;MAC/B,IAAI,CAACC,aAAa,GAAGhoB,MAAM,CAACgoB,aAAa;MACzC,IAAI,CAACC,aAAa,GAAGjoB,MAAM,CAACioB,aAAa;MACzC,IAAI,CAACC,aAAa,GAAGloB,MAAM,CAACkoB,aAAa;MACzC,IAAI,CAACC,kBAAkB,GAAGnoB,MAAM,CAACmoB,kBAAkB;MAEnD,IAAI,CAACC,SAAS,GAAGpoB,MAAM,CAACooB,SAAS;MACjC,IAAI,CAACC,SAAS,GAAGroB,MAAM,CAACqoB,SAAS;MACjC,IAAI,CAACC,UAAU,GAAGtoB,MAAM,CAACsoB,UAAU;MAEnC,IAAI,CAACC,gBAAgB,GAAGvoB,MAAM,CAACuoB,gBAAgB;MAC/C,IAAI,CAACC,WAAW,GAAGxoB,MAAM,CAACwoB,WAAW;MACrC,IAAI,CAACC,UAAU,GAAGzoB,MAAM,CAACyoB,UAAU;MACnC,IAAI,CAACC,eAAe,GAAG1oB,MAAM,CAAC0oB,eAAe;MAC7C,IAAI,CAACC,WAAW,GAAG3oB,MAAM,CAAC2oB,WAAW;MACrC,IAAI,CAACC,YAAY,GAAG5oB,MAAM,CAAC4oB,YAAY;MACvC,IAAI,CAACC,YAAY,GAAG7oB,MAAM,CAAC6oB,YAAY;MACvC,IAAI,CAACC,YAAY,GAAG9oB,MAAM,CAAC8oB,YAAY;MAEvC,IAAM4F,SAAS,GAAG1uB,MAAM,CAAC+oB,cAAc;MACvC,IAAI4F,SAAS,GAAG,IAAI;MAEpB,IAAKD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAM/hC,CAAC,GAAG+hC,SAAS,CAACj0C,MAAM;QAC1Bk0C,SAAS,GAAG,IAAInwB,KAAK,CAAE7R,CAAE,CAAC;QAE1B,KAAM,IAAIjS,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;UAEhCi0C,SAAS,CAAEj0C,CAAC,CAAE,GAAGg0C,SAAS,CAAEh0C,CAAC,CAAE,CAACkX,KAAK,CAAC,CAAC;QAExC;MAED;MAEA,IAAI,CAACm3B,cAAc,GAAG4F,SAAS;MAC/B,IAAI,CAAC3F,gBAAgB,GAAGhpB,MAAM,CAACgpB,gBAAgB;MAC/C,IAAI,CAACC,WAAW,GAAGjpB,MAAM,CAACipB,WAAW;MAErC,IAAI,CAACC,UAAU,GAAGlpB,MAAM,CAACkpB,UAAU;MAEnC,IAAI,CAACC,UAAU,GAAGnpB,MAAM,CAACmpB,UAAU;MAEnC,IAAI,CAACC,SAAS,GAAGppB,MAAM,CAACopB,SAAS;MAEjC,IAAI,CAACC,aAAa,GAAGrpB,MAAM,CAACqpB,aAAa;MACzC,IAAI,CAACC,mBAAmB,GAAGtpB,MAAM,CAACspB,mBAAmB;MACrD,IAAI,CAACC,kBAAkB,GAAGvpB,MAAM,CAACupB,kBAAkB;MAEnD,IAAI,CAACC,SAAS,GAAGxpB,MAAM,CAACwpB,SAAS;MAEjC,IAAI,CAAC2E,SAAS,GAAGnuB,MAAM,CAACmuB,SAAS;MACjC,IAAI,CAACtG,SAAS,GAAG7nB,MAAM,CAAC6nB,SAAS;MACjC,IAAI,CAAC4B,eAAe,GAAGzpB,MAAM,CAACypB,eAAe;MAC7C,IAAI,CAACC,kBAAkB,GAAG1pB,MAAM,CAAC0pB,kBAAkB;MACnD,IAAI,CAACC,eAAe,GAAG3pB,MAAM,CAAC2pB,eAAe;MAE7C,IAAI,CAACxK,OAAO,GAAGnf,MAAM,CAACmf,OAAO;MAE7B,IAAI,CAACyK,UAAU,GAAG5pB,MAAM,CAAC4pB,UAAU;MAEnC,IAAI,CAAClpB,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEjB,MAAM,CAACU,QAAS,CAAE,CAAC;MAE/D,OAAO,IAAI;IAEZ;EAAC;IAAA9rB,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAAChW,aAAa,CAAE;QAAE1U,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;IAAA/B,GAAA;IAAAwb,GAAA,EAED,SAAAA,IAAiBtb,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACmpB,OAAO,EAAG;IAEtC;EAAC;EAAA,OAAAkpB,QAAA;AAAA,EAjfqBz8B,eAAe;AAAAtW,OAAA,CAAA+yC,QAAA,GAAAA,QAAA;AAqftC,IAAMyH,cAAc,GAAG;EAAE,WAAW,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EACpI,OAAO,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAC9H,OAAO,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EACjI,gBAAgB,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EACnI,eAAe,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAC5I,gBAAgB,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EACjJ,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAClI,UAAU,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACtI,aAAa,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EACtI,WAAW,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAChJ,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACvJ,cAAc,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,sBAAsB,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACvJ,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAClJ,gBAAgB,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACpJ,OAAO,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,kBAAkB,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAC1I,cAAc,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,iBAAiB,EAAE,QAAQ;EAAE,mBAAmB,EAAE,QAAQ;EAAE,iBAAiB,EAAE,QAAQ;EAC7I,iBAAiB,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAClJ,MAAM,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAC9I,eAAe,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACrJ,MAAM,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,KAAK,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACnK,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EACtI,QAAQ,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAClJ,aAAa,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,KAAK,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACjJ,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,aAAa,EAAE;AAAS,CAAC;AAEhI,IAAMC,KAAK,GAAG;EAAE12B,CAAC,EAAE,CAAC;EAAE5J,CAAC,EAAE,CAAC;EAAE/C,CAAC,EAAE;AAAE,CAAC;AAClC,IAAMsjC,KAAK,GAAG;EAAE32B,CAAC,EAAE,CAAC;EAAE5J,CAAC,EAAE,CAAC;EAAE/C,CAAC,EAAE;AAAE,CAAC;AAElC,SAASujC,OAAOA,CAAEhT,CAAC,EAAE1sB,CAAC,EAAE/B,CAAC,EAAG;EAE3B,IAAKA,CAAC,GAAG,CAAC,EAAGA,CAAC,IAAI,CAAC;EACnB,IAAKA,CAAC,GAAG,CAAC,EAAGA,CAAC,IAAI,CAAC;EACnB,IAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAOyuB,CAAC,GAAG,CAAE1sB,CAAC,GAAG0sB,CAAC,IAAK,CAAC,GAAGzuB,CAAC;EAC7C,IAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAO+B,CAAC;EACzB,IAAK/B,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAOyuB,CAAC,GAAG,CAAE1sB,CAAC,GAAG0sB,CAAC,IAAK,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGzuB,CAAC,CAAE;EACzD,OAAOyuB,CAAC;AAET;AAAC,IAEKiT,KAAK,0BAAAC,iBAAA;EAEV,SAAAD,MAAaj2B,CAAC,EAAEb,CAAC,EAAE3I,CAAC,EAAG;IAAAtS,eAAA,OAAA+xC,KAAA;IAEtB,IAAI,CAAC5L,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACrqB,CAAC,GAAG,CAAC;IACV,IAAI,CAACb,CAAC,GAAG,CAAC;IACV,IAAI,CAAC3I,CAAC,GAAG,CAAC;IAEV,OAAO,IAAI,CAACa,GAAG,CAAE2I,CAAC,EAAEb,CAAC,EAAE3I,CAAE,CAAC;EAE3B;EAAC9R,YAAA,CAAAuxC,KAAA;IAAAp6C,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK2I,CAAC,EAAEb,CAAC,EAAE3I,CAAC,EAAG;MAEd,IAAK2I,CAAC,KAAK/e,SAAS,IAAIoW,CAAC,KAAKpW,SAAS,EAAG;QAEzC;;QAEA,IAAMrE,MAAK,GAAGikB,CAAC;QAEf,IAAKjkB,MAAK,IAAIA,MAAK,CAACsuC,OAAO,EAAG;UAE7B,IAAI,CAACvxB,IAAI,CAAE/c,MAAM,CAAC;QAEnB,CAAC,MAAM,IAAK,OAAOA,MAAK,KAAK,QAAQ,EAAG;UAEvC,IAAI,CAACo6C,MAAM,CAAEp6C,MAAM,CAAC;QAErB,CAAC,MAAM,IAAK,OAAOA,MAAK,KAAK,QAAQ,EAAG;UAEvC,IAAI,CAACq6C,QAAQ,CAAEr6C,MAAM,CAAC;QAEvB;MAED,CAAC,MAAM;QAEN,IAAI,CAACs6C,MAAM,CAAEr2B,CAAC,EAAEb,CAAC,EAAE3I,CAAE,CAAC;MAEvB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAwc,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACwH,CAAC,GAAGxH,MAAM;MACf,IAAI,CAAC2G,CAAC,GAAG3G,MAAM;MACf,IAAI,CAAChC,CAAC,GAAGgC,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAAo6C,OAAQG,GAAG,EAAEpzB,UAAU,GAAGjU,cAAc,EAAG;MAE1CqnC,GAAG,GAAGzjC,IAAI,CAACsC,KAAK,CAAEmhC,GAAI,CAAC;MAEvB,IAAI,CAACt2B,CAAC,GAAG,CAAEs2B,GAAG,IAAI,EAAE,GAAG,GAAG,IAAK,GAAG;MAClC,IAAI,CAACn3B,CAAC,GAAG,CAAEm3B,GAAG,IAAI,CAAC,GAAG,GAAG,IAAK,GAAG;MACjC,IAAI,CAAC9/B,CAAC,GAAG,CAAE8/B,GAAG,GAAG,GAAG,IAAK,GAAG;MAE5BxzB,eAAe,CAACY,mBAAmB,CAAE,IAAI,EAAER,UAAW,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAArnB,GAAA;IAAAE,KAAA,EAED,SAAAs6C,OAAQr2B,CAAC,EAAEb,CAAC,EAAE3I,CAAC,EAAE0M,UAAU,GAAGJ,eAAe,CAACG,iBAAiB,EAAG;MAEjE,IAAI,CAACjD,CAAC,GAAGA,CAAC;MACV,IAAI,CAACb,CAAC,GAAGA,CAAC;MACV,IAAI,CAAC3I,CAAC,GAAGA,CAAC;MAEVsM,eAAe,CAACY,mBAAmB,CAAE,IAAI,EAAER,UAAW,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAArnB,GAAA;IAAAE,KAAA,EAED,SAAAw6C,OAAQn3B,CAAC,EAAE5J,CAAC,EAAE/C,CAAC,EAAEyQ,UAAU,GAAGJ,eAAe,CAACG,iBAAiB,EAAG;MAEjE;MACA7D,CAAC,GAAGzL,eAAe,CAAEyL,CAAC,EAAE,CAAE,CAAC;MAC3B5J,CAAC,GAAGhC,KAAK,CAAEgC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACpB/C,CAAC,GAAGe,KAAK,CAAEf,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEpB,IAAK+C,CAAC,KAAK,CAAC,EAAG;QAEd,IAAI,CAACwK,CAAC,GAAG,IAAI,CAACb,CAAC,GAAG,IAAI,CAAC3I,CAAC,GAAG/D,CAAC;MAE7B,CAAC,MAAM;QAEN,IAAMuwB,CAAC,GAAGvwB,CAAC,IAAI,GAAG,GAAGA,CAAC,IAAK,CAAC,GAAG+C,CAAC,CAAE,GAAG/C,CAAC,GAAG+C,CAAC,GAAK/C,CAAC,GAAG+C,CAAG;QACtD,IAAMc,CAAC,GAAK,CAAC,GAAG7D,CAAC,GAAKuwB,CAAC;QAEvB,IAAI,CAAChjB,CAAC,GAAGg2B,OAAO,CAAE1/B,CAAC,EAAE0sB,CAAC,EAAE5jB,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;QACnC,IAAI,CAACD,CAAC,GAAG62B,OAAO,CAAE1/B,CAAC,EAAE0sB,CAAC,EAAE5jB,CAAE,CAAC;QAC3B,IAAI,CAAC5I,CAAC,GAAGw/B,OAAO,CAAE1/B,CAAC,EAAE0sB,CAAC,EAAE5jB,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;MAEpC;MAEA0D,eAAe,CAACY,mBAAmB,CAAE,IAAI,EAAER,UAAW,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAArnB,GAAA;IAAAE,KAAA,EAED,SAAAq6C,SAAUz0B,KAAK,EAAEuB,UAAU,GAAGjU,cAAc,EAAG;MAE9C,SAASunC,WAAWA,CAAEC,MAAM,EAAG;QAE9B,IAAKA,MAAM,KAAKr2C,SAAS,EAAG;QAE5B,IAAKs2C,UAAU,CAAED,MAAO,CAAC,GAAG,CAAC,EAAG;UAE/Bn/B,OAAO,CAACC,IAAI,CAAE,kCAAkC,GAAGoK,KAAK,GAAG,mBAAoB,CAAC;QAEjF;MAED;MAGA,IAAI9N,CAAC;MAEL,IAAKA,CAAC,GAAG,oBAAoB,CAAC8iC,IAAI,CAAEh1B,KAAM,CAAC,EAAG;QAE7C;;QAEA,IAAIU,KAAK;QACT,IAAMpgB,IAAI,GAAG4R,CAAC,CAAE,CAAC,CAAE;QACnB,IAAM+iC,UAAU,GAAG/iC,CAAC,CAAE,CAAC,CAAE;QAEzB,QAAS5R,IAAI;UAEZ,KAAK,KAAK;UACV,KAAK,MAAM;YAEV,IAAKogB,KAAK,GAAG,8DAA8D,CAACs0B,IAAI,CAAEC,UAAW,CAAC,EAAG;cAEhG;;cAEAJ,WAAW,CAAEn0B,KAAK,CAAE,CAAC,CAAG,CAAC;cAEzB,OAAO,IAAI,CAACg0B,MAAM,CACjBxjC,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEojC,QAAQ,CAAEx0B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjDxP,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEojC,QAAQ,CAAEx0B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjDxP,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEojC,QAAQ,CAAEx0B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjDa,UACD,CAAC;YAEF;YAEA,IAAKb,KAAK,GAAG,oEAAoE,CAACs0B,IAAI,CAAEC,UAAW,CAAC,EAAG;cAEtG;;cAEAJ,WAAW,CAAEn0B,KAAK,CAAE,CAAC,CAAG,CAAC;cAEzB,OAAO,IAAI,CAACg0B,MAAM,CACjBxjC,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEojC,QAAQ,CAAEx0B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjDxP,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEojC,QAAQ,CAAEx0B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjDxP,IAAI,CAACY,GAAG,CAAE,GAAG,EAAEojC,QAAQ,CAAEx0B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAG,CAAE,CAAC,GAAG,GAAG,EACjDa,UACD,CAAC;YAEF;YAEA;UAED,KAAK,KAAK;UACV,KAAK,MAAM;YAEV,IAAKb,KAAK,GAAG,oFAAoF,CAACs0B,IAAI,CAAEC,UAAW,CAAC,EAAG;cAEtH;;cAEAJ,WAAW,CAAEn0B,KAAK,CAAE,CAAC,CAAG,CAAC;cAEzB,OAAO,IAAI,CAACk0B,MAAM,CACjBG,UAAU,CAAEr0B,KAAK,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG,EAC9Bq0B,UAAU,CAAEr0B,KAAK,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG,EAC9Bq0B,UAAU,CAAEr0B,KAAK,CAAE,CAAC,CAAG,CAAC,GAAG,GAAG,EAC9Ba,UACD,CAAC;YAEF;YAEA;UAED;YAEC5L,OAAO,CAACC,IAAI,CAAE,mCAAmC,GAAGoK,KAAM,CAAC;QAE7D;MAED,CAAC,MAAM,IAAK9N,CAAC,GAAG,mBAAmB,CAAC8iC,IAAI,CAAEh1B,KAAM,CAAC,EAAG;QAEnD;;QAEA,IAAM20B,GAAG,GAAGziC,CAAC,CAAE,CAAC,CAAE;QAClB,IAAM0iB,IAAI,GAAG+f,GAAG,CAAC50C,MAAM;QAEvB,IAAK60B,IAAI,KAAK,CAAC,EAAG;UAEjB;UACA,OAAO,IAAI,CAAC8f,MAAM,CACjBQ,QAAQ,CAAEP,GAAG,CAACtzC,MAAM,CAAE,CAAE,CAAC,EAAE,EAAG,CAAC,GAAG,EAAE,EACpC6zC,QAAQ,CAAEP,GAAG,CAACtzC,MAAM,CAAE,CAAE,CAAC,EAAE,EAAG,CAAC,GAAG,EAAE,EACpC6zC,QAAQ,CAAEP,GAAG,CAACtzC,MAAM,CAAE,CAAE,CAAC,EAAE,EAAG,CAAC,GAAG,EAAE,EACpCkgB,UACD,CAAC;QAEF,CAAC,MAAM,IAAKqT,IAAI,KAAK,CAAC,EAAG;UAExB;UACA,OAAO,IAAI,CAAC4f,MAAM,CAAEU,QAAQ,CAAEP,GAAG,EAAE,EAAG,CAAC,EAAEpzB,UAAW,CAAC;QAEtD,CAAC,MAAM;UAEN5L,OAAO,CAACC,IAAI,CAAE,iCAAiC,GAAGoK,KAAM,CAAC;QAE1D;MAED,CAAC,MAAM,IAAKA,KAAK,IAAIA,KAAK,CAACjgB,MAAM,GAAG,CAAC,EAAG;QAEvC,OAAO,IAAI,CAACo1C,YAAY,CAAEn1B,KAAK,EAAEuB,UAAW,CAAC;MAE9C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAArnB,GAAA;IAAAE,KAAA,EAED,SAAA+6C,aAAcn1B,KAAK,EAAEuB,UAAU,GAAGjU,cAAc,EAAG;MAElD;MACA,IAAMqnC,GAAG,GAAGT,cAAc,CAAEl0B,KAAK,CAACpO,WAAW,CAAC,CAAC,CAAE;MAEjD,IAAK+iC,GAAG,KAAKl2C,SAAS,EAAG;QAExB;QACA,IAAI,CAAC+1C,MAAM,CAAEG,GAAG,EAAEpzB,UAAW,CAAC;MAE/B,CAAC,MAAM;QAEN;QACA5L,OAAO,CAACC,IAAI,CAAE,6BAA6B,GAAGoK,KAAM,CAAC;MAEtD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9lB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAACge,CAAC,EAAE,IAAI,CAACb,CAAC,EAAE,IAAI,CAAC3I,CAAE,CAAC;IAEtD;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMuJ,KAAK,EAAG;MAEb,IAAI,CAACrC,CAAC,GAAGqC,KAAK,CAACrC,CAAC;MAChB,IAAI,CAACb,CAAC,GAAGkD,KAAK,CAAClD,CAAC;MAChB,IAAI,CAAC3I,CAAC,GAAG6L,KAAK,CAAC7L,CAAC;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAg7C,iBAAkB10B,KAAK,EAAG;MAEzB,IAAI,CAACrC,CAAC,GAAGgC,YAAY,CAAEK,KAAK,CAACrC,CAAE,CAAC;MAChC,IAAI,CAACb,CAAC,GAAG6C,YAAY,CAAEK,KAAK,CAAClD,CAAE,CAAC;MAChC,IAAI,CAAC3I,CAAC,GAAGwL,YAAY,CAAEK,KAAK,CAAC7L,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAi7C,iBAAkB30B,KAAK,EAAG;MAEzB,IAAI,CAACrC,CAAC,GAAGiC,YAAY,CAAEI,KAAK,CAACrC,CAAE,CAAC;MAChC,IAAI,CAACb,CAAC,GAAG8C,YAAY,CAAEI,KAAK,CAAClD,CAAE,CAAC;MAChC,IAAI,CAAC3I,CAAC,GAAGyL,YAAY,CAAEI,KAAK,CAAC7L,CAAE,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAumB,oBAAA,EAAsB;MAErB,IAAI,CAACy0B,gBAAgB,CAAE,IAAK,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAl7C,GAAA;IAAAE,KAAA,EAED,SAAAymB,oBAAA,EAAsB;MAErB,IAAI,CAACw0B,gBAAgB,CAAE,IAAK,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAn7C,GAAA;IAAAE,KAAA,EAED,SAAAu1C,OAAQpuB,UAAU,GAAGjU,cAAc,EAAG;MAErC6T,eAAe,CAACW,qBAAqB,CAAEwzB,MAAM,CAACn+B,IAAI,CAAE,IAAK,CAAC,EAAEoK,UAAW,CAAC;MAExE,OAAOrQ,IAAI,CAACoF,KAAK,CAAEzE,KAAK,CAAEyjC,MAAM,CAACj3B,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAI,CAAE,CAAC,GAAG,KAAK,GAAGnN,IAAI,CAACoF,KAAK,CAAEzE,KAAK,CAAEyjC,MAAM,CAAC93B,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAI,CAAE,CAAC,GAAG,GAAG,GAAGtM,IAAI,CAACoF,KAAK,CAAEzE,KAAK,CAAEyjC,MAAM,CAACzgC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAI,CAAE,CAAC;IAEnK;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAm7C,aAAch0B,UAAU,GAAGjU,cAAc,EAAG;MAE3C,OAAO,CAAE,QAAQ,GAAG,IAAI,CAACqiC,MAAM,CAAEpuB,UAAW,CAAC,CAACguB,QAAQ,CAAE,EAAG,CAAC,EAAGjuC,KAAK,CAAE,CAAE,CAAE,CAAC;IAE5E;EAAC;IAAApH,GAAA;IAAAE,KAAA,EAED,SAAAo7C,OAAQ7yC,MAAM,EAAE4e,UAAU,GAAGJ,eAAe,CAACG,iBAAiB,EAAG;MAEhE;;MAEAH,eAAe,CAACW,qBAAqB,CAAEwzB,MAAM,CAACn+B,IAAI,CAAE,IAAK,CAAC,EAAEoK,UAAW,CAAC;MAExE,IAAMlD,CAAC,GAAGi3B,MAAM,CAACj3B,CAAC;QAAEb,CAAC,GAAG83B,MAAM,CAAC93B,CAAC;QAAE3I,CAAC,GAAGygC,MAAM,CAACzgC,CAAC;MAE9C,IAAM9C,GAAG,GAAGb,IAAI,CAACa,GAAG,CAAEsM,CAAC,EAAEb,CAAC,EAAE3I,CAAE,CAAC;MAC/B,IAAM/C,GAAG,GAAGZ,IAAI,CAACY,GAAG,CAAEuM,CAAC,EAAEb,CAAC,EAAE3I,CAAE,CAAC;MAE/B,IAAI4gC,GAAG,EAAEC,UAAU;MACnB,IAAMC,SAAS,GAAG,CAAE7jC,GAAG,GAAGC,GAAG,IAAK,GAAG;MAErC,IAAKD,GAAG,KAAKC,GAAG,EAAG;QAElB0jC,GAAG,GAAG,CAAC;QACPC,UAAU,GAAG,CAAC;MAEf,CAAC,MAAM;QAEN,IAAM5c,KAAK,GAAG/mB,GAAG,GAAGD,GAAG;QAEvB4jC,UAAU,GAAGC,SAAS,IAAI,GAAG,GAAG7c,KAAK,IAAK/mB,GAAG,GAAGD,GAAG,CAAE,GAAGgnB,KAAK,IAAK,CAAC,GAAG/mB,GAAG,GAAGD,GAAG,CAAE;QAEjF,QAASC,GAAG;UAEX,KAAKsM,CAAC;YAAEo3B,GAAG,GAAG,CAAEj4B,CAAC,GAAG3I,CAAC,IAAKikB,KAAK,IAAKtb,CAAC,GAAG3I,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;YAAE;UACrD,KAAK2I,CAAC;YAAEi4B,GAAG,GAAG,CAAE5gC,CAAC,GAAGwJ,CAAC,IAAKya,KAAK,GAAG,CAAC;YAAE;UACrC,KAAKjkB,CAAC;YAAE4gC,GAAG,GAAG,CAAEp3B,CAAC,GAAGb,CAAC,IAAKsb,KAAK,GAAG,CAAC;YAAE;QAEtC;QAEA2c,GAAG,IAAI,CAAC;MAET;MAEA9yC,MAAM,CAAC8a,CAAC,GAAGg4B,GAAG;MACd9yC,MAAM,CAACkR,CAAC,GAAG6hC,UAAU;MACrB/yC,MAAM,CAACmO,CAAC,GAAG6kC,SAAS;MAEpB,OAAOhzC,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAw7C,OAAQjzC,MAAM,EAAE4e,UAAU,GAAGJ,eAAe,CAACG,iBAAiB,EAAG;MAEhEH,eAAe,CAACW,qBAAqB,CAAEwzB,MAAM,CAACn+B,IAAI,CAAE,IAAK,CAAC,EAAEoK,UAAW,CAAC;MAExE5e,MAAM,CAAC0b,CAAC,GAAGi3B,MAAM,CAACj3B,CAAC;MACnB1b,MAAM,CAAC6a,CAAC,GAAG83B,MAAM,CAAC93B,CAAC;MACnB7a,MAAM,CAACkS,CAAC,GAAGygC,MAAM,CAACzgC,CAAC;MAEnB,OAAOlS,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAy7C,SAAUt0B,UAAU,GAAGjU,cAAc,EAAG;MAEvC6T,eAAe,CAACW,qBAAqB,CAAEwzB,MAAM,CAACn+B,IAAI,CAAE,IAAK,CAAC,EAAEoK,UAAW,CAAC;MAExE,IAAMlD,CAAC,GAAGi3B,MAAM,CAACj3B,CAAC;QAAEb,CAAC,GAAG83B,MAAM,CAAC93B,CAAC;QAAE3I,CAAC,GAAGygC,MAAM,CAACzgC,CAAC;MAE9C,IAAK0M,UAAU,KAAKjU,cAAc,EAAG;QAEpC;QACA,gBAAAuU,MAAA,CAAiBN,UAAU,OAAAM,MAAA,CAAMxD,CAAC,CAACy3B,OAAO,CAAE,CAAE,CAAC,OAAAj0B,MAAA,CAAMrE,CAAC,CAACs4B,OAAO,CAAE,CAAE,CAAC,OAAAj0B,MAAA,CAAMhN,CAAC,CAACihC,OAAO,CAAE,CAAE,CAAC;MAExF;MAEA,cAAAj0B,MAAA,CAAe3Q,IAAI,CAACoF,KAAK,CAAE+H,CAAC,GAAG,GAAI,CAAC,OAAAwD,MAAA,CAAM3Q,IAAI,CAACoF,KAAK,CAAEkH,CAAC,GAAG,GAAI,CAAC,OAAAqE,MAAA,CAAM3Q,IAAI,CAACoF,KAAK,CAAEzB,CAAC,GAAG,GAAI,CAAC;IAE3F;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAA27C,UAAWt4B,CAAC,EAAE5J,CAAC,EAAE/C,CAAC,EAAG;MAEpB,IAAI,CAAC0kC,MAAM,CAAErB,KAAM,CAAC;MAEpBA,KAAK,CAAC12B,CAAC,IAAIA,CAAC;MAAE02B,KAAK,CAACtgC,CAAC,IAAIA,CAAC;MAAEsgC,KAAK,CAACrjC,CAAC,IAAIA,CAAC;MAExC,IAAI,CAAC8jC,MAAM,CAAET,KAAK,CAAC12B,CAAC,EAAE02B,KAAK,CAACtgC,CAAC,EAAEsgC,KAAK,CAACrjC,CAAE,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAA5W,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAKqJ,KAAK,EAAG;MAEZ,IAAI,CAACrC,CAAC,IAAIqC,KAAK,CAACrC,CAAC;MACjB,IAAI,CAACb,CAAC,IAAIkD,KAAK,CAAClD,CAAC;MACjB,IAAI,CAAC3I,CAAC,IAAI6L,KAAK,CAAC7L,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAA47C,UAAWC,MAAM,EAAEC,MAAM,EAAG;MAE3B,IAAI,CAAC73B,CAAC,GAAG43B,MAAM,CAAC53B,CAAC,GAAG63B,MAAM,CAAC73B,CAAC;MAC5B,IAAI,CAACb,CAAC,GAAGy4B,MAAM,CAACz4B,CAAC,GAAG04B,MAAM,CAAC14B,CAAC;MAC5B,IAAI,CAAC3I,CAAC,GAAGohC,MAAM,CAACphC,CAAC,GAAGqhC,MAAM,CAACrhC,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAkd,UAAWzD,CAAC,EAAG;MAEd,IAAI,CAACwK,CAAC,IAAIxK,CAAC;MACX,IAAI,CAAC2J,CAAC,IAAI3J,CAAC;MACX,IAAI,CAACgB,CAAC,IAAIhB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAqd,IAAKiJ,KAAK,EAAG;MAEZ,IAAI,CAACrC,CAAC,GAAGnN,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAACsM,CAAC,GAAGqC,KAAK,CAACrC,CAAE,CAAC;MACxC,IAAI,CAACb,CAAC,GAAGtM,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAACyL,CAAC,GAAGkD,KAAK,CAAClD,CAAE,CAAC;MACxC,IAAI,CAAC3I,CAAC,GAAG3D,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC8C,CAAC,GAAG6L,KAAK,CAAC7L,CAAE,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAU8I,KAAK,EAAG;MAEjB,IAAI,CAACrC,CAAC,IAAIqC,KAAK,CAACrC,CAAC;MACjB,IAAI,CAACb,CAAC,IAAIkD,KAAK,CAAClD,CAAC;MACjB,IAAI,CAAC3I,CAAC,IAAI6L,KAAK,CAAC7L,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAyd,eAAgBhE,CAAC,EAAG;MAEnB,IAAI,CAACwK,CAAC,IAAIxK,CAAC;MACX,IAAI,CAAC2J,CAAC,IAAI3J,CAAC;MACX,IAAI,CAACgB,CAAC,IAAIhB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAuY,KAAM+N,KAAK,EAAE/G,KAAK,EAAG;MAEpB,IAAI,CAAC0E,CAAC,IAAI,CAAEqC,KAAK,CAACrC,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK1E,KAAK;MACtC,IAAI,CAAC6D,CAAC,IAAI,CAAEkD,KAAK,CAAClD,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK7D,KAAK;MACtC,IAAI,CAAC9E,CAAC,IAAI,CAAE6L,KAAK,CAAC7L,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK8E,KAAK;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAA+7C,WAAYF,MAAM,EAAEC,MAAM,EAAEv8B,KAAK,EAAG;MAEnC,IAAI,CAAC0E,CAAC,GAAG43B,MAAM,CAAC53B,CAAC,GAAG,CAAE63B,MAAM,CAAC73B,CAAC,GAAG43B,MAAM,CAAC53B,CAAC,IAAK1E,KAAK;MACnD,IAAI,CAAC6D,CAAC,GAAGy4B,MAAM,CAACz4B,CAAC,GAAG,CAAE04B,MAAM,CAAC14B,CAAC,GAAGy4B,MAAM,CAACz4B,CAAC,IAAK7D,KAAK;MACnD,IAAI,CAAC9E,CAAC,GAAGohC,MAAM,CAACphC,CAAC,GAAG,CAAEqhC,MAAM,CAACrhC,CAAC,GAAGohC,MAAM,CAACphC,CAAC,IAAK8E,KAAK;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAAg8C,QAAS11B,KAAK,EAAE/G,KAAK,EAAG;MAEvB,IAAI,CAAC67B,MAAM,CAAErB,KAAM,CAAC;MACpBzzB,KAAK,CAAC80B,MAAM,CAAEpB,KAAM,CAAC;MAErB,IAAM32B,CAAC,GAAG9K,IAAI,CAAEwhC,KAAK,CAAC12B,CAAC,EAAE22B,KAAK,CAAC32B,CAAC,EAAE9D,KAAM,CAAC;MACzC,IAAM9F,CAAC,GAAGlB,IAAI,CAAEwhC,KAAK,CAACtgC,CAAC,EAAEugC,KAAK,CAACvgC,CAAC,EAAE8F,KAAM,CAAC;MACzC,IAAM7I,CAAC,GAAG6B,IAAI,CAAEwhC,KAAK,CAACrjC,CAAC,EAAEsjC,KAAK,CAACtjC,CAAC,EAAE6I,KAAM,CAAC;MAEzC,IAAI,CAACi7B,MAAM,CAAEn3B,CAAC,EAAE5J,CAAC,EAAE/C,CAAE,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA5W,GAAA;IAAAE,KAAA,EAED,SAAA2nC,eAAgB3qB,CAAC,EAAG;MAEnB,IAAI,CAACiH,CAAC,GAAGjH,CAAC,CAAChF,CAAC;MACZ,IAAI,CAACoL,CAAC,GAAGpG,CAAC,CAAC1E,CAAC;MACZ,IAAI,CAACmC,CAAC,GAAGuC,CAAC,CAAC6P,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA4d,aAAc9F,CAAC,EAAG;MAEjB,IAAMmM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEb,CAAC,GAAG,IAAI,CAACA,CAAC;QAAE3I,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMoD,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAACmG,CAAC,GAAGpG,CAAC,CAAE,CAAC,CAAE,GAAGoG,CAAC,GAAGpG,CAAC,CAAE,CAAC,CAAE,GAAGuF,CAAC,GAAGvF,CAAC,CAAE,CAAC,CAAE,GAAGpD,CAAC;MAC7C,IAAI,CAAC2I,CAAC,GAAGvF,CAAC,CAAE,CAAC,CAAE,GAAGoG,CAAC,GAAGpG,CAAC,CAAE,CAAC,CAAE,GAAGuF,CAAC,GAAGvF,CAAC,CAAE,CAAC,CAAE,GAAGpD,CAAC;MAC7C,IAAI,CAACA,CAAC,GAAGoD,CAAC,CAAE,CAAC,CAAE,GAAGoG,CAAC,GAAGpG,CAAC,CAAE,CAAC,CAAE,GAAGuF,CAAC,GAAGvF,CAAC,CAAE,CAAC,CAAE,GAAGpD,CAAC;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQjF,CAAC,EAAG;MAEX,OAASA,CAAC,CAACuJ,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQvJ,CAAC,CAAC0I,CAAC,KAAK,IAAI,CAACA,CAAG,IAAM1I,CAAC,CAACD,CAAC,KAAK,IAAI,CAACA,CAAG;IAEtE;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACoE,CAAC,GAAGxN,KAAK,CAAEoJ,MAAM,CAAE;MACxB,IAAI,CAACuD,CAAC,GAAG3M,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAACpF,CAAC,GAAGhE,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjCpJ,KAAK,CAAEoJ,MAAM,CAAE,GAAG,IAAI,CAACoE,CAAC;MACxBxN,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACuD,CAAC;MAC5B3M,KAAK,CAAEoJ,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACpF,CAAC;MAE5B,OAAOhE,KAAK;IAEb;EAAC;IAAA3W,GAAA;IAAAE,KAAA,EAED,SAAA+f,oBAAqBC,SAAS,EAAE3J,KAAK,EAAG;MAEvC,IAAI,CAAC4N,CAAC,GAAGjE,SAAS,CAACC,IAAI,CAAE5J,KAAM,CAAC;MAChC,IAAI,CAAC+M,CAAC,GAAGpD,SAAS,CAACE,IAAI,CAAE7J,KAAM,CAAC;MAChC,IAAI,CAACoE,CAAC,GAAGuF,SAAS,CAACsO,IAAI,CAAEjY,KAAM,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,OAAO,IAAI,CAACmsB,MAAM,CAAC,CAAC;IAErB;EAAC;IAAAz1C,GAAA,EAAAq6C,iBAAA;IAAAn6C,KAAA,eAAAX,mBAAA,GAAA8G,IAAA,CAED,SAAAnG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAuf,OAAA47B,SAAA;QAAA,kBAAAA,SAAA,CAAAj1C,IAAA,GAAAi1C,SAAA,CAAAv3C,IAAA;UAAA;YAAAu3C,SAAA,CAAAv3C,IAAA;YAEC,OAAM,IAAI,CAACuf,CAAC;UAAA;YAAAg4B,SAAA,CAAAv3C,IAAA;YACZ,OAAM,IAAI,CAAC0e,CAAC;UAAA;YAAA64B,SAAA,CAAAv3C,IAAA;YACZ,OAAM,IAAI,CAAC+V,CAAC;UAAA;UAAA;YAAA,OAAAwhC,SAAA,CAAA90C,IAAA;QAAA;MAAA,GAAAnH,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAk6C,KAAA;AAAA,EANEh6C,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAA46C,KAAA,GAAAA,KAAA;AAUnB,IAAMgB,MAAM,GAAG,aAAc,IAAIhB,KAAK,CAAC,CAAC;AAExCA,KAAK,CAACgC,KAAK,GAAGpC,cAAc;AAAC,IAEvBqC,iBAAiB,0BAAAC,SAAA;EAAAlyB,SAAA,CAAAiyB,iBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAjyB,YAAA,CAAA+xB,iBAAA;EAEtB,SAAAA,kBAAaxN,UAAU,EAAG;IAAA,IAAA2N,OAAA;IAAAn0C,eAAA,OAAAg0C,iBAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAAv6C,IAAA;IAEAw6C,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAKz6C,IAAI,GAAG,mBAAmB;IAE/By6C,OAAA,CAAKh2B,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;;IAEpCoC,OAAA,CAAKtF,GAAG,GAAG,IAAI;IAEfsF,OAAA,CAAKnF,QAAQ,GAAG,IAAI;IACpBmF,OAAA,CAAKlF,iBAAiB,GAAG,GAAG;IAE5BkF,OAAA,CAAKjF,KAAK,GAAG,IAAI;IACjBiF,OAAA,CAAKhF,cAAc,GAAG,GAAG;IAEzBgF,OAAA,CAAKpE,WAAW,GAAG,IAAI;IAEvBoE,OAAA,CAAKpF,QAAQ,GAAG,IAAI;IAEpBoF,OAAA,CAAKjE,MAAM,GAAG,IAAI;IAClBiE,OAAA,CAAKhE,OAAO,GAAG3rC,iBAAiB;IAChC2vC,OAAA,CAAK9D,YAAY,GAAG,CAAC;IACrB8D,OAAA,CAAK7D,eAAe,GAAG,IAAI;IAE3B6D,OAAA,CAAKhD,SAAS,GAAG,KAAK;IACtBgD,OAAA,CAAK/C,kBAAkB,GAAG,CAAC;IAC3B+C,OAAA,CAAK9C,gBAAgB,GAAG,OAAO;IAC/B8C,OAAA,CAAK7C,iBAAiB,GAAG,OAAO;IAEhC6C,OAAA,CAAK3C,GAAG,GAAG,IAAI;IAEf2C,OAAA,CAAKlH,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA2N,OAAA;EAE9B;EAAC3zC,YAAA,CAAAwzC,iBAAA;IAAAr8C,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAN,iBAAA,CAAA18C,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC5E,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAE/B,IAAI,CAAC0wB,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGjsB,MAAM,CAACisB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGlsB,MAAM,CAACksB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGnsB,MAAM,CAACmsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGpsB,MAAM,CAACosB,cAAc;MAE3C,IAAI,CAACY,WAAW,GAAGhtB,MAAM,CAACgtB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGntB,MAAM,CAACmtB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGptB,MAAM,CAACotB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAGttB,MAAM,CAACstB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAGvtB,MAAM,CAACutB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGpuB,MAAM,CAACouB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGruB,MAAM,CAACquB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGtuB,MAAM,CAACsuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGvuB,MAAM,CAACuuB,iBAAiB;MAEjD,IAAI,CAACE,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAwC,iBAAA;AAAA,EAxE8B9J,QAAQ,GA4ExC;AAAA/yC,OAAA,CAAA68C,iBAAA,GAAAA,iBAAA;AAEA,IAAMO,OAAO,GAAG,aAAcC,eAAe,CAAC,CAAC;AAE/C,SAASA,eAAeA,CAAA,EAAG;EAE1B;;EAEA,IAAMp3B,MAAM,GAAG,IAAIq3B,WAAW,CAAE,CAAE,CAAC;EACnC,IAAMC,SAAS,GAAG,IAAInhC,YAAY,CAAE6J,MAAO,CAAC;EAC5C,IAAMu3B,UAAU,GAAG,IAAInhC,WAAW,CAAE4J,MAAO,CAAC;EAE5C,IAAMw3B,SAAS,GAAG,IAAIphC,WAAW,CAAE,GAAI,CAAC;EACxC,IAAMqhC,UAAU,GAAG,IAAIrhC,WAAW,CAAE,GAAI,CAAC;EAEzC,KAAM,IAAI/V,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAGA,CAAC,EAAG;IAEhC,IAAMiY,CAAC,GAAGjY,CAAC,GAAG,GAAG;;IAEjB;;IAEA,IAAKiY,CAAC,GAAG,CAAE,EAAE,EAAG;MAEfk/B,SAAS,CAAEn3C,CAAC,CAAE,GAAG,MAAM;MACvBm3C,SAAS,CAAEn3C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/Bo3C,UAAU,CAAEp3C,CAAC,CAAE,GAAG,EAAE;MACpBo3C,UAAU,CAAEp3C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM,IAAKiY,CAAC,GAAG,CAAE,EAAE,EAAG;MAEtBk/B,SAAS,CAAEn3C,CAAC,CAAE,GAAG,MAAM,IAAM,CAAEiY,CAAC,GAAG,EAAI;MACvCk/B,SAAS,CAAEn3C,CAAC,GAAG,KAAK,CAAE,GAAK,MAAM,IAAM,CAAEiY,CAAC,GAAG,EAAI,GAAK,MAAM;MAC5Dm/B,UAAU,CAAEp3C,CAAC,CAAE,GAAG,CAAEiY,CAAC,GAAG,CAAC;MACzBm/B,UAAU,CAAEp3C,CAAC,GAAG,KAAK,CAAE,GAAG,CAAEiY,CAAC,GAAG,CAAC;;MAEjC;IAED,CAAC,MAAM,IAAKA,CAAC,IAAI,EAAE,EAAG;MAErBk/B,SAAS,CAAEn3C,CAAC,CAAE,GAAKiY,CAAC,GAAG,EAAE,IAAM,EAAE;MACjCk/B,SAAS,CAAEn3C,CAAC,GAAG,KAAK,CAAE,GAAOiY,CAAC,GAAG,EAAE,IAAM,EAAE,GAAK,MAAM;MACtDm/B,UAAU,CAAEp3C,CAAC,CAAE,GAAG,EAAE;MACpBo3C,UAAU,CAAEp3C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM,IAAKiY,CAAC,GAAG,GAAG,EAAG;MAErBk/B,SAAS,CAAEn3C,CAAC,CAAE,GAAG,MAAM;MACvBm3C,SAAS,CAAEn3C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/Bo3C,UAAU,CAAEp3C,CAAC,CAAE,GAAG,EAAE;MACpBo3C,UAAU,CAAEp3C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM;MAENm3C,SAAS,CAAEn3C,CAAC,CAAE,GAAG,MAAM;MACvBm3C,SAAS,CAAEn3C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/Bo3C,UAAU,CAAEp3C,CAAC,CAAE,GAAG,EAAE;MACpBo3C,UAAU,CAAEp3C,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;IAE7B;EAED;;EAEA;;EAEA,IAAMq3C,aAAa,GAAG,IAAIthC,WAAW,CAAE,IAAK,CAAC;EAC7C,IAAMuhC,aAAa,GAAG,IAAIvhC,WAAW,CAAE,EAAG,CAAC;EAC3C,IAAMwhC,WAAW,GAAG,IAAIxhC,WAAW,CAAE,EAAG,CAAC;EAEzC,KAAM,IAAI/V,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,EAAE,EAAGA,GAAC,EAAG;IAEjC,IAAIkS,CAAC,GAAGlS,GAAC,IAAI,EAAE,CAAC,CAAC;IACjB,IAAIiY,EAAC,GAAG,CAAC,CAAC,CAAC;;IAEX;IACA,OAAQ,CAAE/F,CAAC,GAAG,UAAU,MAAO,CAAC,EAAG;MAElCA,CAAC,KAAK,CAAC;MACP+F,EAAC,IAAI,UAAU,CAAC,CAAC;IAElB;;IAEA/F,CAAC,IAAI,CAAE,UAAU,CAAC,CAAC;IACnB+F,EAAC,IAAI,UAAU,CAAC,CAAC;;IAEjBo/B,aAAa,CAAEr3C,GAAC,CAAE,GAAGkS,CAAC,GAAG+F,EAAC;EAE3B;EAEA,KAAM,IAAIjY,GAAC,GAAG,IAAI,EAAEA,GAAC,GAAG,IAAI,EAAE,EAAGA,GAAC,EAAG;IAEpCq3C,aAAa,CAAEr3C,GAAC,CAAE,GAAG,UAAU,IAAOA,GAAC,GAAG,IAAI,IAAM,EAAE,CAAE;EAEzD;EAEA,KAAM,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAGA,GAAC,EAAG;IAE/Bs3C,aAAa,CAAEt3C,GAAC,CAAE,GAAGA,GAAC,IAAI,EAAE;EAE7B;EAEAs3C,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAChCA,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAEhC,KAAM,IAAIt3C,GAAC,GAAG,EAAE,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAGA,GAAC,EAAG;IAEhCs3C,aAAa,CAAEt3C,GAAC,CAAE,GAAG,UAAU,IAAOA,GAAC,GAAG,EAAE,IAAM,EAAE,CAAE;EAEvD;EAEAs3C,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAEhC,KAAM,IAAIt3C,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,EAAE,EAAE,EAAGA,IAAC,EAAG;IAE/B,IAAKA,IAAC,KAAK,EAAE,EAAG;MAEfu3C,WAAW,CAAEv3C,IAAC,CAAE,GAAG,IAAI;IAExB;EAED;EAEA,OAAO;IACNi3C,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,aAAa,EAAEA,aAAa;IAC5BC,aAAa,EAAEA,aAAa;IAC5BC,WAAW,EAAEA;EACd,CAAC;AAEF;;AAEA;;AAEA,SAASC,WAAWA,CAAEz2C,GAAG,EAAG;EAE3B,IAAKmQ,IAAI,CAACgC,GAAG,CAAEnS,GAAI,CAAC,GAAG,KAAK,EAAG4U,OAAO,CAACC,IAAI,CAAE,oDAAqD,CAAC;EAEnG7U,GAAG,GAAG8Q,KAAK,CAAE9Q,GAAG,EAAE,CAAE,KAAK,EAAE,KAAM,CAAC;EAElC+1C,OAAO,CAACG,SAAS,CAAE,CAAC,CAAE,GAAGl2C,GAAG;EAC5B,IAAMwc,CAAC,GAAGu5B,OAAO,CAACI,UAAU,CAAE,CAAC,CAAE;EACjC,IAAMj/B,CAAC,GAAKsF,CAAC,IAAI,EAAE,GAAK,KAAK;EAC7B,OAAOu5B,OAAO,CAACK,SAAS,CAAEl/B,CAAC,CAAE,IAAK,CAAEsF,CAAC,GAAG,UAAU,KAAMu5B,OAAO,CAACM,UAAU,CAAEn/B,CAAC,CAAE,CAAE;AAElF;;AAEA;;AAEA,SAASw/B,aAAaA,CAAE12C,GAAG,EAAG;EAE7B,IAAMmR,CAAC,GAAGnR,GAAG,IAAI,EAAE;EACnB+1C,OAAO,CAACI,UAAU,CAAE,CAAC,CAAE,GAAGJ,OAAO,CAACO,aAAa,CAAEP,OAAO,CAACS,WAAW,CAAErlC,CAAC,CAAE,IAAKnR,GAAG,GAAG,KAAK,CAAE,CAAE,GAAG+1C,OAAO,CAACQ,aAAa,CAAEplC,CAAC,CAAE;EAC1H,OAAO4kC,OAAO,CAACG,SAAS,CAAE,CAAC,CAAE;AAE9B;AAEA,IAAMS,SAAS,GAAG;EACjBF,WAAW,EAAEA,WAAW;EACxBC,aAAa,EAAEA;AAChB,CAAC;AAAC/9C,OAAA,CAAAg+C,SAAA,GAAAA,SAAA;AAEF,IAAMC,SAAS,GAAG,aAAc,IAAIhnB,OAAO,CAAC,CAAC;AAC7C,IAAMinB,UAAU,GAAG,aAAc,IAAIphC,OAAO,CAAC,CAAC;AAAC,IAEzCqhC,eAAe;EAEpB,SAAAA,gBAAahnC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,GAAG,KAAK,EAAG;IAAAx1C,eAAA,OAAAs1C,eAAA;IAElD,IAAK/zB,KAAK,CAACC,OAAO,CAAElT,KAAM,CAAC,EAAG;MAE7B,MAAM,IAAIlS,SAAS,CAAE,uDAAwD,CAAC;IAE/E;IAEA,IAAI,CAACq5C,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAAC13C,IAAI,GAAG,EAAE;IAEd,IAAI,CAACuQ,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACinC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACnsB,KAAK,GAAG9a,KAAK,KAAKpS,SAAS,GAAGoS,KAAK,CAAC9Q,MAAM,GAAG+3C,QAAQ,GAAG,CAAC;IAC9D,IAAI,CAACC,UAAU,GAAGA,UAAU;IAE5B,IAAI,CAACE,KAAK,GAAG/oC,eAAe;IAC5B,IAAI,CAACgpC,WAAW,GAAG;MAAEj+B,MAAM,EAAE,CAAC;MAAE0R,KAAK,EAAE,CAAE;IAAE,CAAC;IAC5C,IAAI,CAACwsB,OAAO,GAAGlvC,SAAS;IAExB,IAAI,CAACsa,OAAO,GAAG,CAAC;EAEjB;EAACxgB,YAAA,CAAA80C,eAAA;IAAA39C,GAAA;IAAAE,KAAA,EAED,SAAAg+C,iBAAA,EAAmB,CAAC;EAAC;IAAAl+C,GAAA;IAAAwb,GAAA,EAErB,SAAAA,IAAiBtb,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACmpB,OAAO,EAAG;IAEtC;EAAC;IAAArpB,GAAA;IAAAE,KAAA,EAED,SAAAi+C,SAAUj+C,KAAK,EAAG;MAEjB,IAAI,CAAC69C,KAAK,GAAG79C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAChlB,IAAI,GAAGglB,MAAM,CAAChlB,IAAI;MACvB,IAAI,CAACuQ,KAAK,GAAG,IAAIyU,MAAM,CAACzU,KAAK,CAACxQ,WAAW,CAAEilB,MAAM,CAACzU,KAAM,CAAC;MACzD,IAAI,CAACinC,QAAQ,GAAGxyB,MAAM,CAACwyB,QAAQ;MAC/B,IAAI,CAACnsB,KAAK,GAAGrG,MAAM,CAACqG,KAAK;MACzB,IAAI,CAACosB,UAAU,GAAGzyB,MAAM,CAACyyB,UAAU;MAEnC,IAAI,CAACE,KAAK,GAAG3yB,MAAM,CAAC2yB,KAAK;MACzB,IAAI,CAACE,OAAO,GAAG7yB,MAAM,CAAC6yB,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAj+C,GAAA;IAAAE,KAAA,EAED,SAAAk+C,OAAQC,MAAM,EAAEn+B,SAAS,EAAEo+B,MAAM,EAAG;MAEnCD,MAAM,IAAI,IAAI,CAACT,QAAQ;MACvBU,MAAM,IAAIp+B,SAAS,CAAC09B,QAAQ;MAE5B,KAAM,IAAI93C,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAACgnC,QAAQ,EAAE93C,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEjD,IAAI,CAAC6Q,KAAK,CAAE0nC,MAAM,GAAGv4C,CAAC,CAAE,GAAGoa,SAAS,CAACvJ,KAAK,CAAE2nC,MAAM,GAAGx4C,CAAC,CAAE;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAq+C,UAAW5nC,KAAK,EAAG;MAElB,IAAI,CAACA,KAAK,CAAC6E,GAAG,CAAE7E,KAAM,CAAC;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA3W,GAAA;IAAAE,KAAA,EAED,SAAA4d,aAAc9F,CAAC,EAAG;MAEjB,IAAK,IAAI,CAAC4lC,QAAQ,KAAK,CAAC,EAAG;QAE1B,KAAM,IAAI93C,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC6a,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE9C43C,UAAU,CAACz9B,mBAAmB,CAAE,IAAI,EAAEna,CAAE,CAAC;UACzC43C,UAAU,CAAC5/B,YAAY,CAAE9F,CAAE,CAAC;UAE5B,IAAI,CAACwmC,KAAK,CAAE14C,CAAC,EAAE43C,UAAU,CAACxlC,CAAC,EAAEwlC,UAAU,CAACllC,CAAE,CAAC;QAE5C;MAED,CAAC,MAAM,IAAK,IAAI,CAAColC,QAAQ,KAAK,CAAC,EAAG;QAEjC,KAAM,IAAI93C,IAAC,GAAG,CAAC,EAAE8Q,GAAC,GAAG,IAAI,CAAC6a,KAAK,EAAE3rB,IAAC,GAAG8Q,GAAC,EAAE9Q,IAAC,EAAG,EAAG;UAE9C23C,SAAS,CAACx9B,mBAAmB,CAAE,IAAI,EAAEna,IAAE,CAAC;UACxC23C,SAAS,CAAC3/B,YAAY,CAAE9F,CAAE,CAAC;UAE3B,IAAI,CAACymC,MAAM,CAAE34C,IAAC,EAAE23C,SAAS,CAACvlC,CAAC,EAAEulC,SAAS,CAACjlC,CAAC,EAAEilC,SAAS,CAAC1wB,CAAE,CAAC;QAExD;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcpV,CAAC,EAAG;MAEjB,KAAM,IAAIlS,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC6a,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAE9C23C,SAAS,CAACx9B,mBAAmB,CAAE,IAAI,EAAEna,CAAE,CAAC;QAExC23C,SAAS,CAACrwB,YAAY,CAAEpV,CAAE,CAAC;QAE3B,IAAI,CAACymC,MAAM,CAAE34C,CAAC,EAAE23C,SAAS,CAACvlC,CAAC,EAAEulC,SAAS,CAACjlC,CAAC,EAAEilC,SAAS,CAAC1wB,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+2B,kBAAmBjf,CAAC,EAAG;MAEtB,KAAM,IAAIlS,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC6a,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAE9C23C,SAAS,CAACx9B,mBAAmB,CAAE,IAAI,EAAEna,CAAE,CAAC;QAExC23C,SAAS,CAACxmB,iBAAiB,CAAEjf,CAAE,CAAC;QAEhC,IAAI,CAACymC,MAAM,CAAE34C,CAAC,EAAE23C,SAAS,CAACvlC,CAAC,EAAEulC,SAAS,CAACjlC,CAAC,EAAEilC,SAAS,CAAC1wB,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+3B,mBAAoBjgB,CAAC,EAAG;MAEvB,KAAM,IAAIlS,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC6a,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAE9C23C,SAAS,CAACx9B,mBAAmB,CAAE,IAAI,EAAEna,CAAE,CAAC;QAExC23C,SAAS,CAACxlB,kBAAkB,CAAEjgB,CAAE,CAAC;QAEjC,IAAI,CAACymC,MAAM,CAAE34C,CAAC,EAAE23C,SAAS,CAACvlC,CAAC,EAAEulC,SAAS,CAACjlC,CAAC,EAAEilC,SAAS,CAAC1wB,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKtb,KAAK,EAAE6f,MAAM,GAAG,CAAC,EAAG;MAExB;MACA,IAAI,CAACpJ,KAAK,CAAC6E,GAAG,CAAEtb,KAAK,EAAE6f,MAAO,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA6c,aAAcxG,KAAK,EAAEmoC,SAAS,EAAG;MAEhC,IAAIx+C,KAAK,GAAG,IAAI,CAACyW,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAGc,SAAS,CAAE;MAE3D,IAAK,IAAI,CAACb,UAAU,EAAG39C,KAAK,GAAGyb,WAAW,CAAEzb,KAAK,EAAE,IAAI,CAACyW,KAAM,CAAC;MAE/D,OAAOzW,KAAK;IAEb;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA4c,aAAcvG,KAAK,EAAEmoC,SAAS,EAAEx+C,KAAK,EAAG;MAEvC,IAAK,IAAI,CAAC29C,UAAU,EAAG39C,KAAK,GAAGic,SAAS,CAAEjc,KAAK,EAAE,IAAI,CAACyW,KAAM,CAAC;MAE7D,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAGc,SAAS,CAAE,GAAGx+C,KAAK;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAigB,KAAM5J,KAAK,EAAG;MAEb,IAAI2B,CAAC,GAAG,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,CAAE;MAE3C,IAAK,IAAI,CAACC,UAAU,EAAG3lC,CAAC,GAAGyD,WAAW,CAAEzD,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;MAEvD,OAAOuB,CAAC;IAET;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAA0c,KAAMrG,KAAK,EAAE2B,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC2lC,UAAU,EAAG3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,CAAE,GAAG1lC,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAAkgB,KAAM7J,KAAK,EAAG;MAEb,IAAIiC,CAAC,GAAG,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE;MAE/C,IAAK,IAAI,CAACC,UAAU,EAAGrlC,CAAC,GAAGmD,WAAW,CAAEnD,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAEvD,OAAO6B,CAAC;IAET;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA2c,KAAMtG,KAAK,EAAEiC,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACqlC,UAAU,EAAGrlC,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE,GAAGplC,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAsuB,KAAMjY,KAAK,EAAG;MAEb,IAAIwW,CAAC,GAAG,IAAI,CAACpW,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE;MAE/C,IAAK,IAAI,CAACC,UAAU,EAAG9wB,CAAC,GAAGpR,WAAW,CAAEoR,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAEvD,OAAOoW,CAAC;IAET;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAgtB,KAAM3W,KAAK,EAAEwW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC8wB,UAAU,EAAG9wB,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE,GAAG7wB,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAuuB,KAAMlY,KAAK,EAAG;MAEb,IAAIyW,CAAC,GAAG,IAAI,CAACrW,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE;MAE/C,IAAK,IAAI,CAACC,UAAU,EAAG7wB,CAAC,GAAGrR,WAAW,CAAEqR,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAEvD,OAAOqW,CAAC;IAET;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAitB,KAAM5W,KAAK,EAAEyW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC6wB,UAAU,EAAG7wB,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE,GAAG5wB,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAs+C,MAAOjoC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAG;MAEpBjC,KAAK,IAAI,IAAI,CAACqnC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAu+C,OAAQloC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAExBxW,KAAK,IAAI,IAAI,CAACqnC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;QAC9BoW,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAC3B,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwW,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAy+C,QAASpoC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAEC,CAAC,EAAG;MAE5BzW,KAAK,IAAI,IAAI,CAACqnC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;QAC9BoW,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;QAC9BqW,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAC3B,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwW,CAAC;MAC3B,IAAI,CAACpW,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGyW,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA0+C,SAAUzpB,QAAQ,EAAG;MAEpB,IAAI,CAAC+oB,gBAAgB,GAAG/oB,QAAQ;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAn1B,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAACwQ,KAAK,EAAE,IAAI,CAACinC,QAAS,CAAC,CAAC3gC,IAAI,CAAE,IAAK,CAAC;IAEtE;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAG;QACZ20B,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvB77C,IAAI,EAAE,IAAI,CAAC4U,KAAK,CAACxQ,WAAW,CAACC,IAAI;QACjCuQ,KAAK,EAAEiT,KAAK,CAACI,IAAI,CAAE,IAAI,CAACrT,KAAM,CAAC;QAC/BknC,UAAU,EAAE,IAAI,CAACA;MAClB,CAAC;MAED,IAAK,IAAI,CAACz3C,IAAI,KAAK,EAAE,EAAG6iB,IAAI,CAAC7iB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC7C,IAAK,IAAI,CAAC23C,KAAK,KAAK/oC,eAAe,EAAGiU,IAAI,CAAC80B,KAAK,GAAG,IAAI,CAACA,KAAK;MAC7D,IAAK,IAAI,CAACC,WAAW,CAACj+B,MAAM,KAAK,CAAC,IAAI,IAAI,CAACi+B,WAAW,CAACvsB,KAAK,KAAK,CAAE,CAAC,EAAGxI,IAAI,CAAC+0B,WAAW,GAAG,IAAI,CAACA,WAAW;MAE1G,OAAO/0B,IAAI;IAEZ;EAAC;EAAA,OAAA00B,eAAA;AAAA,KAIF;AAAAn+C,OAAA,CAAAm+C,eAAA,GAAAA,eAAA;AAAA,IAEMkB,mBAAmB,0BAAAC,gBAAA;EAAA10B,SAAA,CAAAy0B,mBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAz0B,YAAA,CAAAu0B,mBAAA;EAExB,SAAAA,oBAAaloC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAAw2C,mBAAA;IAAA,OAAAE,QAAA,CAAA/8C,IAAA,OAEnC,IAAIka,SAAS,CAAEvF,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAEpD;EAAC,OAAAh1C,YAAA,CAAAg2C,mBAAA;AAAA,EANgClB,eAAe;AAAAn+C,OAAA,CAAAq/C,mBAAA,GAAAA,mBAAA;AAAA,IAU3CG,oBAAoB,0BAAAC,iBAAA;EAAA70B,SAAA,CAAA40B,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA50B,YAAA,CAAA00B,oBAAA;EAEzB,SAAAA,qBAAaroC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAA22C,oBAAA;IAAA,OAAAE,QAAA,CAAAl9C,IAAA,OAEnC,IAAI+Z,UAAU,CAAEpF,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAErD;EAAC,OAAAh1C,YAAA,CAAAm2C,oBAAA;AAAA,EANiCrB,eAAe;AAAAn+C,OAAA,CAAAw/C,oBAAA,GAAAA,oBAAA;AAAA,IAU5CG,2BAA2B,0BAAAC,iBAAA;EAAAh1B,SAAA,CAAA+0B,2BAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA/0B,YAAA,CAAA60B,2BAAA;EAEhC,SAAAA,4BAAaxoC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAA82C,2BAAA;IAAA,OAAAE,QAAA,CAAAr9C,IAAA,OAEnC,IAAIsjB,iBAAiB,CAAE3O,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAE5D;EAAC,OAAAh1C,YAAA,CAAAs2C,2BAAA;AAAA,EANwCxB,eAAe;AAAAn+C,OAAA,CAAA2/C,2BAAA,GAAAA,2BAAA;AAAA,IAUnDG,oBAAoB,0BAAAC,iBAAA;EAAAn1B,SAAA,CAAAk1B,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAl1B,YAAA,CAAAg1B,oBAAA;EAEzB,SAAAA,qBAAa3oC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAAi3C,oBAAA;IAAA,OAAAE,QAAA,CAAAx9C,IAAA,OAEnC,IAAIia,UAAU,CAAEtF,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAErD;EAAC,OAAAh1C,YAAA,CAAAy2C,oBAAA;AAAA,EANiC3B,eAAe;AAAAn+C,OAAA,CAAA8/C,oBAAA,GAAAA,oBAAA;AAAA,IAU5CG,qBAAqB,0BAAAC,iBAAA;EAAAt1B,SAAA,CAAAq1B,qBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAr1B,YAAA,CAAAm1B,qBAAA;EAE1B,SAAAA,sBAAa9oC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAAo3C,qBAAA;IAAA,OAAAE,QAAA,CAAA39C,IAAA,OAEnC,IAAI8Z,WAAW,CAAEnF,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAEtD;EAAC,OAAAh1C,YAAA,CAAA42C,qBAAA;AAAA,EANkC9B,eAAe;AAAAn+C,OAAA,CAAAigD,qBAAA,GAAAA,qBAAA;AAAA,IAU7CG,oBAAoB,0BAAAC,iBAAA;EAAAz1B,SAAA,CAAAw1B,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAx1B,YAAA,CAAAs1B,oBAAA;EAEzB,SAAAA,qBAAajpC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAAu3C,oBAAA;IAAA,OAAAE,QAAA,CAAA99C,IAAA,OAEnC,IAAIga,UAAU,CAAErF,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAErD;EAAC,OAAAh1C,YAAA,CAAA+2C,oBAAA;AAAA,EANiCjC,eAAe;AAAAn+C,OAAA,CAAAogD,oBAAA,GAAAA,oBAAA;AAAA,IAU5CG,qBAAqB,0BAAAC,iBAAA;EAAA51B,SAAA,CAAA21B,qBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA31B,YAAA,CAAAy1B,qBAAA;EAE1B,SAAAA,sBAAappC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAA03C,qBAAA;IAAA,OAAAE,QAAA,CAAAj+C,IAAA,OAEnC,IAAI6Z,WAAW,CAAElF,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAEtD;EAAC,OAAAh1C,YAAA,CAAAk3C,qBAAA;AAAA,EANkCpC,eAAe;AAAAn+C,OAAA,CAAAugD,qBAAA,GAAAA,qBAAA;AAAA,IAU7CG,sBAAsB,0BAAAC,iBAAA;EAAA/1B,SAAA,CAAA81B,sBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA91B,YAAA,CAAA41B,sBAAA;EAE3B,SAAAA,uBAAavpC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAA,IAAAwC,OAAA;IAAAh4C,eAAA,OAAA63C,sBAAA;IAE1CG,OAAA,GAAAD,QAAA,CAAAp+C,IAAA,OAAO,IAAI8Z,WAAW,CAAEnF,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;IAErDwC,OAAA,CAAKC,wBAAwB,GAAG,IAAI;IAAC,OAAAD,OAAA;EAEtC;EAACx3C,YAAA,CAAAq3C,sBAAA;IAAAlgD,GAAA;IAAAE,KAAA,EAED,SAAAigB,KAAM5J,KAAK,EAAG;MAEb,IAAI2B,CAAC,GAAGqlC,aAAa,CAAE,IAAI,CAAC5mC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,CAAG,CAAC;MAE5D,IAAK,IAAI,CAACC,UAAU,EAAG3lC,CAAC,GAAGyD,WAAW,CAAEzD,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;MAEvD,OAAOuB,CAAC;IAET;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAA0c,KAAMrG,KAAK,EAAE2B,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC2lC,UAAU,EAAG3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,CAAE,GAAGN,WAAW,CAAEplC,CAAE,CAAC;MAEtD,OAAO,IAAI;IAEZ;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAAkgB,KAAM7J,KAAK,EAAG;MAEb,IAAIiC,CAAC,GAAG+kC,aAAa,CAAE,IAAI,CAAC5mC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAG,CAAC;MAEhE,IAAK,IAAI,CAACC,UAAU,EAAGrlC,CAAC,GAAGmD,WAAW,CAAEnD,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAEvD,OAAO6B,CAAC;IAET;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA2c,KAAMtG,KAAK,EAAEiC,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACqlC,UAAU,EAAGrlC,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE,GAAGN,WAAW,CAAE9kC,CAAE,CAAC;MAE1D,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAsuB,KAAMjY,KAAK,EAAG;MAEb,IAAIwW,CAAC,GAAGwwB,aAAa,CAAE,IAAI,CAAC5mC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAG,CAAC;MAEhE,IAAK,IAAI,CAACC,UAAU,EAAG9wB,CAAC,GAAGpR,WAAW,CAAEoR,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAEvD,OAAOoW,CAAC;IAET;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAgtB,KAAM3W,KAAK,EAAEwW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC8wB,UAAU,EAAG9wB,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE,GAAGN,WAAW,CAAEvwB,CAAE,CAAC;MAE1D,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAuuB,KAAMlY,KAAK,EAAG;MAEb,IAAIyW,CAAC,GAAGuwB,aAAa,CAAE,IAAI,CAAC5mC,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAG,CAAC;MAEhE,IAAK,IAAI,CAACC,UAAU,EAAG7wB,CAAC,GAAGrR,WAAW,CAAEqR,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAEvD,OAAOqW,CAAC;IAET;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAitB,KAAM5W,KAAK,EAAEyW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC6wB,UAAU,EAAG7wB,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAErD,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqnC,QAAQ,GAAG,CAAC,CAAE,GAAGN,WAAW,CAAEtwB,CAAE,CAAC;MAE1D,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAs+C,MAAOjoC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAG;MAEpBjC,KAAK,IAAI,IAAI,CAACqnC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAEplC,CAAE,CAAC;MAC1C,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAE9kC,CAAE,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAu+C,OAAQloC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAExBxW,KAAK,IAAI,IAAI,CAACqnC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;QAC9BoW,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAEplC,CAAE,CAAC;MAC1C,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAE9kC,CAAE,CAAC;MAC1C,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAEvwB,CAAE,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAy+C,QAASpoC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAEC,CAAC,EAAG;MAE5BzW,KAAK,IAAI,IAAI,CAACqnC,QAAQ;MAEtB,IAAK,IAAI,CAACC,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;QAC9BoW,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;QAC9BqW,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACA,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAEplC,CAAE,CAAC;MAC1C,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAE9kC,CAAE,CAAC;MAC1C,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAEvwB,CAAE,CAAC;MAC1C,IAAI,CAACpW,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+mC,WAAW,CAAEtwB,CAAE,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAkzB,sBAAA;AAAA,EApJmCvC,eAAe;AAAAn+C,OAAA,CAAA0gD,sBAAA,GAAAA,sBAAA;AAAA,IAyJ9CK,sBAAsB,0BAAAC,iBAAA;EAAAp2B,SAAA,CAAAm2B,sBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAn2B,YAAA,CAAAi2B,sBAAA;EAE3B,SAAAA,uBAAa5pC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAAk4C,sBAAA;IAAA,OAAAE,QAAA,CAAAz+C,IAAA,OAEnC,IAAI4Z,YAAY,CAAEjF,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAEvD;EAAC,OAAAh1C,YAAA,CAAA03C,sBAAA;AAAA,EANmC5C,eAAe;AAAAn+C,OAAA,CAAA+gD,sBAAA,GAAAA,sBAAA;AAAA,IAU9CG,sBAAsB,0BAAAC,kBAAA;EAAAv2B,SAAA,CAAAs2B,sBAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAAt2B,YAAA,CAAAo2B,sBAAA;EAE3B,SAAAA,uBAAa/pC,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAG;IAAAx1C,eAAA,OAAAq4C,sBAAA;IAAA,OAAAE,QAAA,CAAA5+C,IAAA,OAEnC,IAAIujB,YAAY,CAAE5O,KAAM,CAAC,EAAEinC,QAAQ,EAAEC,UAAU;EAEvD;EAAC,OAAAh1C,YAAA,CAAA63C,sBAAA;AAAA,EANmC/C,eAAe;AAAAn+C,OAAA,CAAAkhD,sBAAA,GAAAA,sBAAA;AAUpD,IAAIG,KAAK,GAAG,CAAC;AAEb,IAAMC,GAAG,GAAG,aAAc,IAAI5e,OAAO,CAAC,CAAC;AACvC,IAAM6e,IAAI,GAAG,aAAc,IAAIxX,QAAQ,CAAC,CAAC;AACzC,IAAMyX,OAAO,GAAG,aAAc,IAAIvqB,OAAO,CAAC,CAAC;AAC3C,IAAMwqB,MAAM,GAAG,aAAc,IAAIlnB,IAAI,CAAC,CAAC;AACvC,IAAMmnB,gBAAgB,GAAG,aAAc,IAAInnB,IAAI,CAAC,CAAC;AACjD,IAAMonB,SAAS,GAAG,aAAc,IAAI1qB,OAAO,CAAC,CAAC;AAAC,IAExC2qB,cAAc,0BAAAC,iBAAA;EAAAj3B,SAAA,CAAAg3B,cAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAh3B,YAAA,CAAA82B,cAAA;EAEnB,SAAAA,eAAA,EAAc;IAAA,IAAAG,OAAA;IAAAl5C,eAAA,OAAA+4C,cAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAt/C,IAAA;IAEAu/C,OAAA,CAAKC,gBAAgB,GAAG,IAAI;IAE5B9hD,MAAM,CAACI,cAAc,CAAAqrB,sBAAA,CAAAo2B,OAAA,GAAQ,IAAI,EAAE;MAAErhD,KAAK,EAAE2gD,KAAK;IAAI,CAAE,CAAC;IAExDU,OAAA,CAAK9pC,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1BoqC,OAAA,CAAKn7C,IAAI,GAAG,EAAE;IACdm7C,OAAA,CAAKx/C,IAAI,GAAG,gBAAgB;IAE5Bw/C,OAAA,CAAKhrC,KAAK,GAAG,IAAI;IACjBgrC,OAAA,CAAK1lB,UAAU,GAAG,CAAC,CAAC;IAEpB0lB,OAAA,CAAKE,eAAe,GAAG,CAAC,CAAC;IACzBF,OAAA,CAAKG,oBAAoB,GAAG,KAAK;IAEjCH,OAAA,CAAKI,MAAM,GAAG,EAAE;IAEhBJ,OAAA,CAAK/lB,WAAW,GAAG,IAAI;IACvB+lB,OAAA,CAAKK,cAAc,GAAG,IAAI;IAE1BL,OAAA,CAAKM,SAAS,GAAG;MAAEC,KAAK,EAAE,CAAC;MAAErwB,KAAK,EAAEuI;IAAS,CAAC;IAE9CunB,OAAA,CAAKz1B,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAAy1B,OAAA;EAEpB;EAAC14C,YAAA,CAAAu4C,cAAA;IAAAphD,GAAA;IAAAE,KAAA,EAED,SAAA6hD,SAAA,EAAW;MAEV,OAAO,IAAI,CAACxrC,KAAK;IAElB;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA8hD,SAAUzrC,KAAK,EAAG;MAEjB,IAAKqT,KAAK,CAACC,OAAO,CAAEtT,KAAM,CAAC,EAAG;QAE7B,IAAI,CAACA,KAAK,GAAG,KAAM6O,gBAAgB,CAAE7O,KAAM,CAAC,GAAGwpC,qBAAqB,GAAGN,qBAAqB,EAAIlpC,KAAK,EAAE,CAAE,CAAC;MAE3G,CAAC,MAAM;QAEN,IAAI,CAACA,KAAK,GAAGA,KAAK;MAEnB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA+hD,aAAc77C,IAAI,EAAG;MAEpB,OAAO,IAAI,CAACy1B,UAAU,CAAEz1B,IAAI,CAAE;IAE/B;EAAC;IAAApG,GAAA;IAAAE,KAAA,EAED,SAAAgiD,aAAc97C,IAAI,EAAE8Z,SAAS,EAAG;MAE/B,IAAI,CAAC2b,UAAU,CAAEz1B,IAAI,CAAE,GAAG8Z,SAAS;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAlgB,GAAA;IAAAE,KAAA,EAED,SAAAiiD,gBAAiB/7C,IAAI,EAAG;MAEvB,OAAO,IAAI,CAACy1B,UAAU,CAAEz1B,IAAI,CAAE;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAApG,GAAA;IAAAE,KAAA,EAED,SAAAkiD,aAAch8C,IAAI,EAAG;MAEpB,OAAO,IAAI,CAACy1B,UAAU,CAAEz1B,IAAI,CAAE,KAAK7B,SAAS;IAE7C;EAAC;IAAAvE,GAAA;IAAAE,KAAA,EAED,SAAAmiD,SAAUP,KAAK,EAAErwB,KAAK,EAAE6wB,aAAa,GAAG,CAAC,EAAG;MAE3C,IAAI,CAACX,MAAM,CAACr8C,IAAI,CAAE;QAEjBw8C,KAAK,EAAEA,KAAK;QACZrwB,KAAK,EAAEA,KAAK;QACZ6wB,aAAa,EAAEA;MAEhB,CAAE,CAAC;IAEJ;EAAC;IAAAtiD,GAAA;IAAAE,KAAA,EAED,SAAAqiD,YAAA,EAAc;MAEb,IAAI,CAACZ,MAAM,GAAG,EAAE;IAEjB;EAAC;IAAA3hD,GAAA;IAAAE,KAAA,EAED,SAAAsiD,aAAcV,KAAK,EAAErwB,KAAK,EAAG;MAE5B,IAAI,CAACowB,SAAS,CAACC,KAAK,GAAGA,KAAK;MAC5B,IAAI,CAACD,SAAS,CAACpwB,KAAK,GAAGA,KAAK;IAE7B;EAAC;IAAAzxB,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcjI,MAAM,EAAG;MAEtB,IAAM2W,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MAEzC,IAAKA,QAAQ,KAAKv3B,SAAS,EAAG;QAE7Bu3B,QAAQ,CAAC1O,YAAY,CAAEjI,MAAO,CAAC;QAE/B2W,QAAQ,CAACxP,WAAW,GAAG,IAAI;MAE5B;MAEA,IAAMwM,MAAM,GAAG,IAAI,CAAC+C,UAAU,CAAC/C,MAAM;MAErC,IAAKA,MAAM,KAAKv0B,SAAS,EAAG;QAE3B,IAAM2lC,YAAY,GAAG,IAAIzpB,OAAO,CAAC,CAAC,CAACuD,eAAe,CAAEmB,MAAO,CAAC;QAE5D2T,MAAM,CAAC7B,iBAAiB,CAAEiT,YAAa,CAAC;QAExCpR,MAAM,CAACxM,WAAW,GAAG,IAAI;MAE1B;MAEA,IAAMm2B,OAAO,GAAG,IAAI,CAAC5mB,UAAU,CAAC4mB,OAAO;MAEvC,IAAKA,OAAO,KAAKl+C,SAAS,EAAG;QAE5Bk+C,OAAO,CAACxqB,kBAAkB,CAAE9S,MAAO,CAAC;QAEpCs9B,OAAO,CAACn2B,WAAW,GAAG,IAAI;MAE3B;MAEA,IAAK,IAAI,CAACkP,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACC,kBAAkB,CAAC,CAAC;MAE1B;MAEA,IAAK,IAAI,CAACmmB,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACc,qBAAqB,CAAC,CAAC;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA1iD,GAAA;IAAAE,KAAA,EAED,SAAA42B,gBAAiBrc,CAAC,EAAG;MAEpBqmC,GAAG,CAAChd,0BAA0B,CAAErpB,CAAE,CAAC;MAEnC,IAAI,CAAC2S,YAAY,CAAE0zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9gD,GAAA;IAAAE,KAAA,EAED,SAAAmrC,QAASxsB,KAAK,EAAG;MAEhB;;MAEAiiC,GAAG,CAACvb,aAAa,CAAE1mB,KAAM,CAAC;MAE1B,IAAI,CAACuO,YAAY,CAAE0zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9gD,GAAA;IAAAE,KAAA,EAED,SAAAorC,QAASzsB,KAAK,EAAG;MAEhB;;MAEAiiC,GAAG,CAACtb,aAAa,CAAE3mB,KAAM,CAAC;MAE1B,IAAI,CAACuO,YAAY,CAAE0zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9gD,GAAA;IAAAE,KAAA,EAED,SAAAqrC,QAAS1sB,KAAK,EAAG;MAEhB;;MAEAiiC,GAAG,CAACrb,aAAa,CAAE5mB,KAAM,CAAC;MAE1B,IAAI,CAACuO,YAAY,CAAE0zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9gD,GAAA;IAAAE,KAAA,EAED,SAAA+kB,UAAW/M,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAEpB;;MAEA+zB,GAAG,CAAC57B,eAAe,CAAEhN,CAAC,EAAEM,CAAC,EAAEuU,CAAE,CAAC;MAE9B,IAAI,CAACK,YAAY,CAAE0zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9gD,GAAA;IAAAE,KAAA,EAED,SAAA0kB,MAAO1M,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAEhB;;MAEA+zB,GAAG,CAACh8B,SAAS,CAAE5M,CAAC,EAAEM,CAAC,EAAEuU,CAAE,CAAC;MAExB,IAAI,CAACK,YAAY,CAAE0zB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9gD,GAAA;IAAAE,KAAA,EAED,SAAAu/B,OAAQpE,MAAM,EAAG;MAEhB0lB,IAAI,CAACthB,MAAM,CAAEpE,MAAO,CAAC;MAErB0lB,IAAI,CAAC70B,YAAY,CAAC,CAAC;MAEnB,IAAI,CAACkB,YAAY,CAAE2zB,IAAI,CAAC57B,MAAO,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAnlB,GAAA;IAAAE,KAAA,EAED,SAAAogB,OAAA,EAAS;MAER,IAAI,CAACmb,kBAAkB,CAAC,CAAC;MAEzB,IAAI,CAACD,WAAW,CAACP,SAAS,CAAE+lB,OAAQ,CAAC,CAACziC,MAAM,CAAC,CAAC;MAE9C,IAAI,CAAC0G,SAAS,CAAE+7B,OAAO,CAAC9oC,CAAC,EAAE8oC,OAAO,CAACxoC,CAAC,EAAEwoC,OAAO,CAACj0B,CAAE,CAAC;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAq6B,cAAeC,MAAM,EAAG;MAEvB,IAAMsB,QAAQ,GAAG,EAAE;MAEnB,KAAM,IAAIh2B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG4jB,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEjD,IAAMq1B,KAAK,GAAGX,MAAM,CAAE10B,CAAC,CAAE;QACzBg2B,QAAQ,CAACx2B,IAAI,CAAE61B,KAAK,CAACjjB,CAAC,EAAEijB,KAAK,CAAC3iB,CAAC,EAAE2iB,KAAK,CAACpO,CAAC,IAAI,CAAE,CAAC;MAEhD;MAEA,IAAI,CAACm1B,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEzkB,QAAQ,EAAE,CAAE,CAAE,CAAC;MAE1E,OAAO,IAAI;IAEZ;EAAC;IAAA97B,GAAA;IAAAE,KAAA,EAED,SAAAu7B,mBAAA,EAAqB;MAEpB,IAAK,IAAI,CAACD,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,GAAG,IAAIzB,IAAI,CAAC,CAAC;MAE9B;MAEA,IAAM+B,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MACzC,IAAM6mB,uBAAuB,GAAG,IAAI,CAAClB,eAAe,CAAC3lB,QAAQ;MAE7D,IAAKA,QAAQ,IAAIA,QAAQ,CAAC8mB,mBAAmB,EAAG;QAE/CnnC,OAAO,CAAChY,KAAK,CAAE,iJAAiJ,EAAE,IAAK,CAAC;QAExK,IAAI,CAAC+3B,WAAW,CAAChgB,GAAG,CACnB,IAAIib,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CAAC,EACjD,IAAIvD,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CACjD,CAAC;QAED;MAED;MAEA,IAAK8B,QAAQ,KAAKv3B,SAAS,EAAG;QAE7B,IAAI,CAACi3B,WAAW,CAAClB,sBAAsB,CAAEwB,QAAS,CAAC;;QAEnD;;QAEA,IAAK6mB,uBAAuB,EAAG;UAE9B,KAAM,IAAI78C,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG+wB,uBAAuB,CAAC98C,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;YAEpE,IAAM+8C,cAAc,GAAGF,uBAAuB,CAAE78C,CAAC,CAAE;YACnDm7C,MAAM,CAAC3mB,sBAAsB,CAAEuoB,cAAe,CAAC;YAE/C,IAAK,IAAI,CAACnB,oBAAoB,EAAG;cAEhCP,SAAS,CAAC9jC,UAAU,CAAE,IAAI,CAACme,WAAW,CAAC5jB,GAAG,EAAEqpC,MAAM,CAACrpC,GAAI,CAAC;cACxD,IAAI,CAAC4jB,WAAW,CAACpB,aAAa,CAAE+mB,SAAU,CAAC;cAE3CA,SAAS,CAAC9jC,UAAU,CAAE,IAAI,CAACme,WAAW,CAAC3jB,GAAG,EAAEopC,MAAM,CAACppC,GAAI,CAAC;cACxD,IAAI,CAAC2jB,WAAW,CAACpB,aAAa,CAAE+mB,SAAU,CAAC;YAE5C,CAAC,MAAM;cAEN,IAAI,CAAC3lB,WAAW,CAACpB,aAAa,CAAE6mB,MAAM,CAACrpC,GAAI,CAAC;cAC5C,IAAI,CAAC4jB,WAAW,CAACpB,aAAa,CAAE6mB,MAAM,CAACppC,GAAI,CAAC;YAE7C;UAED;QAED;MAED,CAAC,MAAM;QAEN,IAAI,CAAC2jB,WAAW,CAACrB,SAAS,CAAC,CAAC;MAE7B;MAEA,IAAKv0B,KAAK,CAAE,IAAI,CAAC41B,WAAW,CAAC5jB,GAAG,CAACM,CAAE,CAAC,IAAItS,KAAK,CAAE,IAAI,CAAC41B,WAAW,CAAC5jB,GAAG,CAACY,CAAE,CAAC,IAAI5S,KAAK,CAAE,IAAI,CAAC41B,WAAW,CAAC5jB,GAAG,CAACmV,CAAE,CAAC,EAAG;QAE5GtR,OAAO,CAAChY,KAAK,CAAE,qIAAqI,EAAE,IAAK,CAAC;MAE7J;IAED;EAAC;IAAAzD,GAAA;IAAAE,KAAA,EAED,SAAAwiD,sBAAA,EAAwB;MAEvB,IAAK,IAAI,CAACd,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACA,cAAc,GAAG,IAAIvjB,MAAM,CAAC,CAAC;MAEnC;MAEA,IAAMvC,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MACzC,IAAM6mB,uBAAuB,GAAG,IAAI,CAAClB,eAAe,CAAC3lB,QAAQ;MAE7D,IAAKA,QAAQ,IAAIA,QAAQ,CAAC8mB,mBAAmB,EAAG;QAE/CnnC,OAAO,CAAChY,KAAK,CAAE,uJAAuJ,EAAE,IAAK,CAAC;QAE9K,IAAI,CAACm+C,cAAc,CAACpmC,GAAG,CAAE,IAAIib,OAAO,CAAC,CAAC,EAAEuD,QAAS,CAAC;QAElD;MAED;MAEA,IAAK8B,QAAQ,EAAG;QAEf;;QAEA,IAAMxb,MAAM,GAAG,IAAI,CAACshC,cAAc,CAACthC,MAAM;QAEzC2gC,MAAM,CAAC3mB,sBAAsB,CAAEwB,QAAS,CAAC;;QAEzC;;QAEA,IAAK6mB,uBAAuB,EAAG;UAE9B,KAAM,IAAI78C,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG+wB,uBAAuB,CAAC98C,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;YAEpE,IAAM+8C,cAAc,GAAGF,uBAAuB,CAAE78C,CAAC,CAAE;YACnDo7C,gBAAgB,CAAC5mB,sBAAsB,CAAEuoB,cAAe,CAAC;YAEzD,IAAK,IAAI,CAACnB,oBAAoB,EAAG;cAEhCP,SAAS,CAAC9jC,UAAU,CAAE4jC,MAAM,CAACrpC,GAAG,EAAEspC,gBAAgB,CAACtpC,GAAI,CAAC;cACxDqpC,MAAM,CAAC7mB,aAAa,CAAE+mB,SAAU,CAAC;cAEjCA,SAAS,CAAC9jC,UAAU,CAAE4jC,MAAM,CAACppC,GAAG,EAAEqpC,gBAAgB,CAACrpC,GAAI,CAAC;cACxDopC,MAAM,CAAC7mB,aAAa,CAAE+mB,SAAU,CAAC;YAElC,CAAC,MAAM;cAENF,MAAM,CAAC7mB,aAAa,CAAE8mB,gBAAgB,CAACtpC,GAAI,CAAC;cAC5CqpC,MAAM,CAAC7mB,aAAa,CAAE8mB,gBAAgB,CAACrpC,GAAI,CAAC;YAE7C;UAED;QAED;QAEAopC,MAAM,CAAChmB,SAAS,CAAE3a,MAAO,CAAC;;QAE1B;QACA;;QAEA,IAAIie,WAAW,GAAG,CAAC;QAEnB,KAAM,IAAIz4B,IAAC,GAAG,CAAC,EAAE8rB,GAAE,GAAGkK,QAAQ,CAACrK,KAAK,EAAE3rB,IAAC,GAAG8rB,GAAE,EAAE9rB,IAAC,EAAG,EAAG;UAEpDq7C,SAAS,CAAClhC,mBAAmB,CAAE6b,QAAQ,EAAEh2B,IAAE,CAAC;UAE5Cy4B,WAAW,GAAGvnB,IAAI,CAACa,GAAG,CAAE0mB,WAAW,EAAEje,MAAM,CAAClB,iBAAiB,CAAE+hC,SAAU,CAAE,CAAC;QAE7E;;QAEA;;QAEA,IAAKwB,uBAAuB,EAAG;UAE9B,KAAM,IAAI78C,IAAC,GAAG,CAAC,EAAE8rB,IAAE,GAAG+wB,uBAAuB,CAAC98C,MAAM,EAAEC,IAAC,GAAG8rB,IAAE,EAAE9rB,IAAC,EAAG,EAAG;YAEpE,IAAM+8C,eAAc,GAAGF,uBAAuB,CAAE78C,IAAC,CAAE;YACnD,IAAM47C,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;YAEtD,KAAM,IAAI5jB,CAAC,GAAG,CAAC,EAAEglB,EAAE,GAAGD,eAAc,CAACpxB,KAAK,EAAEqM,CAAC,GAAGglB,EAAE,EAAEhlB,CAAC,EAAG,EAAG;cAE1DqjB,SAAS,CAAClhC,mBAAmB,CAAE4iC,eAAc,EAAE/kB,CAAE,CAAC;cAElD,IAAK4jB,oBAAoB,EAAG;gBAE3BV,OAAO,CAAC/gC,mBAAmB,CAAE6b,QAAQ,EAAEgC,CAAE,CAAC;gBAC1CqjB,SAAS,CAAChkC,GAAG,CAAE6jC,OAAQ,CAAC;cAEzB;cAEAziB,WAAW,GAAGvnB,IAAI,CAACa,GAAG,CAAE0mB,WAAW,EAAEje,MAAM,CAAClB,iBAAiB,CAAE+hC,SAAU,CAAE,CAAC;YAE7E;UAED;QAED;QAEA,IAAI,CAACS,cAAc,CAAC1oB,MAAM,GAAGliB,IAAI,CAAC2H,IAAI,CAAE4f,WAAY,CAAC;QAErD,IAAK34B,KAAK,CAAE,IAAI,CAACg8C,cAAc,CAAC1oB,MAAO,CAAC,EAAG;UAE1Czd,OAAO,CAAChY,KAAK,CAAE,8HAA8H,EAAE,IAAK,CAAC;QAEtJ;MAED;IAED;EAAC;IAAAzD,GAAA;IAAAE,KAAA,EAED,SAAA6iD,gBAAA,EAAkB;MAEjB,IAAMxsC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMslB,UAAU,GAAG,IAAI,CAACA,UAAU;;MAElC;MACA;;MAEA,IAAKtlB,KAAK,KAAK,IAAI,IACjBslB,UAAU,CAACC,QAAQ,KAAKv3B,SAAS,IACjCs3B,UAAU,CAAC/C,MAAM,KAAKv0B,SAAS,IAC/Bs3B,UAAU,CAAClP,EAAE,KAAKpoB,SAAS,EAAG;QAE/BkX,OAAO,CAAChY,KAAK,CAAE,8GAA+G,CAAC;QAC/H;MAED;MAEA,IAAMu/C,OAAO,GAAGzsC,KAAK,CAACI,KAAK;MAC3B,IAAMssC,SAAS,GAAGpnB,UAAU,CAACC,QAAQ,CAACnlB,KAAK;MAC3C,IAAMusC,OAAO,GAAGrnB,UAAU,CAAC/C,MAAM,CAACniB,KAAK;MACvC,IAAMwsC,GAAG,GAAGtnB,UAAU,CAAClP,EAAE,CAAChW,KAAK;MAE/B,IAAMysC,SAAS,GAAGH,SAAS,CAACp9C,MAAM,GAAG,CAAC;MAEtC,IAAK,IAAI,CAACu8C,YAAY,CAAE,SAAU,CAAC,KAAK,KAAK,EAAG;QAE/C,IAAI,CAACF,YAAY,CAAE,SAAS,EAAE,IAAIvE,eAAe,CAAE,IAAI/hC,YAAY,CAAE,CAAC,GAAGwnC,SAAU,CAAC,EAAE,CAAE,CAAE,CAAC;MAE5F;MAEA,IAAMC,QAAQ,GAAG,IAAI,CAACpB,YAAY,CAAE,SAAU,CAAC,CAACtrC,KAAK;MAErD,IAAM2sC,IAAI,GAAG,EAAE;QAAEC,IAAI,GAAG,EAAE;MAE1B,KAAM,IAAIz9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs9C,SAAS,EAAEt9C,CAAC,EAAG,EAAG;QAEtCw9C,IAAI,CAAEx9C,CAAC,CAAE,GAAG,IAAI2wB,OAAO,CAAC,CAAC;QACzB8sB,IAAI,CAAEz9C,CAAC,CAAE,GAAG,IAAI2wB,OAAO,CAAC,CAAC;MAE1B;MAEA,IAAM+sB,EAAE,GAAG,IAAI/sB,OAAO,CAAC,CAAC;QACvBgtB,EAAE,GAAG,IAAIhtB,OAAO,CAAC,CAAC;QAClBitB,EAAE,GAAG,IAAIjtB,OAAO,CAAC,CAAC;QAElBktB,GAAG,GAAG,IAAIrnC,OAAO,CAAC,CAAC;QACnBsnC,GAAG,GAAG,IAAItnC,OAAO,CAAC,CAAC;QACnBunC,GAAG,GAAG,IAAIvnC,OAAO,CAAC,CAAC;QAEnBwnC,IAAI,GAAG,IAAIrtB,OAAO,CAAC,CAAC;QACpBstB,IAAI,GAAG,IAAIttB,OAAO,CAAC,CAAC;MAErB,SAASutB,cAAcA,CAAEtpC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;QAElC4oC,EAAE,CAAC1jC,SAAS,CAAEmjC,SAAS,EAAEvoC,CAAC,GAAG,CAAE,CAAC;QAChC+oC,EAAE,CAAC3jC,SAAS,CAAEmjC,SAAS,EAAEtoC,CAAC,GAAG,CAAE,CAAC;QAChC+oC,EAAE,CAAC5jC,SAAS,CAAEmjC,SAAS,EAAEroC,CAAC,GAAG,CAAE,CAAC;QAEhC+oC,GAAG,CAAC7jC,SAAS,CAAEqjC,GAAG,EAAEzoC,CAAC,GAAG,CAAE,CAAC;QAC3BkpC,GAAG,CAAC9jC,SAAS,CAAEqjC,GAAG,EAAExoC,CAAC,GAAG,CAAE,CAAC;QAC3BkpC,GAAG,CAAC/jC,SAAS,CAAEqjC,GAAG,EAAEvoC,CAAC,GAAG,CAAE,CAAC;QAE3B6oC,EAAE,CAAClmC,GAAG,CAAEimC,EAAG,CAAC;QACZE,EAAE,CAACnmC,GAAG,CAAEimC,EAAG,CAAC;QAEZI,GAAG,CAACrmC,GAAG,CAAEomC,GAAI,CAAC;QACdE,GAAG,CAACtmC,GAAG,CAAEomC,GAAI,CAAC;QAEd,IAAMx/B,CAAC,GAAG,GAAG,IAAKy/B,GAAG,CAAC1rC,CAAC,GAAG2rC,GAAG,CAACrrC,CAAC,GAAGqrC,GAAG,CAAC3rC,CAAC,GAAG0rC,GAAG,CAACprC,CAAC,CAAE;;QAEjD;;QAEA,IAAK,CAAEyrC,QAAQ,CAAE9/B,CAAE,CAAC,EAAG;QAEvB2/B,IAAI,CAAC7mC,IAAI,CAAEwmC,EAAG,CAAC,CAAC9lC,cAAc,CAAEkmC,GAAG,CAACrrC,CAAE,CAAC,CAAC8E,eAAe,CAAEomC,EAAE,EAAE,CAAEE,GAAG,CAACprC,CAAE,CAAC,CAACmF,cAAc,CAAEwG,CAAE,CAAC;QAC1F4/B,IAAI,CAAC9mC,IAAI,CAAEymC,EAAG,CAAC,CAAC/lC,cAAc,CAAEimC,GAAG,CAAC1rC,CAAE,CAAC,CAACoF,eAAe,CAAEmmC,EAAE,EAAE,CAAEI,GAAG,CAAC3rC,CAAE,CAAC,CAACyF,cAAc,CAAEwG,CAAE,CAAC;QAE1Fm/B,IAAI,CAAE5oC,CAAC,CAAE,CAACyC,GAAG,CAAE2mC,IAAK,CAAC;QACrBR,IAAI,CAAE3oC,CAAC,CAAE,CAACwC,GAAG,CAAE2mC,IAAK,CAAC;QACrBR,IAAI,CAAE1oC,CAAC,CAAE,CAACuC,GAAG,CAAE2mC,IAAK,CAAC;QAErBP,IAAI,CAAE7oC,CAAC,CAAE,CAACyC,GAAG,CAAE4mC,IAAK,CAAC;QACrBR,IAAI,CAAE5oC,CAAC,CAAE,CAACwC,GAAG,CAAE4mC,IAAK,CAAC;QACrBR,IAAI,CAAE3oC,CAAC,CAAE,CAACuC,GAAG,CAAE4mC,IAAK,CAAC;MAEtB;MAEA,IAAIpC,MAAM,GAAG,IAAI,CAACA,MAAM;MAExB,IAAKA,MAAM,CAAC97C,MAAM,KAAK,CAAC,EAAG;QAE1B87C,MAAM,GAAG,CAAE;UACVG,KAAK,EAAE,CAAC;UACRrwB,KAAK,EAAEuxB,OAAO,CAACn9C;QAChB,CAAC,CAAE;MAEJ;MAEA,KAAM,IAAIC,IAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG+vB,MAAM,CAAC97C,MAAM,EAAEC,IAAC,GAAG8rB,EAAE,EAAE,EAAG9rB,IAAC,EAAG;QAEnD,IAAMo+C,KAAK,GAAGvC,MAAM,CAAE77C,IAAC,CAAE;QAEzB,IAAMg8C,KAAK,GAAGoC,KAAK,CAACpC,KAAK;QACzB,IAAMrwB,KAAK,GAAGyyB,KAAK,CAACzyB,KAAK;QAEzB,KAAM,IAAIqM,CAAC,GAAGgkB,KAAK,EAAEgB,EAAE,GAAGhB,KAAK,GAAGrwB,KAAK,EAAEqM,CAAC,GAAGglB,EAAE,EAAEhlB,CAAC,IAAI,CAAC,EAAG;UAEzDkmB,cAAc,CACbhB,OAAO,CAAEllB,CAAC,GAAG,CAAC,CAAE,EAChBklB,OAAO,CAAEllB,CAAC,GAAG,CAAC,CAAE,EAChBklB,OAAO,CAAEllB,CAAC,GAAG,CAAC,CACf,CAAC;QAEF;MAED;MAEA,IAAM/Z,GAAG,GAAG,IAAI0S,OAAO,CAAC,CAAC;QAAE0tB,IAAI,GAAG,IAAI1tB,OAAO,CAAC,CAAC;MAC/C,IAAM1e,CAAC,GAAG,IAAI0e,OAAO,CAAC,CAAC;QAAE2tB,EAAE,GAAG,IAAI3tB,OAAO,CAAC,CAAC;MAE3C,SAAS4tB,YAAYA,CAAEnnC,CAAC,EAAG;QAE1BnF,CAAC,CAAC+H,SAAS,CAAEojC,OAAO,EAAEhmC,CAAC,GAAG,CAAE,CAAC;QAC7BknC,EAAE,CAACnnC,IAAI,CAAElF,CAAE,CAAC;QAEZ,IAAMW,CAAC,GAAG4qC,IAAI,CAAEpmC,CAAC,CAAE;;QAEnB;;QAEA6G,GAAG,CAAC9G,IAAI,CAAEvE,CAAE,CAAC;QACbqL,GAAG,CAACxG,GAAG,CAAExF,CAAC,CAAC4F,cAAc,CAAE5F,CAAC,CAACyG,GAAG,CAAE9F,CAAE,CAAE,CAAE,CAAC,CAACyD,SAAS,CAAC,CAAC;;QAErD;;QAEAgoC,IAAI,CAACjsB,YAAY,CAAEksB,EAAE,EAAE1rC,CAAE,CAAC;QAC1B,IAAMwP,IAAI,GAAGi8B,IAAI,CAAC3lC,GAAG,CAAE+kC,IAAI,CAAErmC,CAAC,CAAG,CAAC;QAClC,IAAM8P,CAAC,GAAK9E,IAAI,GAAG,GAAG,GAAK,CAAE,GAAG,GAAG,GAAG;QAEtCm7B,QAAQ,CAAEnmC,CAAC,GAAG,CAAC,CAAE,GAAG6G,GAAG,CAAC7L,CAAC;QACzBmrC,QAAQ,CAAEnmC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG6G,GAAG,CAACvL,CAAC;QAC7B6qC,QAAQ,CAAEnmC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG6G,GAAG,CAACgJ,CAAC;QAC7Bs2B,QAAQ,CAAEnmC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG8P,CAAC;MAE1B;MAEA,KAAM,IAAIlnB,IAAC,GAAG,CAAC,EAAE8rB,IAAE,GAAG+vB,MAAM,CAAC97C,MAAM,EAAEC,IAAC,GAAG8rB,IAAE,EAAE,EAAG9rB,IAAC,EAAG;QAEnD,IAAMo+C,MAAK,GAAGvC,MAAM,CAAE77C,IAAC,CAAE;QAEzB,IAAMg8C,OAAK,GAAGoC,MAAK,CAACpC,KAAK;QACzB,IAAMrwB,MAAK,GAAGyyB,MAAK,CAACzyB,KAAK;QAEzB,KAAM,IAAIqM,EAAC,GAAGgkB,OAAK,EAAEgB,GAAE,GAAGhB,OAAK,GAAGrwB,MAAK,EAAEqM,EAAC,GAAGglB,GAAE,EAAEhlB,EAAC,IAAI,CAAC,EAAG;UAEzDumB,YAAY,CAAErB,OAAO,CAAEllB,EAAC,GAAG,CAAC,CAAG,CAAC;UAChCumB,YAAY,CAAErB,OAAO,CAAEllB,EAAC,GAAG,CAAC,CAAG,CAAC;UAChCumB,YAAY,CAAErB,OAAO,CAAEllB,EAAC,GAAG,CAAC,CAAG,CAAC;QAEjC;MAED;IAED;EAAC;IAAA99B,GAAA;IAAAE,KAAA,EAED,SAAAokD,qBAAA,EAAuB;MAEtB,IAAM/tC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMguC,iBAAiB,GAAG,IAAI,CAACtC,YAAY,CAAE,UAAW,CAAC;MAEzD,IAAKsC,iBAAiB,KAAKhgD,SAAS,EAAG;QAEtC,IAAIigD,eAAe,GAAG,IAAI,CAACvC,YAAY,CAAE,QAAS,CAAC;QAEnD,IAAKuC,eAAe,KAAKjgD,SAAS,EAAG;UAEpCigD,eAAe,GAAG,IAAI7G,eAAe,CAAE,IAAI/hC,YAAY,CAAE2oC,iBAAiB,CAAC9yB,KAAK,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;UAC3F,IAAI,CAACywB,YAAY,CAAE,QAAQ,EAAEsC,eAAgB,CAAC;QAE/C,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAI1+C,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG4yB,eAAe,CAAC/yB,KAAK,EAAE3rB,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;YAE3D0+C,eAAe,CAAC/F,MAAM,CAAE34C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;UAErC;QAED;QAEA,IAAM2+C,EAAE,GAAG,IAAIhuB,OAAO,CAAC,CAAC;UAAEiuB,EAAE,GAAG,IAAIjuB,OAAO,CAAC,CAAC;UAAEkuB,EAAE,GAAG,IAAIluB,OAAO,CAAC,CAAC;QAChE,IAAMmuB,EAAE,GAAG,IAAInuB,OAAO,CAAC,CAAC;UAAEouB,EAAE,GAAG,IAAIpuB,OAAO,CAAC,CAAC;UAAEquB,EAAE,GAAG,IAAIruB,OAAO,CAAC,CAAC;QAChE,IAAMsuB,EAAE,GAAG,IAAItuB,OAAO,CAAC,CAAC;UAAEuuB,EAAE,GAAG,IAAIvuB,OAAO,CAAC,CAAC;;QAE5C;;QAEA,IAAKlgB,KAAK,EAAG;UAEZ,KAAM,IAAIzQ,IAAC,GAAG,CAAC,EAAE8rB,IAAE,GAAGrb,KAAK,CAACkb,KAAK,EAAE3rB,IAAC,GAAG8rB,IAAE,EAAE9rB,IAAC,IAAI,CAAC,EAAG;YAEnD,IAAM09C,EAAE,GAAGjtC,KAAK,CAAC4J,IAAI,CAAEra,IAAC,GAAG,CAAE,CAAC;YAC9B,IAAM29C,EAAE,GAAGltC,KAAK,CAAC4J,IAAI,CAAEra,IAAC,GAAG,CAAE,CAAC;YAC9B,IAAM49C,EAAE,GAAGntC,KAAK,CAAC4J,IAAI,CAAEra,IAAC,GAAG,CAAE,CAAC;YAE9B2+C,EAAE,CAACxkC,mBAAmB,CAAEskC,iBAAiB,EAAEf,EAAG,CAAC;YAC/CkB,EAAE,CAACzkC,mBAAmB,CAAEskC,iBAAiB,EAAEd,EAAG,CAAC;YAC/CkB,EAAE,CAAC1kC,mBAAmB,CAAEskC,iBAAiB,EAAEb,EAAG,CAAC;YAE/CqB,EAAE,CAACtnC,UAAU,CAAEknC,EAAE,EAAED,EAAG,CAAC;YACvBM,EAAE,CAACvnC,UAAU,CAAEgnC,EAAE,EAAEC,EAAG,CAAC;YACvBK,EAAE,CAACtmC,KAAK,CAAEumC,EAAG,CAAC;YAEdJ,EAAE,CAAC3kC,mBAAmB,CAAEukC,eAAe,EAAEhB,EAAG,CAAC;YAC7CqB,EAAE,CAAC5kC,mBAAmB,CAAEukC,eAAe,EAAEf,EAAG,CAAC;YAC7CqB,EAAE,CAAC7kC,mBAAmB,CAAEukC,eAAe,EAAEd,EAAG,CAAC;YAE7CkB,EAAE,CAACznC,GAAG,CAAE4nC,EAAG,CAAC;YACZF,EAAE,CAAC1nC,GAAG,CAAE4nC,EAAG,CAAC;YACZD,EAAE,CAAC3nC,GAAG,CAAE4nC,EAAG,CAAC;YAEZP,eAAe,CAAC/F,MAAM,CAAE+E,EAAE,EAAEoB,EAAE,CAAC1sC,CAAC,EAAE0sC,EAAE,CAACpsC,CAAC,EAAEosC,EAAE,CAAC73B,CAAE,CAAC;YAC9Cy3B,eAAe,CAAC/F,MAAM,CAAEgF,EAAE,EAAEoB,EAAE,CAAC3sC,CAAC,EAAE2sC,EAAE,CAACrsC,CAAC,EAAEqsC,EAAE,CAAC93B,CAAE,CAAC;YAC9Cy3B,eAAe,CAAC/F,MAAM,CAAEiF,EAAE,EAAEoB,EAAE,CAAC5sC,CAAC,EAAE4sC,EAAE,CAACtsC,CAAC,EAAEssC,EAAE,CAAC/3B,CAAE,CAAC;UAE/C;QAED,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAIjnB,IAAC,GAAG,CAAC,EAAE8rB,IAAE,GAAG2yB,iBAAiB,CAAC9yB,KAAK,EAAE3rB,IAAC,GAAG8rB,IAAE,EAAE9rB,IAAC,IAAI,CAAC,EAAG;YAE/D2+C,EAAE,CAACxkC,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,IAAC,GAAG,CAAE,CAAC;YAClD4+C,EAAE,CAACzkC,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,IAAC,GAAG,CAAE,CAAC;YAClD6+C,EAAE,CAAC1kC,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,IAAC,GAAG,CAAE,CAAC;YAElDi/C,EAAE,CAACtnC,UAAU,CAAEknC,EAAE,EAAED,EAAG,CAAC;YACvBM,EAAE,CAACvnC,UAAU,CAAEgnC,EAAE,EAAEC,EAAG,CAAC;YACvBK,EAAE,CAACtmC,KAAK,CAAEumC,EAAG,CAAC;YAEdR,eAAe,CAAC/F,MAAM,CAAE34C,IAAC,GAAG,CAAC,EAAEi/C,EAAE,CAAC7sC,CAAC,EAAE6sC,EAAE,CAACvsC,CAAC,EAAEusC,EAAE,CAACh4B,CAAE,CAAC;YACjDy3B,eAAe,CAAC/F,MAAM,CAAE34C,IAAC,GAAG,CAAC,EAAEi/C,EAAE,CAAC7sC,CAAC,EAAE6sC,EAAE,CAACvsC,CAAC,EAAEusC,EAAE,CAACh4B,CAAE,CAAC;YACjDy3B,eAAe,CAAC/F,MAAM,CAAE34C,IAAC,GAAG,CAAC,EAAEi/C,EAAE,CAAC7sC,CAAC,EAAE6sC,EAAE,CAACvsC,CAAC,EAAEusC,EAAE,CAACh4B,CAAE,CAAC;UAElD;QAED;QAEA,IAAI,CAACk4B,gBAAgB,CAAC,CAAC;QAEvBT,eAAe,CAACl4B,WAAW,GAAG,IAAI;MAEnC;IAED;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAA+kD,iBAAA,EAAmB;MAElB,IAAM/B,OAAO,GAAG,IAAI,CAACrnB,UAAU,CAAC/C,MAAM;MAEtC,KAAM,IAAIhzB,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGsxB,OAAO,CAACzxB,KAAK,EAAE3rB,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAEnDq7C,SAAS,CAAClhC,mBAAmB,CAAEijC,OAAO,EAAEp9C,CAAE,CAAC;QAE3Cq7C,SAAS,CAAChlC,SAAS,CAAC,CAAC;QAErB+mC,OAAO,CAACzE,MAAM,CAAE34C,CAAC,EAAEq7C,SAAS,CAACjpC,CAAC,EAAEipC,SAAS,CAAC3oC,CAAC,EAAE2oC,SAAS,CAACp0B,CAAE,CAAC;MAE3D;IAED;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAglD,aAAA,EAAe;MAEd,SAASC,sBAAsBA,CAAEjlC,SAAS,EAAE8iC,OAAO,EAAG;QAErD,IAAMrsC,KAAK,GAAGuJ,SAAS,CAACvJ,KAAK;QAC7B,IAAMinC,QAAQ,GAAG19B,SAAS,CAAC09B,QAAQ;QACnC,IAAMC,UAAU,GAAG39B,SAAS,CAAC29B,UAAU;QAEvC,IAAMuH,MAAM,GAAG,IAAIzuC,KAAK,CAACxQ,WAAW,CAAE68C,OAAO,CAACn9C,MAAM,GAAG+3C,QAAS,CAAC;QAEjE,IAAIrnC,KAAK,GAAG,CAAC;UAAE+nC,MAAM,GAAG,CAAC;QAEzB,KAAM,IAAIx4C,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGosC,OAAO,CAACn9C,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAElD,IAAKoa,SAAS,CAACmlC,4BAA4B,EAAG;YAE7C9uC,KAAK,GAAGysC,OAAO,CAAEl9C,CAAC,CAAE,GAAGoa,SAAS,CAAC+I,IAAI,CAACq8B,MAAM,GAAGplC,SAAS,CAACH,MAAM;UAEhE,CAAC,MAAM;YAENxJ,KAAK,GAAGysC,OAAO,CAAEl9C,CAAC,CAAE,GAAG83C,QAAQ;UAEhC;UAEA,KAAM,IAAI9f,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8f,QAAQ,EAAE9f,CAAC,EAAG,EAAG;YAErCsnB,MAAM,CAAE9G,MAAM,EAAG,CAAE,GAAG3nC,KAAK,CAAEJ,KAAK,EAAG,CAAE;UAExC;QAED;QAEA,OAAO,IAAIonC,eAAe,CAAEyH,MAAM,EAAExH,QAAQ,EAAEC,UAAW,CAAC;MAE3D;;MAEA;;MAEA,IAAK,IAAI,CAACtnC,KAAK,KAAK,IAAI,EAAG;QAE1BkF,OAAO,CAACC,IAAI,CAAE,6EAA8E,CAAC;QAC7F,OAAO,IAAI;MAEZ;MAEA,IAAM6pC,SAAS,GAAG,IAAInE,cAAc,CAAC,CAAC;MAEtC,IAAM4B,OAAO,GAAG,IAAI,CAACzsC,KAAK,CAACI,KAAK;MAChC,IAAMklB,UAAU,GAAG,IAAI,CAACA,UAAU;;MAElC;;MAEA,KAAM,IAAMz1B,IAAI,IAAIy1B,UAAU,EAAG;QAEhC,IAAM3b,SAAS,GAAG2b,UAAU,CAAEz1B,IAAI,CAAE;QAEpC,IAAMo/C,YAAY,GAAGL,sBAAsB,CAAEjlC,SAAS,EAAE8iC,OAAQ,CAAC;QAEjEuC,SAAS,CAACrD,YAAY,CAAE97C,IAAI,EAAEo/C,YAAa,CAAC;MAE7C;;MAEA;;MAEA,IAAM/D,eAAe,GAAG,IAAI,CAACA,eAAe;MAE5C,KAAM,IAAMr7C,KAAI,IAAIq7C,eAAe,EAAG;QAErC,IAAMgE,UAAU,GAAG,EAAE;QACrB,IAAM5C,cAAc,GAAGpB,eAAe,CAAEr7C,KAAI,CAAE,CAAC,CAAC;;QAEhD,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGixB,cAAc,CAACh9C,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;UAE3D,IAAMoa,UAAS,GAAG2iC,cAAc,CAAE/8C,CAAC,CAAE;UAErC,IAAM0/C,aAAY,GAAGL,sBAAsB,CAAEjlC,UAAS,EAAE8iC,OAAQ,CAAC;UAEjEyC,UAAU,CAACngD,IAAI,CAAEkgD,aAAa,CAAC;QAEhC;QAEAD,SAAS,CAAC9D,eAAe,CAAEr7C,KAAI,CAAE,GAAGq/C,UAAU;MAE/C;MAEAF,SAAS,CAAC7D,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;;MAE1D;;MAEA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAI77C,IAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG+qC,MAAM,CAAC97C,MAAM,EAAEC,IAAC,GAAG8Q,CAAC,EAAE9Q,IAAC,EAAG,EAAG;QAEjD,IAAMo+C,KAAK,GAAGvC,MAAM,CAAE77C,IAAC,CAAE;QACzBy/C,SAAS,CAAClD,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACzyB,KAAK,EAAEyyB,KAAK,CAAC5B,aAAc,CAAC;MAEpE;MAEA,OAAOiD,SAAS;IAEjB;EAAC;IAAAvlD,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAG;QACZuD,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZtnB,IAAI,EAAE,gBAAgB;UACtBR,SAAS,EAAE;QACZ;MACD,CAAC;;MAED;;MAEA0nB,IAAI,CAACxR,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBwR,IAAI,CAAClnB,IAAI,GAAG,IAAI,CAACA,IAAI;MACrB,IAAK,IAAI,CAACqE,IAAI,KAAK,EAAE,EAAG6iB,IAAI,CAAC7iB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC7C,IAAK1G,MAAM,CAACkH,IAAI,CAAE,IAAI,CAACklB,QAAS,CAAC,CAACjmB,MAAM,GAAG,CAAC,EAAGojB,IAAI,CAAC6C,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE5E,IAAK,IAAI,CAAC+iB,UAAU,KAAKtqC,SAAS,EAAG;QAEpC,IAAMsqC,UAAU,GAAG,IAAI,CAACA,UAAU;QAElC,KAAM,IAAM7uC,GAAG,IAAI6uC,UAAU,EAAG;UAE/B,IAAKA,UAAU,CAAE7uC,GAAG,CAAE,KAAKuE,SAAS,EAAG0kB,IAAI,CAAEjpB,GAAG,CAAE,GAAG6uC,UAAU,CAAE7uC,GAAG,CAAE;QAEvE;QAEA,OAAOipB,IAAI;MAEZ;;MAEA;;MAEAA,IAAI,CAACA,IAAI,GAAG;QAAE4S,UAAU,EAAE,CAAC;MAAE,CAAC;MAE9B,IAAMtlB,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErB0S,IAAI,CAACA,IAAI,CAAC1S,KAAK,GAAG;UACjBxU,IAAI,EAAEwU,KAAK,CAACI,KAAK,CAACxQ,WAAW,CAACC,IAAI;UAClCuQ,KAAK,EAAEiT,KAAK,CAACjqB,SAAS,CAACyH,KAAK,CAACpF,IAAI,CAAEuU,KAAK,CAACI,KAAM;QAChD,CAAC;MAEF;MAEA,IAAMklB,UAAU,GAAG,IAAI,CAACA,UAAU;MAElC,KAAM,IAAM77B,IAAG,IAAI67B,UAAU,EAAG;QAE/B,IAAM3b,SAAS,GAAG2b,UAAU,CAAE77B,IAAG,CAAE;QAEnCipB,IAAI,CAACA,IAAI,CAAC4S,UAAU,CAAE77B,IAAG,CAAE,GAAGkgB,SAAS,CAACoJ,MAAM,CAAEL,IAAI,CAACA,IAAK,CAAC;MAE5D;MAEA,IAAMw4B,eAAe,GAAG,CAAC,CAAC;MAC1B,IAAIiE,kBAAkB,GAAG,KAAK;MAE9B,KAAM,IAAM1lD,KAAG,IAAI,IAAI,CAACyhD,eAAe,EAAG;QAEzC,IAAMkE,cAAc,GAAG,IAAI,CAAClE,eAAe,CAAEzhD,KAAG,CAAE;QAElD,IAAM2W,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI7Q,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG+zB,cAAc,CAAC9/C,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;UAE3D,IAAMoa,WAAS,GAAGylC,cAAc,CAAE7/C,CAAC,CAAE;UAErC6Q,KAAK,CAACrR,IAAI,CAAE4a,WAAS,CAACoJ,MAAM,CAAEL,IAAI,CAACA,IAAK,CAAE,CAAC;QAE5C;QAEA,IAAKtS,KAAK,CAAC9Q,MAAM,GAAG,CAAC,EAAG;UAEvB47C,eAAe,CAAEzhD,KAAG,CAAE,GAAG2W,KAAK;UAE9B+uC,kBAAkB,GAAG,IAAI;QAE1B;MAED;MAEA,IAAKA,kBAAkB,EAAG;QAEzBz8B,IAAI,CAACA,IAAI,CAACw4B,eAAe,GAAGA,eAAe;QAC3Cx4B,IAAI,CAACA,IAAI,CAACy4B,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;MAE3D;MAEA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC97C,MAAM,GAAG,CAAC,EAAG;QAExBojB,IAAI,CAACA,IAAI,CAAC04B,MAAM,GAAGx1B,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEs1B,MAAO,CAAE,CAAC;MAE1D;MAEA,IAAMC,cAAc,GAAG,IAAI,CAACA,cAAc;MAE1C,IAAKA,cAAc,KAAK,IAAI,EAAG;QAE9B34B,IAAI,CAACA,IAAI,CAAC24B,cAAc,GAAG;UAC1BthC,MAAM,EAAEshC,cAAc,CAACthC,MAAM,CAACN,OAAO,CAAC,CAAC;UACvCkZ,MAAM,EAAE0oB,cAAc,CAAC1oB;QACxB,CAAC;MAEF;MAEA,OAAOjQ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd;;MAEA,IAAI,CAAC7U,KAAK,GAAG,IAAI;MACjB,IAAI,CAACslB,UAAU,GAAG,CAAC,CAAC;MACpB,IAAI,CAAC4lB,eAAe,GAAG,CAAC,CAAC;MACzB,IAAI,CAACE,MAAM,GAAG,EAAE;MAChB,IAAI,CAACnmB,WAAW,GAAG,IAAI;MACvB,IAAI,CAAComB,cAAc,GAAG,IAAI;;MAE1B;;MAEA,IAAM34B,IAAI,GAAG,CAAC,CAAC;;MAEf;;MAEA,IAAI,CAAC7iB,IAAI,GAAGglB,MAAM,CAAChlB,IAAI;;MAEvB;;MAEA,IAAMmQ,KAAK,GAAG6U,MAAM,CAAC7U,KAAK;MAE1B,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErB,IAAI,CAACyrC,QAAQ,CAAEzrC,KAAK,CAACyG,KAAK,CAAEiM,IAAK,CAAE,CAAC;MAErC;;MAEA;;MAEA,IAAM4S,UAAU,GAAGzQ,MAAM,CAACyQ,UAAU;MAEpC,KAAM,IAAMz1B,IAAI,IAAIy1B,UAAU,EAAG;QAEhC,IAAM3b,SAAS,GAAG2b,UAAU,CAAEz1B,IAAI,CAAE;QACpC,IAAI,CAAC87C,YAAY,CAAE97C,IAAI,EAAE8Z,SAAS,CAAClD,KAAK,CAAEiM,IAAK,CAAE,CAAC;MAEnD;;MAEA;;MAEA,IAAMw4B,eAAe,GAAGr2B,MAAM,CAACq2B,eAAe;MAE9C,KAAM,IAAMr7C,MAAI,IAAIq7C,eAAe,EAAG;QAErC,IAAM9qC,KAAK,GAAG,EAAE;QAChB,IAAMksC,cAAc,GAAGpB,eAAe,CAAEr7C,MAAI,CAAE,CAAC,CAAC;;QAEhD,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGisC,cAAc,CAACh9C,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAEzD6Q,KAAK,CAACrR,IAAI,CAAEu9C,cAAc,CAAE/8C,CAAC,CAAE,CAACkX,KAAK,CAAEiM,IAAK,CAAE,CAAC;QAEhD;QAEA,IAAI,CAACw4B,eAAe,CAAEr7C,MAAI,CAAE,GAAGuQ,KAAK;MAErC;MAEA,IAAI,CAAC+qC,oBAAoB,GAAGt2B,MAAM,CAACs2B,oBAAoB;;MAEvD;;MAEA,IAAMC,MAAM,GAAGv2B,MAAM,CAACu2B,MAAM;MAE5B,KAAM,IAAI77C,IAAC,GAAG,CAAC,EAAE8Q,GAAC,GAAG+qC,MAAM,CAAC97C,MAAM,EAAEC,IAAC,GAAG8Q,GAAC,EAAE9Q,IAAC,EAAG,EAAG;QAEjD,IAAMo+C,KAAK,GAAGvC,MAAM,CAAE77C,IAAC,CAAE;QACzB,IAAI,CAACu8C,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACzyB,KAAK,EAAEyyB,KAAK,CAAC5B,aAAc,CAAC;MAE/D;;MAEA;;MAEA,IAAM9mB,WAAW,GAAGpQ,MAAM,CAACoQ,WAAW;MAEtC,IAAKA,WAAW,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACA,WAAW,GAAGA,WAAW,CAACxe,KAAK,CAAC,CAAC;MAEvC;;MAEA;;MAEA,IAAM4kC,cAAc,GAAGx2B,MAAM,CAACw2B,cAAc;MAE5C,IAAKA,cAAc,KAAK,IAAI,EAAG;QAE9B,IAAI,CAACA,cAAc,GAAGA,cAAc,CAAC5kC,KAAK,CAAC,CAAC;MAE7C;;MAEA;;MAEA,IAAI,CAAC6kC,SAAS,CAACC,KAAK,GAAG12B,MAAM,CAACy2B,SAAS,CAACC,KAAK;MAC7C,IAAI,CAACD,SAAS,CAACpwB,KAAK,GAAGrG,MAAM,CAACy2B,SAAS,CAACpwB,KAAK;;MAE7C;;MAEA,IAAI,CAAC3F,QAAQ,GAAGV,MAAM,CAACU,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA9rB,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAAChW,aAAa,CAAE;QAAE1U,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;EAAA,OAAAq/C,cAAA;AAAA,EA7hC2BtrC,eAAe;AAAAtW,OAAA,CAAA4hD,cAAA,GAAAA,cAAA;AAiiC5C,IAAMwE,gBAAgB,GAAG,aAAc,IAAI1jB,OAAO,CAAC,CAAC;AACpD,IAAM2jB,MAAM,GAAG,aAAc,IAAIzmB,GAAG,CAAC,CAAC;AACtC,IAAM0mB,SAAS,GAAG,aAAc,IAAIznB,MAAM,CAAC,CAAC;AAC5C,IAAM0nB,YAAY,GAAG,aAAc,IAAItvB,OAAO,CAAC,CAAC;AAEhD,IAAMuvB,KAAK,GAAG,aAAc,IAAIvvB,OAAO,CAAC,CAAC;AACzC,IAAMwvB,KAAK,GAAG,aAAc,IAAIxvB,OAAO,CAAC,CAAC;AACzC,IAAMyvB,KAAK,GAAG,aAAc,IAAIzvB,OAAO,CAAC,CAAC;AAEzC,IAAM0vB,MAAM,GAAG,aAAc,IAAI1vB,OAAO,CAAC,CAAC;AAC1C,IAAM2vB,OAAO,GAAG,aAAc,IAAI3vB,OAAO,CAAC,CAAC;AAE3C,IAAM4vB,MAAM,GAAG,aAAc,IAAI/pC,OAAO,CAAC,CAAC;AAC1C,IAAMgqC,MAAM,GAAG,aAAc,IAAIhqC,OAAO,CAAC,CAAC;AAC1C,IAAMiqC,MAAM,GAAG,aAAc,IAAIjqC,OAAO,CAAC,CAAC;AAE1C,IAAMkqC,QAAQ,GAAG,aAAc,IAAI/vB,OAAO,CAAC,CAAC;AAC5C,IAAMgwB,QAAQ,GAAG,aAAc,IAAIhwB,OAAO,CAAC,CAAC;AAC5C,IAAMiwB,QAAQ,GAAG,aAAc,IAAIjwB,OAAO,CAAC,CAAC;AAE5C,IAAMkwB,kBAAkB,GAAG,aAAc,IAAIlwB,OAAO,CAAC,CAAC;AACtD,IAAMmwB,uBAAuB,GAAG,aAAc,IAAInwB,OAAO,CAAC,CAAC;AAAC,IAEtDowB,IAAI,0BAAAC,SAAA;EAAA18B,SAAA,CAAAy8B,IAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAz8B,YAAA,CAAAu8B,IAAA;EAET,SAAAA,KAAajrB,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC,EAAEjS,QAAQ,GAAG,IAAIkN,iBAAiB,CAAC,CAAC,EAAG;IAAA,IAAA2K,OAAA;IAAA3+C,eAAA,OAAAw+C,IAAA;IAElFG,OAAA,GAAAD,QAAA,CAAA/kD,IAAA;IAEAglD,OAAA,CAAKtY,MAAM,GAAG,IAAI;IAElBsY,OAAA,CAAKjlD,IAAI,GAAG,MAAM;IAElBilD,OAAA,CAAKprB,QAAQ,GAAGA,QAAQ;IACxBorB,OAAA,CAAK7X,QAAQ,GAAGA,QAAQ;IAExB6X,OAAA,CAAKC,kBAAkB,CAAC,CAAC;IAAC,OAAAD,OAAA;EAE3B;EAACn+C,YAAA,CAAAg+C,IAAA;IAAA7mD,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAkK,IAAA,CAAAlnD,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAKpkB,MAAM,CAAC87B,qBAAqB,KAAK3iD,SAAS,EAAG;QAEjD,IAAI,CAAC2iD,qBAAqB,GAAG97B,MAAM,CAAC87B,qBAAqB,CAAC9/C,KAAK,CAAC,CAAC;MAElE;MAEA,IAAKgkB,MAAM,CAAC+7B,qBAAqB,KAAK5iD,SAAS,EAAG;QAEjD,IAAI,CAAC4iD,qBAAqB,GAAGznD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAAC+7B,qBAAsB,CAAC;MAE/E;MAEA,IAAI,CAAChY,QAAQ,GAAGvlB,KAAK,CAACC,OAAO,CAAEuB,MAAM,CAAC+jB,QAAS,CAAC,GAAG/jB,MAAM,CAAC+jB,QAAQ,CAAC/nC,KAAK,CAAC,CAAC,GAAGgkB,MAAM,CAAC+jB,QAAQ;MAC5F,IAAI,CAACvT,QAAQ,GAAGxQ,MAAM,CAACwQ,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAA+mD,mBAAA,EAAqB;MAEpB,IAAMrrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM6lB,eAAe,GAAG7lB,QAAQ,CAAC6lB,eAAe;MAChD,IAAM76C,IAAI,GAAGlH,MAAM,CAACkH,IAAI,CAAE66C,eAAgB,CAAC;MAE3C,IAAK76C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAMg9C,cAAc,GAAGpB,eAAe,CAAE76C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAKi8C,cAAc,KAAKt+C,SAAS,EAAG;UAEnC,IAAI,CAAC2iD,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAInvC,CAAC,GAAG,CAAC,EAAEovC,EAAE,GAAGvE,cAAc,CAACh9C,MAAM,EAAEmS,CAAC,GAAGovC,EAAE,EAAEpvC,CAAC,EAAG,EAAG;YAE3D,IAAM5R,IAAI,GAAGy8C,cAAc,CAAE7qC,CAAC,CAAE,CAAC5R,IAAI,IAAI6C,MAAM,CAAE+O,CAAE,CAAC;YAEpD,IAAI,CAACkvC,qBAAqB,CAAC5hD,IAAI,CAAE,CAAE,CAAC;YACpC,IAAI,CAAC6hD,qBAAqB,CAAE/gD,IAAI,CAAE,GAAG4R,CAAC;UAEvC;QAED;MAED;IAED;EAAC;IAAAhY,GAAA;IAAAE,KAAA,EAED,SAAAmnD,kBAAmB9wC,KAAK,EAAE9N,MAAM,EAAG;MAElC,IAAMmzB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAME,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAC7C,IAAMwrB,aAAa,GAAG1rB,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ;MACvD,IAAM4lB,oBAAoB,GAAG9lB,QAAQ,CAAC8lB,oBAAoB;MAE1Dj5C,MAAM,CAACwX,mBAAmB,CAAE6b,QAAQ,EAAEvlB,KAAM,CAAC;MAE7C,IAAMgxC,eAAe,GAAG,IAAI,CAACL,qBAAqB;MAElD,IAAKI,aAAa,IAAIC,eAAe,EAAG;QAEvCnB,OAAO,CAAC5qC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAEtB,KAAM,IAAI1V,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG01B,aAAa,CAACzhD,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;UAE1D,IAAM0hD,SAAS,GAAGD,eAAe,CAAEzhD,CAAC,CAAE;UACtC,IAAM+8C,cAAc,GAAGyE,aAAa,CAAExhD,CAAC,CAAE;UAEzC,IAAK0hD,SAAS,KAAK,CAAC,EAAG;UAEvBrB,MAAM,CAAClmC,mBAAmB,CAAE4iC,cAAc,EAAEtsC,KAAM,CAAC;UAEnD,IAAKmrC,oBAAoB,EAAG;YAE3B0E,OAAO,CAAC9oC,eAAe,CAAE6oC,MAAM,EAAEqB,SAAU,CAAC;UAE7C,CAAC,MAAM;YAENpB,OAAO,CAAC9oC,eAAe,CAAE6oC,MAAM,CAAC5oC,GAAG,CAAE9U,MAAO,CAAC,EAAE++C,SAAU,CAAC;UAE3D;QAED;QAEA/+C,MAAM,CAAC0U,GAAG,CAAEipC,OAAQ,CAAC;MAEtB;MAEA,OAAO39C,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAitC,QAASsa,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAM9rB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMuT,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMnX,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpC,IAAKmX,QAAQ,KAAK5qC,SAAS,EAAG;;MAE9B;;MAEA,IAAKq3B,QAAQ,CAACgmB,cAAc,KAAK,IAAI,EAAGhmB,QAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;MAExEoD,SAAS,CAAC7oC,IAAI,CAAE2e,QAAQ,CAACgmB,cAAe,CAAC;MACzCkE,SAAS,CAAC14B,YAAY,CAAE4K,WAAY,CAAC;;MAErC;;MAEA6tB,MAAM,CAAC5oC,IAAI,CAAEwqC,SAAS,CAACloB,GAAI,CAAC,CAACG,MAAM,CAAE+nB,SAAS,CAAC1gB,IAAK,CAAC;MAErD,IAAK+e,SAAS,CAAC9pB,aAAa,CAAE6pB,MAAM,CAACxmB,MAAO,CAAC,KAAK,KAAK,EAAG;QAEzD,IAAKwmB,MAAM,CAACrlB,eAAe,CAAEslB,SAAS,EAAEC,YAAa,CAAC,KAAK,IAAI,EAAG;QAElE,IAAKF,MAAM,CAACxmB,MAAM,CAACjgB,iBAAiB,CAAE2mC,YAAa,CAAC,GAAA/uC,IAAA,CAAAmD,GAAA,CAAKstC,SAAS,CAACzgB,GAAG,GAAGygB,SAAS,CAAC1gB,IAAI,EAAM,CAAC,GAAG;MAElG;;MAEA;;MAEA6e,gBAAgB,CAAC3oC,IAAI,CAAE+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;MAC7CqiC,MAAM,CAAC5oC,IAAI,CAAEwqC,SAAS,CAACloB,GAAI,CAAC,CAACnS,YAAY,CAAEw4B,gBAAiB,CAAC;;MAE7D;;MAEA,IAAKhqB,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;QAEpC,IAAKqqB,MAAM,CAAC1pB,aAAa,CAAEP,QAAQ,CAACJ,WAAY,CAAC,KAAK,KAAK,EAAG;MAE/D;;MAEA;;MAEA,IAAI,CAACmsB,qBAAqB,CAAEF,SAAS,EAAEC,UAAU,EAAE7B,MAAO,CAAC;IAE5D;EAAC;IAAA7lD,GAAA;IAAAE,KAAA,EAED,SAAAynD,sBAAuBF,SAAS,EAAEC,UAAU,EAAEE,aAAa,EAAG;MAE7D,IAAIC,YAAY;MAEhB,IAAMjsB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMuT,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM54B,KAAK,GAAGqlB,QAAQ,CAACrlB,KAAK;MAC5B,IAAMulB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAC7C,IAAMnP,EAAE,GAAGiP,QAAQ,CAACC,UAAU,CAAClP,EAAE;MACjC,IAAMskB,GAAG,GAAGrV,QAAQ,CAACC,UAAU,CAACoV,GAAG;MACnC,IAAMnY,MAAM,GAAG8C,QAAQ,CAACC,UAAU,CAAC/C,MAAM;MACzC,IAAM6oB,MAAM,GAAG/lB,QAAQ,CAAC+lB,MAAM;MAC9B,IAAME,SAAS,GAAGjmB,QAAQ,CAACimB,SAAS;MAEpC,IAAKtrC,KAAK,KAAK,IAAI,EAAG;QAErB;;QAEA,IAAKqT,KAAK,CAACC,OAAO,CAAEslB,QAAS,CAAC,EAAG;UAEhC,KAAM,IAAIrpC,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG+vB,MAAM,CAAC97C,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;YAEnD,IAAMo+C,KAAK,GAAGvC,MAAM,CAAE77C,CAAC,CAAE;YACzB,IAAMgiD,aAAa,GAAG3Y,QAAQ,CAAE+U,KAAK,CAAC5B,aAAa,CAAE;YAErD,IAAMR,KAAK,GAAG9qC,IAAI,CAACa,GAAG,CAAEqsC,KAAK,CAACpC,KAAK,EAAED,SAAS,CAACC,KAAM,CAAC;YACtD,IAAMiG,GAAG,GAAG/wC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACkb,KAAK,EAAEza,IAAI,CAACY,GAAG,CAAIssC,KAAK,CAACpC,KAAK,GAAGoC,KAAK,CAACzyB,KAAK,EAAMowB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAQ,CAAE,CAAC;YAErH,KAAM,IAAIqM,CAAC,GAAGgkB,KAAK,EAAEgB,EAAE,GAAGiF,GAAG,EAAEjqB,CAAC,GAAGglB,EAAE,EAAEhlB,CAAC,IAAI,CAAC,EAAG;cAE/C,IAAMpjB,CAAC,GAAGnE,KAAK,CAAC4J,IAAI,CAAE2d,CAAE,CAAC;cACzB,IAAMnjB,CAAC,GAAGpE,KAAK,CAAC4J,IAAI,CAAE2d,CAAC,GAAG,CAAE,CAAC;cAC7B,IAAMljB,CAAC,GAAGrE,KAAK,CAAC4J,IAAI,CAAE2d,CAAC,GAAG,CAAE,CAAC;cAE7B+pB,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAEF,aAAa,EAAEL,SAAS,EAAEG,aAAa,EAAEj7B,EAAE,EAAEskB,GAAG,EAAEnY,MAAM,EAAEpe,CAAC,EAAEC,CAAC,EAAEC,CAAE,CAAC;cAEnH,IAAKitC,YAAY,EAAG;gBAEnBA,YAAY,CAACI,SAAS,GAAGjxC,IAAI,CAACsC,KAAK,CAAEwkB,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC;gBAC9C+pB,YAAY,CAACK,IAAI,CAAC5F,aAAa,GAAG4B,KAAK,CAAC5B,aAAa;gBACrDoF,UAAU,CAACpiD,IAAI,CAAEuiD,YAAa,CAAC;cAEhC;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAM/F,OAAK,GAAG9qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEgqC,SAAS,CAACC,KAAM,CAAC;UAC5C,IAAMiG,KAAG,GAAG/wC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACkb,KAAK,EAAIowB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAQ,CAAC;UAE1E,KAAM,IAAI3rB,IAAC,GAAGg8C,OAAK,EAAElwB,IAAE,GAAGm2B,KAAG,EAAEjiD,IAAC,GAAG8rB,IAAE,EAAE9rB,IAAC,IAAI,CAAC,EAAG;YAE/C,IAAM4U,EAAC,GAAGnE,KAAK,CAAC4J,IAAI,CAAEra,IAAE,CAAC;YACzB,IAAM6U,EAAC,GAAGpE,KAAK,CAAC4J,IAAI,CAAEra,IAAC,GAAG,CAAE,CAAC;YAC7B,IAAM8U,EAAC,GAAGrE,KAAK,CAAC4J,IAAI,CAAEra,IAAC,GAAG,CAAE,CAAC;YAE7B+hD,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAE7Y,QAAQ,EAAEsY,SAAS,EAAEG,aAAa,EAAEj7B,EAAE,EAAEskB,GAAG,EAAEnY,MAAM,EAAEpe,EAAC,EAAEC,EAAC,EAAEC,EAAE,CAAC;YAE9G,IAAKitC,YAAY,EAAG;cAEnBA,YAAY,CAACI,SAAS,GAAGjxC,IAAI,CAACsC,KAAK,CAAExT,IAAC,GAAG,CAAE,CAAC,CAAC,CAAC;cAC9C4hD,UAAU,CAACpiD,IAAI,CAAEuiD,YAAa,CAAC;YAEhC;UAED;QAED;MAED,CAAC,MAAM,IAAK/rB,QAAQ,KAAKv3B,SAAS,EAAG;QAEpC;;QAEA,IAAKqlB,KAAK,CAACC,OAAO,CAAEslB,QAAS,CAAC,EAAG;UAEhC,KAAM,IAAIrpC,IAAC,GAAG,CAAC,EAAE8rB,IAAE,GAAG+vB,MAAM,CAAC97C,MAAM,EAAEC,IAAC,GAAG8rB,IAAE,EAAE9rB,IAAC,EAAG,EAAG;YAEnD,IAAMo+C,OAAK,GAAGvC,MAAM,CAAE77C,IAAC,CAAE;YACzB,IAAMgiD,cAAa,GAAG3Y,QAAQ,CAAE+U,OAAK,CAAC5B,aAAa,CAAE;YAErD,IAAMR,OAAK,GAAG9qC,IAAI,CAACa,GAAG,CAAEqsC,OAAK,CAACpC,KAAK,EAAED,SAAS,CAACC,KAAM,CAAC;YACtD,IAAMiG,KAAG,GAAG/wC,IAAI,CAACY,GAAG,CAAEkkB,QAAQ,CAACrK,KAAK,EAAEza,IAAI,CAACY,GAAG,CAAIssC,OAAK,CAACpC,KAAK,GAAGoC,OAAK,CAACzyB,KAAK,EAAMowB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAQ,CAAE,CAAC;YAExH,KAAM,IAAIqM,GAAC,GAAGgkB,OAAK,EAAEgB,IAAE,GAAGiF,KAAG,EAAEjqB,GAAC,GAAGglB,IAAE,EAAEhlB,GAAC,IAAI,CAAC,EAAG;cAE/C,IAAMpjB,GAAC,GAAGojB,GAAC;cACX,IAAMnjB,GAAC,GAAGmjB,GAAC,GAAG,CAAC;cACf,IAAMljB,GAAC,GAAGkjB,GAAC,GAAG,CAAC;cAEf+pB,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAEF,cAAa,EAAEL,SAAS,EAAEG,aAAa,EAAEj7B,EAAE,EAAEskB,GAAG,EAAEnY,MAAM,EAAEpe,GAAC,EAAEC,GAAC,EAAEC,GAAE,CAAC;cAEnH,IAAKitC,YAAY,EAAG;gBAEnBA,YAAY,CAACI,SAAS,GAAGjxC,IAAI,CAACsC,KAAK,CAAEwkB,GAAC,GAAG,CAAE,CAAC,CAAC,CAAC;gBAC9C+pB,YAAY,CAACK,IAAI,CAAC5F,aAAa,GAAG4B,OAAK,CAAC5B,aAAa;gBACrDoF,UAAU,CAACpiD,IAAI,CAAEuiD,YAAa,CAAC;cAEhC;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAM/F,OAAK,GAAG9qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEgqC,SAAS,CAACC,KAAM,CAAC;UAC5C,IAAMiG,KAAG,GAAG/wC,IAAI,CAACY,GAAG,CAAEkkB,QAAQ,CAACrK,KAAK,EAAIowB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAQ,CAAC;UAE7E,KAAM,IAAI3rB,IAAC,GAAGg8C,OAAK,EAAElwB,IAAE,GAAGm2B,KAAG,EAAEjiD,IAAC,GAAG8rB,IAAE,EAAE9rB,IAAC,IAAI,CAAC,EAAG;YAE/C,IAAM4U,GAAC,GAAG5U,IAAC;YACX,IAAM6U,GAAC,GAAG7U,IAAC,GAAG,CAAC;YACf,IAAM8U,GAAC,GAAG9U,IAAC,GAAG,CAAC;YAEf+hD,YAAY,GAAGG,yBAAyB,CAAE,IAAI,EAAE7Y,QAAQ,EAAEsY,SAAS,EAAEG,aAAa,EAAEj7B,EAAE,EAAEskB,GAAG,EAAEnY,MAAM,EAAEpe,GAAC,EAAEC,GAAC,EAAEC,GAAE,CAAC;YAE9G,IAAKitC,YAAY,EAAG;cAEnBA,YAAY,CAACI,SAAS,GAAGjxC,IAAI,CAACsC,KAAK,CAAExT,IAAC,GAAG,CAAE,CAAC,CAAC,CAAC;cAC9C4hD,UAAU,CAACpiD,IAAI,CAAEuiD,YAAa,CAAC;YAEhC;UAED;QAED;MAED;IAED;EAAC;EAAA,OAAAhB,IAAA;AAAA,EAtSiBtd,QAAQ;AAAA/pC,OAAA,CAAAqnD,IAAA,GAAAA,IAAA;AA0S3B,SAASsB,iBAAiBA,CAAErhD,MAAM,EAAEqoC,QAAQ,EAAEsY,SAAS,EAAEloB,GAAG,EAAEklB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAExpB,KAAK,EAAG;EAEjF,IAAIsC,SAAS;EAEb,IAAK0R,QAAQ,CAAC0D,IAAI,KAAKjoC,QAAQ,EAAG;IAEjC6yB,SAAS,GAAG8B,GAAG,CAACoC,iBAAiB,CAAEgjB,EAAE,EAAED,EAAE,EAAED,EAAE,EAAE,IAAI,EAAEtpB,KAAM,CAAC;EAE7D,CAAC,MAAM;IAENsC,SAAS,GAAG8B,GAAG,CAACoC,iBAAiB,CAAE8iB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAIxV,QAAQ,CAAC0D,IAAI,KAAKloC,SAAS,EAAIwwB,KAAM,CAAC;EAExF;EAEA,IAAKsC,SAAS,KAAK,IAAI,EAAG,OAAO,IAAI;EAErCmpB,uBAAuB,CAAC3pC,IAAI,CAAEke,KAAM,CAAC;EACrCyrB,uBAAuB,CAACx5B,YAAY,CAAEtmB,MAAM,CAACkxB,WAAY,CAAC;EAE1D,IAAMyT,QAAQ,GAAGgc,SAAS,CAACloB,GAAG,CAACF,MAAM,CAAClgB,UAAU,CAAEynC,uBAAwB,CAAC;EAE3E,IAAKnb,QAAQ,GAAGgc,SAAS,CAAC1gB,IAAI,IAAI0E,QAAQ,GAAGgc,SAAS,CAACzgB,GAAG,EAAG,OAAO,IAAI;EAExE,OAAO;IACNyE,QAAQ,EAAEA,QAAQ;IAClBtQ,KAAK,EAAEyrB,uBAAuB,CAAC5pC,KAAK,CAAC,CAAC;IACtClW,MAAM,EAAEA;EACT,CAAC;AAEF;AAEA,SAASkhD,yBAAyBA,CAAElhD,MAAM,EAAEqoC,QAAQ,EAAEsY,SAAS,EAAEloB,GAAG,EAAE5S,EAAE,EAAEskB,GAAG,EAAEnY,MAAM,EAAEpe,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;EAEhG9T,MAAM,CAACugD,iBAAiB,CAAE3sC,CAAC,EAAEsrC,KAAM,CAAC;EACpCl/C,MAAM,CAACugD,iBAAiB,CAAE1sC,CAAC,EAAEsrC,KAAM,CAAC;EACpCn/C,MAAM,CAACugD,iBAAiB,CAAEzsC,CAAC,EAAEsrC,KAAM,CAAC;EAEpC,IAAM2B,YAAY,GAAGM,iBAAiB,CAAErhD,MAAM,EAAEqoC,QAAQ,EAAEsY,SAAS,EAAEloB,GAAG,EAAEymB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAES,kBAAmB,CAAC;EAEnH,IAAKkB,YAAY,EAAG;IAEnB,IAAKl7B,EAAE,EAAG;MAET05B,MAAM,CAACpmC,mBAAmB,CAAE0M,EAAE,EAAEjS,CAAE,CAAC;MACnC4rC,MAAM,CAACrmC,mBAAmB,CAAE0M,EAAE,EAAEhS,CAAE,CAAC;MACnC4rC,MAAM,CAACtmC,mBAAmB,CAAE0M,EAAE,EAAE/R,CAAE,CAAC;MAEnCitC,YAAY,CAACl7B,EAAE,GAAGyjB,QAAQ,CAACgB,gBAAgB,CAAEuV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEG,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,IAAIjqC,OAAO,CAAC,CAAE,CAAC;IAE9H;IAEA,IAAK20B,GAAG,EAAG;MAEVoV,MAAM,CAACpmC,mBAAmB,CAAEgxB,GAAG,EAAEv2B,CAAE,CAAC;MACpC4rC,MAAM,CAACrmC,mBAAmB,CAAEgxB,GAAG,EAAEt2B,CAAE,CAAC;MACpC4rC,MAAM,CAACtmC,mBAAmB,CAAEgxB,GAAG,EAAEr2B,CAAE,CAAC;MAEpCitC,YAAY,CAAC5W,GAAG,GAAGb,QAAQ,CAACgB,gBAAgB,CAAEuV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEG,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,IAAIjqC,OAAO,CAAC,CAAE,CAAC;MAC9HurC,YAAY,CAAC3W,GAAG,GAAG2W,YAAY,CAAC5W,GAAG,CAAC,CAAC;IAEtC;;IAEA,IAAKnY,MAAM,EAAG;MAEb0tB,QAAQ,CAACvmC,mBAAmB,CAAE6Y,MAAM,EAAEpe,CAAE,CAAC;MACzC+rC,QAAQ,CAACxmC,mBAAmB,CAAE6Y,MAAM,EAAEne,CAAE,CAAC;MACzC+rC,QAAQ,CAACzmC,mBAAmB,CAAE6Y,MAAM,EAAEle,CAAE,CAAC;MAEzCitC,YAAY,CAAC/uB,MAAM,GAAGsX,QAAQ,CAACgB,gBAAgB,CAAEuV,kBAAkB,EAAEX,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEM,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE,IAAIjwB,OAAO,CAAC,CAAE,CAAC;MAEvI,IAAKoxB,YAAY,CAAC/uB,MAAM,CAACta,GAAG,CAAE+gB,GAAG,CAACD,SAAU,CAAC,GAAG,CAAC,EAAG;QAEnDuoB,YAAY,CAAC/uB,MAAM,CAACnb,cAAc,CAAE,CAAE,CAAE,CAAC;MAE1C;IAED;IAEA,IAAMuqC,IAAI,GAAG;MACZxtC,CAAC,EAAEA,CAAC;MACJC,CAAC,EAAEA,CAAC;MACJC,CAAC,EAAEA,CAAC;MACJke,MAAM,EAAE,IAAIrC,OAAO,CAAC,CAAC;MACrB6rB,aAAa,EAAE;IAChB,CAAC;IAEDlS,QAAQ,CAACQ,SAAS,CAAEoV,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEgC,IAAI,CAACpvB,MAAO,CAAC;IAEtD+uB,YAAY,CAACK,IAAI,GAAGA,IAAI;EAEzB;EAEA,OAAOL,YAAY;AAEpB;AAAC,IAEKO,WAAW,0BAAAC,eAAA;EAAAj+B,SAAA,CAAAg+B,WAAA,EAAAC,eAAA;EAAA,IAAAC,QAAA,GAAAh+B,YAAA,CAAA89B,WAAA;EAEhB,SAAAA,YAAa//B,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE2G,KAAK,GAAG,CAAC,EAAEs5B,aAAa,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAEC,aAAa,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAArgD,eAAA,OAAA+/C,WAAA;IAEzGM,OAAA,GAAAJ,QAAA,CAAAtmD,IAAA;IAEA0mD,OAAA,CAAK3mD,IAAI,GAAG,aAAa;IAEzB2mD,OAAA,CAAK7Z,UAAU,GAAG;MACjBxmB,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACd2G,KAAK,EAAEA,KAAK;MACZs5B,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA,cAAc;MAC9BC,aAAa,EAAEA;IAChB,CAAC;IAED,IAAME,KAAK,GAAAx9B,sBAAA,CAAAu9B,OAAA,CAAO;;IAElB;;IAEAH,aAAa,GAAGvxC,IAAI,CAACsC,KAAK,CAAEivC,aAAc,CAAC;IAC3CC,cAAc,GAAGxxC,IAAI,CAACsC,KAAK,CAAEkvC,cAAe,CAAC;IAC7CC,aAAa,GAAGzxC,IAAI,CAACsC,KAAK,CAAEmvC,aAAc,CAAC;;IAE3C;;IAEA,IAAMzF,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAI0F,gBAAgB,GAAG,CAAC;IACxB,IAAIC,UAAU,GAAG,CAAC;;IAElB;;IAEAC,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE95B,KAAK,EAAE3G,MAAM,EAAED,KAAK,EAAEogC,aAAa,EAAED,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC/FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE95B,KAAK,EAAE3G,MAAM,EAAE,CAAED,KAAK,EAAEogC,aAAa,EAAED,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC/FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE1gC,KAAK,EAAE4G,KAAK,EAAE3G,MAAM,EAAEigC,aAAa,EAAEE,aAAa,EAAE,CAAE,CAAC,CAAC,CAAC;IAC1FM,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE1gC,KAAK,EAAE4G,KAAK,EAAE,CAAE3G,MAAM,EAAEigC,aAAa,EAAEE,aAAa,EAAE,CAAE,CAAC,CAAC,CAAC;IAC9FM,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE1gC,KAAK,EAAEC,MAAM,EAAE2G,KAAK,EAAEs5B,aAAa,EAAEC,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC7FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE1gC,KAAK,EAAEC,MAAM,EAAE,CAAE2G,KAAK,EAAEs5B,aAAa,EAAEC,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;;IAEjG;;IAEAE,OAAA,CAAK1G,QAAQ,CAAEgB,OAAQ,CAAC;IACxB0F,OAAA,CAAKxG,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EF,OAAA,CAAKxG,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEwF,OAAA,CAAKxG,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAE/D,SAAS4F,UAAUA,CAAElvB,CAAC,EAAE3c,CAAC,EAAE8P,CAAC,EAAEg8B,IAAI,EAAEC,IAAI,EAAE5gC,KAAK,EAAEC,MAAM,EAAE2G,KAAK,EAAEi6B,KAAK,EAAEC,KAAK,EAAE7G,aAAa,EAAG;MAE7F,IAAM8G,YAAY,GAAG/gC,KAAK,GAAG6gC,KAAK;MAClC,IAAMG,aAAa,GAAG/gC,MAAM,GAAG6gC,KAAK;MAEpC,IAAMG,SAAS,GAAGjhC,KAAK,GAAG,CAAC;MAC3B,IAAMkhC,UAAU,GAAGjhC,MAAM,GAAG,CAAC;MAC7B,IAAMkhC,SAAS,GAAGv6B,KAAK,GAAG,CAAC;MAE3B,IAAMw6B,MAAM,GAAGP,KAAK,GAAG,CAAC;MACxB,IAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAC;MAExB,IAAIQ,aAAa,GAAG,CAAC;MACrB,IAAIC,UAAU,GAAG,CAAC;MAElB,IAAMvuB,MAAM,GAAG,IAAI5E,OAAO,CAAC,CAAC;;MAE5B;;MAEA,KAAM,IAAIc,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGmyB,MAAM,EAAEnyB,EAAE,EAAG,EAAG;QAEtC,IAAM/e,CAAC,GAAG+e,EAAE,GAAG8xB,aAAa,GAAGE,UAAU;QAEzC,KAAM,IAAIjyB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGmyB,MAAM,EAAEnyB,EAAE,EAAG,EAAG;UAEtC,IAAMpf,CAAC,GAAGof,EAAE,GAAG8xB,YAAY,GAAGE,SAAS;;UAEvC;;UAEAjuB,MAAM,CAAExB,CAAC,CAAE,GAAG3hB,CAAC,GAAG8wC,IAAI;UACtB3tB,MAAM,CAAEne,CAAC,CAAE,GAAG1E,CAAC,GAAGywC,IAAI;UACtB5tB,MAAM,CAAErO,CAAC,CAAE,GAAGw8B,SAAS;;UAEvB;;UAEAZ,QAAQ,CAACtjD,IAAI,CAAE+1B,MAAM,CAACnjB,CAAC,EAAEmjB,MAAM,CAAC7iB,CAAC,EAAE6iB,MAAM,CAACtO,CAAE,CAAC;;UAE7C;;UAEAsO,MAAM,CAAExB,CAAC,CAAE,GAAG,CAAC;UACfwB,MAAM,CAAEne,CAAC,CAAE,GAAG,CAAC;UACfme,MAAM,CAAErO,CAAC,CAAE,GAAGiC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;;UAEjC;;UAEAi0B,OAAO,CAAC59C,IAAI,CAAE+1B,MAAM,CAACnjB,CAAC,EAAEmjB,MAAM,CAAC7iB,CAAC,EAAE6iB,MAAM,CAACtO,CAAE,CAAC;;UAE5C;;UAEAo2B,GAAG,CAAC79C,IAAI,CAAEgyB,EAAE,GAAG4xB,KAAM,CAAC;UACtB/F,GAAG,CAAC79C,IAAI,CAAE,CAAC,GAAKiyB,EAAE,GAAG4xB,KAAQ,CAAC;;UAE9B;;UAEAQ,aAAa,IAAI,CAAC;QAEnB;MAED;;MAEA;;MAEA;MACA;MACA;;MAEA,KAAM,IAAIpyB,GAAE,GAAG,CAAC,EAAEA,GAAE,GAAG4xB,KAAK,EAAE5xB,GAAE,EAAG,EAAG;QAErC,KAAM,IAAID,GAAE,GAAG,CAAC,EAAEA,GAAE,GAAG4xB,KAAK,EAAE5xB,GAAE,EAAG,EAAG;UAErC,IAAM5c,CAAC,GAAGmuC,gBAAgB,GAAGvxB,GAAE,GAAGmyB,MAAM,GAAGlyB,GAAE;UAC7C,IAAM5c,CAAC,GAAGkuC,gBAAgB,GAAGvxB,GAAE,GAAGmyB,MAAM,IAAKlyB,GAAE,GAAG,CAAC,CAAE;UACrD,IAAM3c,CAAC,GAAGiuC,gBAAgB,IAAKvxB,GAAE,GAAG,CAAC,CAAE,GAAGmyB,MAAM,IAAKlyB,GAAE,GAAG,CAAC,CAAE;UAC7D,IAAMnU,CAAC,GAAGylC,gBAAgB,IAAKvxB,GAAE,GAAG,CAAC,CAAE,GAAGmyB,MAAM,GAAGlyB,GAAE;;UAErD;;UAEAyrB,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;UACvB4/B,OAAO,CAAC19C,IAAI,CAAEqV,CAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;;UAEvB;;UAEAwmC,UAAU,IAAI,CAAC;QAEhB;MAED;;MAEA;;MAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAEtH,aAAc,CAAC;;MAEvD;;MAEAwG,UAAU,IAAIc,UAAU;;MAExB;;MAEAf,gBAAgB,IAAIc,aAAa;IAElC;IAAC,OAAAjB,OAAA;EAEF;EAAC7/C,YAAA,CAAAu/C,WAAA;IAAApoD,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAyL,WAAA,CAAAzoD,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAIm/B,WAAW,CAAEn/B,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACgG,KAAK,EAAEhG,IAAI,CAACs/B,aAAa,EAAEt/B,IAAI,CAACu/B,cAAc,EAAEv/B,IAAI,CAACw/B,aAAc,CAAC;IAE3H;EAAC;EAAA,OAAAL,WAAA;AAAA,EA3KwBhH,cAAc;AA+KxC;AACA;AACA;AAFA5hD,OAAA,CAAA4oD,WAAA,GAAAA,WAAA;AAIA,SAAS0B,aAAaA,CAAE3hC,GAAG,EAAG;EAE7B,IAAMmN,GAAG,GAAG,CAAC,CAAC;EAEd,KAAM,IAAMuE,CAAC,IAAI1R,GAAG,EAAG;IAEtBmN,GAAG,CAAEuE,CAAC,CAAE,GAAG,CAAC,CAAC;IAEb,KAAM,IAAMsN,CAAC,IAAIhf,GAAG,CAAE0R,CAAC,CAAE,EAAG;MAE3B,IAAMkwB,QAAQ,GAAG5hC,GAAG,CAAE0R,CAAC,CAAE,CAAEsN,CAAC,CAAE;MAE9B,IAAK4iB,QAAQ,KAAMA,QAAQ,CAACvb,OAAO,IAClCub,QAAQ,CAAC5oC,SAAS,IAAI4oC,QAAQ,CAACrnB,SAAS,IACxCqnB,QAAQ,CAACvtC,SAAS,IAAIutC,QAAQ,CAACpzB,SAAS,IAAIozB,QAAQ,CAAC98B,SAAS,IAC9D88B,QAAQ,CAAC7+B,SAAS,IAAI6+B,QAAQ,CAACh4B,YAAY,CAAE,EAAG;QAEhD,IAAKg4B,QAAQ,CAAC/9B,qBAAqB,EAAG;UAErCvQ,OAAO,CAACC,IAAI,CAAE,oGAAqG,CAAC;UACpH4Z,GAAG,CAAEuE,CAAC,CAAE,CAAEsN,CAAC,CAAE,GAAG,IAAI;QAErB,CAAC,MAAM;UAEN7R,GAAG,CAAEuE,CAAC,CAAE,CAAEsN,CAAC,CAAE,GAAG4iB,QAAQ,CAAC/sC,KAAK,CAAC,CAAC;QAEjC;MAED,CAAC,MAAM,IAAK4M,KAAK,CAACC,OAAO,CAAEkgC,QAAS,CAAC,EAAG;QAEvCz0B,GAAG,CAAEuE,CAAC,CAAE,CAAEsN,CAAC,CAAE,GAAG4iB,QAAQ,CAAC3iD,KAAK,CAAC,CAAC;MAEjC,CAAC,MAAM;QAENkuB,GAAG,CAAEuE,CAAC,CAAE,CAAEsN,CAAC,CAAE,GAAG4iB,QAAQ;MAEzB;IAED;EAED;EAEA,OAAOz0B,GAAG;AAEX;AAEA,SAAS00B,aAAaA,CAAEC,QAAQ,EAAG;EAElC,IAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,KAAM,IAAIrwB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGowB,QAAQ,CAACpkD,MAAM,EAAEg0B,CAAC,EAAG,EAAG;IAE5C,IAAM9V,IAAG,GAAG+lC,aAAa,CAAEG,QAAQ,CAAEpwB,CAAC,CAAG,CAAC;IAE1C,KAAM,IAAMsN,CAAC,IAAIpjB,IAAG,EAAG;MAEtBmmC,MAAM,CAAE/iB,CAAC,CAAE,GAAGpjB,IAAG,CAAEojB,CAAC,CAAE;IAEvB;EAED;EAEA,OAAO+iB,MAAM;AAEd;AAEA,SAASC,mBAAmBA,CAAEhiC,GAAG,EAAG;EAEnC,IAAMmN,GAAG,GAAG,EAAE;EAEd,KAAM,IAAIuE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1R,GAAG,CAACtiB,MAAM,EAAEg0B,CAAC,EAAG,EAAG;IAEvCvE,GAAG,CAAChwB,IAAI,CAAE6iB,GAAG,CAAE0R,CAAC,CAAE,CAAC7c,KAAK,CAAC,CAAE,CAAC;EAE7B;EAEA,OAAOsY,GAAG;AAEX;AAEA,SAAS80B,yBAAyBA,CAAEC,QAAQ,EAAG;EAE9C,IAAKA,QAAQ,CAACC,eAAe,CAAC,CAAC,KAAK,IAAI,EAAG;IAE1C;IACA,OAAOD,QAAQ,CAACE,gBAAgB;EAEjC;EAEA,OAAOl3C,oBAAoB;AAE5B;;AAEA;;AAEA,IAAMm3C,aAAa,GAAG;EAAExtC,KAAK,EAAE8sC,aAAa;EAAEW,KAAK,EAAET;AAAc,CAAC;AAACxqD,OAAA,CAAAgrD,aAAA,GAAAA,aAAA;AAErE,IAAIE,cAAc,GAAG,+FAA+F;AAEpH,IAAIC,gBAAgB,GAAG,gEAAgE;AAAC,IAElFC,cAAc,0BAAAC,UAAA;EAAAzgC,SAAA,CAAAwgC,cAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAxgC,YAAA,CAAAsgC,cAAA;EAEnB,SAAAA,eAAa/b,UAAU,EAAG;IAAA,IAAAkc,OAAA;IAAA1iD,eAAA,OAAAuiD,cAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAA9oD,IAAA;IAEA+oD,OAAA,CAAKC,gBAAgB,GAAG,IAAI;IAE5BD,OAAA,CAAKhpD,IAAI,GAAG,gBAAgB;IAE5BgpD,OAAA,CAAKE,OAAO,GAAG,CAAC,CAAC;IACjBF,OAAA,CAAKd,QAAQ,GAAG,CAAC,CAAC;IAClBc,OAAA,CAAKG,cAAc,GAAG,EAAE;IAExBH,OAAA,CAAKI,YAAY,GAAGT,cAAc;IAClCK,OAAA,CAAKK,cAAc,GAAGT,gBAAgB;IAEtCI,OAAA,CAAK3R,SAAS,GAAG,CAAC;IAElB2R,OAAA,CAAKvR,SAAS,GAAG,KAAK;IACtBuR,OAAA,CAAKtR,kBAAkB,GAAG,CAAC;IAE3BsR,OAAA,CAAKlR,GAAG,GAAG,KAAK,CAAC,CAAC;IAClBkR,OAAA,CAAKM,MAAM,GAAG,KAAK,CAAC,CAAC;IACrBN,OAAA,CAAKO,QAAQ,GAAG,KAAK,CAAC,CAAC;;IAEvBP,OAAA,CAAKhW,eAAe,GAAG,IAAI;IAE3BgW,OAAA,CAAKQ,UAAU,GAAG;MACjBC,WAAW,EAAE,KAAK;MAAE;MACpBC,SAAS,EAAE,KAAK;MAAE;MAClBC,WAAW,EAAE,KAAK;MAAE;MACpBC,gBAAgB,EAAE,KAAK,CAAC;IACzB,CAAC;;IAED;IACA;IACAZ,OAAA,CAAKa,sBAAsB,GAAG;MAC7B,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACpB,IAAI,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;MACd,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC;IACd,CAAC;IAEDb,OAAA,CAAKc,mBAAmB,GAAGtnD,SAAS;IACpCwmD,OAAA,CAAKe,kBAAkB,GAAG,KAAK;IAE/Bf,OAAA,CAAKgB,WAAW,GAAG,IAAI;IAEvB,IAAKld,UAAU,KAAKtqC,SAAS,EAAG;MAE/BwmD,OAAA,CAAKzV,SAAS,CAAEzG,UAAW,CAAC;IAE7B;IAAC,OAAAkc,OAAA;EAEF;EAACliD,YAAA,CAAA+hD,cAAA;IAAA5qD,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAiO,cAAA,CAAAjrD,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACggC,cAAc,GAAGhgC,MAAM,CAACggC,cAAc;MAC3C,IAAI,CAACD,YAAY,GAAG//B,MAAM,CAAC+/B,YAAY;MAEvC,IAAI,CAAClB,QAAQ,GAAGH,aAAa,CAAE1+B,MAAM,CAAC6+B,QAAS,CAAC;MAChD,IAAI,CAACiB,cAAc,GAAGf,mBAAmB,CAAE/+B,MAAM,CAAC8/B,cAAe,CAAC;MAElE,IAAI,CAACD,OAAO,GAAGvrD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAAC6/B,OAAQ,CAAC;MAElD,IAAI,CAACzR,SAAS,GAAGpuB,MAAM,CAACouB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGruB,MAAM,CAACquB,kBAAkB;MAEnD,IAAI,CAACI,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MACrB,IAAI,CAACwR,MAAM,GAAGjgC,MAAM,CAACigC,MAAM;MAC3B,IAAI,CAACC,QAAQ,GAAGlgC,MAAM,CAACkgC,QAAQ;MAE/B,IAAI,CAACC,UAAU,GAAG7rD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACmgC,UAAW,CAAC;MAExD,IAAI,CAACQ,WAAW,GAAG3gC,MAAM,CAAC2gC,WAAW;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAA/rD,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAiO,cAAA,CAAAjrD,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjCN,IAAI,CAAC8iC,WAAW,GAAG,IAAI,CAACA,WAAW;MACnC9iC,IAAI,CAACghC,QAAQ,GAAG,CAAC,CAAC;MAElB,KAAM,IAAM7jD,IAAI,IAAI,IAAI,CAAC6jD,QAAQ,EAAG;QAEnC,IAAM+B,OAAO,GAAG,IAAI,CAAC/B,QAAQ,CAAE7jD,IAAI,CAAE;QACrC,IAAMlG,OAAK,GAAG8rD,OAAO,CAAC9rD,KAAK;QAE3B,IAAKA,OAAK,IAAIA,OAAK,CAACgrB,SAAS,EAAG;UAE/BjC,IAAI,CAACghC,QAAQ,CAAE7jD,IAAI,CAAE,GAAG;YACvBrE,IAAI,EAAE,GAAG;YACT7B,KAAK,EAAEA,OAAK,CAACopB,MAAM,CAAEC,IAAK,CAAC,CAAC9R;UAC7B,CAAC;QAEF,CAAC,MAAM,IAAKvX,OAAK,IAAIA,OAAK,CAACsuC,OAAO,EAAG;UAEpCvlB,IAAI,CAACghC,QAAQ,CAAE7jD,IAAI,CAAE,GAAG;YACvBrE,IAAI,EAAE,GAAG;YACT7B,KAAK,EAAEA,OAAK,CAACu1C,MAAM,CAAC;UACrB,CAAC;QAEF,CAAC,MAAM,IAAKv1C,OAAK,IAAIA,OAAK,CAACsc,SAAS,EAAG;UAEtCyM,IAAI,CAACghC,QAAQ,CAAE7jD,IAAI,CAAE,GAAG;YACvBrE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,OAAK,CAAC8f,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM,IAAK9f,OAAK,IAAIA,OAAK,CAACy2B,SAAS,EAAG;UAEtC1N,IAAI,CAACghC,QAAQ,CAAE7jD,IAAI,CAAE,GAAG;YACvBrE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,OAAK,CAAC8f,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM,IAAK9f,OAAK,IAAIA,OAAK,CAAC+sB,SAAS,EAAG;UAEtChE,IAAI,CAACghC,QAAQ,CAAE7jD,IAAI,CAAE,GAAG;YACvBrE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,OAAK,CAAC8f,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM,IAAK9f,OAAK,IAAIA,OAAK,CAACihB,SAAS,EAAG;UAEtC8H,IAAI,CAACghC,QAAQ,CAAE7jD,IAAI,CAAE,GAAG;YACvBrE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,OAAK,CAAC8f,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM,IAAK9f,OAAK,IAAIA,OAAK,CAACwiC,SAAS,EAAG;UAEtCzZ,IAAI,CAACghC,QAAQ,CAAE7jD,IAAI,CAAE,GAAG;YACvBrE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,OAAK,CAAC8f,OAAO,CAAC;UACtB,CAAC;QAEF,CAAC,MAAM;UAENiJ,IAAI,CAACghC,QAAQ,CAAE7jD,IAAI,CAAE,GAAG;YACvBlG,KAAK,EAAEA;UACR,CAAC;;UAED;QAED;MAED;;MAEA,IAAKR,MAAM,CAACkH,IAAI,CAAE,IAAI,CAACqkD,OAAQ,CAAC,CAACplD,MAAM,GAAG,CAAC,EAAGojB,IAAI,CAACgiC,OAAO,GAAG,IAAI,CAACA,OAAO;MAEzEhiC,IAAI,CAACkiC,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCliC,IAAI,CAACmiC,cAAc,GAAG,IAAI,CAACA,cAAc;MAEzCniC,IAAI,CAACoiC,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBpiC,IAAI,CAACqiC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE7B,IAAMC,UAAU,GAAG,CAAC,CAAC;MAErB,KAAM,IAAMvrD,GAAG,IAAI,IAAI,CAACurD,UAAU,EAAG;QAEpC,IAAK,IAAI,CAACA,UAAU,CAAEvrD,GAAG,CAAE,KAAK,IAAI,EAAGurD,UAAU,CAAEvrD,GAAG,CAAE,GAAG,IAAI;MAEhE;MAEA,IAAKN,MAAM,CAACkH,IAAI,CAAE2kD,UAAW,CAAC,CAAC1lD,MAAM,GAAG,CAAC,EAAGojB,IAAI,CAACsiC,UAAU,GAAGA,UAAU;MAExE,OAAOtiC,IAAI;IAEZ;EAAC;EAAA,OAAA2hC,cAAA;AAAA,EAhL2BrY,QAAQ;AAAA/yC,OAAA,CAAAorD,cAAA,GAAAA,cAAA;AAAA,IAoL/BqB,MAAM,0BAAAC,UAAA;EAAA9hC,SAAA,CAAA6hC,MAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA7hC,YAAA,CAAA2hC,MAAA;EAEX,SAAAA,OAAA,EAAc;IAAA,IAAAG,OAAA;IAAA/jD,eAAA,OAAA4jD,MAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAnqD,IAAA;IAEAoqD,OAAA,CAAKrgB,QAAQ,GAAG,IAAI;IAEpBqgB,OAAA,CAAKrqD,IAAI,GAAG,QAAQ;IAEpBqqD,OAAA,CAAKx0B,kBAAkB,GAAG,IAAIsK,OAAO,CAAC,CAAC;IAEvCkqB,OAAA,CAAKv0B,gBAAgB,GAAG,IAAIqK,OAAO,CAAC,CAAC;IACrCkqB,OAAA,CAAKr0B,uBAAuB,GAAG,IAAImK,OAAO,CAAC,CAAC;IAE5CkqB,OAAA,CAAKnlB,gBAAgB,GAAGrxB,qBAAqB;IAAC,OAAAw2C,OAAA;EAE/C;EAACvjD,YAAA,CAAAojD,MAAA;IAAAjsD,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAsP,MAAA,CAAAtsD,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAAC5X,kBAAkB,CAAC3a,IAAI,CAAEmO,MAAM,CAACwM,kBAAmB,CAAC;MAEzD,IAAI,CAACC,gBAAgB,CAAC5a,IAAI,CAAEmO,MAAM,CAACyM,gBAAiB,CAAC;MACrD,IAAI,CAACE,uBAAuB,CAAC9a,IAAI,CAAEmO,MAAM,CAAC2M,uBAAwB,CAAC;MAEnE,IAAI,CAACkP,gBAAgB,GAAG7b,MAAM,CAAC6b,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAjnC,GAAA;IAAAE,KAAA,EAED,SAAAgtC,kBAAmBzkC,MAAM,EAAG;MAE3B,IAAI,CAAC8yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAErC,IAAMxd,CAAC,GAAG,IAAI,CAACia,WAAW,CAACha,QAAQ;MAEnC,OAAOvV,MAAM,CAAC+S,GAAG,CAAE,CAAEuC,CAAC,CAAE,CAAC,CAAE,EAAE,CAAEA,CAAC,CAAE,CAAC,CAAE,EAAE,CAAEA,CAAC,CAAE,EAAE,CAAG,CAAC,CAAC5B,SAAS,CAAC,CAAC;IAE/D;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAAqtC,kBAAmBC,KAAK,EAAG;MAE1BkP,IAAA,CAAAC,eAAA,CAAAsP,MAAA,CAAAtsD,SAAA,8BAAAqC,IAAA,OAAyBwrC,KAAK;MAE9B,IAAI,CAAC5V,kBAAkB,CAAC3a,IAAI,CAAE,IAAI,CAAC+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;IAE1D;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAAq7B,kBAAmBkS,aAAa,EAAEC,cAAc,EAAG;MAElDgP,IAAA,CAAAC,eAAA,CAAAsP,MAAA,CAAAtsD,SAAA,8BAAAqC,IAAA,OAAyByrC,aAAa,EAAEC,cAAc;MAEtD,IAAI,CAAC9V,kBAAkB,CAAC3a,IAAI,CAAE,IAAI,CAAC+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;IAE1D;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAgvC,MAAA;AAAA,EAhEmB1iB,QAAQ;AAAA/pC,OAAA,CAAAysD,MAAA,GAAAA,MAAA;AAAA,IAoEvBI,iBAAiB,0BAAAC,OAAA;EAAAliC,SAAA,CAAAiiC,iBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAjiC,YAAA,CAAA+hC,iBAAA;EAEtB,SAAAA,kBAAaG,GAAG,GAAG,EAAE,EAAEC,MAAM,GAAG,CAAC,EAAE1lB,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAA,IAAA0lB,OAAA;IAAArkD,eAAA,OAAAgkD,iBAAA;IAE3DK,OAAA,GAAAH,QAAA,CAAAvqD,IAAA;IAEA0qD,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAK3qD,IAAI,GAAG,mBAAmB;IAE/B2qD,OAAA,CAAKF,GAAG,GAAGA,GAAG;IACdE,OAAA,CAAKE,IAAI,GAAG,CAAC;IAEbF,OAAA,CAAK3lB,IAAI,GAAGA,IAAI;IAChB2lB,OAAA,CAAK1lB,GAAG,GAAGA,GAAG;IACd0lB,OAAA,CAAKG,KAAK,GAAG,EAAE;IAEfH,OAAA,CAAKD,MAAM,GAAGA,MAAM;IACpBC,OAAA,CAAKI,IAAI,GAAG,IAAI;IAEhBJ,OAAA,CAAKK,SAAS,GAAG,EAAE,CAAC,CAAC;IACrBL,OAAA,CAAKM,UAAU,GAAG,CAAC,CAAC,CAAC;;IAErBN,OAAA,CAAKO,sBAAsB,CAAC,CAAC;IAAC,OAAAP,OAAA;EAE/B;EAAC7jD,YAAA,CAAAwjD,iBAAA;IAAArsD,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA0P,iBAAA,CAAA1sD,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAACgd,GAAG,GAAGphC,MAAM,CAACohC,GAAG;MACrB,IAAI,CAACI,IAAI,GAAGxhC,MAAM,CAACwhC,IAAI;MAEvB,IAAI,CAAC7lB,IAAI,GAAG3b,MAAM,CAAC2b,IAAI;MACvB,IAAI,CAACC,GAAG,GAAG5b,MAAM,CAAC4b,GAAG;MACrB,IAAI,CAAC6lB,KAAK,GAAGzhC,MAAM,CAACyhC,KAAK;MAEzB,IAAI,CAACJ,MAAM,GAAGrhC,MAAM,CAACqhC,MAAM;MAC3B,IAAI,CAACK,IAAI,GAAG1hC,MAAM,CAAC0hC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGptD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAAC0hC,IAAK,CAAC;MAE1E,IAAI,CAACC,SAAS,GAAG3hC,MAAM,CAAC2hC,SAAS;MACjC,IAAI,CAACC,UAAU,GAAG5hC,MAAM,CAAC4hC,UAAU;MAEnC,OAAO,IAAI;IAEZ;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EAPC;IAAAhtD,GAAA;IAAAE,KAAA,EAQA,SAAAgtD,eAAgBC,WAAW,EAAG;MAE7B;MACA,IAAMC,YAAY,GAAG,GAAG,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC,GAAGF,WAAW;MAE7D,IAAI,CAACX,GAAG,GAAGt1C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACs2C,IAAI,CAAEF,YAAa,CAAC;MAClD,IAAI,CAACH,sBAAsB,CAAC,CAAC;IAE9B;;IAEA;AACD;AACA;EAFC;IAAAjtD,GAAA;IAAAE,KAAA,EAGA,SAAAqtD,eAAA,EAAiB;MAEhB,IAAMH,YAAY,GAAGp2C,IAAI,CAACw2C,GAAG,CAAEz2C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACy1C,GAAI,CAAC;MAEzD,OAAO,GAAG,GAAG,IAAI,CAACa,aAAa,CAAC,CAAC,GAAGD,YAAY;IAEjD;EAAC;IAAAptD,GAAA;IAAAE,KAAA,EAED,SAAAutD,gBAAA,EAAkB;MAEjB,OAAOv2C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACs2C,IAAI,CAC7Bt2C,IAAI,CAACw2C,GAAG,CAAEz2C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACy1C,GAAI,CAAC,GAAG,IAAI,CAACI,IAAK,CAAC;IAEpD;EAAC;IAAA5sD,GAAA;IAAAE,KAAA,EAED,SAAAwtD,aAAA,EAAe;MAEd;MACA,OAAO,IAAI,CAACX,SAAS,GAAG/1C,IAAI,CAACY,GAAG,CAAE,IAAI,CAAC60C,MAAM,EAAE,CAAE,CAAC;IAEnD;EAAC;IAAAzsD,GAAA;IAAAE,KAAA,EAED,SAAAmtD,cAAA,EAAgB;MAEf;MACA,OAAO,IAAI,CAACN,SAAS,GAAG/1C,IAAI,CAACa,GAAG,CAAE,IAAI,CAAC40C,MAAM,EAAE,CAAE,CAAC;IAEnD;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlCC;IAAAzsD,GAAA;IAAAE,KAAA,EAmCA,SAAAytD,cAAeC,SAAS,EAAEC,UAAU,EAAE31C,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAM,EAAG;MAE3D,IAAI,CAACmkC,MAAM,GAAGmB,SAAS,GAAGC,UAAU;MAEpC,IAAK,IAAI,CAACf,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,GAAG;UACX5lC,OAAO,EAAE,IAAI;UACb0mC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,CAAC;UACbC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,CAAC;UACV1lC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACT,CAAC;MAEF;MAEA,IAAI,CAACwkC,IAAI,CAAC5lC,OAAO,GAAG,IAAI;MACxB,IAAI,CAAC4lC,IAAI,CAACc,SAAS,GAAGA,SAAS;MAC/B,IAAI,CAACd,IAAI,CAACe,UAAU,GAAGA,UAAU;MACjC,IAAI,CAACf,IAAI,CAACgB,OAAO,GAAG51C,CAAC;MACrB,IAAI,CAAC40C,IAAI,CAACiB,OAAO,GAAGv1C,CAAC;MACrB,IAAI,CAACs0C,IAAI,CAACzkC,KAAK,GAAGA,KAAK;MACvB,IAAI,CAACykC,IAAI,CAACxkC,MAAM,GAAGA,MAAM;MAEzB,IAAI,CAAC2kC,sBAAsB,CAAC,CAAC;IAE9B;EAAC;IAAAjtD,GAAA;IAAAE,KAAA,EAED,SAAA8tD,gBAAA,EAAkB;MAEjB,IAAK,IAAI,CAAClB,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,CAAC5lC,OAAO,GAAG,KAAK;MAE1B;MAEA,IAAI,CAAC+lC,sBAAsB,CAAC,CAAC;IAE9B;EAAC;IAAAjtD,GAAA;IAAAE,KAAA,EAED,SAAA+sD,uBAAA,EAAyB;MAExB,IAAMlmB,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAIF,GAAG,GAAGE,IAAI,GAAG/vB,IAAI,CAACw2C,GAAG,CAAEz2C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACy1C,GAAI,CAAC,GAAG,IAAI,CAACI,IAAI;MACjE,IAAItkC,MAAM,GAAG,CAAC,GAAGue,GAAG;MACpB,IAAIxe,KAAK,GAAG,IAAI,CAACokC,MAAM,GAAGnkC,MAAM;MAChC,IAAIqe,IAAI,GAAG,CAAE,GAAG,GAAGte,KAAK;MACxB,IAAMykC,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAK,IAAI,CAACA,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,CAAC5lC,OAAO,EAAG;QAE9C,IAAM0mC,SAAS,GAAGd,IAAI,CAACc,SAAS;UAC/BC,UAAU,GAAGf,IAAI,CAACe,UAAU;QAE7BlnB,IAAI,IAAImmB,IAAI,CAACgB,OAAO,GAAGzlC,KAAK,GAAGulC,SAAS;QACxC/mB,GAAG,IAAIimB,IAAI,CAACiB,OAAO,GAAGzlC,MAAM,GAAGulC,UAAU;QACzCxlC,KAAK,IAAIykC,IAAI,CAACzkC,KAAK,GAAGulC,SAAS;QAC/BtlC,MAAM,IAAIwkC,IAAI,CAACxkC,MAAM,GAAGulC,UAAU;MAEnC;MAEA,IAAMI,IAAI,GAAG,IAAI,CAACjB,UAAU;MAC5B,IAAKiB,IAAI,KAAK,CAAC,EAAGtnB,IAAI,IAAII,IAAI,GAAGknB,IAAI,GAAG,IAAI,CAACP,YAAY,CAAC,CAAC;MAE3D,IAAI,CAAC71B,gBAAgB,CAAC6O,eAAe,CAAEC,IAAI,EAAEA,IAAI,GAAGte,KAAK,EAAEwe,GAAG,EAAEA,GAAG,GAAGve,MAAM,EAAEye,IAAI,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,gBAAiB,CAAC;MAErH,IAAI,CAAClP,uBAAuB,CAAC9a,IAAI,CAAE,IAAI,CAAC4a,gBAAiB,CAAC,CAACrU,MAAM,CAAC,CAAC;IAEpE;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA0P,iBAAA,CAAA1sD,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjCN,IAAI,CAACniB,MAAM,CAAC0lD,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1BvjC,IAAI,CAACniB,MAAM,CAAC8lD,IAAI,GAAG,IAAI,CAACA,IAAI;MAE5B3jC,IAAI,CAACniB,MAAM,CAACigC,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B9d,IAAI,CAACniB,MAAM,CAACkgC,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1B/d,IAAI,CAACniB,MAAM,CAAC+lD,KAAK,GAAG,IAAI,CAACA,KAAK;MAE9B5jC,IAAI,CAACniB,MAAM,CAAC2lD,MAAM,GAAG,IAAI,CAACA,MAAM;MAEhC,IAAK,IAAI,CAACK,IAAI,KAAK,IAAI,EAAG7jC,IAAI,CAACniB,MAAM,CAACgmD,IAAI,GAAGptD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAE,IAAI,CAACm9B,IAAK,CAAC;MAE3E7jC,IAAI,CAACniB,MAAM,CAACimD,SAAS,GAAG,IAAI,CAACA,SAAS;MACtC9jC,IAAI,CAACniB,MAAM,CAACkmD,UAAU,GAAG,IAAI,CAACA,UAAU;MAExC,OAAO/jC,IAAI;IAEZ;EAAC;EAAA,OAAAojC,iBAAA;AAAA,EAjO8BJ,MAAM;AAAAzsD,OAAA,CAAA6sD,iBAAA,GAAAA,iBAAA;AAqOtC,IAAMG,GAAG,GAAG,CAAE,EAAE,CAAC,CAAC;AAClB,IAAMC,MAAM,GAAG,CAAC;AAAC,IAEXyB,UAAU,0BAAAC,UAAA;EAAA/jC,SAAA,CAAA8jC,UAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA9jC,YAAA,CAAA4jC,UAAA;EAEf,SAAAA,WAAannB,IAAI,EAAEC,GAAG,EAAEqnB,YAAY,EAAG;IAAA,IAAAC,OAAA;IAAAjmD,eAAA,OAAA6lD,UAAA;IAEtCI,OAAA,GAAAF,QAAA,CAAApsD,IAAA;IAEAssD,OAAA,CAAKvsD,IAAI,GAAG,YAAY;IAExBusD,OAAA,CAAKD,YAAY,GAAGA,YAAY;IAChCC,OAAA,CAAKrnB,gBAAgB,GAAG,IAAI;IAE5B,IAAMsnB,QAAQ,GAAG,IAAIlC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1lB,IAAI,EAAEC,GAAI,CAAC;IAChEunB,QAAQ,CAAC/lB,MAAM,GAAG8lB,OAAA,CAAK9lB,MAAM;IAC7B8lB,OAAA,CAAKnxC,GAAG,CAAEoxC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAInC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1lB,IAAI,EAAEC,GAAI,CAAC;IAChEwnB,QAAQ,CAAChmB,MAAM,GAAG8lB,OAAA,CAAK9lB,MAAM;IAC7B8lB,OAAA,CAAKnxC,GAAG,CAAEqxC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAIpC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1lB,IAAI,EAAEC,GAAI,CAAC;IAChEynB,QAAQ,CAACjmB,MAAM,GAAG8lB,OAAA,CAAK9lB,MAAM;IAC7B8lB,OAAA,CAAKnxC,GAAG,CAAEsxC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAIrC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1lB,IAAI,EAAEC,GAAI,CAAC;IAChE0nB,QAAQ,CAAClmB,MAAM,GAAG8lB,OAAA,CAAK9lB,MAAM;IAC7B8lB,OAAA,CAAKnxC,GAAG,CAAEuxC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAItC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1lB,IAAI,EAAEC,GAAI,CAAC;IAChE2nB,QAAQ,CAACnmB,MAAM,GAAG8lB,OAAA,CAAK9lB,MAAM;IAC7B8lB,OAAA,CAAKnxC,GAAG,CAAEwxC,QAAS,CAAC;IAEpB,IAAMC,QAAQ,GAAG,IAAIvC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1lB,IAAI,EAAEC,GAAI,CAAC;IAChE4nB,QAAQ,CAACpmB,MAAM,GAAG8lB,OAAA,CAAK9lB,MAAM;IAC7B8lB,OAAA,CAAKnxC,GAAG,CAAEyxC,QAAS,CAAC;IAAC,OAAAN,OAAA;EAEtB;EAACzlD,YAAA,CAAAqlD,UAAA;IAAAluD,GAAA;IAAAE,KAAA,EAED,SAAA2uD,uBAAA,EAAyB;MAExB,IAAM5nB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE9C,IAAM6nB,OAAO,GAAG,IAAI,CAAC/yB,QAAQ,CAACpU,MAAM,CAAC,CAAC;MAEtC,IAAAonC,QAAA,GAAAC,cAAA,CAAuEF,OAAO;QAAtEP,QAAQ,GAAAQ,QAAA;QAAEP,QAAQ,GAAAO,QAAA;QAAEN,QAAQ,GAAAM,QAAA;QAAEL,QAAQ,GAAAK,QAAA;QAAEJ,QAAQ,GAAAI,QAAA;QAAEH,QAAQ,GAAAG,QAAA;MAAa,IAAAE,SAAA,GAAAC,0BAAA,CAEzDJ,OAAO;QAAAK,KAAA;MAAA;QAA7B,KAAAF,SAAA,CAAAt1C,CAAA,MAAAw1C,KAAA,GAAAF,SAAA,CAAAl3C,CAAA,IAAAjU,IAAA,GAAgC;UAAA,IAApB6zB,MAAM,GAAAw3B,KAAA,CAAAjvD,KAAA;UAAc,IAAI,CAACgsC,MAAM,CAAEvU,MAAO,CAAC;QAAA;MAAC,SAAA52B,GAAA;QAAAkuD,SAAA,CAAAlxC,CAAA,CAAAhd,GAAA;MAAA;QAAAkuD,SAAA,CAAA5rC,CAAA;MAAA;MAEtD,IAAK4jB,gBAAgB,KAAKrxB,qBAAqB,EAAG;QAEjD24C,QAAQ,CAACpqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1B+yC,QAAQ,CAAC9uB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1B+uB,QAAQ,CAACrqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BgzC,QAAQ,CAAC/uB,MAAM,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE5BgvB,QAAQ,CAACtqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;QAC5BizC,QAAQ,CAAChvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BivB,QAAQ,CAACvqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BkzC,QAAQ,CAACjvB,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAE5BkvB,QAAQ,CAACxqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BmzC,QAAQ,CAAClvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BmvB,QAAQ,CAACzqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BozC,QAAQ,CAACnvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAE7B,CAAC,MAAM,IAAKwH,gBAAgB,KAAKpxB,sBAAsB,EAAG;QAEzD04C,QAAQ,CAACpqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5B+yC,QAAQ,CAAC9uB,MAAM,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE5B+uB,QAAQ,CAACrqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5BgzC,QAAQ,CAAC/uB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BgvB,QAAQ,CAACtqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAC1BizC,QAAQ,CAAChvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BivB,QAAQ,CAACvqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;QAC5BkzC,QAAQ,CAACjvB,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAE5BkvB,QAAQ,CAACxqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5BmzC,QAAQ,CAAClvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAE1BmvB,QAAQ,CAACzqB,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC;QAC5BozC,QAAQ,CAACnvB,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAE7B,CAAC,MAAM;QAEN,MAAM,IAAI57B,KAAK,CAAE,wEAAwE,GAAGojC,gBAAiB,CAAC;MAE/G;MAAC,IAAAmoB,UAAA,GAAAF,0BAAA,CAEqBJ,OAAO;QAAAO,MAAA;MAAA;QAA7B,KAAAD,UAAA,CAAAz1C,CAAA,MAAA01C,MAAA,GAAAD,UAAA,CAAAr3C,CAAA,IAAAjU,IAAA,GAAgC;UAAA,IAApB6zB,QAAM,GAAA03B,MAAA,CAAAnvD,KAAA;UAEjB,IAAI,CAACid,GAAG,CAAEwa,QAAO,CAAC;UAElBA,QAAM,CAAC4V,iBAAiB,CAAC,CAAC;QAE3B;MAAC,SAAAxsC,GAAA;QAAAquD,UAAA,CAAArxC,CAAA,CAAAhd,GAAA;MAAA;QAAAquD,UAAA,CAAA/rC,CAAA;MAAA;IAEF;EAAC;IAAArjB,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAQ63B,QAAQ,EAAEiF,KAAK,EAAG;MAEzB,IAAK,IAAI,CAAC1lB,MAAM,KAAK,IAAI,EAAG,IAAI,CAAC2D,iBAAiB,CAAC,CAAC;MAEpD,IAAM8gB,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,IAAK,IAAI,CAACpnB,gBAAgB,KAAKojB,QAAQ,CAACpjB,gBAAgB,EAAG;QAE1D,IAAI,CAACA,gBAAgB,GAAGojB,QAAQ,CAACpjB,gBAAgB;QAEjD,IAAI,CAAC4nB,sBAAsB,CAAC,CAAC;MAE9B;MAEA,IAAAU,cAAA,GAAAP,cAAA,CAAuE,IAAI,CAACjzB,QAAQ;QAA5EwyB,QAAQ,GAAAgB,cAAA;QAAEf,QAAQ,GAAAe,cAAA;QAAEd,QAAQ,GAAAc,cAAA;QAAEb,QAAQ,GAAAa,cAAA;QAAEZ,QAAQ,GAAAY,cAAA;QAAEX,QAAQ,GAAAW,cAAA;MAElE,IAAMC,mBAAmB,GAAGnF,QAAQ,CAACC,eAAe,CAAC,CAAC;MAEtD,IAAMmF,gBAAgB,GAAGpF,QAAQ,CAACqF,EAAE,CAACxoC,OAAO;MAE5CmjC,QAAQ,CAACqF,EAAE,CAACxoC,OAAO,GAAG,KAAK;MAE3B,IAAMwE,eAAe,GAAG2iC,YAAY,CAACh/B,OAAO,CAAC3D,eAAe;MAE5D2iC,YAAY,CAACh/B,OAAO,CAAC3D,eAAe,GAAG,KAAK;MAE5C2+B,QAAQ,CAACsF,eAAe,CAAEtB,YAAY,EAAE,CAAE,CAAC;MAC3ChE,QAAQ,CAACuF,MAAM,CAAEN,KAAK,EAAEf,QAAS,CAAC;MAElClE,QAAQ,CAACsF,eAAe,CAAEtB,YAAY,EAAE,CAAE,CAAC;MAC3ChE,QAAQ,CAACuF,MAAM,CAAEN,KAAK,EAAEd,QAAS,CAAC;MAElCnE,QAAQ,CAACsF,eAAe,CAAEtB,YAAY,EAAE,CAAE,CAAC;MAC3ChE,QAAQ,CAACuF,MAAM,CAAEN,KAAK,EAAEb,QAAS,CAAC;MAElCpE,QAAQ,CAACsF,eAAe,CAAEtB,YAAY,EAAE,CAAE,CAAC;MAC3ChE,QAAQ,CAACuF,MAAM,CAAEN,KAAK,EAAEZ,QAAS,CAAC;MAElCrE,QAAQ,CAACsF,eAAe,CAAEtB,YAAY,EAAE,CAAE,CAAC;MAC3ChE,QAAQ,CAACuF,MAAM,CAAEN,KAAK,EAAEX,QAAS,CAAC;MAElCN,YAAY,CAACh/B,OAAO,CAAC3D,eAAe,GAAGA,eAAe;MAEtD2+B,QAAQ,CAACsF,eAAe,CAAEtB,YAAY,EAAE,CAAE,CAAC;MAC3ChE,QAAQ,CAACuF,MAAM,CAAEN,KAAK,EAAEV,QAAS,CAAC;MAElCvE,QAAQ,CAACsF,eAAe,CAAEH,mBAAoB,CAAC;MAE/CnF,QAAQ,CAACqF,EAAE,CAACxoC,OAAO,GAAGuoC,gBAAgB;MAEtCpB,YAAY,CAACh/B,OAAO,CAACpD,gBAAgB,GAAG,IAAI;IAE7C;EAAC;EAAA,OAAAiiC,UAAA;AAAA,EA3JuB3kB,QAAQ;AAAA/pC,OAAA,CAAA0uD,UAAA,GAAAA,UAAA;AAAA,IA+J3B2B,WAAW,0BAAAC,SAAA;EAAA1lC,SAAA,CAAAylC,WAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAzlC,YAAA,CAAAulC,WAAA;EAEhB,SAAAA,YAAapmC,MAAM,EAAEe,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU,EAAE1D,UAAU,EAAG;IAAA,IAAA2oC,OAAA;IAAA3nD,eAAA,OAAAwnD,WAAA;IAExGpmC,MAAM,GAAGA,MAAM,KAAKllB,SAAS,GAAGklB,MAAM,GAAG,EAAE;IAC3Ce,OAAO,GAAGA,OAAO,KAAKjmB,SAAS,GAAGimB,OAAO,GAAGjd,qBAAqB;IAEjEyiD,OAAA,GAAAD,QAAA,CAAA/tD,IAAA,OAAOynB,MAAM,EAAEe,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU,EAAE1D,UAAU;IAEhG2oC,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAKpkC,KAAK,GAAG,KAAK;IAAC,OAAAokC,OAAA;EAEpB;EAACnnD,YAAA,CAAAgnD,WAAA;IAAA7vD,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAACwL,KAAK;IAElB,CAAC;IAAAzM,GAAA,EAED,SAAAA,IAAYtb,KAAK,EAAG;MAEnB,IAAI,CAAC+nB,KAAK,GAAG/nB,KAAK;IAEnB;EAAC;EAAA,OAAA2vD,WAAA;AAAA,EAzBwB3lC,OAAO;AAAA1qB,OAAA,CAAAqwD,WAAA,GAAAA,WAAA;AAAA,IA6B3BK,qBAAqB,0BAAAC,mBAAA;EAAA/lC,SAAA,CAAA8lC,qBAAA,EAAAC,mBAAA;EAAA,IAAAC,QAAA,GAAA9lC,YAAA,CAAA4lC,qBAAA;EAE1B,SAAAA,sBAAax1B,IAAI,GAAG,CAAC,EAAE5L,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAuhC,OAAA;IAAAhoD,eAAA,OAAA6nD,qBAAA;IAErCG,OAAA,GAAAD,QAAA,CAAApuD,IAAA,OAAO04B,IAAI,EAAEA,IAAI,EAAE5L,OAAO;IAE1BuhC,OAAA,CAAKC,uBAAuB,GAAG,IAAI;IAEnC,IAAMroC,KAAK,GAAG;MAAEI,KAAK,EAAEqS,IAAI;MAAEpS,MAAM,EAAEoS,IAAI;MAAEzL,KAAK,EAAE;IAAE,CAAC;IACrD,IAAMxF,MAAM,GAAG,CAAExB,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,CAAE;IAE3D,IAAK6G,OAAO,CAAClC,QAAQ,KAAKroB,SAAS,EAAG;MAErC;MACA0hB,QAAQ,CAAE,sFAAuF,CAAC;MAClG6I,OAAO,CAACzH,UAAU,GAAGyH,OAAO,CAAClC,QAAQ,KAAK9Z,YAAY,GAAGM,cAAc,GAAGD,YAAY;IAEvF;IAEAk9C,OAAA,CAAKhhC,OAAO,GAAG,IAAIwgC,WAAW,CAAEpmC,MAAM,EAAEqF,OAAO,CAACtE,OAAO,EAAEsE,OAAO,CAACpE,KAAK,EAAEoE,OAAO,CAACnE,KAAK,EAAEmE,OAAO,CAAClE,SAAS,EAAEkE,OAAO,CAACjE,SAAS,EAAEiE,OAAO,CAAChE,MAAM,EAAEgE,OAAO,CAAC/sB,IAAI,EAAE+sB,OAAO,CAAC/D,UAAU,EAAE+D,OAAO,CAACzH,UAAW,CAAC;;IAEnM;IACA;IACA;;IAEA;IACA;IACA;;IAEAgpC,OAAA,CAAKhhC,OAAO,CAACrD,qBAAqB,GAAG,IAAI;IAEzCqkC,OAAA,CAAKhhC,OAAO,CAAC3D,eAAe,GAAGoD,OAAO,CAACpD,eAAe,KAAKnnB,SAAS,GAAGuqB,OAAO,CAACpD,eAAe,GAAG,KAAK;IACtG2kC,OAAA,CAAKhhC,OAAO,CAACxE,SAAS,GAAGiE,OAAO,CAACjE,SAAS,KAAKtmB,SAAS,GAAGuqB,OAAO,CAACjE,SAAS,GAAGzc,YAAY;IAAC,OAAAiiD,OAAA;EAE7F;EAACxnD,YAAA,CAAAqnD,qBAAA;IAAAlwD,GAAA;IAAAE,KAAA,EAED,SAAAqwD,2BAA4BlG,QAAQ,EAAEh7B,OAAO,EAAG;MAE/C,IAAI,CAACA,OAAO,CAACttB,IAAI,GAAGstB,OAAO,CAACttB,IAAI;MAChC,IAAI,CAACstB,OAAO,CAAChI,UAAU,GAAGgI,OAAO,CAAChI,UAAU;MAE5C,IAAI,CAACgI,OAAO,CAAC3D,eAAe,GAAG2D,OAAO,CAAC3D,eAAe;MACtD,IAAI,CAAC2D,OAAO,CAACxE,SAAS,GAAGwE,OAAO,CAACxE,SAAS;MAC1C,IAAI,CAACwE,OAAO,CAACzE,SAAS,GAAGyE,OAAO,CAACzE,SAAS;MAE1C,IAAM4lC,MAAM,GAAG;QAEdvG,QAAQ,EAAE;UACTwG,SAAS,EAAE;YAAEvwD,KAAK,EAAE;UAAK;QAC1B,CAAC;QAEDirD,YAAY,EAAE,8YAkBb;QAEDC,cAAc,EAAE;MAkBjB,CAAC;MAED,IAAMxvB,QAAQ,GAAG,IAAIwsB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAE3C,IAAMjZ,QAAQ,GAAG,IAAIyb,cAAc,CAAE;QAEpCxkD,IAAI,EAAE,qBAAqB;QAE3B6jD,QAAQ,EAAEH,aAAa,CAAE0G,MAAM,CAACvG,QAAS,CAAC;QAC1CkB,YAAY,EAAEqF,MAAM,CAACrF,YAAY;QACjCC,cAAc,EAAEoF,MAAM,CAACpF,cAAc;QACrCvY,IAAI,EAAEjoC,QAAQ;QACdgoC,QAAQ,EAAE7nC;MAEX,CAAE,CAAC;MAEHokC,QAAQ,CAAC8a,QAAQ,CAACwG,SAAS,CAACvwD,KAAK,GAAGmvB,OAAO;MAE3C,IAAMqhC,IAAI,GAAG,IAAI7J,IAAI,CAAEjrB,QAAQ,EAAEuT,QAAS,CAAC;MAE3C,IAAMwhB,gBAAgB,GAAGthC,OAAO,CAACxE,SAAS;;MAE1C;MACA,IAAKwE,OAAO,CAACxE,SAAS,KAAKtc,wBAAwB,EAAG8gB,OAAO,CAACxE,SAAS,GAAGzc,YAAY;MAEtF,IAAMupB,MAAM,GAAG,IAAIu2B,UAAU,CAAE,CAAC,EAAE,EAAE,EAAE,IAAK,CAAC;MAC5Cv2B,MAAM,CAACnF,MAAM,CAAE63B,QAAQ,EAAEqG,IAAK,CAAC;MAE/BrhC,OAAO,CAACxE,SAAS,GAAG8lC,gBAAgB;MAEpCD,IAAI,CAAC90B,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvBikC,IAAI,CAACvhB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAAksC,MAAOie,QAAQ,EAAE7jC,KAAK,EAAEyI,KAAK,EAAE2hC,OAAO,EAAG;MAExC,IAAMpB,mBAAmB,GAAGnF,QAAQ,CAACC,eAAe,CAAC,CAAC;MAEtD,KAAM,IAAIxkD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9BukD,QAAQ,CAACsF,eAAe,CAAE,IAAI,EAAE7pD,CAAE,CAAC;QAEnCukD,QAAQ,CAACje,KAAK,CAAE5lB,KAAK,EAAEyI,KAAK,EAAE2hC,OAAQ,CAAC;MAExC;MAEAvG,QAAQ,CAACsF,eAAe,CAAEH,mBAAoB,CAAC;IAEhD;EAAC;EAAA,OAAAU,qBAAA;AAAA,EA5IkCtgC,iBAAiB;AAAApwB,OAAA,CAAA0wD,qBAAA,GAAAA,qBAAA;AAgJrD,IAAMW,QAAQ,GAAG,aAAc,IAAIp6B,OAAO,CAAC,CAAC;AAC5C,IAAMq6B,QAAQ,GAAG,aAAc,IAAIr6B,OAAO,CAAC,CAAC;AAC5C,IAAMs6B,aAAa,GAAG,aAAc,IAAItwC,OAAO,CAAC,CAAC;AAAC,IAE5CuwC,KAAK;EAEV,SAAAA,MAAal4B,MAAM,GAAG,IAAIrC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAEgG,QAAQ,GAAG,CAAC,EAAG;IAAAp0B,eAAA,OAAA2oD,KAAA;IAE5D,IAAI,CAACC,OAAO,GAAG,IAAI;;IAEnB;;IAEA,IAAI,CAACn4B,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC2D,QAAQ,GAAGA,QAAQ;EAEzB;EAAC5zB,YAAA,CAAAmoD,KAAA;IAAAhxD,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKsd,MAAM,EAAE2D,QAAQ,EAAG;MAEvB,IAAI,CAAC3D,MAAM,CAAC7b,IAAI,CAAE6b,MAAO,CAAC;MAC1B,IAAI,CAAC2D,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAz8B,GAAA;IAAAE,KAAA,EAED,SAAAgxD,cAAeh5C,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAEC,CAAC,EAAG;MAE3B,IAAI,CAAC8L,MAAM,CAACtd,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEuU,CAAE,CAAC;MAC1B,IAAI,CAAC0P,QAAQ,GAAGzP,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAixD,8BAA+Br4B,MAAM,EAAEqC,KAAK,EAAG;MAE9C,IAAI,CAACrC,MAAM,CAAC7b,IAAI,CAAE6b,MAAO,CAAC;MAC1B,IAAI,CAAC2D,QAAQ,GAAG,CAAEtB,KAAK,CAAC3c,GAAG,CAAE,IAAI,CAACsa,MAAO,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAA94B,GAAA;IAAAE,KAAA,EAED,SAAA4wC,sBAAuBp2B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAEhC,IAAMke,MAAM,GAAG+3B,QAAQ,CAACpzC,UAAU,CAAE7C,CAAC,EAAED,CAAE,CAAC,CAAC8D,KAAK,CAAEqyC,QAAQ,CAACrzC,UAAU,CAAE/C,CAAC,EAAEC,CAAE,CAAE,CAAC,CAACwB,SAAS,CAAC,CAAC;;MAE3F;;MAEA,IAAI,CAACg1C,6BAA6B,CAAEr4B,MAAM,EAAEpe,CAAE,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAA1a,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMuf,KAAK,EAAG;MAEb,IAAI,CAAC1D,MAAM,CAAC7b,IAAI,CAAEuf,KAAK,CAAC1D,MAAO,CAAC;MAChC,IAAI,CAAC2D,QAAQ,GAAGD,KAAK,CAACC,QAAQ;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAAz8B,GAAA;IAAAE,KAAA,EAED,SAAAic,UAAA,EAAY;MAEX;;MAEA,IAAMi1C,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAACt4B,MAAM,CAACjzB,MAAM,CAAC,CAAC;MACtD,IAAI,CAACizB,MAAM,CAACnb,cAAc,CAAEyzC,mBAAoB,CAAC;MACjD,IAAI,CAAC30B,QAAQ,IAAI20B,mBAAmB;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAApxD,GAAA;IAAAE,KAAA,EAED,SAAAqe,OAAA,EAAS;MAER,IAAI,CAACke,QAAQ,IAAI,CAAE,CAAC;MACpB,IAAI,CAAC3D,MAAM,CAACva,MAAM,CAAC,CAAC;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAve,GAAA;IAAAE,KAAA,EAED,SAAAq9B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO,IAAI,CAACrC,MAAM,CAACta,GAAG,CAAE2c,KAAM,CAAC,GAAG,IAAI,CAACsB,QAAQ;IAEhD;EAAC;IAAAz8B,GAAA;IAAAE,KAAA,EAED,SAAAmxD,iBAAkBh1B,MAAM,EAAG;MAE1B,OAAO,IAAI,CAACkB,eAAe,CAAElB,MAAM,CAAC/b,MAAO,CAAC,GAAG+b,MAAM,CAACnD,MAAM;IAE7D;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAAoxD,aAAcn2B,KAAK,EAAE1yB,MAAM,EAAG;MAE7B,OAAOA,MAAM,CAACwU,IAAI,CAAEke,KAAM,CAAC,CAAC7d,eAAe,CAAE,IAAI,CAACwb,MAAM,EAAE,CAAE,IAAI,CAACyE,eAAe,CAAEpC,KAAM,CAAE,CAAC;IAE5F;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAAqxD,cAAeC,IAAI,EAAE/oD,MAAM,EAAG;MAE7B,IAAM62B,SAAS,GAAGkyB,IAAI,CAAC5yB,KAAK,CAAEiyB,QAAS,CAAC;MAExC,IAAM7xC,WAAW,GAAG,IAAI,CAAC8Z,MAAM,CAACta,GAAG,CAAE8gB,SAAU,CAAC;MAEhD,IAAKtgB,WAAW,KAAK,CAAC,EAAG;QAExB;QACA,IAAK,IAAI,CAACue,eAAe,CAAEi0B,IAAI,CAAC1P,KAAM,CAAC,KAAK,CAAC,EAAG;UAE/C,OAAOr5C,MAAM,CAACwU,IAAI,CAAEu0C,IAAI,CAAC1P,KAAM,CAAC;QAEjC;;QAEA;QACA,OAAO,IAAI;MAEZ;MAEA,IAAMppC,CAAC,GAAG,EAAI84C,IAAI,CAAC1P,KAAK,CAACtjC,GAAG,CAAE,IAAI,CAACsa,MAAO,CAAC,GAAG,IAAI,CAAC2D,QAAQ,CAAE,GAAGzd,WAAW;MAE3E,IAAKtG,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAG;QAErB,OAAO,IAAI;MAEZ;MAEA,OAAOjQ,MAAM,CAACwU,IAAI,CAAEu0C,IAAI,CAAC1P,KAAM,CAAC,CAACxkC,eAAe,CAAEgiB,SAAS,EAAE5mB,CAAE,CAAC;IAEjE;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAAuxD,eAAgBD,IAAI,EAAG;MAEtB;;MAEA,IAAME,SAAS,GAAG,IAAI,CAACn0B,eAAe,CAAEi0B,IAAI,CAAC1P,KAAM,CAAC;MACpD,IAAM6P,OAAO,GAAG,IAAI,CAACp0B,eAAe,CAAEi0B,IAAI,CAACzJ,GAAI,CAAC;MAEhD,OAAS2J,SAAS,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,IAAQA,OAAO,GAAG,CAAC,IAAID,SAAS,GAAG,CAAG;IAE5E;EAAC;IAAA1xD,GAAA;IAAAE,KAAA,EAED,SAAAi8B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAACwB,eAAe,CAAE,IAAK,CAAC;IAEnC;EAAC;IAAAv8B,GAAA;IAAAE,KAAA,EAED,SAAAk8B,iBAAkBC,MAAM,EAAG;MAE1B,OAAOA,MAAM,CAACE,eAAe,CAAE,IAAK,CAAC;IAEtC;EAAC;IAAAv8B,GAAA;IAAAE,KAAA,EAED,SAAA0xD,cAAenpD,MAAM,EAAG;MAEvB,OAAOA,MAAM,CAACwU,IAAI,CAAE,IAAI,CAAC6b,MAAO,CAAC,CAACnb,cAAc,CAAE,CAAE,IAAI,CAAC8e,QAAS,CAAC;IAEpE;EAAC;IAAAz8B,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcjI,MAAM,EAAE0sC,oBAAoB,EAAG;MAE5C,IAAM3nB,YAAY,GAAG2nB,oBAAoB,IAAId,aAAa,CAAC/sC,eAAe,CAAEmB,MAAO,CAAC;MAEpF,IAAM2sC,cAAc,GAAG,IAAI,CAACF,aAAa,CAAEf,QAAS,CAAC,CAACzjC,YAAY,CAAEjI,MAAO,CAAC;MAE5E,IAAM2T,MAAM,GAAG,IAAI,CAACA,MAAM,CAAChb,YAAY,CAAEosB,YAAa,CAAC,CAAC/tB,SAAS,CAAC,CAAC;MAEnE,IAAI,CAACsgB,QAAQ,GAAG,CAAEq1B,cAAc,CAACtzC,GAAG,CAAEsa,MAAO,CAAC;MAE9C,OAAO,IAAI;IAEZ;EAAC;IAAA94B,GAAA;IAAAE,KAAA,EAED,SAAA+kB,UAAWlF,MAAM,EAAG;MAEnB,IAAI,CAAC0c,QAAQ,IAAI1c,MAAM,CAACvB,GAAG,CAAE,IAAI,CAACsa,MAAO,CAAC;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAA94B,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQ2c,KAAK,EAAG;MAEf,OAAOA,KAAK,CAAC1D,MAAM,CAACjZ,MAAM,CAAE,IAAI,CAACiZ,MAAO,CAAC,IAAM0D,KAAK,CAACC,QAAQ,KAAK,IAAI,CAACA,QAAU;IAElF;EAAC;IAAAz8B,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAA+zC,KAAA;AAAA;AAAAxxD,OAAA,CAAAwxD,KAAA,GAAAA,KAAA;AAIF,IAAMe,SAAS,GAAG,aAAc,IAAI1zB,MAAM,CAAC,CAAC;AAC5C,IAAM2zB,SAAS,GAAG,aAAc,IAAIv7B,OAAO,CAAC,CAAC;AAAC,IAExCw7B,OAAO;EAEZ,SAAAA,QAAal0B,EAAE,GAAG,IAAIizB,KAAK,CAAC,CAAC,EAAEhzB,EAAE,GAAG,IAAIgzB,KAAK,CAAC,CAAC,EAAE/yB,EAAE,GAAG,IAAI+yB,KAAK,CAAC,CAAC,EAAE3e,EAAE,GAAG,IAAI2e,KAAK,CAAC,CAAC,EAAEkB,EAAE,GAAG,IAAIlB,KAAK,CAAC,CAAC,EAAEmB,EAAE,GAAG,IAAInB,KAAK,CAAC,CAAC,EAAG;IAAA3oD,eAAA,OAAA4pD,OAAA;IAEzH,IAAI,CAACG,MAAM,GAAG,CAAEr0B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEoU,EAAE,EAAE6f,EAAE,EAAEC,EAAE,CAAE;EAEzC;EAACtpD,YAAA,CAAAopD,OAAA;IAAAjyD,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKuiB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEoU,EAAE,EAAE6f,EAAE,EAAEC,EAAE,EAAG;MAE7B,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1BA,MAAM,CAAE,CAAC,CAAE,CAACn1C,IAAI,CAAE8gB,EAAG,CAAC;MACtBq0B,MAAM,CAAE,CAAC,CAAE,CAACn1C,IAAI,CAAE+gB,EAAG,CAAC;MACtBo0B,MAAM,CAAE,CAAC,CAAE,CAACn1C,IAAI,CAAEghB,EAAG,CAAC;MACtBm0B,MAAM,CAAE,CAAC,CAAE,CAACn1C,IAAI,CAAEo1B,EAAG,CAAC;MACtB+f,MAAM,CAAE,CAAC,CAAE,CAACn1C,IAAI,CAAEi1C,EAAG,CAAC;MACtBE,MAAM,CAAE,CAAC,CAAE,CAACn1C,IAAI,CAAEk1C,EAAG,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAnyD,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMo1C,OAAO,EAAG;MAEf,IAAMD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAItsD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9BssD,MAAM,CAAEtsD,CAAC,CAAE,CAACmX,IAAI,CAAEo1C,OAAO,CAACD,MAAM,CAAEtsD,CAAC,CAAG,CAAC;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAoyD,wBAAyBt6C,CAAC,EAAEivB,gBAAgB,GAAGrxB,qBAAqB,EAAG;MAEtE,IAAMw8C,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAM9wC,EAAE,GAAGtJ,CAAC,CAACgG,QAAQ;MACrB,IAAMu0C,GAAG,GAAGjxC,EAAE,CAAE,CAAC,CAAE;QAAEkxC,GAAG,GAAGlxC,EAAE,CAAE,CAAC,CAAE;QAAEmxC,GAAG,GAAGnxC,EAAE,CAAE,CAAC,CAAE;QAAEoxC,GAAG,GAAGpxC,EAAE,CAAE,CAAC,CAAE;MAChE,IAAMqxC,GAAG,GAAGrxC,EAAE,CAAE,CAAC,CAAE;QAAEsxC,GAAG,GAAGtxC,EAAE,CAAE,CAAC,CAAE;QAAEuxC,GAAG,GAAGvxC,EAAE,CAAE,CAAC,CAAE;QAAEwxC,GAAG,GAAGxxC,EAAE,CAAE,CAAC,CAAE;MAChE,IAAMyxC,GAAG,GAAGzxC,EAAE,CAAE,CAAC,CAAE;QAAE0xC,GAAG,GAAG1xC,EAAE,CAAE,CAAC,CAAE;QAAE2xC,IAAI,GAAG3xC,EAAE,CAAE,EAAE,CAAE;QAAE4xC,IAAI,GAAG5xC,EAAE,CAAE,EAAE,CAAE;MACpE,IAAM6xC,IAAI,GAAG7xC,EAAE,CAAE,EAAE,CAAE;QAAE8xC,IAAI,GAAG9xC,EAAE,CAAE,EAAE,CAAE;QAAE+xC,IAAI,GAAG/xC,EAAE,CAAE,EAAE,CAAE;QAAEgyC,IAAI,GAAGhyC,EAAE,CAAE,EAAE,CAAE;MAExE8wC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGH,GAAG,EAAEO,GAAG,GAAGH,GAAG,EAAEO,IAAI,GAAGH,GAAG,EAAEO,IAAI,GAAGH,IAAK,CAAC,CAACh3C,SAAS,CAAC,CAAC;MACtFi2C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGH,GAAG,EAAEO,GAAG,GAAGH,GAAG,EAAEO,IAAI,GAAGH,GAAG,EAAEO,IAAI,GAAGH,IAAK,CAAC,CAACh3C,SAAS,CAAC,CAAC;MACtFi2C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGF,GAAG,EAAEM,GAAG,GAAGF,GAAG,EAAEM,IAAI,GAAGF,GAAG,EAAEM,IAAI,GAAGF,IAAK,CAAC,CAACj3C,SAAS,CAAC,CAAC;MACtFi2C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGF,GAAG,EAAEM,GAAG,GAAGF,GAAG,EAAEM,IAAI,GAAGF,GAAG,EAAEM,IAAI,GAAGF,IAAK,CAAC,CAACj3C,SAAS,CAAC,CAAC;MACtFi2C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGD,GAAG,EAAEK,GAAG,GAAGD,GAAG,EAAEK,IAAI,GAAGD,IAAI,EAAEK,IAAI,GAAGD,IAAK,CAAC,CAACl3C,SAAS,CAAC,CAAC;MAEvF,IAAK8qB,gBAAgB,KAAKrxB,qBAAqB,EAAG;QAEjDw8C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGD,GAAG,EAAEK,GAAG,GAAGD,GAAG,EAAEK,IAAI,GAAGD,IAAI,EAAEK,IAAI,GAAGD,IAAK,CAAC,CAACl3C,SAAS,CAAC,CAAC;MAExF,CAAC,MAAM,IAAK8qB,gBAAgB,KAAKpxB,sBAAsB,EAAG;QAEzDu8C,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEuB,GAAG,EAAEI,GAAG,EAAEI,IAAI,EAAEI,IAAK,CAAC,CAACl3C,SAAS,CAAC,CAAC;MAE9D,CAAC,MAAM;QAEN,MAAM,IAAItY,KAAK,CAAE,sEAAsE,GAAGojC,gBAAiB,CAAC;MAE7G;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjnC,GAAA;IAAAE,KAAA,EAED,SAAAqzD,iBAAkBzsD,MAAM,EAAG;MAE1B,IAAKA,MAAM,CAAC86C,cAAc,KAAKr9C,SAAS,EAAG;QAE1C,IAAKuC,MAAM,CAAC86C,cAAc,KAAK,IAAI,EAAG96C,MAAM,CAAC47C,qBAAqB,CAAC,CAAC;QAEpEqP,SAAS,CAAC90C,IAAI,CAAEnW,MAAM,CAAC86C,cAAe,CAAC,CAACx0B,YAAY,CAAEtmB,MAAM,CAACkxB,WAAY,CAAC;MAE3E,CAAC,MAAM;QAEN,IAAM4D,QAAQ,GAAG90B,MAAM,CAAC80B,QAAQ;QAEhC,IAAKA,QAAQ,CAACgmB,cAAc,KAAK,IAAI,EAAGhmB,QAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;QAExEqP,SAAS,CAAC90C,IAAI,CAAE2e,QAAQ,CAACgmB,cAAe,CAAC,CAACx0B,YAAY,CAAEtmB,MAAM,CAACkxB,WAAY,CAAC;MAE7E;MAEA,OAAO,IAAI,CAACoE,gBAAgB,CAAE21B,SAAU,CAAC;IAE1C;EAAC;IAAA/xD,GAAA;IAAAE,KAAA,EAED,SAAAszD,iBAAkBC,MAAM,EAAG;MAE1B1B,SAAS,CAACzxC,MAAM,CAAC9E,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAC/Bu2C,SAAS,CAAC74B,MAAM,GAAG,kBAAkB;MACrC64B,SAAS,CAAC3kC,YAAY,CAAEqmC,MAAM,CAACz7B,WAAY,CAAC;MAE5C,OAAO,IAAI,CAACoE,gBAAgB,CAAE21B,SAAU,CAAC;IAE1C;EAAC;IAAA/xD,GAAA;IAAAE,KAAA,EAED,SAAAk8B,iBAAkBC,MAAM,EAAG;MAE1B,IAAM+1B,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAM9xC,MAAM,GAAG+b,MAAM,CAAC/b,MAAM;MAC5B,IAAMozC,SAAS,GAAG,CAAEr3B,MAAM,CAACnD,MAAM;MAEjC,KAAM,IAAIpzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAM2lC,QAAQ,GAAG2mB,MAAM,CAAEtsD,CAAC,CAAE,CAACy3B,eAAe,CAAEjd,MAAO,CAAC;QAEtD,IAAKmrB,QAAQ,GAAGioB,SAAS,EAAG;UAE3B,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA1zD,GAAA;IAAAE,KAAA,EAED,SAAAi8B,cAAepB,GAAG,EAAG;MAEpB,IAAMq3B,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAItsD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAM02B,KAAK,GAAG41B,MAAM,CAAEtsD,CAAC,CAAE;;QAEzB;;QAEAksD,SAAS,CAAC95C,CAAC,GAAGskB,KAAK,CAAC1D,MAAM,CAAC5gB,CAAC,GAAG,CAAC,GAAG6iB,GAAG,CAACljB,GAAG,CAACK,CAAC,GAAG6iB,GAAG,CAACnjB,GAAG,CAACM,CAAC;QACxD85C,SAAS,CAACx5C,CAAC,GAAGgkB,KAAK,CAAC1D,MAAM,CAACtgB,CAAC,GAAG,CAAC,GAAGuiB,GAAG,CAACljB,GAAG,CAACW,CAAC,GAAGuiB,GAAG,CAACnjB,GAAG,CAACY,CAAC;QACxDw5C,SAAS,CAACjlC,CAAC,GAAGyP,KAAK,CAAC1D,MAAM,CAAC/L,CAAC,GAAG,CAAC,GAAGgO,GAAG,CAACljB,GAAG,CAACkV,CAAC,GAAGgO,GAAG,CAACnjB,GAAG,CAACmV,CAAC;QAExD,IAAKyP,KAAK,CAACe,eAAe,CAAEy0B,SAAU,CAAC,GAAG,CAAC,EAAG;UAE7C,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhyD,GAAA;IAAAE,KAAA,EAED,SAAA87B,cAAeb,KAAK,EAAG;MAEtB,IAAMi3B,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAItsD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAKssD,MAAM,CAAEtsD,CAAC,CAAE,CAACy3B,eAAe,CAAEpC,KAAM,CAAC,GAAG,CAAC,EAAG;UAE/C,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAg1C,OAAA;AAAA;AAAAzyD,OAAA,CAAAyyD,OAAA,GAAAA,OAAA;AAIF,SAAS0B,cAAcA,CAAA,EAAG;EAEzB,IAAIlyD,OAAO,GAAG,IAAI;EAClB,IAAImyD,WAAW,GAAG,KAAK;EACvB,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAIC,SAAS,GAAG,IAAI;EAEpB,SAASC,gBAAgBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;IAExCJ,aAAa,CAAEG,IAAI,EAAEC,KAAM,CAAC;IAE5BH,SAAS,GAAGryD,OAAO,CAACyyD,qBAAqB,CAAEH,gBAAiB,CAAC;EAE9D;EAEA,OAAO;IAENjS,KAAK,EAAE,SAAAA,MAAA,EAAY;MAElB,IAAK8R,WAAW,KAAK,IAAI,EAAG;MAC5B,IAAKC,aAAa,KAAK,IAAI,EAAG;MAE9BC,SAAS,GAAGryD,OAAO,CAACyyD,qBAAqB,CAAEH,gBAAiB,CAAC;MAE7DH,WAAW,GAAG,IAAI;IAEnB,CAAC;IAEDvsD,IAAI,EAAE,SAAAA,KAAA,EAAY;MAEjB5F,OAAO,CAAC0yD,oBAAoB,CAAEL,SAAU,CAAC;MAEzCF,WAAW,GAAG,KAAK;IAEpB,CAAC;IAEDQ,gBAAgB,EAAE,SAAAA,iBAAWj/B,QAAQ,EAAG;MAEvC0+B,aAAa,GAAG1+B,QAAQ;IAEzB,CAAC;IAEDk/B,UAAU,EAAE,SAAAA,WAAWn0D,KAAK,EAAG;MAE9BuB,OAAO,GAAGvB,KAAK;IAEhB;EAED,CAAC;AAEF;AAEA,SAASo0D,eAAeA,CAAEC,EAAE,EAAEC,YAAY,EAAG;EAE5C,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;EAE7B,SAASC,YAAYA,CAAE10C,SAAS,EAAE20C,UAAU,EAAG;IAE9C,IAAMl+C,KAAK,GAAGuJ,SAAS,CAACvJ,KAAK;IAC7B,IAAMonC,KAAK,GAAG79B,SAAS,CAAC69B,KAAK;IAE7B,IAAMt4B,MAAM,GAAG8uC,EAAE,CAACK,YAAY,CAAC,CAAC;IAEhCL,EAAE,CAACO,UAAU,CAAED,UAAU,EAAEpvC,MAAO,CAAC;IACnC8uC,EAAE,CAACQ,UAAU,CAAEF,UAAU,EAAEl+C,KAAK,EAAEonC,KAAM,CAAC;IAEzC79B,SAAS,CAACg+B,gBAAgB,CAAC,CAAC;IAE5B,IAAIn8C,IAAI;IAER,IAAK4U,KAAK,YAAYiF,YAAY,EAAG;MAEpC7Z,IAAI,GAAGwyD,EAAE,CAACS,KAAK;IAEhB,CAAC,MAAM,IAAKr+C,KAAK,YAAYmF,WAAW,EAAG;MAE1C,IAAKoE,SAAS,CAACogC,wBAAwB,EAAG;QAEzC,IAAKmU,QAAQ,EAAG;UAEf1yD,IAAI,GAAGwyD,EAAE,CAACU,UAAU;QAErB,CAAC,MAAM;UAEN,MAAM,IAAIpxD,KAAK,CAAE,yEAA0E,CAAC;QAE7F;MAED,CAAC,MAAM;QAEN9B,IAAI,GAAGwyD,EAAE,CAACW,cAAc;MAEzB;IAED,CAAC,MAAM,IAAKv+C,KAAK,YAAYsF,UAAU,EAAG;MAEzCla,IAAI,GAAGwyD,EAAE,CAACY,KAAK;IAEhB,CAAC,MAAM,IAAKx+C,KAAK,YAAYkF,WAAW,EAAG;MAE1C9Z,IAAI,GAAGwyD,EAAE,CAACa,YAAY;IAEvB,CAAC,MAAM,IAAKz+C,KAAK,YAAYqF,UAAU,EAAG;MAEzCja,IAAI,GAAGwyD,EAAE,CAACc,GAAG;IAEd,CAAC,MAAM,IAAK1+C,KAAK,YAAYuF,SAAS,EAAG;MAExCna,IAAI,GAAGwyD,EAAE,CAACe,IAAI;IAEf,CAAC,MAAM,IAAK3+C,KAAK,YAAYoF,UAAU,EAAG;MAEzCha,IAAI,GAAGwyD,EAAE,CAACgB,aAAa;IAExB,CAAC,MAAM,IAAK5+C,KAAK,YAAY2O,iBAAiB,EAAG;MAEhDvjB,IAAI,GAAGwyD,EAAE,CAACgB,aAAa;IAExB,CAAC,MAAM;MAEN,MAAM,IAAI1xD,KAAK,CAAE,yDAAyD,GAAG8S,KAAM,CAAC;IAErF;IAEA,OAAO;MACN8O,MAAM,EAAEA,MAAM;MACd1jB,IAAI,EAAEA,IAAI;MACVyzD,eAAe,EAAE7+C,KAAK,CAAC8+C,iBAAiB;MACxCpsC,OAAO,EAAEnJ,SAAS,CAACmJ;IACpB,CAAC;EAEF;EAEA,SAASqsC,YAAYA,CAAEjwC,MAAM,EAAEvF,SAAS,EAAE20C,UAAU,EAAG;IAEtD,IAAMl+C,KAAK,GAAGuJ,SAAS,CAACvJ,KAAK;IAC7B,IAAMqnC,WAAW,GAAG99B,SAAS,CAAC89B,WAAW;IAEzCuW,EAAE,CAACO,UAAU,CAAED,UAAU,EAAEpvC,MAAO,CAAC;IAEnC,IAAKu4B,WAAW,CAACvsB,KAAK,KAAK,CAAE,CAAC,EAAG;MAEhC;;MAEA8iC,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAE,CAAC,EAAEl+C,KAAM,CAAC;IAEzC,CAAC,MAAM;MAEN,IAAK89C,QAAQ,EAAG;QAEfF,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAE7W,WAAW,CAACj+B,MAAM,GAAGpJ,KAAK,CAAC8+C,iBAAiB,EACzE9+C,KAAK,EAAEqnC,WAAW,CAACj+B,MAAM,EAAEi+B,WAAW,CAACvsB,KAAM,CAAC;MAEhD,CAAC,MAAM;QAEN8iC,EAAE,CAACoB,aAAa,CAAEd,UAAU,EAAE7W,WAAW,CAACj+B,MAAM,GAAGpJ,KAAK,CAAC8+C,iBAAiB,EACzE9+C,KAAK,CAACi/C,QAAQ,CAAE5X,WAAW,CAACj+B,MAAM,EAAEi+B,WAAW,CAACj+B,MAAM,GAAGi+B,WAAW,CAACvsB,KAAM,CAAE,CAAC;MAEhF;MAEAusB,WAAW,CAACvsB,KAAK,GAAG,CAAE,CAAC,CAAC,CAAC;IAE1B;;IAEAvR,SAAS,CAACg+B,gBAAgB,CAAC,CAAC;EAE7B;;EAEA;;EAEA,SAASzhC,GAAGA,CAAEyD,SAAS,EAAG;IAEzB,IAAKA,SAAS,CAACmlC,4BAA4B,EAAGnlC,SAAS,GAAGA,SAAS,CAAC+I,IAAI;IAExE,OAAOyrC,OAAO,CAACj4C,GAAG,CAAEyD,SAAU,CAAC;EAEhC;EAEA,SAASgsB,MAAMA,CAAEhsB,SAAS,EAAG;IAE5B,IAAKA,SAAS,CAACmlC,4BAA4B,EAAGnlC,SAAS,GAAGA,SAAS,CAAC+I,IAAI;IAExE,IAAMA,IAAI,GAAGyrC,OAAO,CAACj4C,GAAG,CAAEyD,SAAU,CAAC;IAErC,IAAK+I,IAAI,EAAG;MAEXsrC,EAAE,CAACsB,YAAY,CAAE5sC,IAAI,CAACxD,MAAO,CAAC;MAE9BivC,OAAO,CAACoB,MAAM,CAAE51C,SAAU,CAAC;IAE5B;EAED;EAEA,SAASsS,MAAMA,CAAEtS,SAAS,EAAE20C,UAAU,EAAG;IAExC,IAAK30C,SAAS,CAAC0iC,mBAAmB,EAAG;MAEpC,IAAMmT,MAAM,GAAGrB,OAAO,CAACj4C,GAAG,CAAEyD,SAAU,CAAC;MAEvC,IAAK,CAAE61C,MAAM,IAAIA,MAAM,CAAC1sC,OAAO,GAAGnJ,SAAS,CAACmJ,OAAO,EAAG;QAErDqrC,OAAO,CAACl5C,GAAG,CAAE0E,SAAS,EAAE;UACvBuF,MAAM,EAAEvF,SAAS,CAACuF,MAAM;UACxB1jB,IAAI,EAAEme,SAAS,CAACne,IAAI;UACpByzD,eAAe,EAAEt1C,SAAS,CAAC81C,WAAW;UACtC3sC,OAAO,EAAEnJ,SAAS,CAACmJ;QACpB,CAAE,CAAC;MAEJ;MAEA;IAED;IAEA,IAAKnJ,SAAS,CAACmlC,4BAA4B,EAAGnlC,SAAS,GAAGA,SAAS,CAAC+I,IAAI;IAExE,IAAMA,IAAI,GAAGyrC,OAAO,CAACj4C,GAAG,CAAEyD,SAAU,CAAC;IAErC,IAAK+I,IAAI,KAAK1kB,SAAS,EAAG;MAEzBmwD,OAAO,CAACl5C,GAAG,CAAE0E,SAAS,EAAE00C,YAAY,CAAE10C,SAAS,EAAE20C,UAAW,CAAE,CAAC;IAEhE,CAAC,MAAM,IAAK5rC,IAAI,CAACI,OAAO,GAAGnJ,SAAS,CAACmJ,OAAO,EAAG;MAE9CqsC,YAAY,CAAEzsC,IAAI,CAACxD,MAAM,EAAEvF,SAAS,EAAE20C,UAAW,CAAC;MAElD5rC,IAAI,CAACI,OAAO,GAAGnJ,SAAS,CAACmJ,OAAO;IAEjC;EAED;EAEA,OAAO;IAEN5M,GAAG,EAAEA,GAAG;IACRyvB,MAAM,EAAEA,MAAM;IACd1Z,MAAM,EAAEA;EAET,CAAC;AAEF;AAAC,IAEKyjC,aAAa,0BAAAC,gBAAA;EAAA9rC,SAAA,CAAA6rC,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA7rC,YAAA,CAAA2rC,aAAA;EAElB,SAAAA,cAAa5tC,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEigC,aAAa,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAG;IAAA,IAAA4N,OAAA;IAAA/tD,eAAA,OAAA4tD,aAAA;IAE3EG,OAAA,GAAAD,QAAA,CAAAn0D,IAAA;IAEAo0D,OAAA,CAAKr0D,IAAI,GAAG,eAAe;IAE3Bq0D,OAAA,CAAKvnB,UAAU,GAAG;MACjBxmB,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdigC,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA;IACjB,CAAC;IAED,IAAM6N,UAAU,GAAGhuC,KAAK,GAAG,CAAC;IAC5B,IAAMiuC,WAAW,GAAGhuC,MAAM,GAAG,CAAC;IAE9B,IAAM4gC,KAAK,GAAGlyC,IAAI,CAACsC,KAAK,CAAEivC,aAAc,CAAC;IACzC,IAAMY,KAAK,GAAGnyC,IAAI,CAACsC,KAAK,CAAEkvC,cAAe,CAAC;IAE1C,IAAMiB,MAAM,GAAGP,KAAK,GAAG,CAAC;IACxB,IAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAC;IAExB,IAAMoN,aAAa,GAAGluC,KAAK,GAAG6gC,KAAK;IACnC,IAAMsN,cAAc,GAAGluC,MAAM,GAAG6gC,KAAK;;IAErC;;IAEA,IAAMnG,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;IAEd,KAAM,IAAI5rB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGmyB,MAAM,EAAEnyB,EAAE,EAAG,EAAG;MAEtC,IAAM/e,CAAC,GAAG+e,EAAE,GAAGi/B,cAAc,GAAGF,WAAW;MAE3C,KAAM,IAAIh/B,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGmyB,MAAM,EAAEnyB,EAAE,EAAG,EAAG;QAEtC,IAAMpf,CAAC,GAAGof,EAAE,GAAGi/B,aAAa,GAAGF,UAAU;QAEzCzN,QAAQ,CAACtjD,IAAI,CAAE4S,CAAC,EAAE,CAAEM,CAAC,EAAE,CAAE,CAAC;QAE1B0qC,OAAO,CAAC59C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAEvB69C,GAAG,CAAC79C,IAAI,CAAEgyB,EAAE,GAAG4xB,KAAM,CAAC;QACtB/F,GAAG,CAAC79C,IAAI,CAAE,CAAC,GAAKiyB,EAAE,GAAG4xB,KAAQ,CAAC;MAE/B;IAED;IAEA,KAAM,IAAI5xB,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAG4xB,KAAK,EAAE5xB,IAAE,EAAG,EAAG;MAErC,KAAM,IAAID,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAG4xB,KAAK,EAAE5xB,IAAE,EAAG,EAAG;QAErC,IAAM5c,CAAC,GAAG4c,IAAE,GAAGmyB,MAAM,GAAGlyB,IAAE;QAC1B,IAAM5c,CAAC,GAAG2c,IAAE,GAAGmyB,MAAM,IAAKlyB,IAAE,GAAG,CAAC,CAAE;QAClC,IAAM3c,CAAC,GAAK0c,IAAE,GAAG,CAAC,GAAKmyB,MAAM,IAAKlyB,IAAE,GAAG,CAAC,CAAE;QAC1C,IAAMnU,CAAC,GAAKkU,IAAE,GAAG,CAAC,GAAKmyB,MAAM,GAAGlyB,IAAE;QAElCyrB,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;QACvB4/B,OAAO,CAAC19C,IAAI,CAAEqV,CAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;MAExB;IAED;IAEAgzC,OAAA,CAAKpU,QAAQ,CAAEgB,OAAQ,CAAC;IACxBoT,OAAA,CAAKlU,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EwN,OAAA,CAAKlU,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEkT,OAAA,CAAKlU,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAiT,OAAA;EAEjE;EAACvtD,YAAA,CAAAotD,aAAA;IAAAj2D,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAsZ,aAAA,CAAAt2D,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAIgtC,aAAa,CAAEhtC,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACs/B,aAAa,EAAEt/B,IAAI,CAACu/B,cAAe,CAAC;IAE7F;EAAC;EAAA,OAAAyN,aAAA;AAAA,EA1F0B7U,cAAc;AAAA5hD,OAAA,CAAAy2D,aAAA,GAAAA,aAAA;AA8F1C,IAAIQ,kBAAkB,GAAG,qGAAqG;AAE9H,IAAIC,uBAAuB,GAAG,iyCAAiyC;AAE/zC,IAAIC,iBAAiB,GAAG,wFAAwF;AAEhH,IAAIC,sBAAsB,GAAG,4DAA4D;AAEzF,IAAIC,kBAAkB,GAAG,4EAA4E;AAErG,IAAIC,uBAAuB,GAAG,0DAA0D;AAExF,IAAIC,cAAc,GAAG,saAAsa;AAE3b,IAAIC,mBAAmB,GAAG,uFAAuF;AAEjH,IAAIC,YAAY,GAAG,qGAAqG;AAExH,IAAIC,kBAAkB,GAAG,8GAA8G;AAEvI,IAAIC,KAAK,GAAG,srBAAsrB;AAElsB,IAAIC,oBAAoB,GAAG,g1FAAg1F;AAE32F,IAAIC,qBAAqB,GAAG,s4BAAs4B;AAEl6B,IAAIC,wBAAwB,GAAG,4nBAA4nB;AAE3pB,IAAIC,6BAA6B,GAAG,2HAA2H;AAE/J,IAAIC,2BAA2B,GAAG,oEAAoE;AAEtG,IAAIC,sBAAsB,GAAG,0EAA0E;AAEvG,IAAIC,cAAc,GAAG,8HAA8H;AAEnJ,IAAIC,mBAAmB,GAAG,oHAAoH;AAE9I,IAAIC,iBAAiB,GAAG,uJAAuJ;AAE/K,IAAIC,YAAY,GAAG,gRAAgR;AAEnS,IAAIC,MAAM,GAAG,k3FAAk3F;AAE/3F,IAAIC,2BAA2B,GAAG,gqHAAgqH;AAElsH,IAAIC,oBAAoB,GAAG,0jBAA0jB;AAErlB,IAAIC,2BAA2B,GAAG,iJAAiJ;AAEnL,IAAIC,sBAAsB,GAAG,iLAAiL;AAE9M,IAAIC,oBAAoB,GAAG,iJAAiJ;AAE5K,IAAIC,yBAAyB,GAAG,kEAAkE;AAElG,IAAIC,mBAAmB,GAAG,qDAAqD;AAE/E,IAAIC,wBAAwB,GAAG,4QAA4Q;AAE3S,IAAIC,eAAe,GAAG,8qCAA8qC;AAEpsC,IAAIC,2BAA2B,GAAG,4MAA4M;AAE9O,IAAIC,oBAAoB,GAAG,8UAA8U;AAEzW,IAAIC,kBAAkB,GAAG,qTAAqT;AAE9U,IAAIC,aAAa,GAAG,2oBAA2oB;AAE/pB,IAAIC,UAAU,GAAG,uDAAuD;AAExE,IAAIC,eAAe,GAAG,oDAAoD;AAE1E,IAAIC,YAAY,GAAG,0RAA0R;AAE7S,IAAIC,iBAAiB,GAAG,0MAA0M;AAElO,IAAIC,yBAAyB,GAAG,6cAA6c;AAE7e,IAAIC,iBAAiB,GAAG,sNAAsN;AAE9O,IAAIC,sBAAsB,GAAG,gGAAgG;AAE7H,IAAIC,uBAAuB,GAAG,qHAAqH;AAEnJ,IAAIC,4BAA4B,GAAG,21BAA21B;AAE93B,IAAIC,iBAAiB,GAAG,ovJAAovJ;AAE5wJ,IAAIC,6BAA6B,GAAG,08CAA08C;AAE9+C,IAAIC,oBAAoB,GAAG,mEAAmE;AAE9F,IAAIC,yBAAyB,GAAG,yxBAAyxB;AAEzzB,IAAIC,qBAAqB,GAAG,qMAAqM;AAEjO,IAAIC,0BAA0B,GAAG,inCAAinC;AAElpC,IAAIC,wBAAwB,GAAG,uvHAAuvH;AAEtxH,IAAIC,6BAA6B,GAAG,49cAA49c;AAEhgd,IAAIC,qBAAqB,GAAG,otKAAotK;AAEhvK,IAAIC,oBAAoB,GAAG,m4BAAm4B;AAE95B,IAAIC,mBAAmB,GAAG,0QAA0Q;AAEpS,IAAIC,oBAAoB,GAAG,kLAAkL;AAE7M,IAAIC,yBAAyB,GAAG,wKAAwK;AAExM,IAAIC,uBAAuB,GAAG,qLAAqL;AAEnN,IAAIC,kBAAkB,GAAG,8XAA8X;AAEvZ,IAAIC,YAAY,GAAG,oaAAoa;AAEvb,IAAIC,iBAAiB,GAAG,kDAAkD;AAE1E,IAAIC,qBAAqB,GAAG,yWAAyW;AAErY,IAAIC,0BAA0B,GAAG,8QAA8Q;AAE/S,IAAIC,qBAAqB,GAAG,kLAAkL;AAE9M,IAAIC,0BAA0B,GAAG,oEAAoE;AAErG,IAAIC,iBAAiB,GAAG,4eAA4e;AAEpgB,IAAIC,kBAAkB,GAAG,8jBAA8jB;AAEvlB,IAAIC,uBAAuB,GAAG,i1BAAi1B;AAE/2B,IAAIC,kBAAkB,GAAG,s2BAAs2B;AAE/3B,IAAIC,qBAAqB,GAAG,syCAAsyC;AAEl0C,IAAIC,oBAAoB,GAAG,+jBAA+jB;AAE1lB,IAAIC,oBAAoB,GAAG,gJAAgJ;AAE3K,IAAIC,kBAAkB,GAAG,gJAAgJ;AAEzK,IAAIC,aAAa,GAAG,kOAAkO;AAEtP,IAAIC,uBAAuB,GAAG,o2BAAo2B;AAEl4B,IAAIC,+BAA+B,GAAG,wEAAwE;AAE9G,IAAIC,8BAA8B,GAAG,6OAA6O;AAElR,IAAIC,uBAAuB,GAAG,kRAAkR;AAEhT,IAAIC,yBAAyB,GAAG,mKAAmK;AAEnM,IAAIC,eAAe,GAAG,qLAAqL;AAE3M,IAAIC,OAAO,GAAG,quDAAquD;AAEnvD,IAAIC,4BAA4B,GAAG,2EAA2E;AAE9G,IAAIC,cAAc,GAAG,mNAAmN;AAExO,IAAIC,kBAAkB,GAAG,+EAA+E;AAExG,IAAIC,uBAAuB,GAAG,0UAA0U;AAExW,IAAIC,qBAAqB,GAAG,kLAAkL;AAE9M,IAAIC,0BAA0B,GAAG,oEAAoE;AAErG,IAAIC,uBAAuB,GAAG,y7RAAy7R;AAEv9R,IAAIC,qBAAqB,GAAG,izCAAizC;AAE70C,IAAIC,gBAAgB,GAAG,g+CAAg+C;AAEv/C,IAAIC,wBAAwB,GAAG,g5CAAg5C;AAE/6C,IAAIC,eAAe,GAAG,iOAAiO;AAEvP,IAAIC,oBAAoB,GAAG,oyBAAoyB;AAE/zB,IAAIC,eAAe,GAAG,8XAA8X;AAEpZ,IAAIC,iBAAiB,GAAG,odAAod;AAE5e,IAAIC,oBAAoB,GAAG,oMAAoM;AAE/N,IAAIC,yBAAyB,GAAG,kEAAkE;AAElG,IAAIC,oBAAoB,GAAG,4FAA4F;AAEvH,IAAIC,yBAAyB,GAAG,+yCAA+yC;AAE/0C,IAAIC,qBAAqB,GAAG,6kCAA6kC;AAEzmC,IAAIC,0BAA0B,GAAG,ijKAAijK;AAEllK,IAAIC,gBAAgB,GAAG,qnDAAqnD;AAE5oD,IAAIC,cAAc,GAAG,ggFAAggF;AAErhF,IAAIC,SAAS,GAAG,wtFAAwtF;AAExuF,IAAIC,eAAe,GAAG,8UAA8U;AAEpW,IAAMC,QAAQ,GAAG,6JAA6J;AAE9K,IAAMC,UAAU,GAAG,qgBAAqgB;AAExhB,IAAMC,QAAQ,GAAG,gOAAgO;AAEjP,IAAMC,UAAU,GAAG,6wBAA6wB;AAEhyB,IAAMC,QAAQ,GAAG,gOAAgO;AAEjP,IAAMC,UAAU,GAAG,0VAA0V;AAE7W,IAAMC,QAAQ,GAAG,uuBAAuuB;AAExvB,IAAMC,UAAU,GAAG,k8BAAk8B;AAEr9B,IAAMC,QAAQ,GAAG,itBAAitB;AAEluB,IAAMC,UAAU,GAAG,qyBAAqyB;AAExzB,IAAMC,QAAQ,GAAG,8LAA8L;AAE/M,IAAMC,UAAU,GAAG,yTAAyT;AAE5U,IAAMC,QAAQ,GAAG,inBAAinB;AAEloB,IAAMC,UAAU,GAAG,81BAA81B;AAEj3B,IAAMC,QAAQ,GAAG,83BAA83B;AAE/4B,IAAMC,UAAU,GAAG,mqDAAmqD;AAEtrD,IAAMC,QAAQ,GAAG,4kCAA4kC;AAE7lC,IAAMC,UAAU,GAAG,69DAA69D;AAEh/D,IAAMC,QAAQ,GAAG,i7BAAi7B;AAEl8B,IAAMC,UAAU,GAAG,8iDAA8iD;AAEjkD,IAAMC,QAAQ,GAAG,m/BAAm/B;AAEpgC,IAAMC,UAAU,GAAG,6qBAA6qB;AAEhsB,IAAMC,QAAQ,GAAG,0kCAA0kC;AAE3lC,IAAMC,UAAU,GAAG,2kEAA2kE;AAE9lE,IAAMC,QAAQ,GAAG,2pCAA2pC;AAE5qC,IAAMC,UAAU,GAAG,6hIAA6hI;AAEhjI,IAAMC,QAAQ,GAAG,8gCAA8gC;AAE/hC,IAAMC,UAAU,GAAG,00DAA00D;AAE71D,IAAMC,QAAQ,GAAG,q3BAAq3B;AAEt4B,IAAMC,UAAU,GAAG,k0BAAk0B;AAEr1B,IAAMC,QAAQ,GAAG,6lBAA6lB;AAE9mB,IAAMC,UAAU,GAAG,4eAA4e;AAE/f,IAAMC,QAAQ,GAAG,qnCAAqnC;AAEtoC,IAAMC,UAAU,GAAG,wyBAAwyB;AAE3zB,IAAMC,WAAW,GAAG;EACnB3I,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,iBAAiB,EAAEA,iBAAiB;EACpCC,sBAAsB,EAAEA,sBAAsB;EAC9CC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,YAAY,EAAEA,YAAY;EAC1BC,kBAAkB,EAAEA,kBAAkB;EACtCC,KAAK,EAAEA,KAAK;EACZC,oBAAoB,EAAEA,oBAAoB;EAC1CC,qBAAqB,EAAEA,qBAAqB;EAC5CC,wBAAwB,EAAEA,wBAAwB;EAClDC,6BAA6B,EAAEA,6BAA6B;EAC5DC,2BAA2B,EAAEA,2BAA2B;EACxDC,sBAAsB,EAAEA,sBAAsB;EAC9CC,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,iBAAiB,EAAEA,iBAAiB;EACpCC,YAAY,EAAEA,YAAY;EAC1BC,MAAM,EAAEA,MAAM;EACdC,2BAA2B,EAAEA,2BAA2B;EACxDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,2BAA2B,EAAEA,2BAA2B;EACxDC,sBAAsB,EAAEA,sBAAsB;EAC9CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,mBAAmB,EAAEA,mBAAmB;EACxCC,wBAAwB,EAAEA,wBAAwB;EAClDC,eAAe,EAAEA,eAAe;EAChCC,2BAA2B,EAAEA,2BAA2B;EACxDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,kBAAkB,EAAEA,kBAAkB;EACtCY,6BAA6B,EAAEA,6BAA6B;EAC5DX,aAAa,EAAEA,aAAa;EAC5BC,UAAU,EAAEA,UAAU;EACtBC,eAAe,EAAEA,eAAe;EAChCC,YAAY,EAAEA,YAAY;EAC1BC,iBAAiB,EAAEA,iBAAiB;EACpCC,yBAAyB,EAAEA,yBAAyB;EACpDC,iBAAiB,EAAEA,iBAAiB;EACpCC,sBAAsB,EAAEA,sBAAsB;EAC9CC,uBAAuB,EAAEA,uBAAuB;EAChDC,4BAA4B,EAAEA,4BAA4B;EAC1DC,iBAAiB,EAAEA,iBAAiB;EACpCE,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,wBAAwB,EAAEA,wBAAwB;EAClDC,6BAA6B,EAAEA,6BAA6B;EAC5DC,qBAAqB,EAAEA,qBAAqB;EAC5CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,mBAAmB,EAAEA,mBAAmB;EACxCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,uBAAuB,EAAEA,uBAAuB;EAChDC,kBAAkB,EAAEA,kBAAkB;EACtCC,YAAY,EAAEA,YAAY;EAC1BC,iBAAiB,EAAEA,iBAAiB;EACpCC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,iBAAiB,EAAEA,iBAAiB;EACpCC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,kBAAkB,EAAEA,kBAAkB;EACtCC,qBAAqB,EAAEA,qBAAqB;EAC5CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,kBAAkB,EAAEA,kBAAkB;EACtCC,aAAa,EAAEA,aAAa;EAC5BC,uBAAuB,EAAEA,uBAAuB;EAChDC,+BAA+B,EAAEA,+BAA+B;EAChEC,8BAA8B,EAAEA,8BAA8B;EAC9DC,uBAAuB,EAAEA,uBAAuB;EAChDC,yBAAyB,EAAEA,yBAAyB;EACpDC,eAAe,EAAEA,eAAe;EAChCC,OAAO,EAAEA,OAAO;EAChBC,4BAA4B,EAAEA,4BAA4B;EAC1DC,cAAc,EAAEA,cAAc;EAC9BC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,uBAAuB,EAAEA,uBAAuB;EAChDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,gBAAgB,EAAEA,gBAAgB;EAClCC,wBAAwB,EAAEA,wBAAwB;EAClDC,eAAe,EAAEA,eAAe;EAChCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,eAAe,EAAEA,eAAe;EAChCC,iBAAiB,EAAEA,iBAAiB;EACpCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,gBAAgB,EAAEA,gBAAgB;EAClCC,cAAc,EAAEA,cAAc;EAC9BC,SAAS,EAAEA,SAAS;EACpBC,eAAe,EAAEA,eAAe;EAEhCoC,eAAe,EAAEnC,QAAQ;EACzBoC,eAAe,EAAEnC,UAAU;EAC3BoC,mBAAmB,EAAEnC,QAAQ;EAC7BoC,mBAAmB,EAAEnC,UAAU;EAC/BoC,SAAS,EAAEnC,QAAQ;EACnBoC,SAAS,EAAEnC,UAAU;EACrBoC,UAAU,EAAEnC,QAAQ;EACpBoC,UAAU,EAAEnC,UAAU;EACtBoC,iBAAiB,EAAEnC,QAAQ;EAC3BoC,iBAAiB,EAAEnC,UAAU;EAC7BoC,aAAa,EAAEnC,QAAQ;EACvBoC,aAAa,EAAEnC,UAAU;EACzBoC,eAAe,EAAEnC,QAAQ;EACzBoC,eAAe,EAAEnC,UAAU;EAC3BoC,cAAc,EAAEnC,QAAQ;EACxBoC,cAAc,EAAEnC,UAAU;EAC1BoC,gBAAgB,EAAEnC,QAAQ;EAC1BoC,gBAAgB,EAAEnC,UAAU;EAC5BoC,eAAe,EAAEnC,QAAQ;EACzBoC,eAAe,EAAEnC,UAAU;EAC3BoC,eAAe,EAAEnC,QAAQ;EACzBoC,eAAe,EAAEnC,UAAU;EAC3BoC,cAAc,EAAEnC,QAAQ;EACxBoC,cAAc,EAAEnC,UAAU;EAC1BoC,iBAAiB,EAAEnC,QAAQ;EAC3BoC,iBAAiB,EAAEnC,UAAU;EAC7BoC,aAAa,EAAEnC,QAAQ;EACvBoC,aAAa,EAAEnC,UAAU;EACzBoC,WAAW,EAAEnC,QAAQ;EACrBoC,WAAW,EAAEnC,UAAU;EACvBoC,WAAW,EAAEnC,QAAQ;EACrBoC,WAAW,EAAEnC,UAAU;EACvBoC,WAAW,EAAEnC,QAAQ;EACrBoC,WAAW,EAAEnC;AACd,CAAC;;AAED;AACA;AACA;AAFA3/D,OAAA,CAAA4/D,WAAA,GAAAA,WAAA;AAIA,IAAMmC,WAAW,GAAG;EAEnBzJ,MAAM,EAAE;IAEP0J,OAAO,EAAE;MAAEthE,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;IAAE,CAAC;IACvDrH,OAAO,EAAE;MAAE7yC,KAAK,EAAE;IAAI,CAAC;IAEvBg3C,GAAG,EAAE;MAAEh3C,KAAK,EAAE;IAAK,CAAC;IACpBuhE,YAAY,EAAE;MAAEvhE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAEpD22B,QAAQ,EAAE;MAAEl3C,KAAK,EAAE;IAAK,CAAC;IACzBwhE,iBAAiB,EAAE;MAAExhE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAEzD84B,SAAS,EAAE;MAAEr5C,KAAK,EAAE;IAAE;EAEvB,CAAC;EAEDyhE,WAAW,EAAE;IAEZvpB,WAAW,EAAE;MAAEl4C,KAAK,EAAE;IAAK,CAAC;IAC5B0hE,oBAAoB,EAAE;MAAE1hE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE;EAE5D,CAAC;EAEDohD,MAAM,EAAE;IAEPtpB,MAAM,EAAE;MAAEr4C,KAAK,EAAE;IAAK,CAAC;IACvB4hE,UAAU,EAAE;MAAE5hE,KAAK,EAAE,CAAE;IAAE,CAAC;IAC1Bw4C,YAAY,EAAE;MAAEx4C,KAAK,EAAE;IAAI,CAAC;IAAE;IAC9B6hE,GAAG,EAAE;MAAE7hE,KAAK,EAAE;IAAI,CAAC;IAAE;IACrBy4C,eAAe,EAAE;MAAEz4C,KAAK,EAAE;IAAK,CAAC,CAAE;EAEnC,CAAC;;EAED8hE,KAAK,EAAE;IAENzqB,KAAK,EAAE;MAAEr3C,KAAK,EAAE;IAAK,CAAC;IACtBs3C,cAAc,EAAE;MAAEt3C,KAAK,EAAE;IAAE,CAAC;IAC5B+hE,cAAc,EAAE;MAAE/hE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE;EAEtD,CAAC;EAEDyhD,QAAQ,EAAE;IAET7qB,QAAQ,EAAE;MAAEn3C,KAAK,EAAE;IAAK,CAAC;IACzBo3C,iBAAiB,EAAE;MAAEp3C,KAAK,EAAE;IAAE,CAAC;IAC/BiiE,iBAAiB,EAAE;MAAEjiE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE;EAEzD,CAAC;EAED2hD,OAAO,EAAE;IAER3qB,OAAO,EAAE;MAAEv3C,KAAK,EAAE;IAAK,CAAC;IACxBmiE,gBAAgB,EAAE;MAAEniE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACxDi3B,SAAS,EAAE;MAAEx3C,KAAK,EAAE;IAAE;EAEvB,CAAC;EAEDoiE,SAAS,EAAE;IAEV3qB,SAAS,EAAE;MAAEz3C,KAAK,EAAE;IAAK,CAAC;IAC1BqiE,kBAAkB,EAAE;MAAEriE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAC1Do3B,WAAW,EAAE;MAAE33C,KAAK,EAAE,aAAc,IAAIoc,OAAO,CAAE,CAAC,EAAE,CAAE;IAAE;EAEzD,CAAC;EAEDkmD,eAAe,EAAE;IAEhB1qB,eAAe,EAAE;MAAE53C,KAAK,EAAE;IAAK,CAAC;IAChCuiE,wBAAwB,EAAE;MAAEviE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAChEs3B,iBAAiB,EAAE;MAAE73C,KAAK,EAAE;IAAE,CAAC;IAC/B83C,gBAAgB,EAAE;MAAE93C,KAAK,EAAE;IAAE;EAE9B,CAAC;EAEDwiE,WAAW,EAAE;IAEZvqB,WAAW,EAAE;MAAEj4C,KAAK,EAAE;IAAK,CAAC;IAC5ByiE,oBAAoB,EAAE;MAAEziE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE;EAE5D,CAAC;EAEDmiD,YAAY,EAAE;IAEb1qB,YAAY,EAAE;MAAEh4C,KAAK,EAAE;IAAK,CAAC;IAC7B2iE,qBAAqB,EAAE;MAAE3iE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE;EAE7D,CAAC;EAEDqiD,YAAY,EAAE;IAEb7qB,YAAY,EAAE;MAAE/3C,KAAK,EAAE;IAAK,CAAC;IAC7B6iE,qBAAqB,EAAE;MAAE7iE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE;EAE7D,CAAC;EAEDuiD,WAAW,EAAE;IAEZpqB,WAAW,EAAE;MAAE14C,KAAK,EAAE;IAAK;EAE5B,CAAC;EAED25C,GAAG,EAAE;IAEJopB,UAAU,EAAE;MAAE/iE,KAAK,EAAE;IAAQ,CAAC;IAC9BgjE,OAAO,EAAE;MAAEhjE,KAAK,EAAE;IAAE,CAAC;IACrBijE,MAAM,EAAE;MAAEjjE,KAAK,EAAE;IAAK,CAAC;IACvBkjE,QAAQ,EAAE;MAAEljE,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;IAAE;EAExD,CAAC;EAEDiR,MAAM,EAAE;IAEPgY,iBAAiB,EAAE;MAAEnjE,KAAK,EAAE;IAAG,CAAC;IAEhCojE,UAAU,EAAE;MAAEpjE,KAAK,EAAE;IAAG,CAAC;IAEzBqjE,iBAAiB,EAAE;MAAErjE,KAAK,EAAE,EAAE;MAAEsjE,UAAU,EAAE;QAC3ClkC,SAAS,EAAE,CAAC,CAAC;QACb9Y,KAAK,EAAE,CAAC;MACT;IAAE,CAAC;IAEHi9C,uBAAuB,EAAE;MAAEvjE,KAAK,EAAE,EAAE;MAAEsjE,UAAU,EAAE;QACjDE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC;MACjB;IAAE,CAAC;IAEHC,oBAAoB,EAAE;MAAE5jE,KAAK,EAAE;IAAG,CAAC;IACnC6jE,uBAAuB,EAAE;MAAE7jE,KAAK,EAAE;IAAG,CAAC;IAEtC8jE,UAAU,EAAE;MAAE9jE,KAAK,EAAE,EAAE;MAAEsjE,UAAU,EAAE;QACpCh9C,KAAK,EAAE,CAAC,CAAC;QACTsV,QAAQ,EAAE,CAAC,CAAC;QACZwD,SAAS,EAAE,CAAC,CAAC;QACbmM,QAAQ,EAAE,CAAC,CAAC;QACZw4B,OAAO,EAAE,CAAC,CAAC;QACXC,WAAW,EAAE,CAAC,CAAC;QACfC,KAAK,EAAE,CAAC;MACT;IAAE,CAAC;IAEHC,gBAAgB,EAAE;MAAElkE,KAAK,EAAE,EAAE;MAAEsjE,UAAU,EAAE;QAC1CE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC;MACjB;IAAE,CAAC;IAEHQ,YAAY,EAAE;MAAEnkE,KAAK,EAAE;IAAG,CAAC;IAC3BokE,aAAa,EAAE;MAAEpkE,KAAK,EAAE;IAAG,CAAC;IAC5BqkE,eAAe,EAAE;MAAErkE,KAAK,EAAE;IAAG,CAAC;IAE9BskE,WAAW,EAAE;MAAEtkE,KAAK,EAAE,EAAE;MAAEsjE,UAAU,EAAE;QACrCh9C,KAAK,EAAE,CAAC,CAAC;QACTsV,QAAQ,EAAE,CAAC,CAAC;QACZqoC,KAAK,EAAE,CAAC,CAAC;QACT14B,QAAQ,EAAE,CAAC;MACZ;IAAE,CAAC;IAEHg5B,iBAAiB,EAAE;MAAEvkE,KAAK,EAAE,EAAE;MAAEsjE,UAAU,EAAE;QAC3CE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC,CAAC;QACjBa,gBAAgB,EAAE,CAAC,CAAC;QACpBC,eAAe,EAAE,CAAC;MACnB;IAAE,CAAC;IAEHC,cAAc,EAAE;MAAE1kE,KAAK,EAAE;IAAG,CAAC;IAC7B2kE,iBAAiB,EAAE;MAAE3kE,KAAK,EAAE;IAAG,CAAC;IAEhC4kE,gBAAgB,EAAE;MAAE5kE,KAAK,EAAE,EAAE;MAAEsjE,UAAU,EAAE;QAC1ClkC,SAAS,EAAE,CAAC,CAAC;QACbylC,QAAQ,EAAE,CAAC,CAAC;QACZC,WAAW,EAAE,CAAC;MACf;IAAE,CAAC;IAEH;IACAC,cAAc,EAAE;MAAE/kE,KAAK,EAAE,EAAE;MAAEsjE,UAAU,EAAE;QACxCh9C,KAAK,EAAE,CAAC,CAAC;QACTsV,QAAQ,EAAE,CAAC,CAAC;QACZzT,KAAK,EAAE,CAAC,CAAC;QACTC,MAAM,EAAE,CAAC;MACV;IAAE,CAAC;IAEH48C,KAAK,EAAE;MAAEhlE,KAAK,EAAE;IAAK,CAAC;IACtBilE,KAAK,EAAE;MAAEjlE,KAAK,EAAE;IAAK;EAEtB,CAAC;EAEDs6B,MAAM,EAAE;IAEPgnC,OAAO,EAAE;MAAEthE,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;IAAE,CAAC;IACvDrH,OAAO,EAAE;MAAE7yC,KAAK,EAAE;IAAI,CAAC;IACvBw6B,IAAI,EAAE;MAAEx6B,KAAK,EAAE;IAAI,CAAC;IACpB0kB,KAAK,EAAE;MAAE1kB,KAAK,EAAE;IAAI,CAAC;IACrBg3C,GAAG,EAAE;MAAEh3C,KAAK,EAAE;IAAK,CAAC;IACpBk3C,QAAQ,EAAE;MAAEl3C,KAAK,EAAE;IAAK,CAAC;IACzBwhE,iBAAiB,EAAE;MAAExhE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACzD84B,SAAS,EAAE;MAAEr5C,KAAK,EAAE;IAAE,CAAC;IACvBklE,WAAW,EAAE;MAAEllE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE;EAEnD,CAAC;EAEDgzC,MAAM,EAAE;IAEP+N,OAAO,EAAE;MAAEthE,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;IAAE,CAAC;IACvDrH,OAAO,EAAE;MAAE7yC,KAAK,EAAE;IAAI,CAAC;IACvBogB,MAAM,EAAE;MAAEpgB,KAAK,EAAE,aAAc,IAAIoc,OAAO,CAAE,GAAG,EAAE,GAAI;IAAE,CAAC;IACxDmI,QAAQ,EAAE;MAAEvkB,KAAK,EAAE;IAAI,CAAC;IACxBg3C,GAAG,EAAE;MAAEh3C,KAAK,EAAE;IAAK,CAAC;IACpBuhE,YAAY,EAAE;MAAEvhE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACpD22B,QAAQ,EAAE;MAAEl3C,KAAK,EAAE;IAAK,CAAC;IACzBwhE,iBAAiB,EAAE;MAAExhE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACzD84B,SAAS,EAAE;MAAEr5C,KAAK,EAAE;IAAE;EAEvB;AAED,CAAC;AAACV,OAAA,CAAA+hE,WAAA,GAAAA,WAAA;AAEF,IAAM8D,SAAS,GAAG;EAEjBC,KAAK,EAAE;IAENrb,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAAC1nB,GAAG,CACd,CAAC;IAEHsR,YAAY,EAAEiU,WAAW,CAACe,cAAc;IACxC/U,cAAc,EAAEgU,WAAW,CAACgB;EAE7B,CAAC;EAEDmF,OAAO,EAAE;IAERtb,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAAC1nB,GAAG,EACf0nB,WAAW,CAAClW,MAAM,EAClB;MACCtV,QAAQ,EAAE;QAAE71C,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;MAAE;IACxD,CAAC,CACA,CAAC;IAEH+Q,YAAY,EAAEiU,WAAW,CAACiB,gBAAgB;IAC1CjV,cAAc,EAAEgU,WAAW,CAACkB;EAE7B,CAAC;EAEDkF,KAAK,EAAE;IAENvb,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAAC1nB,GAAG,EACf0nB,WAAW,CAAClW,MAAM,EAClB;MACCtV,QAAQ,EAAE;QAAE71C,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;MAAE,CAAC;MACxDnE,QAAQ,EAAE;QAAE/1C,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;MAAE,CAAC;MACxDhE,SAAS,EAAE;QAAEl2C,KAAK,EAAE;MAAG;IACxB,CAAC,CACA,CAAC;IAEHirD,YAAY,EAAEiU,WAAW,CAACuB,cAAc;IACxCvV,cAAc,EAAEgU,WAAW,CAACwB;EAE7B,CAAC;EAED6E,QAAQ,EAAE;IAETxb,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACM,MAAM,EAClBN,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACuB,YAAY,EACxBvB,WAAW,CAACqB,YAAY,EACxBrB,WAAW,CAAC1nB,GAAG,EACf0nB,WAAW,CAAClW,MAAM,EAClB;MACCtV,QAAQ,EAAE;QAAE71C,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;MAAE,CAAC;MACxD1E,SAAS,EAAE;QAAEx1C,KAAK,EAAE;MAAI,CAAC;MACzBy1C,SAAS,EAAE;QAAEz1C,KAAK,EAAE;MAAI,CAAC;MACzBu4C,eAAe,EAAE;QAAEv4C,KAAK,EAAE;MAAE,CAAC,CAAC;IAC/B,CAAC,CACA,CAAC;;IAEHirD,YAAY,EAAEiU,WAAW,CAACyB,iBAAiB;IAC3CzV,cAAc,EAAEgU,WAAW,CAAC0B;EAE7B,CAAC;EAED4E,IAAI,EAAE;IAELzb,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACS,KAAK,EACjBT,WAAW,CAACW,QAAQ,EACpBX,WAAW,CAACmB,WAAW,EACvBnB,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAACyB,WAAW,EACvBzB,WAAW,CAAC1nB,GAAG,EACf0nB,WAAW,CAAClW,MAAM,EAClB;MACCtV,QAAQ,EAAE;QAAE71C,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;MAAE;IACxD,CAAC,CACA,CAAC;IAEH+Q,YAAY,EAAEiU,WAAW,CAAC2B,aAAa;IACvC3V,cAAc,EAAEgU,WAAW,CAAC4B;EAE7B,CAAC;EAED7pB,MAAM,EAAE;IAEP8S,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3BjB,WAAW,CAAC1nB,GAAG,EACf;MACC1C,MAAM,EAAE;QAAEj3C,KAAK,EAAE;MAAK;IACvB,CAAC,CACA,CAAC;IAEHirD,YAAY,EAAEiU,WAAW,CAACmB,eAAe;IACzCnV,cAAc,EAAEgU,WAAW,CAACoB;EAE7B,CAAC;EAEDhmC,MAAM,EAAE;IAEPyvB,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAAC/mC,MAAM,EAClB+mC,WAAW,CAAC1nB,GAAG,CACd,CAAC;IAEHsR,YAAY,EAAEiU,WAAW,CAAC6B,WAAW;IACrC7V,cAAc,EAAEgU,WAAW,CAAC8B;EAE7B,CAAC;EAEDyE,MAAM,EAAE;IAEP1b,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAAC1nB,GAAG,EACf;MACCj1B,KAAK,EAAE;QAAE1kB,KAAK,EAAE;MAAE,CAAC;MACnBm5C,QAAQ,EAAE;QAAEn5C,KAAK,EAAE;MAAE,CAAC;MACtB0lE,SAAS,EAAE;QAAE1lE,KAAK,EAAE;MAAE;IACvB,CAAC,CACA,CAAC;IAEHirD,YAAY,EAAEiU,WAAW,CAACa,eAAe;IACzC7U,cAAc,EAAEgU,WAAW,CAACc;EAE7B,CAAC;EAEDjxC,KAAK,EAAE;IAENg7B,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACiB,eAAe,CAC1B,CAAC;IAEHrX,YAAY,EAAEiU,WAAW,CAACO,UAAU;IACpCvU,cAAc,EAAEgU,WAAW,CAACQ;EAE7B,CAAC;EAED9mC,MAAM,EAAE;IAEPmxB,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACa,OAAO,EACnBb,WAAW,CAACe,SAAS,EACrBf,WAAW,CAACiB,eAAe,EAC3B;MACCzvB,OAAO,EAAE;QAAE7yC,KAAK,EAAE;MAAI;IACvB,CAAC,CACA,CAAC;IAEHirD,YAAY,EAAEiU,WAAW,CAACqB,eAAe;IACzCrV,cAAc,EAAEgU,WAAW,CAACsB;EAE7B,CAAC;EAEDjN,MAAM,EAAE;IAEPxJ,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAAC9N,MAAM,EAClB8N,WAAW,CAAC1nB,GAAG,CACd,CAAC;IAEHsR,YAAY,EAAEiU,WAAW,CAACiC,WAAW;IACrCjW,cAAc,EAAEgU,WAAW,CAACkC;EAE7B,CAAC;EAED/yB,UAAU,EAAE;IAEX0b,QAAQ,EAAE;MACTmb,WAAW,EAAE;QAAEllE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;MAAE,CAAC;MACnDolD,GAAG,EAAE;QAAE3lE,KAAK,EAAE;MAAK,CAAC;MACpB4lE,mBAAmB,EAAE;QAAE5lE,KAAK,EAAE;MAAE;IACjC,CAAC;IAEDirD,YAAY,EAAEiU,WAAW,CAACC,eAAe;IACzCjU,cAAc,EAAEgU,WAAW,CAACE;EAE7B,CAAC;EAEDyG,cAAc,EAAE;IAEf9b,QAAQ,EAAE;MACT1R,MAAM,EAAE;QAAEr4C,KAAK,EAAE;MAAK,CAAC;MACvB4hE,UAAU,EAAE;QAAE5hE,KAAK,EAAE,CAAE;MAAE,CAAC;MAC1B8lE,oBAAoB,EAAE;QAAE9lE,KAAK,EAAE;MAAE,CAAC;MAClC4lE,mBAAmB,EAAE;QAAE5lE,KAAK,EAAE;MAAE;IACjC,CAAC;IAEDirD,YAAY,EAAEiU,WAAW,CAACG,mBAAmB;IAC7CnU,cAAc,EAAEgU,WAAW,CAACI;EAE7B,CAAC;EAEDyG,IAAI,EAAE;IAELhc,QAAQ,EAAE;MACTic,KAAK,EAAE;QAAEhmE,KAAK,EAAE;MAAK,CAAC;MACtBimE,KAAK,EAAE;QAAEjmE,KAAK,EAAE,CAAE;MAAE,CAAC;MACrB6yC,OAAO,EAAE;QAAE7yC,KAAK,EAAE;MAAI;IACvB,CAAC;IAEDirD,YAAY,EAAEiU,WAAW,CAACK,SAAS;IACnCrU,cAAc,EAAEgU,WAAW,CAACM;EAE7B,CAAC;EAED0G,QAAQ,EAAE;IAETnc,QAAQ,EAAE;MACTwG,SAAS,EAAE;QAAEvwD,KAAK,EAAE;MAAK;IAC1B,CAAC;IAEDirD,YAAY,EAAEiU,WAAW,CAACW,aAAa;IACvC3U,cAAc,EAAEgU,WAAW,CAACY;EAE7B,CAAC;EAEDqG,YAAY,EAAE;IAEbpc,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAACzJ,MAAM,EAClByJ,WAAW,CAACiB,eAAe,EAC3B;MACC8D,iBAAiB,EAAE;QAAEpmE,KAAK,EAAE,aAAc,IAAIu2B,OAAO,CAAC;MAAE,CAAC;MACzD8vC,YAAY,EAAE;QAAErmE,KAAK,EAAE;MAAE,CAAC;MAC1BsmE,WAAW,EAAE;QAAEtmE,KAAK,EAAE;MAAK;IAC5B,CAAC,CACA,CAAC;IAEHirD,YAAY,EAAEiU,WAAW,CAACS,iBAAiB;IAC3CzU,cAAc,EAAEgU,WAAW,CAACU;EAE7B,CAAC;EAED2G,MAAM,EAAE;IAEPxc,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCuX,WAAW,CAAClW,MAAM,EAClBkW,WAAW,CAAC1nB,GAAG,EACf;MACCrzB,KAAK,EAAE;QAAEtmB,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,OAAQ;MAAE,CAAC;MACpDrH,OAAO,EAAE;QAAE7yC,KAAK,EAAE;MAAI;IACvB,CAAC,CACA,CAAC;IAEHirD,YAAY,EAAEiU,WAAW,CAAC+B,WAAW;IACrC/V,cAAc,EAAEgU,WAAW,CAACgC;EAE7B;AAED,CAAC;AAAC5hE,OAAA,CAAA6lE,SAAA,GAAAA,SAAA;AAEFA,SAAS,CAACqB,QAAQ,GAAG;EAEpBzc,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqb,SAAS,CAACI,QAAQ,CAACxb,QAAQ,EAC3B;IACC5T,SAAS,EAAE;MAAEn2C,KAAK,EAAE;IAAE,CAAC;IACvBq2C,YAAY,EAAE;MAAEr2C,KAAK,EAAE;IAAK,CAAC;IAC7BymE,qBAAqB,EAAE;MAAEzmE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAC7Dg2B,kBAAkB,EAAE;MAAEv2C,KAAK,EAAE;IAAK,CAAC;IACnC0mE,2BAA2B,EAAE;MAAE1mE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACnEi2B,oBAAoB,EAAE;MAAEx2C,KAAK,EAAE,aAAc,IAAIoc,OAAO,CAAE,CAAC,EAAE,CAAE;IAAE,CAAC;IAClEg6B,kBAAkB,EAAE;MAAEp2C,KAAK,EAAE;IAAE,CAAC;IAChCs2C,qBAAqB,EAAE;MAAEt2C,KAAK,EAAE;IAAK,CAAC;IACtC2mE,8BAA8B,EAAE;MAAE3mE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACtEk2B,WAAW,EAAE;MAAEz2C,KAAK,EAAE;IAAE,CAAC;IACzB42C,cAAc,EAAE;MAAE52C,KAAK,EAAE;IAAK,CAAC;IAC/B4mE,uBAAuB,EAAE;MAAE5mE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAC/Dm2B,cAAc,EAAE;MAAE12C,KAAK,EAAE;IAAI,CAAC;IAC9B6mE,2BAA2B,EAAE;MAAE7mE,KAAK,EAAE;IAAI,CAAC;IAC3C8mE,2BAA2B,EAAE;MAAE9mE,KAAK,EAAE;IAAI,CAAC;IAC3C62C,uBAAuB,EAAE;MAAE72C,KAAK,EAAE;IAAK,CAAC;IACxC+mE,gCAAgC,EAAE;MAAE/mE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACxEm1B,KAAK,EAAE;MAAE11C,KAAK,EAAE;IAAE,CAAC;IACnB21C,UAAU,EAAE;MAAE31C,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;IAAE,CAAC;IAC1D8sB,aAAa,EAAE;MAAEhnE,KAAK,EAAE;IAAK,CAAC;IAC9BinE,sBAAsB,EAAE;MAAEjnE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAC9Dq1B,cAAc,EAAE;MAAE51C,KAAK,EAAE;IAAE,CAAC;IAC5BknE,iBAAiB,EAAE;MAAElnE,KAAK,EAAE;IAAK,CAAC;IAClCmnE,0BAA0B,EAAE;MAAEnnE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAClEo4B,YAAY,EAAE;MAAE34C,KAAK,EAAE;IAAE,CAAC;IAC1B44C,eAAe,EAAE;MAAE54C,KAAK,EAAE;IAAK,CAAC;IAChConE,wBAAwB,EAAE;MAAEpnE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAChE8mD,uBAAuB,EAAE;MAAErnE,KAAK,EAAE,aAAc,IAAIoc,OAAO,CAAC;IAAE,CAAC;IAC/DkrD,sBAAsB,EAAE;MAAEtnE,KAAK,EAAE;IAAK,CAAC;IACvC64C,SAAS,EAAE;MAAE74C,KAAK,EAAE;IAAE,CAAC;IACvB84C,YAAY,EAAE;MAAE94C,KAAK,EAAE;IAAK,CAAC;IAC7BunE,qBAAqB,EAAE;MAAEvnE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IAC7Dw4B,mBAAmB,EAAE;MAAE/4C,KAAK,EAAE;IAAE,CAAC;IACjCg5C,gBAAgB,EAAE;MAAEh5C,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,QAAS;IAAE,CAAC;IAChEjE,aAAa,EAAE;MAAEj2C,KAAK,EAAE,aAAc,IAAIk6C,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE;IAAE,CAAC;IAC5D9B,gBAAgB,EAAE;MAAEp4C,KAAK,EAAE;IAAK,CAAC;IACjCwnE,yBAAyB,EAAE;MAAExnE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACjEy1B,iBAAiB,EAAE;MAAEh2C,KAAK,EAAE;IAAE,CAAC;IAC/Bm4C,oBAAoB,EAAE;MAAEn4C,KAAK,EAAE;IAAK,CAAC;IACrCynE,6BAA6B,EAAE;MAAEznE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE,CAAC;IACrEmnD,gBAAgB,EAAE;MAAE1nE,KAAK,EAAE,aAAc,IAAIoc,OAAO,CAAC;IAAE,CAAC;IACxD26B,aAAa,EAAE;MAAE/2C,KAAK,EAAE;IAAK,CAAC;IAC9B2nE,sBAAsB,EAAE;MAAE3nE,KAAK,EAAE,aAAc,IAAIugB,OAAO,CAAC;IAAE;EAC9D,CAAC,CACA,CAAC;EAEH0qC,YAAY,EAAEiU,WAAW,CAACyB,iBAAiB;EAC3CzV,cAAc,EAAEgU,WAAW,CAAC0B;AAE7B,CAAC;AAED,IAAMgH,IAAI,GAAG;EAAE3jD,CAAC,EAAE,CAAC;EAAExJ,CAAC,EAAE,CAAC;EAAE2I,CAAC,EAAE;AAAE,CAAC;AAEjC,SAASykD,eAAeA,CAAE1d,QAAQ,EAAE2d,QAAQ,EAAEC,UAAU,EAAErkE,KAAK,EAAEskE,OAAO,EAAEzoD,KAAK,EAAEq1B,kBAAkB,EAAG;EAErG,IAAMqzB,UAAU,GAAG,IAAI/tB,KAAK,CAAE,QAAS,CAAC;EACxC,IAAIguB,UAAU,GAAG3oD,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;EAEvC,IAAI4oD,SAAS;EACb,IAAIC,OAAO;EAEX,IAAIC,iBAAiB,GAAG,IAAI;EAC5B,IAAIC,wBAAwB,GAAG,CAAC;EAChC,IAAIC,kBAAkB,GAAG,IAAI;EAE7B,SAAS7Y,MAAMA,CAAE8Y,UAAU,EAAEpZ,KAAK,EAAG;IAEpC,IAAIqZ,UAAU,GAAG,KAAK;IACtB,IAAIp6B,UAAU,GAAG+gB,KAAK,CAAChhB,OAAO,KAAK,IAAI,GAAGghB,KAAK,CAAC/gB,UAAU,GAAG,IAAI;IAEjE,IAAKA,UAAU,IAAIA,UAAU,CAACrjB,SAAS,EAAG;MAEzC,IAAM09C,QAAQ,GAAGtZ,KAAK,CAAC0W,oBAAoB,GAAG,CAAC,CAAC,CAAC;MACjDz3B,UAAU,GAAG,CAAEq6B,QAAQ,GAAGX,UAAU,GAAGD,QAAQ,EAAGvrD,GAAG,CAAE8xB,UAAW,CAAC;IAEpE;IAEA,IAAKA,UAAU,KAAK,IAAI,EAAG;MAE1Bs6B,QAAQ,CAAEV,UAAU,EAAEC,UAAW,CAAC;IAEnC,CAAC,MAAM,IAAK75B,UAAU,IAAIA,UAAU,CAACC,OAAO,EAAG;MAE9Cq6B,QAAQ,CAAEt6B,UAAU,EAAE,CAAE,CAAC;MACzBo6B,UAAU,GAAG,IAAI;IAElB;IAEA,IAAMG,oBAAoB,GAAGze,QAAQ,CAACqF,EAAE,CAACqZ,uBAAuB,CAAC,CAAC;IAElE,IAAKD,oBAAoB,KAAK,UAAU,EAAG;MAE1CllE,KAAK,CAAC8wD,OAAO,CAACluC,KAAK,CAACqiD,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE/zB,kBAAmB,CAAC;IAE/D,CAAC,MAAM,IAAKg0B,oBAAoB,KAAK,aAAa,EAAG;MAEpDllE,KAAK,CAAC8wD,OAAO,CAACluC,KAAK,CAACqiD,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE/zB,kBAAmB,CAAC;IAE/D;IAEA,IAAKuV,QAAQ,CAAC2e,SAAS,IAAIL,UAAU,EAAG;MAEvCte,QAAQ,CAACje,KAAK,CAAEie,QAAQ,CAAC4e,cAAc,EAAE5e,QAAQ,CAAC6e,cAAc,EAAE7e,QAAQ,CAAC8e,gBAAiB,CAAC;IAE9F;IAEA,IAAK56B,UAAU,KAAMA,UAAU,CAAC0hB,aAAa,IAAI1hB,UAAU,CAAC/jB,OAAO,KAAK7c,uBAAuB,CAAE,EAAG;MAEnG,IAAK26D,OAAO,KAAK/jE,SAAS,EAAG;QAE5B+jE,OAAO,GAAG,IAAIzhB,IAAI,CACjB,IAAIuB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAC1B,IAAIwC,cAAc,CAAE;UACnBxkD,IAAI,EAAE,wBAAwB;UAC9B6jD,QAAQ,EAAEH,aAAa,CAAEub,SAAS,CAACU,cAAc,CAAC9b,QAAS,CAAC;UAC5DkB,YAAY,EAAEka,SAAS,CAACU,cAAc,CAAC5a,YAAY;UACnDC,cAAc,EAAEia,SAAS,CAACU,cAAc,CAAC3a,cAAc;UACvDvY,IAAI,EAAEjoC,QAAQ;UACd6oC,SAAS,EAAE,KAAK;UAChBC,UAAU,EAAE,KAAK;UACjBmG,GAAG,EAAE;QACN,CAAE,CACH,CAAC;QAEDyuB,OAAO,CAAC1sC,QAAQ,CAACumB,eAAe,CAAE,QAAS,CAAC;QAC5CmmB,OAAO,CAAC1sC,QAAQ,CAACumB,eAAe,CAAE,IAAK,CAAC;QAExCmmB,OAAO,CAACz9B,cAAc,GAAG,UAAWwf,QAAQ,EAAEiF,KAAK,EAAE33B,MAAM,EAAG;UAE7D,IAAI,CAACK,WAAW,CAAC2K,YAAY,CAAEhL,MAAM,CAACK,WAAY,CAAC;QAEpD,CAAC;;QAED;QACAt4B,MAAM,CAACI,cAAc,CAAEwoE,OAAO,CAACn5B,QAAQ,EAAE,QAAQ,EAAE;UAElD1yB,GAAG,EAAE,SAAAA,IAAA,EAAY;YAEhB,OAAO,IAAI,CAACwtC,QAAQ,CAAC1R,MAAM,CAACr4C,KAAK;UAElC;QAED,CAAE,CAAC;QAEHgoE,OAAO,CAAC11C,MAAM,CAAE81C,OAAQ,CAAC;MAE1B;MAEAA,OAAO,CAACn5B,QAAQ,CAAC8a,QAAQ,CAAC1R,MAAM,CAACr4C,KAAK,GAAGquC,UAAU;MACnD+5B,OAAO,CAACn5B,QAAQ,CAAC8a,QAAQ,CAAC6X,UAAU,CAAC5hE,KAAK,GAAKquC,UAAU,CAAC0hB,aAAa,IAAI1hB,UAAU,CAACviB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MACjIs8C,OAAO,CAACn5B,QAAQ,CAAC8a,QAAQ,CAAC+b,oBAAoB,CAAC9lE,KAAK,GAAGovD,KAAK,CAAC0W,oBAAoB;MACjFsC,OAAO,CAACn5B,QAAQ,CAAC8a,QAAQ,CAAC6b,mBAAmB,CAAC5lE,KAAK,GAAGovD,KAAK,CAACwW,mBAAmB;MAC/EwC,OAAO,CAACn5B,QAAQ,CAAC6F,UAAU,GAAKzG,UAAU,CAAClnB,UAAU,KAAKjU,cAAc,GAAK,KAAK,GAAG,IAAI;MAEzF,IAAKm1D,iBAAiB,KAAKh6B,UAAU,IACpCi6B,wBAAwB,KAAKj6B,UAAU,CAACllB,OAAO,IAC/Co/C,kBAAkB,KAAKpe,QAAQ,CAAC+e,WAAW,EAAG;QAE9Cd,OAAO,CAACn5B,QAAQ,CAAC7iB,WAAW,GAAG,IAAI;QAEnCi8C,iBAAiB,GAAGh6B,UAAU;QAC9Bi6B,wBAAwB,GAAGj6B,UAAU,CAACllB,OAAO;QAC7Co/C,kBAAkB,GAAGpe,QAAQ,CAAC+e,WAAW;MAE1C;MAEAd,OAAO,CAAC9/B,MAAM,CAACJ,SAAS,CAAC,CAAC;;MAE1B;MACAsgC,UAAU,CAACW,OAAO,CAAEf,OAAO,EAAEA,OAAO,CAAC1sC,QAAQ,EAAE0sC,OAAO,CAACn5B,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAK,CAAC;IAE9E,CAAC,MAAM,IAAKZ,UAAU,IAAIA,UAAU,CAACrjB,SAAS,EAAG;MAEhD,IAAKm9C,SAAS,KAAK9jE,SAAS,EAAG;QAE9B8jE,SAAS,GAAG,IAAIxhB,IAAI,CACnB,IAAIoP,aAAa,CAAE,CAAC,EAAE,CAAE,CAAC,EACzB,IAAIrL,cAAc,CAAE;UACnBxkD,IAAI,EAAE,oBAAoB;UAC1B6jD,QAAQ,EAAEH,aAAa,CAAEub,SAAS,CAAC92B,UAAU,CAAC0b,QAAS,CAAC;UACxDkB,YAAY,EAAEka,SAAS,CAAC92B,UAAU,CAAC4c,YAAY;UAC/CC,cAAc,EAAEia,SAAS,CAAC92B,UAAU,CAAC6c,cAAc;UACnDvY,IAAI,EAAEloC,SAAS;UACf8oC,SAAS,EAAE,KAAK;UAChBC,UAAU,EAAE,KAAK;UACjBmG,GAAG,EAAE;QACN,CAAE,CACH,CAAC;QAEDwuB,SAAS,CAACzsC,QAAQ,CAACumB,eAAe,CAAE,QAAS,CAAC;;QAE9C;QACAziD,MAAM,CAACI,cAAc,CAAEuoE,SAAS,CAACl5B,QAAQ,EAAE,KAAK,EAAE;UAEjD1yB,GAAG,EAAE,SAAAA,IAAA,EAAY;YAEhB,OAAO,IAAI,CAACwtC,QAAQ,CAAC4b,GAAG,CAAC3lE,KAAK;UAE/B;QAED,CAAE,CAAC;QAEHgoE,OAAO,CAAC11C,MAAM,CAAE61C,SAAU,CAAC;MAE5B;MAEAA,SAAS,CAACl5B,QAAQ,CAAC8a,QAAQ,CAAC4b,GAAG,CAAC3lE,KAAK,GAAGquC,UAAU;MAClD85B,SAAS,CAACl5B,QAAQ,CAAC8a,QAAQ,CAAC6b,mBAAmB,CAAC5lE,KAAK,GAAGovD,KAAK,CAACwW,mBAAmB;MACjFuC,SAAS,CAACl5B,QAAQ,CAAC6F,UAAU,GAAKzG,UAAU,CAAClnB,UAAU,KAAKjU,cAAc,GAAK,KAAK,GAAG,IAAI;MAE3F,IAAKm7B,UAAU,CAAC9iB,gBAAgB,KAAK,IAAI,EAAG;QAE3C8iB,UAAU,CAACriB,YAAY,CAAC,CAAC;MAE1B;MAEAm8C,SAAS,CAACl5B,QAAQ,CAAC8a,QAAQ,CAACmb,WAAW,CAACllE,KAAK,CAAC+c,IAAI,CAAEsxB,UAAU,CAACppB,MAAO,CAAC;MAEvE,IAAKojD,iBAAiB,KAAKh6B,UAAU,IACpCi6B,wBAAwB,KAAKj6B,UAAU,CAACllB,OAAO,IAC/Co/C,kBAAkB,KAAKpe,QAAQ,CAAC+e,WAAW,EAAG;QAE9Cf,SAAS,CAACl5B,QAAQ,CAAC7iB,WAAW,GAAG,IAAI;QAErCi8C,iBAAiB,GAAGh6B,UAAU;QAC9Bi6B,wBAAwB,GAAGj6B,UAAU,CAACllB,OAAO;QAC7Co/C,kBAAkB,GAAGpe,QAAQ,CAAC+e,WAAW;MAE1C;MAEAf,SAAS,CAAC7/B,MAAM,CAACJ,SAAS,CAAC,CAAC;;MAE5B;MACAsgC,UAAU,CAACW,OAAO,CAAEhB,SAAS,EAAEA,SAAS,CAACzsC,QAAQ,EAAEysC,SAAS,CAACl5B,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAK,CAAC;IAEpF;EAED;EAEA,SAAS05B,QAAQA,CAAEriD,KAAK,EAAE/G,KAAK,EAAG;IAEjC+G,KAAK,CAACk1B,MAAM,CAAEosB,IAAI,EAAE1d,yBAAyB,CAAEC,QAAS,CAAE,CAAC;IAE3DzmD,KAAK,CAAC8wD,OAAO,CAACluC,KAAK,CAACqiD,QAAQ,CAAEf,IAAI,CAAC3jD,CAAC,EAAE2jD,IAAI,CAACxkD,CAAC,EAAEwkD,IAAI,CAACntD,CAAC,EAAE8E,KAAK,EAAEq1B,kBAAmB,CAAC;EAElF;EAEA,OAAO;IAENw0B,aAAa,EAAE,SAAAA,cAAA,EAAY;MAE1B,OAAOnB,UAAU;IAElB,CAAC;IACDoB,aAAa,EAAE,SAAAA,cAAW/iD,KAAK,EAAE/G,KAAK,GAAG,CAAC,EAAG;MAE5C0oD,UAAU,CAAC3sD,GAAG,CAAEgL,KAAM,CAAC;MACvB4hD,UAAU,GAAG3oD,KAAK;MAClBopD,QAAQ,CAAEV,UAAU,EAAEC,UAAW,CAAC;IAEnC,CAAC;IACDoB,aAAa,EAAE,SAAAA,cAAA,EAAY;MAE1B,OAAOpB,UAAU;IAElB,CAAC;IACDqB,aAAa,EAAE,SAAAA,cAAWhqD,KAAK,EAAG;MAEjC2oD,UAAU,GAAG3oD,KAAK;MAClBopD,QAAQ,CAAEV,UAAU,EAAEC,UAAW,CAAC;IAEnC,CAAC;IACDxY,MAAM,EAAEA;EAET,CAAC;AAEF;AAEA,SAAS8Z,kBAAkBA,CAAEnV,EAAE,EAAEhJ,UAAU,EAAE1vB,UAAU,EAAE24B,YAAY,EAAG;EAEvE,IAAMmV,mBAAmB,GAAGpV,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACqV,kBAAmB,CAAC;EAEpE,IAAMC,SAAS,GAAGrV,YAAY,CAACC,QAAQ,GAAG,IAAI,GAAGlJ,UAAU,CAAC9uC,GAAG,CAAE,yBAA0B,CAAC;EAC5F,IAAMqtD,YAAY,GAAGtV,YAAY,CAACC,QAAQ,IAAIoV,SAAS,KAAK,IAAI;EAEhE,IAAME,aAAa,GAAG,CAAC,CAAC;EAExB,IAAMC,YAAY,GAAGC,kBAAkB,CAAE,IAAK,CAAC;EAC/C,IAAIC,YAAY,GAAGF,YAAY;EAC/B,IAAIG,WAAW,GAAG,KAAK;EAEvB,SAASC,KAAKA,CAAEtjE,MAAM,EAAEqoC,QAAQ,EAAEk7B,OAAO,EAAEzuC,QAAQ,EAAErlB,KAAK,EAAG;IAE5D,IAAI+zD,aAAa,GAAG,KAAK;IAEzB,IAAKR,YAAY,EAAG;MAEnB,IAAMlmE,KAAK,GAAG2mE,eAAe,CAAE3uC,QAAQ,EAAEyuC,OAAO,EAAEl7B,QAAS,CAAC;MAE5D,IAAK+6B,YAAY,KAAKtmE,KAAK,EAAG;QAE7BsmE,YAAY,GAAGtmE,KAAK;QACpB4mE,qBAAqB,CAAEN,YAAY,CAACpjE,MAAO,CAAC;MAE7C;MAEAwjE,aAAa,GAAGh+C,WAAW,CAAExlB,MAAM,EAAE80B,QAAQ,EAAEyuC,OAAO,EAAE9zD,KAAM,CAAC;MAE/D,IAAK+zD,aAAa,EAAGG,SAAS,CAAE3jE,MAAM,EAAE80B,QAAQ,EAAEyuC,OAAO,EAAE9zD,KAAM,CAAC;IAEnE,CAAC,MAAM;MAEN,IAAMijC,SAAS,GAAKrK,QAAQ,CAACqK,SAAS,KAAK,IAAM;MAEjD,IAAK0wB,YAAY,CAACtuC,QAAQ,KAAKA,QAAQ,CAAC6Q,EAAE,IACzCy9B,YAAY,CAACG,OAAO,KAAKA,OAAO,CAAC59B,EAAE,IACnCy9B,YAAY,CAAC1wB,SAAS,KAAKA,SAAS,EAAG;QAEvC0wB,YAAY,CAACtuC,QAAQ,GAAGA,QAAQ,CAAC6Q,EAAE;QACnCy9B,YAAY,CAACG,OAAO,GAAGA,OAAO,CAAC59B,EAAE;QACjCy9B,YAAY,CAAC1wB,SAAS,GAAGA,SAAS;QAElC8wB,aAAa,GAAG,IAAI;MAErB;IAED;IAEA,IAAK/zD,KAAK,KAAK,IAAI,EAAG;MAErBslB,UAAU,CAACrJ,MAAM,CAAEjc,KAAK,EAAEg+C,EAAE,CAACmW,oBAAqB,CAAC;IAEpD;IAEA,IAAKJ,aAAa,IAAIH,WAAW,EAAG;MAEnCA,WAAW,GAAG,KAAK;MAEnBQ,qBAAqB,CAAE7jE,MAAM,EAAEqoC,QAAQ,EAAEk7B,OAAO,EAAEzuC,QAAS,CAAC;MAE5D,IAAKrlB,KAAK,KAAK,IAAI,EAAG;QAErBg+C,EAAE,CAACO,UAAU,CAAEP,EAAE,CAACmW,oBAAoB,EAAE7uC,UAAU,CAACpf,GAAG,CAAElG,KAAM,CAAC,CAACkP,MAAO,CAAC;MAEzE;IAED;EAED;EAEA,SAASmlD,uBAAuBA,CAAA,EAAG;IAElC,IAAKpW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAACsW,iBAAiB,CAAC,CAAC;IAE1D,OAAOhB,SAAS,CAACiB,oBAAoB,CAAC,CAAC;EAExC;EAEA,SAASN,qBAAqBA,CAAEO,GAAG,EAAG;IAErC,IAAKvW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAACyW,eAAe,CAAED,GAAI,CAAC;IAE7D,OAAOlB,SAAS,CAACoB,kBAAkB,CAAEF,GAAI,CAAC;EAE3C;EAEA,SAASG,uBAAuBA,CAAEH,GAAG,EAAG;IAEvC,IAAKvW,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAAC4W,iBAAiB,CAAEJ,GAAI,CAAC;IAE/D,OAAOlB,SAAS,CAACuB,oBAAoB,CAAEL,GAAI,CAAC;EAE7C;EAEA,SAASR,eAAeA,CAAE3uC,QAAQ,EAAEyuC,OAAO,EAAEl7B,QAAQ,EAAG;IAEvD,IAAMqK,SAAS,GAAKrK,QAAQ,CAACqK,SAAS,KAAK,IAAM;IAEjD,IAAI6xB,UAAU,GAAGtB,aAAa,CAAEnuC,QAAQ,CAAC6Q,EAAE,CAAE;IAE7C,IAAK4+B,UAAU,KAAK9mE,SAAS,EAAG;MAE/B8mE,UAAU,GAAG,CAAC,CAAC;MACftB,aAAa,CAAEnuC,QAAQ,CAAC6Q,EAAE,CAAE,GAAG4+B,UAAU;IAE1C;IAEA,IAAIC,QAAQ,GAAGD,UAAU,CAAEhB,OAAO,CAAC59B,EAAE,CAAE;IAEvC,IAAK6+B,QAAQ,KAAK/mE,SAAS,EAAG;MAE7B+mE,QAAQ,GAAG,CAAC,CAAC;MACbD,UAAU,CAAEhB,OAAO,CAAC59B,EAAE,CAAE,GAAG6+B,QAAQ;IAEpC;IAEA,IAAI1nE,KAAK,GAAG0nE,QAAQ,CAAE9xB,SAAS,CAAE;IAEjC,IAAK51C,KAAK,KAAKW,SAAS,EAAG;MAE1BX,KAAK,GAAGqmE,kBAAkB,CAAEW,uBAAuB,CAAC,CAAE,CAAC;MACvDU,QAAQ,CAAE9xB,SAAS,CAAE,GAAG51C,KAAK;IAE9B;IAEA,OAAOA,KAAK;EAEb;EAEA,SAASqmE,kBAAkBA,CAAEc,GAAG,EAAG;IAElC,IAAMQ,aAAa,GAAG,EAAE;IACxB,IAAMC,iBAAiB,GAAG,EAAE;IAC5B,IAAMC,iBAAiB,GAAG,EAAE;IAE5B,KAAM,IAAI3lE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6jE,mBAAmB,EAAE7jE,CAAC,EAAG,EAAG;MAEhDylE,aAAa,CAAEzlE,CAAC,CAAE,GAAG,CAAC;MACtB0lE,iBAAiB,CAAE1lE,CAAC,CAAE,GAAG,CAAC;MAC1B2lE,iBAAiB,CAAE3lE,CAAC,CAAE,GAAG,CAAC;IAE3B;IAEA,OAAO;MAEN;MACA81B,QAAQ,EAAE,IAAI;MACdyuC,OAAO,EAAE,IAAI;MACb7wB,SAAS,EAAE,KAAK;MAEhB+xB,aAAa,EAAEA,aAAa;MAC5BC,iBAAiB,EAAEA,iBAAiB;MACpCC,iBAAiB,EAAEA,iBAAiB;MACpC3kE,MAAM,EAAEikE,GAAG;MACXlvC,UAAU,EAAE,CAAC,CAAC;MACdtlB,KAAK,EAAE;IAER,CAAC;EAEF;EAEA,SAAS+V,WAAWA,CAAExlB,MAAM,EAAE80B,QAAQ,EAAEyuC,OAAO,EAAE9zD,KAAK,EAAG;IAExD,IAAMm1D,gBAAgB,GAAGxB,YAAY,CAACruC,UAAU;IAChD,IAAM8vC,kBAAkB,GAAG/vC,QAAQ,CAACC,UAAU;IAE9C,IAAI+vC,aAAa,GAAG,CAAC;IAErB,IAAMC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,CAAC,CAAC;IAEjD,KAAM,IAAM1lE,IAAI,IAAIylE,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEzlE,IAAI,CAAE;MAElD,IAAK2lE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAMC,eAAe,GAAGP,gBAAgB,CAAEtlE,IAAI,CAAE;QAChD,IAAI8lE,iBAAiB,GAAGP,kBAAkB,CAAEvlE,IAAI,CAAE;QAElD,IAAK8lE,iBAAiB,KAAK3nE,SAAS,EAAG;UAEtC,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAACmnC,cAAc,EAAGi+B,iBAAiB,GAAGplE,MAAM,CAACmnC,cAAc;UACnG,IAAK7nC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAAConC,aAAa,EAAGg+B,iBAAiB,GAAGplE,MAAM,CAAConC,aAAa;QAEjG;QAEA,IAAK+9B,eAAe,KAAK1nE,SAAS,EAAG,OAAO,IAAI;QAEhD,IAAK0nE,eAAe,CAAC/rD,SAAS,KAAKgsD,iBAAiB,EAAG,OAAO,IAAI;QAElE,IAAKA,iBAAiB,IAAID,eAAe,CAAChjD,IAAI,KAAKijD,iBAAiB,CAACjjD,IAAI,EAAG,OAAO,IAAI;QAEvF2iD,aAAa,EAAG;MAEjB;IAED;IAEA,IAAK1B,YAAY,CAAC0B,aAAa,KAAKA,aAAa,EAAG,OAAO,IAAI;IAE/D,IAAK1B,YAAY,CAAC3zD,KAAK,KAAKA,KAAK,EAAG,OAAO,IAAI;IAE/C,OAAO,KAAK;EAEb;EAEA,SAASk0D,SAASA,CAAE3jE,MAAM,EAAE80B,QAAQ,EAAEyuC,OAAO,EAAE9zD,KAAK,EAAG;IAEtD,IAAMg5B,KAAK,GAAG,CAAC,CAAC;IAChB,IAAM1T,UAAU,GAAGD,QAAQ,CAACC,UAAU;IACtC,IAAI+vC,aAAa,GAAG,CAAC;IAErB,IAAMC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,CAAC,CAAC;IAEjD,KAAM,IAAM1lE,IAAI,IAAIylE,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEzlE,IAAI,CAAE;MAElD,IAAK2lE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAI9rD,SAAS,GAAG2b,UAAU,CAAEz1B,IAAI,CAAE;QAElC,IAAK8Z,SAAS,KAAK3b,SAAS,EAAG;UAE9B,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAACmnC,cAAc,EAAG/tB,SAAS,GAAGpZ,MAAM,CAACmnC,cAAc;UAC3F,IAAK7nC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAAConC,aAAa,EAAGhuB,SAAS,GAAGpZ,MAAM,CAAConC,aAAa;QAEzF;QAEA,IAAMjlB,IAAI,GAAG,CAAC,CAAC;QACfA,IAAI,CAAC/I,SAAS,GAAGA,SAAS;QAE1B,IAAKA,SAAS,IAAIA,SAAS,CAAC+I,IAAI,EAAG;UAElCA,IAAI,CAACA,IAAI,GAAG/I,SAAS,CAAC+I,IAAI;QAE3B;QAEAsmB,KAAK,CAAEnpC,IAAI,CAAE,GAAG6iB,IAAI;QAEpB2iD,aAAa,EAAG;MAEjB;IAED;IAEA1B,YAAY,CAACruC,UAAU,GAAG0T,KAAK;IAC/B26B,YAAY,CAAC0B,aAAa,GAAGA,aAAa;IAE1C1B,YAAY,CAAC3zD,KAAK,GAAGA,KAAK;EAE3B;EAEA,SAAS41D,cAAcA,CAAA,EAAG;IAEzB,IAAMZ,aAAa,GAAGrB,YAAY,CAACqB,aAAa;IAEhD,KAAM,IAAIzlE,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG25C,aAAa,CAAC1lE,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;MAE1DylE,aAAa,CAAEzlE,CAAC,CAAE,GAAG,CAAC;IAEvB;EAED;EAEA,SAASsmE,eAAeA,CAAElsD,SAAS,EAAG;IAErCmsD,yBAAyB,CAAEnsD,SAAS,EAAE,CAAE,CAAC;EAE1C;EAEA,SAASmsD,yBAAyBA,CAAEnsD,SAAS,EAAEosD,gBAAgB,EAAG;IAEjE,IAAMf,aAAa,GAAGrB,YAAY,CAACqB,aAAa;IAChD,IAAMC,iBAAiB,GAAGtB,YAAY,CAACsB,iBAAiB;IACxD,IAAMC,iBAAiB,GAAGvB,YAAY,CAACuB,iBAAiB;IAExDF,aAAa,CAAErrD,SAAS,CAAE,GAAG,CAAC;IAE9B,IAAKsrD,iBAAiB,CAAEtrD,SAAS,CAAE,KAAK,CAAC,EAAG;MAE3Cq0C,EAAE,CAACgY,uBAAuB,CAAErsD,SAAU,CAAC;MACvCsrD,iBAAiB,CAAEtrD,SAAS,CAAE,GAAG,CAAC;IAEnC;IAEA,IAAKurD,iBAAiB,CAAEvrD,SAAS,CAAE,KAAKosD,gBAAgB,EAAG;MAE1D,IAAMzC,UAAS,GAAGrV,YAAY,CAACC,QAAQ,GAAGF,EAAE,GAAGhJ,UAAU,CAAC9uC,GAAG,CAAE,wBAAyB,CAAC;MAEzFotD,UAAS,CAAErV,YAAY,CAACC,QAAQ,GAAG,qBAAqB,GAAG,0BAA0B,CAAE,CAAEv0C,SAAS,EAAEosD,gBAAiB,CAAC;MACtHb,iBAAiB,CAAEvrD,SAAS,CAAE,GAAGosD,gBAAgB;IAElD;EAED;EAEA,SAASE,uBAAuBA,CAAA,EAAG;IAElC,IAAMjB,aAAa,GAAGrB,YAAY,CAACqB,aAAa;IAChD,IAAMC,iBAAiB,GAAGtB,YAAY,CAACsB,iBAAiB;IAExD,KAAM,IAAI1lE,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG45C,iBAAiB,CAAC3lE,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;MAE9D,IAAK0lE,iBAAiB,CAAE1lE,CAAC,CAAE,KAAKylE,aAAa,CAAEzlE,CAAC,CAAE,EAAG;QAEpDyuD,EAAE,CAACkY,wBAAwB,CAAE3mE,CAAE,CAAC;QAChC0lE,iBAAiB,CAAE1lE,CAAC,CAAE,GAAG,CAAC;MAE3B;IAED;EAED;EAEA,SAAS4mE,mBAAmBA,CAAEn2D,KAAK,EAAEmkB,IAAI,EAAE34B,IAAI,EAAE87C,UAAU,EAAEyH,MAAM,EAAEvlC,MAAM,EAAE4sD,OAAO,EAAG;IAEtF,IAAKA,OAAO,KAAK,IAAI,EAAG;MAEvBpY,EAAE,CAACqY,oBAAoB,CAAEr2D,KAAK,EAAEmkB,IAAI,EAAE34B,IAAI,EAAEujD,MAAM,EAAEvlC,MAAO,CAAC;IAE7D,CAAC,MAAM;MAENw0C,EAAE,CAACmY,mBAAmB,CAAEn2D,KAAK,EAAEmkB,IAAI,EAAE34B,IAAI,EAAE87C,UAAU,EAAEyH,MAAM,EAAEvlC,MAAO,CAAC;IAExE;EAED;EAEA,SAAS4qD,qBAAqBA,CAAE7jE,MAAM,EAAEqoC,QAAQ,EAAEk7B,OAAO,EAAEzuC,QAAQ,EAAG;IAErE,IAAK44B,YAAY,CAACC,QAAQ,KAAK,KAAK,KAAM3tD,MAAM,CAACknC,eAAe,IAAIpS,QAAQ,CAACixC,yBAAyB,CAAE,EAAG;MAE1G,IAAKthB,UAAU,CAAC9uC,GAAG,CAAE,wBAAyB,CAAC,KAAK,IAAI,EAAG;IAE5D;IAEA0vD,cAAc,CAAC,CAAC;IAEhB,IAAMR,kBAAkB,GAAG/vC,QAAQ,CAACC,UAAU;IAE9C,IAAMgwC,iBAAiB,GAAGxB,OAAO,CAACyB,aAAa,CAAC,CAAC;IAEjD,IAAMgB,8BAA8B,GAAG39B,QAAQ,CAACyc,sBAAsB;IAEtE,KAAM,IAAMxlD,IAAI,IAAIylE,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEzlE,IAAI,CAAE;MAElD,IAAK2lE,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAIE,iBAAiB,GAAGP,kBAAkB,CAAEvlE,IAAI,CAAE;QAElD,IAAK8lE,iBAAiB,KAAK3nE,SAAS,EAAG;UAEtC,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAACmnC,cAAc,EAAGi+B,iBAAiB,GAAGplE,MAAM,CAACmnC,cAAc;UACnG,IAAK7nC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAAConC,aAAa,EAAGg+B,iBAAiB,GAAGplE,MAAM,CAAConC,aAAa;QAEjG;QAEA,IAAKg+B,iBAAiB,KAAK3nE,SAAS,EAAG;UAEtC,IAAMs5C,UAAU,GAAGquB,iBAAiB,CAACruB,UAAU;UAC/C,IAAMnjB,IAAI,GAAGwxC,iBAAiB,CAACtuB,QAAQ;UAEvC,IAAM19B,SAAS,GAAG2b,UAAU,CAACpf,GAAG,CAAEyvD,iBAAkB,CAAC;;UAErD;;UAEA,IAAKhsD,SAAS,KAAK3b,SAAS,EAAG;UAE/B,IAAMkhB,MAAM,GAAGvF,SAAS,CAACuF,MAAM;UAC/B,IAAM1jB,IAAI,GAAGme,SAAS,CAACne,IAAI;UAC3B,IAAMyzD,eAAe,GAAGt1C,SAAS,CAACs1C,eAAe;;UAEjD;;UAEA,IAAMmX,OAAO,GAAKnY,YAAY,CAACC,QAAQ,KAAK,IAAI,KAAM1yD,IAAI,KAAKwyD,EAAE,CAACc,GAAG,IAAItzD,IAAI,KAAKwyD,EAAE,CAACa,YAAY,IAAI8W,iBAAiB,CAACjuB,OAAO,KAAKpvC,OAAO,CAAI;UAE9I,IAAKq9D,iBAAiB,CAAC7mB,4BAA4B,EAAG;YAErD,IAAMp8B,IAAI,GAAGijD,iBAAiB,CAACjjD,IAAI;YACnC,IAAMq8B,MAAM,GAAGr8B,IAAI,CAACq8B,MAAM;YAC1B,IAAMvlC,MAAM,GAAGmsD,iBAAiB,CAACnsD,MAAM;YAEvC,IAAKkJ,IAAI,CAAC8jD,4BAA4B,EAAG;cAExC,KAAM,IAAIjnE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGimE,gBAAgB,CAACiB,YAAY,EAAElnE,CAAC,EAAG,EAAG;gBAE1DumE,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAGlmE,CAAC,EAAEmjB,IAAI,CAACqjD,gBAAiB,CAAC;cAElF;cAEA,IAAKxlE,MAAM,CAACknC,eAAe,KAAK,IAAI,IAAIpS,QAAQ,CAACqxC,iBAAiB,KAAK1oE,SAAS,EAAG;gBAElFq3B,QAAQ,CAACqxC,iBAAiB,GAAGhkD,IAAI,CAACqjD,gBAAgB,GAAGrjD,IAAI,CAACwI,KAAK;cAEhE;YAED,CAAC,MAAM;cAEN,KAAM,IAAI3rB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGimE,gBAAgB,CAACiB,YAAY,EAAElnE,IAAC,EAAG,EAAG;gBAE1DsmE,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAGlmE,IAAE,CAAC;cAEjD;YAED;YAEAyuD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC2Y,YAAY,EAAEznD,MAAO,CAAC;YAExC,KAAM,IAAI3f,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGimE,gBAAgB,CAACiB,YAAY,EAAElnE,IAAC,EAAG,EAAG;cAE1D4mE,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAGlmE,IAAC,EAC7B40B,IAAI,GAAGqxC,gBAAgB,CAACiB,YAAY,EACpCjrE,IAAI,EACJ87C,UAAU,EACVyH,MAAM,GAAGkQ,eAAe,EACxB,CAAEz1C,MAAM,GAAK2a,IAAI,GAAGqxC,gBAAgB,CAACiB,YAAY,GAAKlnE,IAAC,IAAK0vD,eAAe,EAC3EmX,OACD,CAAC;YAEF;UAED,CAAC,MAAM;YAEN,IAAKT,iBAAiB,CAACiB,0BAA0B,EAAG;cAEnD,KAAM,IAAIrnE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGimE,gBAAgB,CAACiB,YAAY,EAAElnE,IAAC,EAAG,EAAG;gBAE1DumE,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAGlmE,IAAC,EAAEomE,iBAAiB,CAACI,gBAAiB,CAAC;cAE/F;cAEA,IAAKxlE,MAAM,CAACknC,eAAe,KAAK,IAAI,IAAIpS,QAAQ,CAACqxC,iBAAiB,KAAK1oE,SAAS,EAAG;gBAElFq3B,QAAQ,CAACqxC,iBAAiB,GAAGf,iBAAiB,CAACI,gBAAgB,GAAGJ,iBAAiB,CAACz6C,KAAK;cAE1F;YAED,CAAC,MAAM;cAEN,KAAM,IAAI3rB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGimE,gBAAgB,CAACiB,YAAY,EAAElnE,IAAC,EAAG,EAAG;gBAE1DsmE,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAGlmE,IAAE,CAAC;cAEjD;YAED;YAEAyuD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC2Y,YAAY,EAAEznD,MAAO,CAAC;YAExC,KAAM,IAAI3f,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGimE,gBAAgB,CAACiB,YAAY,EAAElnE,IAAC,EAAG,EAAG;cAE1D4mE,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAGlmE,IAAC,EAC7B40B,IAAI,GAAGqxC,gBAAgB,CAACiB,YAAY,EACpCjrE,IAAI,EACJ87C,UAAU,EACVnjB,IAAI,GAAG86B,eAAe,EACpB96B,IAAI,GAAGqxC,gBAAgB,CAACiB,YAAY,GAAKlnE,IAAC,GAAG0vD,eAAe,EAC9DmX,OACD,CAAC;YAEF;UAED;QAED,CAAC,MAAM,IAAKG,8BAA8B,KAAKvoE,SAAS,EAAG;UAE1D,IAAMrE,OAAK,GAAG4sE,8BAA8B,CAAE1mE,IAAI,CAAE;UAEpD,IAAKlG,OAAK,KAAKqE,SAAS,EAAG;YAE1B,QAASrE,OAAK,CAAC2F,MAAM;cAEpB,KAAK,CAAC;gBACL0uD,EAAE,CAAC6Y,eAAe,CAAErB,gBAAgB,CAACC,QAAQ,EAAE9rE,OAAM,CAAC;gBACtD;cAED,KAAK,CAAC;gBACLq0D,EAAE,CAAC8Y,eAAe,CAAEtB,gBAAgB,CAACC,QAAQ,EAAE9rE,OAAM,CAAC;gBACtD;cAED,KAAK,CAAC;gBACLq0D,EAAE,CAAC+Y,eAAe,CAAEvB,gBAAgB,CAACC,QAAQ,EAAE9rE,OAAM,CAAC;gBACtD;cAED;gBACCq0D,EAAE,CAACgZ,eAAe,CAAExB,gBAAgB,CAACC,QAAQ,EAAE9rE,OAAM,CAAC;YAExD;UAED;QAED;MAED;IAED;IAEAssE,uBAAuB,CAAC,CAAC;EAE1B;EAEA,SAAS//C,OAAOA,CAAA,EAAG;IAElBhnB,KAAK,CAAC,CAAC;IAEP,KAAM,IAAM+nE,UAAU,IAAIzD,aAAa,EAAG;MAEzC,IAAMsB,UAAU,GAAGtB,aAAa,CAAEyD,UAAU,CAAE;MAE9C,KAAM,IAAMC,SAAS,IAAIpC,UAAU,EAAG;QAErC,IAAMC,QAAQ,GAAGD,UAAU,CAAEoC,SAAS,CAAE;QAExC,KAAM,IAAMj0B,SAAS,IAAI8xB,QAAQ,EAAG;UAEnCJ,uBAAuB,CAAEI,QAAQ,CAAE9xB,SAAS,CAAE,CAAC1yC,MAAO,CAAC;UAEvD,OAAOwkE,QAAQ,CAAE9xB,SAAS,CAAE;QAE7B;QAEA,OAAO6xB,UAAU,CAAEoC,SAAS,CAAE;MAE/B;MAEA,OAAO1D,aAAa,CAAEyD,UAAU,CAAE;IAEnC;EAED;EAEA,SAASE,uBAAuBA,CAAE9xC,QAAQ,EAAG;IAE5C,IAAKmuC,aAAa,CAAEnuC,QAAQ,CAAC6Q,EAAE,CAAE,KAAKloC,SAAS,EAAG;IAElD,IAAM8mE,UAAU,GAAGtB,aAAa,CAAEnuC,QAAQ,CAAC6Q,EAAE,CAAE;IAE/C,KAAM,IAAMghC,SAAS,IAAIpC,UAAU,EAAG;MAErC,IAAMC,QAAQ,GAAGD,UAAU,CAAEoC,SAAS,CAAE;MAExC,KAAM,IAAMj0B,SAAS,IAAI8xB,QAAQ,EAAG;QAEnCJ,uBAAuB,CAAEI,QAAQ,CAAE9xB,SAAS,CAAE,CAAC1yC,MAAO,CAAC;QAEvD,OAAOwkE,QAAQ,CAAE9xB,SAAS,CAAE;MAE7B;MAEA,OAAO6xB,UAAU,CAAEoC,SAAS,CAAE;IAE/B;IAEA,OAAO1D,aAAa,CAAEnuC,QAAQ,CAAC6Q,EAAE,CAAE;EAEpC;EAEA,SAASkhC,sBAAsBA,CAAEtD,OAAO,EAAG;IAE1C,KAAM,IAAMmD,UAAU,IAAIzD,aAAa,EAAG;MAEzC,IAAMsB,UAAU,GAAGtB,aAAa,CAAEyD,UAAU,CAAE;MAE9C,IAAKnC,UAAU,CAAEhB,OAAO,CAAC59B,EAAE,CAAE,KAAKloC,SAAS,EAAG;MAE9C,IAAM+mE,QAAQ,GAAGD,UAAU,CAAEhB,OAAO,CAAC59B,EAAE,CAAE;MAEzC,KAAM,IAAM+M,SAAS,IAAI8xB,QAAQ,EAAG;QAEnCJ,uBAAuB,CAAEI,QAAQ,CAAE9xB,SAAS,CAAE,CAAC1yC,MAAO,CAAC;QAEvD,OAAOwkE,QAAQ,CAAE9xB,SAAS,CAAE;MAE7B;MAEA,OAAO6xB,UAAU,CAAEhB,OAAO,CAAC59B,EAAE,CAAE;IAEhC;EAED;EAEA,SAAShnC,KAAKA,CAAA,EAAG;IAEhBmoE,iBAAiB,CAAC,CAAC;IACnBzD,WAAW,GAAG,IAAI;IAElB,IAAKD,YAAY,KAAKF,YAAY,EAAG;IAErCE,YAAY,GAAGF,YAAY;IAC3BQ,qBAAqB,CAAEN,YAAY,CAACpjE,MAAO,CAAC;EAE7C;;EAEA;;EAEA,SAAS8mE,iBAAiBA,CAAA,EAAG;IAE5B5D,YAAY,CAACpuC,QAAQ,GAAG,IAAI;IAC5BouC,YAAY,CAACK,OAAO,GAAG,IAAI;IAC3BL,YAAY,CAACxwB,SAAS,GAAG,KAAK;EAE/B;EAEA,OAAO;IAEN4wB,KAAK,EAAEA,KAAK;IACZ3kE,KAAK,EAAEA,KAAK;IACZmoE,iBAAiB,EAAEA,iBAAiB;IACpCnhD,OAAO,EAAEA,OAAO;IAChBihD,uBAAuB,EAAEA,uBAAuB;IAChDC,sBAAsB,EAAEA,sBAAsB;IAE9CxB,cAAc,EAAEA,cAAc;IAC9BC,eAAe,EAAEA,eAAe;IAChCI,uBAAuB,EAAEA;EAE1B,CAAC;AAEF;AAEA,SAASqB,mBAAmBA,CAAEtZ,EAAE,EAAEhJ,UAAU,EAAE7mD,IAAI,EAAE8vD,YAAY,EAAG;EAElE,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAIqZ,IAAI;EAER,SAASC,OAAOA,CAAE7tE,KAAK,EAAG;IAEzB4tE,IAAI,GAAG5tE,KAAK;EAEb;EAEA,SAAS0vD,MAAMA,CAAE9N,KAAK,EAAErwB,KAAK,EAAG;IAE/B8iC,EAAE,CAACyZ,UAAU,CAAEF,IAAI,EAAEhsB,KAAK,EAAErwB,KAAM,CAAC;IAEnC/sB,IAAI,CAAC8tB,MAAM,CAAEf,KAAK,EAAEq8C,IAAI,EAAE,CAAE,CAAC;EAE9B;EAEA,SAASG,eAAeA,CAAEnsB,KAAK,EAAErwB,KAAK,EAAEy8C,SAAS,EAAG;IAEnD,IAAKA,SAAS,KAAK,CAAC,EAAG;IAEvB,IAAIrE,SAAS,EAAEvlE,UAAU;IAEzB,IAAKmwD,QAAQ,EAAG;MAEfoV,SAAS,GAAGtV,EAAE;MACdjwD,UAAU,GAAG,qBAAqB;IAEnC,CAAC,MAAM;MAENulE,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,wBAAyB,CAAC;MACtDnY,UAAU,GAAG,0BAA0B;MAEvC,IAAKulE,SAAS,KAAK,IAAI,EAAG;QAEzBpuD,OAAO,CAAChY,KAAK,CAAE,gIAAiI,CAAC;QACjJ;MAED;IAED;IAEAomE,SAAS,CAAEvlE,UAAU,CAAE,CAAEwpE,IAAI,EAAEhsB,KAAK,EAAErwB,KAAK,EAAEy8C,SAAU,CAAC;IAExDxpE,IAAI,CAAC8tB,MAAM,CAAEf,KAAK,EAAEq8C,IAAI,EAAEI,SAAU,CAAC;EAEtC;;EAEA;;EAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACne,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACqe,eAAe,GAAGA,eAAe;AAEvC;AAEA,SAASE,iBAAiBA,CAAE5Z,EAAE,EAAEhJ,UAAU,EAAE1c,UAAU,EAAG;EAExD,IAAIu/B,aAAa;EAEjB,SAASC,gBAAgBA,CAAA,EAAG;IAE3B,IAAKD,aAAa,KAAK7pE,SAAS,EAAG,OAAO6pE,aAAa;IAEvD,IAAK7iB,UAAU,CAAC+iB,GAAG,CAAE,gCAAiC,CAAC,KAAK,IAAI,EAAG;MAElE,IAAMzE,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,gCAAiC,CAAC;MAEpE2xD,aAAa,GAAG7Z,EAAE,CAACr4B,YAAY,CAAE2tC,SAAS,CAAC0E,8BAA+B,CAAC;IAE5E,CAAC,MAAM;MAENH,aAAa,GAAG,CAAC;IAElB;IAEA,OAAOA,aAAa;EAErB;EAEA,SAASI,eAAeA,CAAEh6B,SAAS,EAAG;IAErC,IAAKA,SAAS,KAAK,OAAO,EAAG;MAE5B,IAAK+f,EAAE,CAACka,wBAAwB,CAAEla,EAAE,CAACma,aAAa,EAAEna,EAAE,CAACoa,UAAW,CAAC,CAACn6B,SAAS,GAAG,CAAC,IAChF+f,EAAE,CAACka,wBAAwB,CAAEla,EAAE,CAACqa,eAAe,EAAEra,EAAE,CAACoa,UAAW,CAAC,CAACn6B,SAAS,GAAG,CAAC,EAAG;QAEjF,OAAO,OAAO;MAEf;MAEAA,SAAS,GAAG,SAAS;IAEtB;IAEA,IAAKA,SAAS,KAAK,SAAS,EAAG;MAE9B,IAAK+f,EAAE,CAACka,wBAAwB,CAAEla,EAAE,CAACma,aAAa,EAAEna,EAAE,CAACsa,YAAa,CAAC,CAACr6B,SAAS,GAAG,CAAC,IAClF+f,EAAE,CAACka,wBAAwB,CAAEla,EAAE,CAACqa,eAAe,EAAEra,EAAE,CAACsa,YAAa,CAAC,CAACr6B,SAAS,GAAG,CAAC,EAAG;QAEnF,OAAO,SAAS;MAEjB;IAED;IAEA,OAAO,MAAM;EAEd;EAEA,IAAMigB,QAAQ,GAAG,OAAOqa,sBAAsB,KAAK,WAAW,IAAIva,EAAE,CAACpuD,WAAW,CAACC,IAAI,KAAK,wBAAwB;EAElH,IAAIouC,SAAS,GAAG3F,UAAU,CAAC2F,SAAS,KAAKjwC,SAAS,GAAGsqC,UAAU,CAAC2F,SAAS,GAAG,OAAO;EACnF,IAAMu6B,YAAY,GAAGP,eAAe,CAAEh6B,SAAU,CAAC;EAEjD,IAAKu6B,YAAY,KAAKv6B,SAAS,EAAG;IAEjC/4B,OAAO,CAACC,IAAI,CAAE,sBAAsB,EAAE84B,SAAS,EAAE,sBAAsB,EAAEu6B,YAAY,EAAE,UAAW,CAAC;IACnGv6B,SAAS,GAAGu6B,YAAY;EAEzB;EAEA,IAAMrjB,WAAW,GAAG+I,QAAQ,IAAIlJ,UAAU,CAAC+iB,GAAG,CAAE,oBAAqB,CAAC;EAEtE,IAAMU,sBAAsB,GAAGngC,UAAU,CAACmgC,sBAAsB,KAAK,IAAI;EAEzE,IAAMC,WAAW,GAAG1a,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAAC2a,uBAAwB,CAAC;EACjE,IAAMC,iBAAiB,GAAG5a,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAAC6a,8BAA+B,CAAC;EAC9E,IAAMC,cAAc,GAAG9a,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAAC+a,gBAAiB,CAAC;EAC7D,IAAMC,cAAc,GAAGhb,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACib,yBAA0B,CAAC;EAEtE,IAAMC,aAAa,GAAGlb,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACqV,kBAAmB,CAAC;EAC9D,IAAM8F,iBAAiB,GAAGnb,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACob,0BAA2B,CAAC;EAC1E,IAAMC,WAAW,GAAGrb,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACsb,mBAAoB,CAAC;EAC7D,IAAMC,mBAAmB,GAAGvb,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACwb,4BAA6B,CAAC;EAE9E,IAAMC,cAAc,GAAGb,iBAAiB,GAAG,CAAC;EAC5C,IAAMc,qBAAqB,GAAGxb,QAAQ,IAAIlJ,UAAU,CAAC+iB,GAAG,CAAE,mBAAoB,CAAC;EAC/E,IAAM4B,mBAAmB,GAAGF,cAAc,IAAIC,qBAAqB;EAEnE,IAAME,UAAU,GAAG1b,QAAQ,GAAGF,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAAC6b,WAAY,CAAC,GAAG,CAAC;EAEnE,OAAO;IAEN3b,QAAQ,EAAEA,QAAQ;IAElB/I,WAAW,EAAEA,WAAW;IAExB2iB,gBAAgB,EAAEA,gBAAgB;IAClCG,eAAe,EAAEA,eAAe;IAEhCh6B,SAAS,EAAEA,SAAS;IACpBw6B,sBAAsB,EAAEA,sBAAsB;IAE9CC,WAAW,EAAEA,WAAW;IACxBE,iBAAiB,EAAEA,iBAAiB;IACpCE,cAAc,EAAEA,cAAc;IAC9BE,cAAc,EAAEA,cAAc;IAE9BE,aAAa,EAAEA,aAAa;IAC5BC,iBAAiB,EAAEA,iBAAiB;IACpCE,WAAW,EAAEA,WAAW;IACxBE,mBAAmB,EAAEA,mBAAmB;IAExCE,cAAc,EAAEA,cAAc;IAC9BC,qBAAqB,EAAEA,qBAAqB;IAC5CC,mBAAmB,EAAEA,mBAAmB;IAExCC,UAAU,EAAEA;EAEb,CAAC;AAEF;AAEA,SAASE,aAAaA,CAAE7M,UAAU,EAAG;EAEpC,IAAM7a,KAAK,GAAG,IAAI;EAElB,IAAI2nB,WAAW,GAAG,IAAI;IACrBC,eAAe,GAAG,CAAC;IACnBC,oBAAoB,GAAG,KAAK;IAC5BC,gBAAgB,GAAG,KAAK;EAEzB,IAAMj0C,KAAK,GAAG,IAAIw0B,KAAK,CAAC,CAAC;IACxB0f,gBAAgB,GAAG,IAAIjwD,OAAO,CAAC,CAAC;IAEhCurC,OAAO,GAAG;MAAE9rD,KAAK,EAAE,IAAI;MAAEosB,WAAW,EAAE;IAAM,CAAC;EAE9C,IAAI,CAAC0/B,OAAO,GAAGA,OAAO;EACtB,IAAI,CAAC2kB,SAAS,GAAG,CAAC;EAClB,IAAI,CAACC,eAAe,GAAG,CAAC;EAExB,IAAI,CAACC,IAAI,GAAG,UAAWze,MAAM,EAAE0e,mBAAmB,EAAG;IAEpD,IAAM5pD,OAAO,GACZkrC,MAAM,CAACvsD,MAAM,KAAK,CAAC,IACnBirE,mBAAmB;IACnB;IACA;IACAP,eAAe,KAAK,CAAC,IACrBC,oBAAoB;IAErBA,oBAAoB,GAAGM,mBAAmB;IAE1CP,eAAe,GAAGne,MAAM,CAACvsD,MAAM;IAE/B,OAAOqhB,OAAO;EAEf,CAAC;EAED,IAAI,CAAC6pD,YAAY,GAAG,YAAY;IAE/BN,gBAAgB,GAAG,IAAI;IACvBO,aAAa,CAAE,IAAK,CAAC;EAEtB,CAAC;EAED,IAAI,CAACC,UAAU,GAAG,YAAY;IAE7BR,gBAAgB,GAAG,KAAK;EAEzB,CAAC;EAED,IAAI,CAACS,cAAc,GAAG,UAAW9e,MAAM,EAAEz6B,MAAM,EAAG;IAEjD24C,WAAW,GAAGU,aAAa,CAAE5e,MAAM,EAAEz6B,MAAM,EAAE,CAAE,CAAC;EAEjD,CAAC;EAED,IAAI,CAACw5C,QAAQ,GAAG,UAAWhiC,QAAQ,EAAExX,MAAM,EAAEy5C,QAAQ,EAAG;IAEvD,IAAMhf,MAAM,GAAGjjB,QAAQ,CAACgF,cAAc;MACrCC,gBAAgB,GAAGjF,QAAQ,CAACiF,gBAAgB;MAC5CC,WAAW,GAAGlF,QAAQ,CAACkF,WAAW;IAEnC,IAAMg9B,kBAAkB,GAAG7N,UAAU,CAAC/mD,GAAG,CAAE0yB,QAAS,CAAC;IAErD,IAAK,CAAEqhC,oBAAoB,IAAIpe,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACvsD,MAAM,KAAK,CAAC,IAAI4qE,gBAAgB,IAAI,CAAEp8B,WAAW,EAAG;MAE5G;;MAEA,IAAKo8B,gBAAgB,EAAG;QAEvB;;QAEAO,aAAa,CAAE,IAAK,CAAC;MAEtB,CAAC,MAAM;QAENM,gBAAgB,CAAC,CAAC;MAEnB;IAED,CAAC,MAAM;MAEN,IAAMC,OAAO,GAAGd,gBAAgB,GAAG,CAAC,GAAGF,eAAe;QACrDiB,OAAO,GAAGD,OAAO,GAAG,CAAC;MAEtB,IAAIE,QAAQ,GAAGJ,kBAAkB,CAACK,aAAa,IAAI,IAAI;MAEvD1lB,OAAO,CAAC9rD,KAAK,GAAGuxE,QAAQ,CAAC,CAAC;;MAE1BA,QAAQ,GAAGT,aAAa,CAAE5e,MAAM,EAAEz6B,MAAM,EAAE65C,OAAO,EAAEJ,QAAS,CAAC;MAE7D,KAAM,IAAItrE,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK0rE,OAAO,EAAE,EAAG1rE,CAAC,EAAG;QAEtC2rE,QAAQ,CAAE3rE,CAAC,CAAE,GAAGwqE,WAAW,CAAExqE,CAAC,CAAE;MAEjC;MAEAurE,kBAAkB,CAACK,aAAa,GAAGD,QAAQ;MAC3C,IAAI,CAACb,eAAe,GAAGx8B,gBAAgB,GAAG,IAAI,CAACu8B,SAAS,GAAG,CAAC;MAC5D,IAAI,CAACA,SAAS,IAAIY,OAAO;IAE1B;EAGD,CAAC;EAED,SAASD,gBAAgBA,CAAA,EAAG;IAE3B,IAAKtlB,OAAO,CAAC9rD,KAAK,KAAKowE,WAAW,EAAG;MAEpCtkB,OAAO,CAAC9rD,KAAK,GAAGowE,WAAW;MAC3BtkB,OAAO,CAAC1/B,WAAW,GAAGikD,eAAe,GAAG,CAAC;IAE1C;IAEA5nB,KAAK,CAACgoB,SAAS,GAAGJ,eAAe;IACjC5nB,KAAK,CAACioB,eAAe,GAAG,CAAC;EAE1B;EAEA,SAASI,aAAaA,CAAE5e,MAAM,EAAEz6B,MAAM,EAAEpC,SAAS,EAAEo8C,aAAa,EAAG;IAElE,IAAMC,OAAO,GAAGxf,MAAM,KAAK,IAAI,GAAGA,MAAM,CAACvsD,MAAM,GAAG,CAAC;IACnD,IAAI4rE,QAAQ,GAAG,IAAI;IAEnB,IAAKG,OAAO,KAAK,CAAC,EAAG;MAEpBH,QAAQ,GAAGzlB,OAAO,CAAC9rD,KAAK;MAExB,IAAKyxE,aAAa,KAAK,IAAI,IAAIF,QAAQ,KAAK,IAAI,EAAG;QAElD,IAAMI,QAAQ,GAAGt8C,SAAS,GAAGq8C,OAAO,GAAG,CAAC;UACvCE,UAAU,GAAGn6C,MAAM,CAACC,kBAAkB;QAEvC84C,gBAAgB,CAAC1sD,eAAe,CAAE8tD,UAAW,CAAC;QAE9C,IAAKL,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAAC5rE,MAAM,GAAGgsE,QAAQ,EAAG;UAEtDJ,QAAQ,GAAG,IAAI71D,YAAY,CAAEi2D,QAAS,CAAC;QAExC;QAEA,KAAM,IAAI/rE,CAAC,GAAG,CAAC,EAAEisE,EAAE,GAAGx8C,SAAS,EAAEzvB,CAAC,KAAK8rE,OAAO,EAAE,EAAG9rE,CAAC,EAAEisE,EAAE,IAAI,CAAC,EAAG;UAE/Dv1C,KAAK,CAACvf,IAAI,CAAEm1C,MAAM,CAAEtsD,CAAC,CAAG,CAAC,CAACsnB,YAAY,CAAE0kD,UAAU,EAAEpB,gBAAiB,CAAC;UAEtEl0C,KAAK,CAAC1D,MAAM,CAAC9Y,OAAO,CAAEyxD,QAAQ,EAAEM,EAAG,CAAC;UACpCN,QAAQ,CAAEM,EAAE,GAAG,CAAC,CAAE,GAAGv1C,KAAK,CAACC,QAAQ;QAEpC;MAED;MAEAuvB,OAAO,CAAC9rD,KAAK,GAAGuxE,QAAQ;MACxBzlB,OAAO,CAAC1/B,WAAW,GAAG,IAAI;IAE3B;IAEAq8B,KAAK,CAACgoB,SAAS,GAAGiB,OAAO;IACzBjpB,KAAK,CAACioB,eAAe,GAAG,CAAC;IAEzB,OAAOa,QAAQ;EAEhB;AAED;AAEA,SAASO,aAAaA,CAAE3nB,QAAQ,EAAG;EAElC,IAAI2d,QAAQ,GAAG,IAAIrT,OAAO,CAAC,CAAC;EAE5B,SAASsd,iBAAiBA,CAAE5iD,OAAO,EAAE7E,OAAO,EAAG;IAE9C,IAAKA,OAAO,KAAK/c,gCAAgC,EAAG;MAEnD4hB,OAAO,CAAC7E,OAAO,GAAGjd,qBAAqB;IAExC,CAAC,MAAM,IAAKid,OAAO,KAAK9c,gCAAgC,EAAG;MAE1D2hB,OAAO,CAAC7E,OAAO,GAAGhd,qBAAqB;IAExC;IAEA,OAAO6hB,OAAO;EAEf;EAEA,SAAS5S,GAAGA,CAAE4S,OAAO,EAAG;IAEvB,IAAKA,OAAO,IAAIA,OAAO,CAACnE,SAAS,IAAImE,OAAO,CAACrD,qBAAqB,KAAK,KAAK,EAAG;MAE9E,IAAMxB,OAAO,GAAG6E,OAAO,CAAC7E,OAAO;MAE/B,IAAKA,OAAO,KAAK/c,gCAAgC,IAAI+c,OAAO,KAAK9c,gCAAgC,EAAG;QAEnG,IAAKs6D,QAAQ,CAACsG,GAAG,CAAEj/C,OAAQ,CAAC,EAAG;UAE9B,IAAM6iD,OAAO,GAAGlK,QAAQ,CAACvrD,GAAG,CAAE4S,OAAQ,CAAC,CAACA,OAAO;UAC/C,OAAO4iD,iBAAiB,CAAEC,OAAO,EAAE7iD,OAAO,CAAC7E,OAAQ,CAAC;QAErD,CAAC,MAAM;UAEN,IAAMvC,KAAK,GAAGoH,OAAO,CAACpH,KAAK;UAE3B,IAAKA,KAAK,IAAIA,KAAK,CAACK,MAAM,GAAG,CAAC,EAAG;YAEhC,IAAM+lC,YAAY,GAAG,IAAI6B,qBAAqB,CAAEjoC,KAAK,CAACK,MAAM,GAAG,CAAE,CAAC;YAClE+lC,YAAY,CAACkC,0BAA0B,CAAElG,QAAQ,EAAEh7B,OAAQ,CAAC;YAC5D24C,QAAQ,CAACxsD,GAAG,CAAE6T,OAAO,EAAEg/B,YAAa,CAAC;YAErCh/B,OAAO,CAACtZ,gBAAgB,CAAE,SAAS,EAAEo8D,gBAAiB,CAAC;YAEvD,OAAOF,iBAAiB,CAAE5jB,YAAY,CAACh/B,OAAO,EAAEA,OAAO,CAAC7E,OAAQ,CAAC;UAElE,CAAC,MAAM;YAEN;;YAEA,OAAO,IAAI;UAEZ;QAED;MAED;IAED;IAEA,OAAO6E,OAAO;EAEf;EAEA,SAAS8iD,gBAAgBA,CAAEz7D,KAAK,EAAG;IAElC,IAAM2Y,OAAO,GAAG3Y,KAAK,CAACjO,MAAM;IAE5B4mB,OAAO,CAAChZ,mBAAmB,CAAE,SAAS,EAAE87D,gBAAiB,CAAC;IAE1D,IAAMD,OAAO,GAAGlK,QAAQ,CAACvrD,GAAG,CAAE4S,OAAQ,CAAC;IAEvC,IAAK6iD,OAAO,KAAK3tE,SAAS,EAAG;MAE5ByjE,QAAQ,CAAClS,MAAM,CAAEzmC,OAAQ,CAAC;MAC1B6iD,OAAO,CAACzlD,OAAO,CAAC,CAAC;IAElB;EAED;EAEA,SAASA,OAAOA,CAAA,EAAG;IAElBu7C,QAAQ,GAAG,IAAIrT,OAAO,CAAC,CAAC;EAEzB;EAEA,OAAO;IACNl4C,GAAG,EAAEA,GAAG;IACRgQ,OAAO,EAAEA;EACV,CAAC;AAEF;AAAC,IAEK2lD,kBAAkB,0BAAAC,QAAA;EAAAjoD,SAAA,CAAAgoD,kBAAA,EAAAC,QAAA;EAAA,IAAAC,QAAA,GAAAhoD,YAAA,CAAA8nD,kBAAA;EAEvB,SAAAA,mBAAazrC,IAAI,GAAG,CAAE,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAE,CAAC,EAAEC,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAA,IAAAurC,OAAA;IAAAlqE,eAAA,OAAA+pE,kBAAA;IAEnFG,OAAA,GAAAD,QAAA,CAAAtwE,IAAA;IAEAuwE,OAAA,CAAKC,oBAAoB,GAAG,IAAI;IAEhCD,OAAA,CAAKxwE,IAAI,GAAG,oBAAoB;IAEhCwwE,OAAA,CAAK3lB,IAAI,GAAG,CAAC;IACb2lB,OAAA,CAAKzlB,IAAI,GAAG,IAAI;IAEhBylB,OAAA,CAAK5rC,IAAI,GAAGA,IAAI;IAChB4rC,OAAA,CAAK3rC,KAAK,GAAGA,KAAK;IAClB2rC,OAAA,CAAK1rC,GAAG,GAAGA,GAAG;IACd0rC,OAAA,CAAKzrC,MAAM,GAAGA,MAAM;IAEpByrC,OAAA,CAAKxrC,IAAI,GAAGA,IAAI;IAChBwrC,OAAA,CAAKvrC,GAAG,GAAGA,GAAG;IAEdurC,OAAA,CAAKtlB,sBAAsB,CAAC,CAAC;IAAC,OAAAslB,OAAA;EAE/B;EAAC1pE,YAAA,CAAAupE,kBAAA;IAAApyE,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAy1B,kBAAA,CAAAzyE,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAAC7I,IAAI,GAAGvb,MAAM,CAACub,IAAI;MACvB,IAAI,CAACC,KAAK,GAAGxb,MAAM,CAACwb,KAAK;MACzB,IAAI,CAACC,GAAG,GAAGzb,MAAM,CAACyb,GAAG;MACrB,IAAI,CAACC,MAAM,GAAG1b,MAAM,CAAC0b,MAAM;MAC3B,IAAI,CAACC,IAAI,GAAG3b,MAAM,CAAC2b,IAAI;MACvB,IAAI,CAACC,GAAG,GAAG5b,MAAM,CAAC4b,GAAG;MAErB,IAAI,CAAC4lB,IAAI,GAAGxhC,MAAM,CAACwhC,IAAI;MACvB,IAAI,CAACE,IAAI,GAAG1hC,MAAM,CAAC0hC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGptD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAAC0hC,IAAK,CAAC;MAE1E,OAAO,IAAI;IAEZ;EAAC;IAAA9sD,GAAA;IAAAE,KAAA,EAED,SAAAytD,cAAeC,SAAS,EAAEC,UAAU,EAAE31C,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAM,EAAG;MAE3D,IAAK,IAAI,CAACwkC,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,GAAG;UACX5lC,OAAO,EAAE,IAAI;UACb0mC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,CAAC;UACbC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,CAAC;UACV1lC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACT,CAAC;MAEF;MAEA,IAAI,CAACwkC,IAAI,CAAC5lC,OAAO,GAAG,IAAI;MACxB,IAAI,CAAC4lC,IAAI,CAACc,SAAS,GAAGA,SAAS;MAC/B,IAAI,CAACd,IAAI,CAACe,UAAU,GAAGA,UAAU;MACjC,IAAI,CAACf,IAAI,CAACgB,OAAO,GAAG51C,CAAC;MACrB,IAAI,CAAC40C,IAAI,CAACiB,OAAO,GAAGv1C,CAAC;MACrB,IAAI,CAACs0C,IAAI,CAACzkC,KAAK,GAAGA,KAAK;MACvB,IAAI,CAACykC,IAAI,CAACxkC,MAAM,GAAGA,MAAM;MAEzB,IAAI,CAAC2kC,sBAAsB,CAAC,CAAC;IAE9B;EAAC;IAAAjtD,GAAA;IAAAE,KAAA,EAED,SAAA8tD,gBAAA,EAAkB;MAEjB,IAAK,IAAI,CAAClB,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,CAAC5lC,OAAO,GAAG,KAAK;MAE1B;MAEA,IAAI,CAAC+lC,sBAAsB,CAAC,CAAC;IAE9B;EAAC;IAAAjtD,GAAA;IAAAE,KAAA,EAED,SAAA+sD,uBAAA,EAAyB;MAExB,IAAM5tC,EAAE,GAAG,CAAE,IAAI,CAACunB,KAAK,GAAG,IAAI,CAACD,IAAI,KAAO,CAAC,GAAG,IAAI,CAACimB,IAAI,CAAE;MACzD,IAAMttC,EAAE,GAAG,CAAE,IAAI,CAACunB,GAAG,GAAG,IAAI,CAACC,MAAM,KAAO,CAAC,GAAG,IAAI,CAAC8lB,IAAI,CAAE;MACzD,IAAMloC,EAAE,GAAG,CAAE,IAAI,CAACkiB,KAAK,GAAG,IAAI,CAACD,IAAI,IAAK,CAAC;MACzC,IAAMhiB,EAAE,GAAG,CAAE,IAAI,CAACkiB,GAAG,GAAG,IAAI,CAACC,MAAM,IAAK,CAAC;MAEzC,IAAIH,IAAI,GAAGjiB,EAAE,GAAGrF,EAAE;MAClB,IAAIunB,KAAK,GAAGliB,EAAE,GAAGrF,EAAE;MACnB,IAAIwnB,GAAG,GAAGliB,EAAE,GAAGrF,EAAE;MACjB,IAAIwnB,MAAM,GAAGniB,EAAE,GAAGrF,EAAE;MAEpB,IAAK,IAAI,CAACwtC,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,CAAC5lC,OAAO,EAAG;QAE9C,IAAMurD,MAAM,GAAG,CAAE,IAAI,CAAC7rC,KAAK,GAAG,IAAI,CAACD,IAAI,IAAK,IAAI,CAACmmB,IAAI,CAACc,SAAS,GAAG,IAAI,CAAChB,IAAI;QAC3E,IAAM8lB,MAAM,GAAG,CAAE,IAAI,CAAC7rC,GAAG,GAAG,IAAI,CAACC,MAAM,IAAK,IAAI,CAACgmB,IAAI,CAACe,UAAU,GAAG,IAAI,CAACjB,IAAI;QAE5EjmB,IAAI,IAAI8rC,MAAM,GAAG,IAAI,CAAC3lB,IAAI,CAACgB,OAAO;QAClClnB,KAAK,GAAGD,IAAI,GAAG8rC,MAAM,GAAG,IAAI,CAAC3lB,IAAI,CAACzkC,KAAK;QACvCwe,GAAG,IAAI6rC,MAAM,GAAG,IAAI,CAAC5lB,IAAI,CAACiB,OAAO;QACjCjnB,MAAM,GAAGD,GAAG,GAAG6rC,MAAM,GAAG,IAAI,CAAC5lB,IAAI,CAACxkC,MAAM;MAEzC;MAEA,IAAI,CAACuP,gBAAgB,CAACqP,gBAAgB,CAAEP,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,gBAAiB,CAAC;MAE9G,IAAI,CAAClP,uBAAuB,CAAC9a,IAAI,CAAE,IAAI,CAAC4a,gBAAiB,CAAC,CAACrU,MAAM,CAAC,CAAC;IAEpE;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAy1B,kBAAA,CAAAzyE,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjCN,IAAI,CAACniB,MAAM,CAAC8lD,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B3jC,IAAI,CAACniB,MAAM,CAAC6/B,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B1d,IAAI,CAACniB,MAAM,CAAC8/B,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9B3d,IAAI,CAACniB,MAAM,CAAC+/B,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1B5d,IAAI,CAACniB,MAAM,CAACggC,MAAM,GAAG,IAAI,CAACA,MAAM;MAChC7d,IAAI,CAACniB,MAAM,CAACigC,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B9d,IAAI,CAACniB,MAAM,CAACkgC,GAAG,GAAG,IAAI,CAACA,GAAG;MAE1B,IAAK,IAAI,CAAC8lB,IAAI,KAAK,IAAI,EAAG7jC,IAAI,CAACniB,MAAM,CAACgmD,IAAI,GAAGptD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAE,IAAI,CAACm9B,IAAK,CAAC;MAE3E,OAAO7jC,IAAI;IAEZ;EAAC;EAAA,OAAAmpD,kBAAA;AAAA,EAjI+BnmB,MAAM;AAAAzsD,OAAA,CAAA4yE,kBAAA,GAAAA,kBAAA;AAqIvC,IAAMO,OAAO,GAAG,CAAC;;AAEjB;AACA;AACA;AACA;AACA,IAAMC,eAAe,GAAG,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAE;;AAEnE;AACA;AACA,IAAMxC,WAAW,GAAG,EAAE;AAEtB,IAAMyC,WAAW,GAAG,aAAc,IAAIT,kBAAkB,CAAC,CAAC;AAC1D,IAAMU,WAAW,GAAG,aAAc,IAAI14B,KAAK,CAAC,CAAC;AAC7C,IAAI24B,UAAU,GAAG,IAAI;;AAErB;AACA,IAAMC,GAAG,GAAG,CAAE,CAAC,GAAGh8D,IAAI,CAAC2H,IAAI,CAAE,CAAE,CAAC,IAAK,CAAC;AACtC,IAAMs0D,OAAO,GAAG,CAAC,GAAGD,GAAG;;AAEvB;AACA;AACA,IAAME,eAAe,GAAG,CACvB,aAAc,IAAIz8C,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACpC,aAAc,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACtC,aAAc,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EACtC,aAAc,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EACxC,aAAc,IAAIA,OAAO,CAAE,CAAC,EAAEu8C,GAAG,EAAEC,OAAQ,CAAC,EAC5C,aAAc,IAAIx8C,OAAO,CAAE,CAAC,EAAEu8C,GAAG,EAAE,CAAEC,OAAQ,CAAC,EAC9C,aAAc,IAAIx8C,OAAO,CAAEw8C,OAAO,EAAE,CAAC,EAAED,GAAI,CAAC,EAC5C,aAAc,IAAIv8C,OAAO,CAAE,CAAEw8C,OAAO,EAAE,CAAC,EAAED,GAAI,CAAC,EAC9C,aAAc,IAAIv8C,OAAO,CAAEu8C,GAAG,EAAEC,OAAO,EAAE,CAAE,CAAC,EAC5C,aAAc,IAAIx8C,OAAO,CAAE,CAAEu8C,GAAG,EAAEC,OAAO,EAAE,CAAE,CAAC,CAAE;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,IAeME,cAAc;EAEnB,SAAAA,eAAa9oB,QAAQ,EAAG;IAAAhiD,eAAA,OAAA8qE,cAAA;IAEvB,IAAI,CAACC,SAAS,GAAG/oB,QAAQ;IACzB,IAAI,CAACgpB,qBAAqB,GAAG,IAAI;IAEjC,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAG,EAAE;IAEjB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACC,gBAAgB,CAAE,IAAI,CAACH,aAAc,CAAC;EAE5C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC9qE,YAAA,CAAAsqE,cAAA;IAAAnzE,GAAA;IAAAE,KAAA,EAOA,SAAA6zE,UAAWzkB,KAAK,EAAE0kB,KAAK,GAAG,CAAC,EAAEjtC,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,GAAG,EAAG;MAEpD+rC,UAAU,GAAG,IAAI,CAACK,SAAS,CAAC9oB,eAAe,CAAC,CAAC;MAE7C,IAAI,CAAC2pB,QAAQ,CAAE,GAAI,CAAC;MAEpB,IAAMC,kBAAkB,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;MAClDD,kBAAkB,CAAC5kD,WAAW,GAAG,IAAI;MAErC,IAAI,CAAC8kD,cAAc,CAAE9kB,KAAK,EAAEvoB,IAAI,EAAEC,GAAG,EAAEktC,kBAAmB,CAAC;MAE3D,IAAKF,KAAK,GAAG,CAAC,EAAG;QAEhB,IAAI,CAACK,KAAK,CAAEH,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAEF,KAAM,CAAC;MAE9C;MAEA,IAAI,CAACM,WAAW,CAAEJ,kBAAmB,CAAC;MACtC,IAAI,CAACK,QAAQ,CAAEL,kBAAmB,CAAC;MAEnC,OAAOA,kBAAkB;IAE1B;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAl0E,GAAA;IAAAE,KAAA,EAKA,SAAAs0E,oBAAqBC,eAAe,EAAEpmB,YAAY,GAAG,IAAI,EAAG;MAE3D,OAAO,IAAI,CAACqmB,YAAY,CAAED,eAAe,EAAEpmB,YAAa,CAAC;IAE1D;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAruD,GAAA;IAAAE,KAAA,EAKA,SAAAy0E,YAAazC,OAAO,EAAE7jB,YAAY,GAAG,IAAI,EAAG;MAE3C,OAAO,IAAI,CAACqmB,YAAY,CAAExC,OAAO,EAAE7jB,YAAa,CAAC;IAElD;;IAEA;AACD;AACA;AACA;EAHC;IAAAruD,GAAA;IAAAE,KAAA,EAIA,SAAA00E,qBAAA,EAAuB;MAEtB,IAAK,IAAI,CAAChB,gBAAgB,KAAK,IAAI,EAAG;QAErC,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,CAAC,CAAC;QAC7C,IAAI,CAACf,gBAAgB,CAAE,IAAI,CAACF,gBAAiB,CAAC;MAE/C;IAED;;IAEA;AACD;AACA;AACA;EAHC;IAAA5zE,GAAA;IAAAE,KAAA,EAIA,SAAA40E,6BAAA,EAA+B;MAE9B,IAAK,IAAI,CAACjB,iBAAiB,KAAK,IAAI,EAAG;QAEtC,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,CAAC,CAAC;QAC/C,IAAI,CAACjB,gBAAgB,CAAE,IAAI,CAACD,iBAAkB,CAAC;MAEhD;IAED;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA7zE,GAAA;IAAAE,KAAA,EAKA,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACuoD,QAAQ,CAAC,CAAC;MAEf,IAAK,IAAI,CAACpB,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,CAACnnD,OAAO,CAAC,CAAC;MACrE,IAAK,IAAI,CAAConD,iBAAiB,KAAK,IAAI,EAAG,IAAI,CAACA,iBAAiB,CAACpnD,OAAO,CAAC,CAAC;IAExE;;IAEA;EAAA;IAAAzsB,GAAA;IAAAE,KAAA,EAEA,SAAA+zE,SAAUgB,QAAQ,EAAG;MAEpB,IAAI,CAAC3B,OAAO,GAAGt8D,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACk+D,IAAI,CAAED,QAAS,CAAE,CAAC;MAClD,IAAI,CAAC1B,SAAS,GAAGv8D,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAE,IAAI,CAACm5D,OAAQ,CAAC;IAE7C;EAAC;IAAAtzE,GAAA;IAAAE,KAAA,EAED,SAAA80E,SAAA,EAAW;MAEV,IAAK,IAAI,CAACrB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,CAAClnD,OAAO,CAAC,CAAC;MAE/D,IAAK,IAAI,CAAC4mD,qBAAqB,KAAK,IAAI,EAAG,IAAI,CAACA,qBAAqB,CAAC5mD,OAAO,CAAC,CAAC;MAE/E,KAAM,IAAI3mB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0tE,UAAU,CAAC3tE,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEnD,IAAI,CAAC0tE,UAAU,CAAE1tE,CAAC,CAAE,CAAC2mB,OAAO,CAAC,CAAC;MAE/B;IAED;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAAq0E,SAAUY,YAAY,EAAG;MAExB,IAAI,CAAC/B,SAAS,CAACzjB,eAAe,CAAEojB,UAAW,CAAC;MAC5CoC,YAAY,CAAChmD,WAAW,GAAG,KAAK;MAChCimD,YAAY,CAAED,YAAY,EAAE,CAAC,EAAE,CAAC,EAAEA,YAAY,CAAC9sD,KAAK,EAAE8sD,YAAY,CAAC7sD,MAAO,CAAC;IAE5E;EAAC;IAAAtoB,GAAA;IAAAE,KAAA,EAED,SAAAw0E,aAAcrlD,OAAO,EAAEg/B,YAAY,EAAG;MAErC,IAAKh/B,OAAO,CAAC7E,OAAO,KAAKjd,qBAAqB,IAAI8hB,OAAO,CAAC7E,OAAO,KAAKhd,qBAAqB,EAAG;QAE7F,IAAI,CAACymE,QAAQ,CAAE5kD,OAAO,CAACpH,KAAK,CAACpiB,MAAM,KAAK,CAAC,GAAG,EAAE,GAAKwpB,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,CAACI,KAAK,IAAIgH,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,CAACA,KAAK,CAACI,KAAQ,CAAC;MAElH,CAAC,MAAM;QAAE;;QAER,IAAI,CAAC4rD,QAAQ,CAAE5kD,OAAO,CAACpH,KAAK,CAACI,KAAK,GAAG,CAAE,CAAC;MAEzC;MAEA0qD,UAAU,GAAG,IAAI,CAACK,SAAS,CAAC9oB,eAAe,CAAC,CAAC;MAE7C,IAAM4pB,kBAAkB,GAAG7lB,YAAY,IAAI,IAAI,CAAC8lB,gBAAgB,CAAC,CAAC;MAClE,IAAI,CAACkB,gBAAgB,CAAEhmD,OAAO,EAAE6kD,kBAAmB,CAAC;MACpD,IAAI,CAACI,WAAW,CAAEJ,kBAAmB,CAAC;MACtC,IAAI,CAACK,QAAQ,CAAEL,kBAAmB,CAAC;MAEnC,OAAOA,kBAAkB;IAE1B;EAAC;IAAAl0E,GAAA;IAAAE,KAAA,EAED,SAAAi0E,iBAAA,EAAmB;MAElB,IAAM9rD,KAAK,GAAG,CAAC,GAAGrR,IAAI,CAACa,GAAG,CAAE,IAAI,CAAC07D,SAAS,EAAE,EAAE,GAAG,CAAE,CAAC;MACpD,IAAMjrD,MAAM,GAAG,CAAC,GAAG,IAAI,CAACirD,SAAS;MAEjC,IAAM+B,MAAM,GAAG;QACd1qD,SAAS,EAAExc,YAAY;QACvByc,SAAS,EAAEzc,YAAY;QACvBsd,eAAe,EAAE,KAAK;QACtB3pB,IAAI,EAAEiN,aAAa;QACnB8b,MAAM,EAAEzb,UAAU;QAClBgY,UAAU,EAAEhU,oBAAoB;QAChCic,WAAW,EAAE;MACd,CAAC;MAED,IAAM4kD,kBAAkB,GAAGqB,mBAAmB,CAAEltD,KAAK,EAAEC,MAAM,EAAEgtD,MAAO,CAAC;MAEvE,IAAK,IAAI,CAACjC,qBAAqB,KAAK,IAAI,IAAI,IAAI,CAACA,qBAAqB,CAAChrD,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACgrD,qBAAqB,CAAC/qD,MAAM,KAAKA,MAAM,EAAG;QAExI,IAAK,IAAI,CAAC+qD,qBAAqB,KAAK,IAAI,EAAG;UAE1C,IAAI,CAAC2B,QAAQ,CAAC,CAAC;QAEhB;QAEA,IAAI,CAAC3B,qBAAqB,GAAGkC,mBAAmB,CAAEltD,KAAK,EAAEC,MAAM,EAAEgtD,MAAO,CAAC;QAEzE,IAAQhC,OAAO,GAAK,IAAI,CAAhBA,OAAO;QAAU,IAAAkC,cAAA,GAC0DC,aAAa,CAAEnC,OAAQ,CAAC;QAA7F,IAAI,CAACG,SAAS,GAAA+B,cAAA,CAAxBE,QAAQ;QAA6B,IAAI,CAAClC,UAAU,GAAAgC,cAAA,CAA1BG,SAAS;QAA2B,IAAI,CAACjC,OAAO,GAAA8B,cAAA,CAApBI,MAAM;QAEhE,IAAI,CAACjC,aAAa,GAAGkC,cAAc,CAAEvC,OAAO,EAAEjrD,KAAK,EAAEC,MAAO,CAAC;MAE9D;MAEA,OAAO4rD,kBAAkB;IAE1B;EAAC;IAAAl0E,GAAA;IAAAE,KAAA,EAED,SAAA4zE,iBAAkB3kC,QAAQ,EAAG;MAE5B,IAAM2mC,OAAO,GAAG,IAAIjvB,IAAI,CAAE,IAAI,CAAC2sB,UAAU,CAAE,CAAC,CAAE,EAAErkC,QAAS,CAAC;MAC1D,IAAI,CAACikC,SAAS,CAAC2C,OAAO,CAAED,OAAO,EAAEjD,WAAY,CAAC;IAE/C;EAAC;IAAA7yE,GAAA;IAAAE,KAAA,EAED,SAAAk0E,eAAgB9kB,KAAK,EAAEvoB,IAAI,EAAEC,GAAG,EAAEktC,kBAAkB,EAAG;MAEtD,IAAM1nB,GAAG,GAAG,EAAE;MACd,IAAMC,MAAM,GAAG,CAAC;MAChB,IAAMupB,UAAU,GAAG,IAAI3pB,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1lB,IAAI,EAAEC,GAAI,CAAC;MAClE,IAAMivC,MAAM,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACrC,IAAMC,WAAW,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MAC9C,IAAM7rB,QAAQ,GAAG,IAAI,CAAC+oB,SAAS;MAE/B,IAAM+C,iBAAiB,GAAG9rB,QAAQ,CAAC2e,SAAS;MAC5C,IAAMI,WAAW,GAAG/e,QAAQ,CAAC+e,WAAW;MACxC/e,QAAQ,CAACif,aAAa,CAAEwJ,WAAY,CAAC;MAErCzoB,QAAQ,CAAC+e,WAAW,GAAGp8D,aAAa;MACpCq9C,QAAQ,CAAC2e,SAAS,GAAG,KAAK;MAE1B,IAAMoN,kBAAkB,GAAG,IAAI/5B,iBAAiB,CAAE;QACjDj2C,IAAI,EAAE,kBAAkB;QACxBysC,IAAI,EAAEjoC,QAAQ;QACd8oC,UAAU,EAAE,KAAK;QACjBD,SAAS,EAAE;MACZ,CAAE,CAAC;MAEH,IAAM4iC,aAAa,GAAG,IAAIxvB,IAAI,CAAE,IAAIuB,WAAW,CAAC,CAAC,EAAEguB,kBAAmB,CAAC;MAEvE,IAAIE,aAAa,GAAG,KAAK;MACzB,IAAM/nC,UAAU,GAAG+gB,KAAK,CAAC/gB,UAAU;MAEnC,IAAKA,UAAU,EAAG;QAEjB,IAAKA,UAAU,CAACC,OAAO,EAAG;UAEzB4nC,kBAAkB,CAAC5vD,KAAK,CAACvJ,IAAI,CAAEsxB,UAAW,CAAC;UAC3C+gB,KAAK,CAAC/gB,UAAU,GAAG,IAAI;UACvB+nC,aAAa,GAAG,IAAI;QAErB;MAED,CAAC,MAAM;QAENF,kBAAkB,CAAC5vD,KAAK,CAACvJ,IAAI,CAAE61D,WAAY,CAAC;QAC5CwD,aAAa,GAAG,IAAI;MAErB;MAEA,KAAM,IAAIxwE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAMywE,GAAG,GAAGzwE,CAAC,GAAG,CAAC;QAEjB,IAAKywE,GAAG,KAAK,CAAC,EAAG;UAEhBP,UAAU,CAAC7xC,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAEy6D,MAAM,CAAEnwE,CAAC,CAAE,EAAE,CAAE,CAAC;UACtCkwE,UAAU,CAACv2C,MAAM,CAAEy2C,WAAW,CAAEpwE,CAAC,CAAE,EAAE,CAAC,EAAE,CAAE,CAAC;QAE5C,CAAC,MAAM,IAAKywE,GAAG,KAAK,CAAC,EAAG;UAEvBP,UAAU,CAAC7xC,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEy6D,MAAM,CAAEnwE,CAAC,CAAG,CAAC;UACtCkwE,UAAU,CAACv2C,MAAM,CAAE,CAAC,EAAEy2C,WAAW,CAAEpwE,CAAC,CAAE,EAAE,CAAE,CAAC;QAE5C,CAAC,MAAM;UAENkwE,UAAU,CAAC7xC,EAAE,CAAC3oB,GAAG,CAAE,CAAC,EAAEy6D,MAAM,CAAEnwE,CAAC,CAAE,EAAE,CAAE,CAAC;UACtCkwE,UAAU,CAACv2C,MAAM,CAAE,CAAC,EAAE,CAAC,EAAEy2C,WAAW,CAAEpwE,CAAC,CAAG,CAAC;QAE5C;QAEA,IAAM40B,IAAI,GAAG,IAAI,CAAC64C,SAAS;QAE3B6B,YAAY,CAAElB,kBAAkB,EAAEqC,GAAG,GAAG77C,IAAI,EAAE50B,CAAC,GAAG,CAAC,GAAG40B,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAEA,IAAK,CAAC;QAE5E2vB,QAAQ,CAACsF,eAAe,CAAEukB,kBAAmB,CAAC;QAE9C,IAAKoC,aAAa,EAAG;UAEpBjsB,QAAQ,CAACuF,MAAM,CAAEymB,aAAa,EAAEL,UAAW,CAAC;QAE7C;QAEA3rB,QAAQ,CAACuF,MAAM,CAAEN,KAAK,EAAE0mB,UAAW,CAAC;MAErC;MAEAK,aAAa,CAACz6C,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAChC4pD,aAAa,CAAClnC,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;MAEhC49B,QAAQ,CAAC+e,WAAW,GAAGA,WAAW;MAClC/e,QAAQ,CAAC2e,SAAS,GAAGmN,iBAAiB;MACtC7mB,KAAK,CAAC/gB,UAAU,GAAGA,UAAU;IAE9B;EAAC;IAAAvuC,GAAA;IAAAE,KAAA,EAED,SAAAm1E,iBAAkBhmD,OAAO,EAAE6kD,kBAAkB,EAAG;MAE/C,IAAM7pB,QAAQ,GAAG,IAAI,CAAC+oB,SAAS;MAE/B,IAAMnjB,aAAa,GAAK5gC,OAAO,CAAC7E,OAAO,KAAKjd,qBAAqB,IAAI8hB,OAAO,CAAC7E,OAAO,KAAKhd,qBAAuB;MAEhH,IAAKyiD,aAAa,EAAG;QAEpB,IAAK,IAAI,CAAC2jB,gBAAgB,KAAK,IAAI,EAAG;UAErC,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,CAAC,CAAC;QAE9C;QAEA,IAAI,CAACjB,gBAAgB,CAAC3pB,QAAQ,CAAC6X,UAAU,CAAC5hE,KAAK,GAAKmvB,OAAO,CAACrD,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAExG,CAAC,MAAM;QAEN,IAAK,IAAI,CAAC6nD,iBAAiB,KAAK,IAAI,EAAG;UAEtC,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,CAAC,CAAC;QAEhD;MAED;MAEA,IAAM5lC,QAAQ,GAAG8gB,aAAa,GAAG,IAAI,CAAC2jB,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;MAC/E,IAAMnjB,IAAI,GAAG,IAAI7J,IAAI,CAAE,IAAI,CAAC2sB,UAAU,CAAE,CAAC,CAAE,EAAErkC,QAAS,CAAC;MAEvD,IAAM8a,QAAQ,GAAG9a,QAAQ,CAAC8a,QAAQ;MAElCA,QAAQ,CAAE,QAAQ,CAAE,CAAC/pD,KAAK,GAAGmvB,OAAO;MAEpC,IAAMqL,IAAI,GAAG,IAAI,CAAC64C,SAAS;MAE3B6B,YAAY,CAAElB,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGx5C,IAAI,EAAE,CAAC,GAAGA,IAAK,CAAC;MAE5D2vB,QAAQ,CAACsF,eAAe,CAAEukB,kBAAmB,CAAC;MAC9C7pB,QAAQ,CAACuF,MAAM,CAAEc,IAAI,EAAEmiB,WAAY,CAAC;IAErC;EAAC;IAAA7yE,GAAA;IAAAE,KAAA,EAED,SAAAo0E,YAAaJ,kBAAkB,EAAG;MAEjC,IAAM7pB,QAAQ,GAAG,IAAI,CAAC+oB,SAAS;MAC/B,IAAMpK,SAAS,GAAG3e,QAAQ,CAAC2e,SAAS;MACpC3e,QAAQ,CAAC2e,SAAS,GAAG,KAAK;MAE1B,KAAM,IAAIljE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0tE,UAAU,CAAC3tE,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEnD,IAAMkuE,KAAK,GAAGh9D,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAAC+0D,OAAO,CAAE5tE,CAAC,CAAE,GAAG,IAAI,CAAC4tE,OAAO,CAAE5tE,CAAC,CAAE,GAAG,IAAI,CAAC4tE,OAAO,CAAE5tE,CAAC,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC4tE,OAAO,CAAE5tE,CAAC,GAAG,CAAC,CAAG,CAAC;QAEhH,IAAM0wE,QAAQ,GAAGtD,eAAe,CAAE,CAAEptE,CAAC,GAAG,CAAC,IAAKotE,eAAe,CAACrtE,MAAM,CAAE;QAEtE,IAAI,CAACwuE,KAAK,CAAEH,kBAAkB,EAAEpuE,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAEkuE,KAAK,EAAEwC,QAAS,CAAC;MAE5D;MAEAnsB,QAAQ,CAAC2e,SAAS,GAAGA,SAAS;IAE/B;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAAhpE,GAAA;IAAAE,KAAA,EAOA,SAAAm0E,MAAOH,kBAAkB,EAAEuC,KAAK,EAAEC,MAAM,EAAE1C,KAAK,EAAEwC,QAAQ,EAAG;MAE3D,IAAMG,oBAAoB,GAAG,IAAI,CAACtD,qBAAqB;MAEvD,IAAI,CAACuD,SAAS,CACb1C,kBAAkB,EAClByC,oBAAoB,EACpBF,KAAK,EACLC,MAAM,EACN1C,KAAK,EACL,aAAa,EACbwC,QAAS,CAAC;MAEX,IAAI,CAACI,SAAS,CACbD,oBAAoB,EACpBzC,kBAAkB,EAClBwC,MAAM,EACNA,MAAM,EACN1C,KAAK,EACL,cAAc,EACdwC,QAAS,CAAC;IAEZ;EAAC;IAAAx2E,GAAA;IAAAE,KAAA,EAED,SAAA02E,UAAWC,QAAQ,EAAEC,SAAS,EAAEL,KAAK,EAAEC,MAAM,EAAEK,YAAY,EAAEz3C,SAAS,EAAEk3C,QAAQ,EAAG;MAElF,IAAMnsB,QAAQ,GAAG,IAAI,CAAC+oB,SAAS;MAC/B,IAAM4D,YAAY,GAAG,IAAI,CAACrD,aAAa;MAEvC,IAAKr0C,SAAS,KAAK,aAAa,IAAIA,SAAS,KAAK,cAAc,EAAG;QAElE7jB,OAAO,CAAChY,KAAK,CACZ,4DAA6D,CAAC;MAEhE;;MAEA;MACA,IAAMwzE,mBAAmB,GAAG,CAAC;MAE7B,IAAMC,QAAQ,GAAG,IAAIrwB,IAAI,CAAE,IAAI,CAAC2sB,UAAU,CAAEkD,MAAM,CAAE,EAAEM,YAAa,CAAC;MACpE,IAAMG,YAAY,GAAGH,YAAY,CAAC/sB,QAAQ;MAE1C,IAAMmtB,MAAM,GAAG,IAAI,CAAC3D,SAAS,CAAEgD,KAAK,CAAE,GAAG,CAAC;MAC1C,IAAMY,eAAe,GAAGpzB,QAAQ,CAAE8yB,YAAa,CAAC,GAAG//D,IAAI,CAACC,EAAE,IAAK,CAAC,GAAGmgE,MAAM,CAAE,GAAG,CAAC,GAAGpgE,IAAI,CAACC,EAAE,IAAK,CAAC,GAAGm5D,WAAW,GAAG,CAAC,CAAE;MACnH,IAAMkH,WAAW,GAAGP,YAAY,GAAGM,eAAe;MAClD,IAAM5nD,OAAO,GAAGw0B,QAAQ,CAAE8yB,YAAa,CAAC,GAAG,CAAC,GAAG//D,IAAI,CAACsC,KAAK,CAAE29D,mBAAmB,GAAGK,WAAY,CAAC,GAAGlH,WAAW;MAE5G,IAAK3gD,OAAO,GAAG2gD,WAAW,EAAG;QAE5B30D,OAAO,CAACC,IAAI,kBAAAiM,MAAA,CACXovD,YAAY,oDAAApvD,MAAA,CACZ8H,OAAO,0CAAA9H,MAAA,CAAuCyoD,WAAW,CAAG,CAAC;MAE/D;MAEA,IAAMmH,OAAO,GAAG,EAAE;MAClB,IAAIC,GAAG,GAAG,CAAC;MAEX,KAAM,IAAI1xE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsqE,WAAW,EAAE,EAAGtqE,CAAC,EAAG;QAExC,IAAMoS,GAAC,GAAGpS,CAAC,GAAGwxE,WAAW;QACzB,IAAMG,MAAM,GAAGzgE,IAAI,CAAC8B,GAAG,CAAE,CAAEZ,GAAC,GAAGA,GAAC,GAAG,CAAE,CAAC;QACtCq/D,OAAO,CAACjyE,IAAI,CAAEmyE,MAAO,CAAC;QAEtB,IAAK3xE,CAAC,KAAK,CAAC,EAAG;UAEd0xE,GAAG,IAAIC,MAAM;QAEd,CAAC,MAAM,IAAK3xE,CAAC,GAAG2pB,OAAO,EAAG;UAEzB+nD,GAAG,IAAI,CAAC,GAAGC,MAAM;QAElB;MAED;MAEA,KAAM,IAAI3xE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGyxE,OAAO,CAAC1xE,MAAM,EAAEC,IAAC,EAAG,EAAG;QAE3CyxE,OAAO,CAAEzxE,IAAC,CAAE,GAAGyxE,OAAO,CAAEzxE,IAAC,CAAE,GAAG0xE,GAAG;MAElC;MAEAL,YAAY,CAAE,QAAQ,CAAE,CAACj3E,KAAK,GAAG22E,QAAQ,CAACxnD,OAAO;MACjD8nD,YAAY,CAAE,SAAS,CAAE,CAACj3E,KAAK,GAAGuvB,OAAO;MACzC0nD,YAAY,CAAE,SAAS,CAAE,CAACj3E,KAAK,GAAGq3E,OAAO;MACzCJ,YAAY,CAAE,aAAa,CAAE,CAACj3E,KAAK,GAAGo/B,SAAS,KAAK,aAAa;MAEjE,IAAKk3C,QAAQ,EAAG;QAEfW,YAAY,CAAE,UAAU,CAAE,CAACj3E,KAAK,GAAGs2E,QAAQ;MAE5C;MAEA,IAAQlD,OAAO,GAAK,IAAI,CAAhBA,OAAO;MACf6D,YAAY,CAAE,QAAQ,CAAE,CAACj3E,KAAK,GAAGm3E,eAAe;MAChDF,YAAY,CAAE,QAAQ,CAAE,CAACj3E,KAAK,GAAGozE,OAAO,GAAGmD,KAAK;MAEhD,IAAMiB,UAAU,GAAG,IAAI,CAACjE,SAAS,CAAEiD,MAAM,CAAE;MAC3C,IAAMx+D,CAAC,GAAG,CAAC,GAAGw/D,UAAU,IAAKhB,MAAM,GAAGpD,OAAO,GAAGX,OAAO,GAAG+D,MAAM,GAAGpD,OAAO,GAAGX,OAAO,GAAG,CAAC,CAAE;MAC1F,IAAMn6D,CAAC,GAAG,CAAC,IAAK,IAAI,CAAC+6D,SAAS,GAAGmE,UAAU,CAAE;MAE7CtC,YAAY,CAAE0B,SAAS,EAAE5+D,CAAC,EAAEM,CAAC,EAAE,CAAC,GAAGk/D,UAAU,EAAE,CAAC,GAAGA,UAAW,CAAC;MAC/DrtB,QAAQ,CAACsF,eAAe,CAAEmnB,SAAU,CAAC;MACrCzsB,QAAQ,CAACuF,MAAM,CAAEsnB,QAAQ,EAAErE,WAAY,CAAC;IAEzC;EAAC;EAAA,OAAAM,cAAA;AAAA;AAAA3zE,OAAA,CAAA2zE,cAAA,GAAAA,cAAA;AAMF,SAASsC,aAAaA,CAAEkC,MAAM,EAAG;EAEhC,IAAMhC,SAAS,GAAG,EAAE;EACpB,IAAMD,QAAQ,GAAG,EAAE;EACnB,IAAME,MAAM,GAAG,EAAE;EAEjB,IAAIgC,GAAG,GAAGD,MAAM;EAEhB,IAAME,SAAS,GAAGF,MAAM,GAAGhF,OAAO,GAAG,CAAC,GAAGC,eAAe,CAAC/sE,MAAM;EAE/D,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+xE,SAAS,EAAE/xE,CAAC,EAAG,EAAG;IAEtC,IAAMgyE,OAAO,GAAG9gE,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEy9D,GAAI,CAAC;IAClClC,QAAQ,CAACpwE,IAAI,CAAEwyE,OAAQ,CAAC;IACxB,IAAI9D,KAAK,GAAG,GAAG,GAAG8D,OAAO;IAEzB,IAAKhyE,CAAC,GAAG6xE,MAAM,GAAGhF,OAAO,EAAG;MAE3BqB,KAAK,GAAGpB,eAAe,CAAE9sE,CAAC,GAAG6xE,MAAM,GAAGhF,OAAO,GAAG,CAAC,CAAE;IAEpD,CAAC,MAAM,IAAK7sE,CAAC,KAAK,CAAC,EAAG;MAErBkuE,KAAK,GAAG,CAAC;IAEV;IAEA4B,MAAM,CAACtwE,IAAI,CAAE0uE,KAAM,CAAC;IAEpB,IAAM+D,SAAS,GAAG,GAAG,IAAKD,OAAO,GAAG,CAAC,CAAE;IACvC,IAAMlgE,GAAG,GAAG,CAAEmgE,SAAS;IACvB,IAAMlgE,GAAG,GAAG,CAAC,GAAGkgE,SAAS;IACzB,IAAM9mC,GAAG,GAAG,CAAEr5B,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAED,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEC,GAAG,CAAE;IAE1E,IAAMmgE,SAAS,GAAG,CAAC;IACnB,IAAMpvB,QAAQ,GAAG,CAAC;IAClB,IAAMqvB,YAAY,GAAG,CAAC;IACtB,IAAMC,MAAM,GAAG,CAAC;IAChB,IAAMC,aAAa,GAAG,CAAC;IAEvB,IAAMr8C,QAAQ,GAAG,IAAIlgB,YAAY,CAAEq8D,YAAY,GAAGrvB,QAAQ,GAAGovB,SAAU,CAAC;IACxE,IAAMrrD,EAAE,GAAG,IAAI/Q,YAAY,CAAEs8D,MAAM,GAAGtvB,QAAQ,GAAGovB,SAAU,CAAC;IAC5D,IAAM/vB,SAAS,GAAG,IAAIrsC,YAAY,CAAEu8D,aAAa,GAAGvvB,QAAQ,GAAGovB,SAAU,CAAC;IAE1E,KAAM,IAAI9vB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG8vB,SAAS,EAAE9vB,IAAI,EAAG,EAAG;MAE/C,IAAMhwC,CAAC,GAAKgwC,IAAI,GAAG,CAAC,GAAK,CAAC,GAAG,CAAC,GAAG,CAAC;MAClC,IAAM1vC,CAAC,GAAG0vC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;MAC5B,IAAMkwB,WAAW,GAAG,CACnBlgE,CAAC,EAAEM,CAAC,EAAE,CAAC,EACPN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,EAAE,CAAC,EACfN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBN,CAAC,EAAEM,CAAC,EAAE,CAAC,EACPN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBN,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,CACX;MACDsjB,QAAQ,CAACtgB,GAAG,CAAE48D,WAAW,EAAEH,YAAY,GAAGrvB,QAAQ,GAAGV,IAAK,CAAC;MAC3Dv7B,EAAE,CAACnR,GAAG,CAAEy1B,GAAG,EAAEinC,MAAM,GAAGtvB,QAAQ,GAAGV,IAAK,CAAC;MACvC,IAAMmwB,IAAI,GAAG,CAAEnwB,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,CAAE;MACnDD,SAAS,CAACzsC,GAAG,CAAE68D,IAAI,EAAEF,aAAa,GAAGvvB,QAAQ,GAAGV,IAAK,CAAC;IAEvD;IAEA,IAAMkK,MAAM,GAAG,IAAIhR,cAAc,CAAC,CAAC;IACnCgR,MAAM,CAAClQ,YAAY,CAAE,UAAU,EAAE,IAAIvE,eAAe,CAAE7hB,QAAQ,EAAEm8C,YAAa,CAAE,CAAC;IAChF7lB,MAAM,CAAClQ,YAAY,CAAE,IAAI,EAAE,IAAIvE,eAAe,CAAEhxB,EAAE,EAAEurD,MAAO,CAAE,CAAC;IAC9D9lB,MAAM,CAAClQ,YAAY,CAAE,WAAW,EAAE,IAAIvE,eAAe,CAAEsK,SAAS,EAAEkwB,aAAc,CAAE,CAAC;IACnFxC,SAAS,CAACrwE,IAAI,CAAE8sD,MAAO,CAAC;IAExB,IAAKwlB,GAAG,GAAGjF,OAAO,EAAG;MAEpBiF,GAAG,EAAG;IAEP;EAED;EAEA,OAAO;IAAEjC,SAAS,EAATA,SAAS;IAAED,QAAQ,EAARA,QAAQ;IAAEE,MAAM,EAANA;EAAO,CAAC;AAEvC;AAEA,SAASL,mBAAmBA,CAAEltD,KAAK,EAAEC,MAAM,EAAEgtD,MAAM,EAAG;EAErD,IAAMpB,kBAAkB,GAAG,IAAItkD,iBAAiB,CAAEvH,KAAK,EAAEC,MAAM,EAAEgtD,MAAO,CAAC;EACzEpB,kBAAkB,CAAC7kD,OAAO,CAAC7E,OAAO,GAAG7c,uBAAuB;EAC5DumE,kBAAkB,CAAC7kD,OAAO,CAACjpB,IAAI,GAAG,cAAc;EAChD8tE,kBAAkB,CAAC/kD,WAAW,GAAG,IAAI;EACrC,OAAO+kD,kBAAkB;AAE1B;AAEA,SAASkB,YAAYA,CAAE3sE,MAAM,EAAEyP,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAM,EAAG;EAEpD7f,MAAM,CAAC2mB,QAAQ,CAAC5T,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAO,CAAC;EAC1C7f,MAAM,CAACymB,OAAO,CAAC1T,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAO,CAAC;AAE1C;AAEA,SAASutD,cAAcA,CAAE8B,MAAM,EAAEtvD,KAAK,EAAEC,MAAM,EAAG;EAEhD,IAAMivD,OAAO,GAAG,IAAI37D,YAAY,CAAEw0D,WAAY,CAAC;EAC/C,IAAMoG,QAAQ,GAAG,IAAI//C,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;EACvC,IAAM6hD,cAAc,GAAG,IAAI1tB,cAAc,CAAE;IAE1CxkD,IAAI,EAAE,uBAAuB;IAE7B6kD,OAAO,EAAE;MACR,GAAG,EAAEmlB,WAAW;MAChB,oBAAoB,EAAE,GAAG,GAAG/nD,KAAK;MACjC,qBAAqB,EAAE,GAAG,GAAGC,MAAM;MACnC,gBAAgB,KAAAX,MAAA,CAAKgwD,MAAM;IAC5B,CAAC;IAED1tB,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAE/pD,KAAK,EAAE;MAAK,CAAC;MACzB,SAAS,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACvB,SAAS,EAAE;QAAEA,KAAK,EAAEq3E;MAAQ,CAAC;MAC7B,aAAa,EAAE;QAAEr3E,KAAK,EAAE;MAAM,CAAC;MAC/B,QAAQ,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACtB,QAAQ,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACtB,UAAU,EAAE;QAAEA,KAAK,EAAEs2E;MAAS;IAC/B,CAAC;IAEDrrB,YAAY,EAAEotB,sBAAsB,CAAC,CAAC;IAEtCntB,cAAc,EAAE,4iDA4Df;IAEDxY,QAAQ,EAAE7nC,UAAU;IACpB0oC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAE,CAAC;EAEH,OAAO4kC,cAAc;AAEtB;AAEA,SAASvD,oBAAoBA,CAAA,EAAG;EAE/B,OAAO,IAAInqB,cAAc,CAAE;IAE1BxkD,IAAI,EAAE,yBAAyB;IAE/B6jD,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAE/pD,KAAK,EAAE;MAAK;IACzB,CAAC;IAEDirD,YAAY,EAAEotB,sBAAsB,CAAC,CAAC;IAEtCntB,cAAc,EAAE,kZAmBf;IAEDxY,QAAQ,EAAE7nC,UAAU;IACpB0oC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAE,CAAC;AAEJ;AAEA,SAASmhC,mBAAmBA,CAAA,EAAG;EAE9B,OAAO,IAAIjqB,cAAc,CAAE;IAE1BxkD,IAAI,EAAE,iBAAiB;IAEvB6jD,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAE/pD,KAAK,EAAE;MAAK,CAAC;MACzB,YAAY,EAAE;QAAEA,KAAK,EAAE,CAAE;MAAE;IAC5B,CAAC;IAEDirD,YAAY,EAAEotB,sBAAsB,CAAC,CAAC;IAEtCntB,cAAc,EAAE,mVAgBf;IAEDxY,QAAQ,EAAE7nC,UAAU;IACpB0oC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAE,CAAC;AAEJ;AAEA,SAAS6kC,sBAAsBA,CAAA,EAAG;EAEjC,OAAO;EAAA;AAyDR;AAEA,SAASC,eAAeA,CAAEnuB,QAAQ,EAAG;EAEpC,IAAIouB,UAAU,GAAG,IAAI9jB,OAAO,CAAC,CAAC;EAE9B,IAAI+jB,cAAc,GAAG,IAAI;EAEzB,SAASj8D,GAAGA,CAAE4S,OAAO,EAAG;IAEvB,IAAKA,OAAO,IAAIA,OAAO,CAACnE,SAAS,EAAG;MAEnC,IAAMV,OAAO,GAAG6E,OAAO,CAAC7E,OAAO;MAE/B,IAAMmuD,aAAa,GAAKnuD,OAAO,KAAK/c,gCAAgC,IAAI+c,OAAO,KAAK9c,gCAAkC;MACtH,IAAMkrE,SAAS,GAAKpuD,OAAO,KAAKjd,qBAAqB,IAAIid,OAAO,KAAKhd,qBAAuB;;MAE5F;;MAEA,IAAKmrE,aAAa,IAAIC,SAAS,EAAG;QAEjC,IAAKvpD,OAAO,CAACrD,qBAAqB,IAAIqD,OAAO,CAACpD,gBAAgB,KAAK,IAAI,EAAG;UAEzEoD,OAAO,CAACpD,gBAAgB,GAAG,KAAK;UAEhC,IAAIoiC,YAAY,GAAGoqB,UAAU,CAACh8D,GAAG,CAAE4S,OAAQ,CAAC;UAE5C,IAAKqpD,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAIvF,cAAc,CAAE9oB,QAAS,CAAC;UAE9EgE,YAAY,GAAGsqB,aAAa,GAAGD,cAAc,CAAClE,mBAAmB,CAAEnlD,OAAO,EAAEg/B,YAAa,CAAC,GAAGqqB,cAAc,CAAC/D,WAAW,CAAEtlD,OAAO,EAAEg/B,YAAa,CAAC;UAChJoqB,UAAU,CAACj9D,GAAG,CAAE6T,OAAO,EAAEg/B,YAAa,CAAC;UAEvC,OAAOA,YAAY,CAACh/B,OAAO;QAE5B,CAAC,MAAM;UAEN,IAAKopD,UAAU,CAACnK,GAAG,CAAEj/C,OAAQ,CAAC,EAAG;YAEhC,OAAOopD,UAAU,CAACh8D,GAAG,CAAE4S,OAAQ,CAAC,CAACA,OAAO;UAEzC,CAAC,MAAM;YAEN,IAAMpH,KAAK,GAAGoH,OAAO,CAACpH,KAAK;YAE3B,IAAO0wD,aAAa,IAAI1wD,KAAK,IAAIA,KAAK,CAACK,MAAM,GAAG,CAAC,IAAQswD,SAAS,IAAI3wD,KAAK,IAAI4wD,qBAAqB,CAAE5wD,KAAM,CAAG,EAAG;cAEjH,IAAKywD,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAIvF,cAAc,CAAE9oB,QAAS,CAAC;cAE9E,IAAMgE,aAAY,GAAGsqB,aAAa,GAAGD,cAAc,CAAClE,mBAAmB,CAAEnlD,OAAQ,CAAC,GAAGqpD,cAAc,CAAC/D,WAAW,CAAEtlD,OAAQ,CAAC;cAC1HopD,UAAU,CAACj9D,GAAG,CAAE6T,OAAO,EAAEg/B,aAAa,CAAC;cAEvCh/B,OAAO,CAACtZ,gBAAgB,CAAE,SAAS,EAAEo8D,gBAAiB,CAAC;cAEvD,OAAO9jB,aAAY,CAACh/B,OAAO;YAE5B,CAAC,MAAM;cAEN;;cAEA,OAAO,IAAI;YAEZ;UAED;QAED;MAED;IAED;IAEA,OAAOA,OAAO;EAEf;EAEA,SAASwpD,qBAAqBA,CAAE5wD,KAAK,EAAG;IAEvC,IAAIwJ,KAAK,GAAG,CAAC;IACb,IAAM5rB,MAAM,GAAG,CAAC;IAEhB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAG,EAAG;MAEnC,IAAKmiB,KAAK,CAAEniB,CAAC,CAAE,KAAKvB,SAAS,EAAGktB,KAAK,EAAG;IAEzC;IAEA,OAAOA,KAAK,KAAK5rB,MAAM;EAGxB;EAEA,SAASssE,gBAAgBA,CAAEz7D,KAAK,EAAG;IAElC,IAAM2Y,OAAO,GAAG3Y,KAAK,CAACjO,MAAM;IAE5B4mB,OAAO,CAAChZ,mBAAmB,CAAE,SAAS,EAAE87D,gBAAiB,CAAC;IAE1D,IAAM2G,SAAS,GAAGL,UAAU,CAACh8D,GAAG,CAAE4S,OAAQ,CAAC;IAE3C,IAAKypD,SAAS,KAAKv0E,SAAS,EAAG;MAE9Bk0E,UAAU,CAAC3iB,MAAM,CAAEzmC,OAAQ,CAAC;MAC5BypD,SAAS,CAACrsD,OAAO,CAAC,CAAC;IAEpB;EAED;EAEA,SAASA,OAAOA,CAAA,EAAG;IAElBgsD,UAAU,GAAG,IAAI9jB,OAAO,CAAC,CAAC;IAE1B,IAAK+jB,cAAc,KAAK,IAAI,EAAG;MAE9BA,cAAc,CAACjsD,OAAO,CAAC,CAAC;MACxBisD,cAAc,GAAG,IAAI;IAEtB;EAED;EAEA,OAAO;IACNj8D,GAAG,EAAEA,GAAG;IACRgQ,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAASssD,eAAeA,CAAExkB,EAAE,EAAG;EAE9B,IAAMhJ,UAAU,GAAG,CAAC,CAAC;EAErB,SAASytB,YAAYA,CAAE5yE,IAAI,EAAG;IAE7B,IAAKmlD,UAAU,CAAEnlD,IAAI,CAAE,KAAK7B,SAAS,EAAG;MAEvC,OAAOgnD,UAAU,CAAEnlD,IAAI,CAAE;IAE1B;IAEA,IAAIyjE,SAAS;IAEb,QAASzjE,IAAI;MAEZ,KAAK,qBAAqB;QACzByjE,SAAS,GAAGtV,EAAE,CAACykB,YAAY,CAAE,qBAAsB,CAAC,IAAIzkB,EAAE,CAACykB,YAAY,CAAE,yBAA0B,CAAC,IAAIzkB,EAAE,CAACykB,YAAY,CAAE,4BAA6B,CAAC;QACvJ;MAED,KAAK,gCAAgC;QACpCnP,SAAS,GAAGtV,EAAE,CAACykB,YAAY,CAAE,gCAAiC,CAAC,IAAIzkB,EAAE,CAACykB,YAAY,CAAE,oCAAqC,CAAC,IAAIzkB,EAAE,CAACykB,YAAY,CAAE,uCAAwC,CAAC;QACxL;MAED,KAAK,+BAA+B;QACnCnP,SAAS,GAAGtV,EAAE,CAACykB,YAAY,CAAE,+BAAgC,CAAC,IAAIzkB,EAAE,CAACykB,YAAY,CAAE,mCAAoC,CAAC,IAAIzkB,EAAE,CAACykB,YAAY,CAAE,sCAAuC,CAAC;QACrL;MAED,KAAK,gCAAgC;QACpCnP,SAAS,GAAGtV,EAAE,CAACykB,YAAY,CAAE,gCAAiC,CAAC,IAAIzkB,EAAE,CAACykB,YAAY,CAAE,uCAAwC,CAAC;QAC7H;MAED;QACCnP,SAAS,GAAGtV,EAAE,CAACykB,YAAY,CAAE5yE,IAAK,CAAC;IAErC;IAEAmlD,UAAU,CAAEnlD,IAAI,CAAE,GAAGyjE,SAAS;IAE9B,OAAOA,SAAS;EAEjB;EAEA,OAAO;IAENyE,GAAG,EAAE,SAAAA,IAAWloE,IAAI,EAAG;MAEtB,OAAO4yE,YAAY,CAAE5yE,IAAK,CAAC,KAAK,IAAI;IAErC,CAAC;IAEDyqE,IAAI,EAAE,SAAAA,KAAWrc,YAAY,EAAG;MAE/B,IAAKA,YAAY,CAACC,QAAQ,EAAG;QAE5BukB,YAAY,CAAE,wBAAyB,CAAC;MAEzC,CAAC,MAAM;QAENA,YAAY,CAAE,qBAAsB,CAAC;QACrCA,YAAY,CAAE,mBAAoB,CAAC;QACnCA,YAAY,CAAE,wBAAyB,CAAC;QACxCA,YAAY,CAAE,+BAAgC,CAAC;QAC/CA,YAAY,CAAE,0BAA2B,CAAC;QAC1CA,YAAY,CAAE,wBAAyB,CAAC;QACxCA,YAAY,CAAE,yBAA0B,CAAC;QACzCA,YAAY,CAAE,wBAAyB,CAAC;MAEzC;MAEAA,YAAY,CAAE,0BAA2B,CAAC;MAC1CA,YAAY,CAAE,6BAA8B,CAAC;MAC7CA,YAAY,CAAE,sCAAuC,CAAC;IAEvD,CAAC;IAEDv8D,GAAG,EAAE,SAAAA,IAAWrW,IAAI,EAAG;MAEtB,IAAMyjE,SAAS,GAAGmP,YAAY,CAAE5yE,IAAK,CAAC;MAEtC,IAAKyjE,SAAS,KAAK,IAAI,EAAG;QAEzBpuD,OAAO,CAACC,IAAI,CAAE,uBAAuB,GAAGtV,IAAI,GAAG,2BAA4B,CAAC;MAE7E;MAEA,OAAOyjE,SAAS;IAEjB;EAED,CAAC;AAEF;AAEA,SAASoP,eAAeA,CAAE1kB,EAAE,EAAE14B,UAAU,EAAEn3B,IAAI,EAAEqlE,aAAa,EAAG;EAE/D,IAAMp8B,UAAU,GAAG,CAAC,CAAC;EACrB,IAAMurC,mBAAmB,GAAG,IAAIvkB,OAAO,CAAC,CAAC;EAEzC,SAASwkB,iBAAiBA,CAAEziE,KAAK,EAAG;IAEnC,IAAMklB,QAAQ,GAAGllB,KAAK,CAACjO,MAAM;IAE7B,IAAKmzB,QAAQ,CAACrlB,KAAK,KAAK,IAAI,EAAG;MAE9BslB,UAAU,CAACqQ,MAAM,CAAEtQ,QAAQ,CAACrlB,KAAM,CAAC;IAEpC;IAEA,KAAM,IAAMnQ,IAAI,IAAIw1B,QAAQ,CAACC,UAAU,EAAG;MAEzCA,UAAU,CAACqQ,MAAM,CAAEtQ,QAAQ,CAACC,UAAU,CAAEz1B,IAAI,CAAG,CAAC;IAEjD;IAEA,KAAM,IAAMA,MAAI,IAAIw1B,QAAQ,CAAC6lB,eAAe,EAAG;MAE9C,IAAM9qC,KAAK,GAAGilB,QAAQ,CAAC6lB,eAAe,CAAEr7C,MAAI,CAAE;MAE9C,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGD,KAAK,CAAC9Q,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEhD+1B,UAAU,CAACqQ,MAAM,CAAEv1B,KAAK,CAAE7Q,CAAC,CAAG,CAAC;MAEhC;IAED;IAEA81B,QAAQ,CAACvlB,mBAAmB,CAAE,SAAS,EAAE8iE,iBAAkB,CAAC;IAE5D,OAAOxrC,UAAU,CAAE/R,QAAQ,CAAC6Q,EAAE,CAAE;IAEhC,IAAMvsB,SAAS,GAAGg5D,mBAAmB,CAACz8D,GAAG,CAAEmf,QAAS,CAAC;IAErD,IAAK1b,SAAS,EAAG;MAEhB2b,UAAU,CAACqQ,MAAM,CAAEhsB,SAAU,CAAC;MAC9Bg5D,mBAAmB,CAACpjB,MAAM,CAAEl6B,QAAS,CAAC;IAEvC;IAEAmuC,aAAa,CAAC2D,uBAAuB,CAAE9xC,QAAS,CAAC;IAEjD,IAAKA,QAAQ,CAACixC,yBAAyB,KAAK,IAAI,EAAG;MAElD,OAAOjxC,QAAQ,CAACqxC,iBAAiB;IAElC;;IAEA;;IAEAvoE,IAAI,CAAC00E,MAAM,CAACzrC,UAAU,EAAG;EAE1B;EAEA,SAASlxB,GAAGA,CAAE3V,MAAM,EAAE80B,QAAQ,EAAG;IAEhC,IAAK+R,UAAU,CAAE/R,QAAQ,CAAC6Q,EAAE,CAAE,KAAK,IAAI,EAAG,OAAO7Q,QAAQ;IAEzDA,QAAQ,CAAC7lB,gBAAgB,CAAE,SAAS,EAAEojE,iBAAkB,CAAC;IAEzDxrC,UAAU,CAAE/R,QAAQ,CAAC6Q,EAAE,CAAE,GAAG,IAAI;IAEhC/nC,IAAI,CAAC00E,MAAM,CAACzrC,UAAU,EAAG;IAEzB,OAAO/R,QAAQ;EAEhB;EAEA,SAASpJ,MAAMA,CAAEoJ,QAAQ,EAAG;IAE3B,IAAM+vC,kBAAkB,GAAG/vC,QAAQ,CAACC,UAAU;;IAE9C;;IAEA,KAAM,IAAMz1B,IAAI,IAAIulE,kBAAkB,EAAG;MAExC9vC,UAAU,CAACrJ,MAAM,CAAEm5C,kBAAkB,CAAEvlE,IAAI,CAAE,EAAEmuD,EAAE,CAAC2Y,YAAa,CAAC;IAEjE;;IAEA;;IAEA,IAAMzrB,eAAe,GAAG7lB,QAAQ,CAAC6lB,eAAe;IAEhD,KAAM,IAAMr7C,MAAI,IAAIq7C,eAAe,EAAG;MAErC,IAAM9qC,KAAK,GAAG8qC,eAAe,CAAEr7C,MAAI,CAAE;MAErC,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGD,KAAK,CAAC9Q,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEhD+1B,UAAU,CAACrJ,MAAM,CAAE7b,KAAK,CAAE7Q,CAAC,CAAE,EAAEyuD,EAAE,CAAC2Y,YAAa,CAAC;MAEjD;IAED;EAED;EAEA,SAASmM,wBAAwBA,CAAEz9C,QAAQ,EAAG;IAE7C,IAAMonB,OAAO,GAAG,EAAE;IAElB,IAAMs2B,aAAa,GAAG19C,QAAQ,CAACrlB,KAAK;IACpC,IAAMgjE,gBAAgB,GAAG39C,QAAQ,CAACC,UAAU,CAACC,QAAQ;IACrD,IAAIzS,OAAO,GAAG,CAAC;IAEf,IAAKiwD,aAAa,KAAK,IAAI,EAAG;MAE7B,IAAM3iE,KAAK,GAAG2iE,aAAa,CAAC3iE,KAAK;MACjC0S,OAAO,GAAGiwD,aAAa,CAACjwD,OAAO;MAE/B,KAAM,IAAIvjB,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGD,KAAK,CAAC9Q,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,IAAI,CAAC,EAAG;QAElD,IAAM4U,CAAC,GAAG/D,KAAK,CAAE7Q,CAAC,GAAG,CAAC,CAAE;QACxB,IAAM6U,CAAC,GAAGhE,KAAK,CAAE7Q,CAAC,GAAG,CAAC,CAAE;QACxB,IAAM8U,CAAC,GAAGjE,KAAK,CAAE7Q,CAAC,GAAG,CAAC,CAAE;QAExBk9C,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAEF,CAAE,CAAC;MAEjC;IAED,CAAC,MAAM,IAAK6+D,gBAAgB,KAAKh1E,SAAS,EAAG;MAE5C,IAAMoS,MAAK,GAAG4iE,gBAAgB,CAAC5iE,KAAK;MACpC0S,OAAO,GAAGkwD,gBAAgB,CAAClwD,OAAO;MAElC,KAAM,IAAIvjB,IAAC,GAAG,CAAC,EAAE8Q,GAAC,GAAKD,MAAK,CAAC9Q,MAAM,GAAG,CAAC,GAAK,CAAC,EAAEC,IAAC,GAAG8Q,GAAC,EAAE9Q,IAAC,IAAI,CAAC,EAAG;QAE9D,IAAM4U,GAAC,GAAG5U,IAAC,GAAG,CAAC;QACf,IAAM6U,GAAC,GAAG7U,IAAC,GAAG,CAAC;QACf,IAAM8U,GAAC,GAAG9U,IAAC,GAAG,CAAC;QAEfk9C,OAAO,CAAC19C,IAAI,CAAEoV,GAAC,EAAEC,GAAC,EAAEA,GAAC,EAAEC,GAAC,EAAEA,GAAC,EAAEF,GAAE,CAAC;MAEjC;IAED,CAAC,MAAM;MAEN;IAED;IAEA,IAAMwF,SAAS,GAAG,KAAMkF,gBAAgB,CAAE49B,OAAQ,CAAC,GAAGjD,qBAAqB,GAAGN,qBAAqB,EAAIuD,OAAO,EAAE,CAAE,CAAC;IACnH9iC,SAAS,CAACmJ,OAAO,GAAGA,OAAO;;IAE3B;;IAEA;;IAEA,IAAMmwD,iBAAiB,GAAGN,mBAAmB,CAACz8D,GAAG,CAAEmf,QAAS,CAAC;IAE7D,IAAK49C,iBAAiB,EAAG39C,UAAU,CAACqQ,MAAM,CAAEstC,iBAAkB,CAAC;;IAE/D;;IAEAN,mBAAmB,CAAC19D,GAAG,CAAEogB,QAAQ,EAAE1b,SAAU,CAAC;EAE/C;EAEA,SAASu5D,qBAAqBA,CAAE79C,QAAQ,EAAG;IAE1C,IAAM89C,gBAAgB,GAAGR,mBAAmB,CAACz8D,GAAG,CAAEmf,QAAS,CAAC;IAE5D,IAAK89C,gBAAgB,EAAG;MAEvB,IAAMJ,aAAa,GAAG19C,QAAQ,CAACrlB,KAAK;MAEpC,IAAK+iE,aAAa,KAAK,IAAI,EAAG;QAE7B;;QAEA,IAAKI,gBAAgB,CAACrwD,OAAO,GAAGiwD,aAAa,CAACjwD,OAAO,EAAG;UAEvDgwD,wBAAwB,CAAEz9C,QAAS,CAAC;QAErC;MAED;IAED,CAAC,MAAM;MAENy9C,wBAAwB,CAAEz9C,QAAS,CAAC;IAErC;IAEA,OAAOs9C,mBAAmB,CAACz8D,GAAG,CAAEmf,QAAS,CAAC;EAE3C;EAEA,OAAO;IAENnf,GAAG,EAAEA,GAAG;IACR+V,MAAM,EAAEA,MAAM;IAEdinD,qBAAqB,EAAEA;EAExB,CAAC;AAEF;AAEA,SAASE,0BAA0BA,CAAEplB,EAAE,EAAEhJ,UAAU,EAAE7mD,IAAI,EAAE8vD,YAAY,EAAG;EAEzE,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAIqZ,IAAI;EAER,SAASC,OAAOA,CAAE7tE,KAAK,EAAG;IAEzB4tE,IAAI,GAAG5tE,KAAK;EAEb;EAEA,IAAI6B,IAAI,EAAEyzD,eAAe;EAEzB,SAASxT,QAAQA,CAAE9hD,KAAK,EAAG;IAE1B6B,IAAI,GAAG7B,KAAK,CAAC6B,IAAI;IACjByzD,eAAe,GAAGt1D,KAAK,CAACs1D,eAAe;EAExC;EAEA,SAAS5F,MAAMA,CAAE9N,KAAK,EAAErwB,KAAK,EAAG;IAE/B8iC,EAAE,CAACqlB,YAAY,CAAE9L,IAAI,EAAEr8C,KAAK,EAAE1vB,IAAI,EAAE+/C,KAAK,GAAG0T,eAAgB,CAAC;IAE7D9wD,IAAI,CAAC8tB,MAAM,CAAEf,KAAK,EAAEq8C,IAAI,EAAE,CAAE,CAAC;EAE9B;EAEA,SAASG,eAAeA,CAAEnsB,KAAK,EAAErwB,KAAK,EAAEy8C,SAAS,EAAG;IAEnD,IAAKA,SAAS,KAAK,CAAC,EAAG;IAEvB,IAAIrE,SAAS,EAAEvlE,UAAU;IAEzB,IAAKmwD,QAAQ,EAAG;MAEfoV,SAAS,GAAGtV,EAAE;MACdjwD,UAAU,GAAG,uBAAuB;IAErC,CAAC,MAAM;MAENulE,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,wBAAyB,CAAC;MACtDnY,UAAU,GAAG,4BAA4B;MAEzC,IAAKulE,SAAS,KAAK,IAAI,EAAG;QAEzBpuD,OAAO,CAAChY,KAAK,CAAE,uIAAwI,CAAC;QACxJ;MAED;IAED;IAEAomE,SAAS,CAAEvlE,UAAU,CAAE,CAAEwpE,IAAI,EAAEr8C,KAAK,EAAE1vB,IAAI,EAAE+/C,KAAK,GAAG0T,eAAe,EAAE0Y,SAAU,CAAC;IAEhFxpE,IAAI,CAAC8tB,MAAM,CAAEf,KAAK,EAAEq8C,IAAI,EAAEI,SAAU,CAAC;EAEtC;;EAEA;;EAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;EACtB,IAAI,CAAC/rB,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAAC4N,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACqe,eAAe,GAAGA,eAAe;AAEvC;AAEA,SAAS4L,SAASA,CAAEtlB,EAAE,EAAG;EAExB,IAAM6kB,MAAM,GAAG;IACdzrC,UAAU,EAAE,CAAC;IACbphB,QAAQ,EAAE;EACX,CAAC;EAED,IAAMqjC,MAAM,GAAG;IACdqE,KAAK,EAAE,CAAC;IACR6lB,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,CAAC;IACZv/C,MAAM,EAAE,CAAC;IACTw/C,KAAK,EAAE;EACR,CAAC;EAED,SAASxnD,MAAMA,CAAEf,KAAK,EAAEq8C,IAAI,EAAEmM,aAAa,EAAG;IAE7CrqB,MAAM,CAACkqB,KAAK,EAAG;IAEf,QAAShM,IAAI;MAEZ,KAAKvZ,EAAE,CAAC2lB,SAAS;QAChBtqB,MAAM,CAACmqB,SAAS,IAAIE,aAAa,IAAKxoD,KAAK,GAAG,CAAC,CAAE;QACjD;MAED,KAAK8iC,EAAE,CAAC4lB,KAAK;QACZvqB,MAAM,CAACoqB,KAAK,IAAIC,aAAa,IAAKxoD,KAAK,GAAG,CAAC,CAAE;QAC7C;MAED,KAAK8iC,EAAE,CAAC6lB,UAAU;QACjBxqB,MAAM,CAACoqB,KAAK,IAAIC,aAAa,IAAKxoD,KAAK,GAAG,CAAC,CAAE;QAC7C;MAED,KAAK8iC,EAAE,CAAC8lB,SAAS;QAChBzqB,MAAM,CAACoqB,KAAK,IAAIC,aAAa,GAAGxoD,KAAK;QACrC;MAED,KAAK8iC,EAAE,CAAC+lB,MAAM;QACb1qB,MAAM,CAACp1B,MAAM,IAAIy/C,aAAa,GAAGxoD,KAAK;QACtC;MAED;QACChW,OAAO,CAAChY,KAAK,CAAE,qCAAqC,EAAEqqE,IAAK,CAAC;QAC5D;IAEF;EAED;EAEA,SAASroE,KAAKA,CAAA,EAAG;IAEhBmqD,MAAM,CAACkqB,KAAK,GAAG,CAAC;IAChBlqB,MAAM,CAACmqB,SAAS,GAAG,CAAC;IACpBnqB,MAAM,CAACp1B,MAAM,GAAG,CAAC;IACjBo1B,MAAM,CAACoqB,KAAK,GAAG,CAAC;EAEjB;EAEA,OAAO;IACNZ,MAAM,EAAEA,MAAM;IACdxpB,MAAM,EAAEA,MAAM;IACd2qB,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACf/0E,KAAK,EAAEA,KAAK;IACZ+sB,MAAM,EAAEA;EACT,CAAC;AAEF;AAEA,SAASioD,aAAaA,CAAE//D,CAAC,EAAEC,CAAC,EAAG;EAE9B,OAAOD,CAAC,CAAE,CAAC,CAAE,GAAGC,CAAC,CAAE,CAAC,CAAE;AAEvB;AAEA,SAAS+/D,gBAAgBA,CAAEhgE,CAAC,EAAEC,CAAC,EAAG;EAEjC,OAAO3D,IAAI,CAACgC,GAAG,CAAE2B,CAAC,CAAE,CAAC,CAAG,CAAC,GAAG3D,IAAI,CAACgC,GAAG,CAAE0B,CAAC,CAAE,CAAC,CAAG,CAAC;AAE/C;AAEA,SAASigE,iBAAiBA,CAAEpmB,EAAE,EAAEC,YAAY,EAAEjoC,QAAQ,EAAG;EAExD,IAAMquD,cAAc,GAAG,CAAC,CAAC;EACzB,IAAMrzB,eAAe,GAAG,IAAI3rC,YAAY,CAAE,CAAE,CAAC;EAC7C,IAAMi/D,aAAa,GAAG,IAAIlmB,OAAO,CAAC,CAAC;EACnC,IAAMmmB,KAAK,GAAG,IAAIjuD,OAAO,CAAC,CAAC;EAE3B,IAAMkuD,cAAc,GAAG,EAAE;EAEzB,KAAM,IAAIj1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;IAE9Bi1E,cAAc,CAAEj1E,CAAC,CAAE,GAAG,CAAEA,CAAC,EAAE,CAAC,CAAE;EAE/B;EAEA,SAAS0sB,MAAMA,CAAE1rB,MAAM,EAAE80B,QAAQ,EAAEyuC,OAAO,EAAG;IAE5C,IAAM2Q,gBAAgB,GAAGl0E,MAAM,CAACogD,qBAAqB;IAErD,IAAKsN,YAAY,CAACC,QAAQ,KAAK,IAAI,EAAG;MAErC;MACA;;MAEA,IAAM5R,cAAc,GAAGjnB,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ,IAAIF,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM,IAAI8C,QAAQ,CAAC6lB,eAAe,CAACj7B,KAAK;MAC7H,IAAMy0D,iBAAiB,GAAKp4B,cAAc,KAAKt+C,SAAS,GAAKs+C,cAAc,CAACh9C,MAAM,GAAG,CAAC;MAEtF,IAAIb,KAAK,GAAG61E,aAAa,CAACp+D,GAAG,CAAEmf,QAAS,CAAC;MAEzC,IAAK52B,KAAK,KAAKT,SAAS,IAAIS,KAAK,CAACysB,KAAK,KAAKwpD,iBAAiB,EAAG;QAE/D,IAAKj2E,KAAK,KAAKT,SAAS,EAAGS,KAAK,CAACqqB,OAAO,CAAC5C,OAAO,CAAC,CAAC;QAElD,IAAMyuD,gBAAgB,GAAGt/C,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ,KAAKv3B,SAAS;QACxE,IAAM42E,eAAe,GAAGv/C,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM,KAAKv0B,SAAS;QACrE,IAAM62E,cAAc,GAAGx/C,QAAQ,CAAC6lB,eAAe,CAACj7B,KAAK,KAAKjiB,SAAS;QAEnE,IAAM82E,YAAY,GAAGz/C,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ,IAAI,EAAE;QAC5D,IAAMw/C,YAAY,GAAG1/C,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM,IAAI,EAAE;QAC1D,IAAMyiD,WAAW,GAAG3/C,QAAQ,CAAC6lB,eAAe,CAACj7B,KAAK,IAAI,EAAE;QAExD,IAAIg1D,eAAe,GAAG,CAAC;QAEvB,IAAKN,gBAAgB,KAAK,IAAI,EAAGM,eAAe,GAAG,CAAC;QACpD,IAAKL,eAAe,KAAK,IAAI,EAAGK,eAAe,GAAG,CAAC;QACnD,IAAKJ,cAAc,KAAK,IAAI,EAAGI,eAAe,GAAG,CAAC;QAElD,IAAInzD,KAAK,GAAGuT,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACrK,KAAK,GAAG+pD,eAAe;QAChE,IAAIlzD,MAAM,GAAG,CAAC;QAEd,IAAKD,KAAK,GAAGmsC,YAAY,CAAC6a,cAAc,EAAG;UAE1C/mD,MAAM,GAAGtR,IAAI,CAACoD,IAAI,CAAEiO,KAAK,GAAGmsC,YAAY,CAAC6a,cAAe,CAAC;UACzDhnD,KAAK,GAAGmsC,YAAY,CAAC6a,cAAc;QAEpC;QAEA,IAAM5pD,MAAM,GAAG,IAAI7J,YAAY,CAAEyM,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAG2yD,iBAAkB,CAAC;QAEzE,IAAM5rD,OAAO,GAAG,IAAIY,gBAAgB,CAAExK,MAAM,EAAE4C,KAAK,EAAEC,MAAM,EAAE2yD,iBAAkB,CAAC;QAChF5rD,OAAO,CAACttB,IAAI,GAAGgN,SAAS;QACxBsgB,OAAO,CAAC/C,WAAW,GAAG,IAAI;;QAE1B;;QAEA,IAAMmvD,gBAAgB,GAAGD,eAAe,GAAG,CAAC;QAE5C,KAAM,IAAI11E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGm1E,iBAAiB,EAAEn1E,IAAC,EAAG,EAAG;UAE9C,IAAM41E,WAAW,GAAGL,YAAY,CAAEv1E,IAAC,CAAE;UACrC,IAAM61E,WAAW,GAAGL,YAAY,CAAEx1E,IAAC,CAAE;UACrC,IAAM81E,UAAU,GAAGL,WAAW,CAAEz1E,IAAC,CAAE;UAEnC,IAAMia,MAAM,GAAGsI,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAGxiB,IAAC;UAErC,KAAM,IAAIg4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG49C,WAAW,CAACjqD,KAAK,EAAEqM,CAAC,EAAG,EAAG;YAE9C,IAAMwnB,MAAM,GAAGxnB,CAAC,GAAG29C,gBAAgB;YAEnC,IAAKP,gBAAgB,KAAK,IAAI,EAAG;cAEhCJ,KAAK,CAAC76D,mBAAmB,CAAEy7D,WAAW,EAAE59C,CAAE,CAAC;cAE3CrY,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAGw1B,KAAK,CAAC5iE,CAAC;cACvCuN,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAGw1B,KAAK,CAACtiE,CAAC;cACvCiN,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAGw1B,KAAK,CAAC/tD,CAAC;cACvCtH,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;YAElC;YAEA,IAAK61B,eAAe,KAAK,IAAI,EAAG;cAE/BL,KAAK,CAAC76D,mBAAmB,CAAE07D,WAAW,EAAE79C,CAAE,CAAC;cAE3CrY,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAGw1B,KAAK,CAAC5iE,CAAC;cACvCuN,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAGw1B,KAAK,CAACtiE,CAAC;cACvCiN,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAGw1B,KAAK,CAAC/tD,CAAC;cACvCtH,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;YAElC;YAEA,IAAK81B,cAAc,KAAK,IAAI,EAAG;cAE9BN,KAAK,CAAC76D,mBAAmB,CAAE27D,UAAU,EAAE99C,CAAE,CAAC;cAE1CrY,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAGw1B,KAAK,CAAC5iE,CAAC;cACvCuN,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,CAAC,CAAE,GAAGw1B,KAAK,CAACtiE,CAAC;cACvCiN,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,EAAE,CAAE,GAAGw1B,KAAK,CAAC/tD,CAAC;cACxCtH,MAAM,CAAE1F,MAAM,GAAGulC,MAAM,GAAG,EAAE,CAAE,GAAKs2B,UAAU,CAACh+B,QAAQ,KAAK,CAAC,GAAKk9B,KAAK,CAAC9tD,CAAC,GAAG,CAAC;YAE7E;UAED;QAED;QAEAhoB,KAAK,GAAG;UACPysB,KAAK,EAAEwpD,iBAAiB;UACxB5rD,OAAO,EAAEA,OAAO;UAChBqL,IAAI,EAAE,IAAIpe,OAAO,CAAE+L,KAAK,EAAEC,MAAO;QAClC,CAAC;QAEDuyD,aAAa,CAACr/D,GAAG,CAAEogB,QAAQ,EAAE52B,KAAM,CAAC;QAEpC,SAAS62E,cAAcA,CAAA,EAAG;UAEzBxsD,OAAO,CAAC5C,OAAO,CAAC,CAAC;UAEjBouD,aAAa,CAAC/kB,MAAM,CAAEl6B,QAAS,CAAC;UAEhCA,QAAQ,CAACvlB,mBAAmB,CAAE,SAAS,EAAEwlE,cAAe,CAAC;QAE1D;QAEAjgD,QAAQ,CAAC7lB,gBAAgB,CAAE,SAAS,EAAE8lE,cAAe,CAAC;MAEvD;;MAEA;;MAEA,IAAIC,kBAAkB,GAAG,CAAC;MAE1B,KAAM,IAAIh2E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGk1E,gBAAgB,CAACn1E,MAAM,EAAEC,IAAC,EAAG,EAAG;QAEpDg2E,kBAAkB,IAAId,gBAAgB,CAAEl1E,IAAC,CAAE;MAE5C;MAEA,IAAMi2E,kBAAkB,GAAGngD,QAAQ,CAAC8lB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAGo6B,kBAAkB;MAErFzR,OAAO,CAAC2R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE1nB,EAAE,EAAE,0BAA0B,EAAEwnB,kBAAmB,CAAC;MACpF1R,OAAO,CAAC2R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE1nB,EAAE,EAAE,uBAAuB,EAAEymB,gBAAiB,CAAC;MAE/E3Q,OAAO,CAAC2R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE1nB,EAAE,EAAE,qBAAqB,EAAEvvD,KAAK,CAACqqB,OAAO,EAAE9C,QAAS,CAAC;MACpF89C,OAAO,CAAC2R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE1nB,EAAE,EAAE,yBAAyB,EAAEvvD,KAAK,CAAC01B,IAAK,CAAC;IAG5E,CAAC,MAAM;MAEN;MACA;;MAEA,IAAM70B,MAAM,GAAGm1E,gBAAgB,KAAKz2E,SAAS,GAAG,CAAC,GAAGy2E,gBAAgB,CAACn1E,MAAM;MAE3E,IAAIq2E,UAAU,GAAGtB,cAAc,CAAEh/C,QAAQ,CAAC6Q,EAAE,CAAE;MAE9C,IAAKyvC,UAAU,KAAK33E,SAAS,IAAI23E,UAAU,CAACr2E,MAAM,KAAKA,MAAM,EAAG;QAE/D;;QAEAq2E,UAAU,GAAG,EAAE;QAEf,KAAM,IAAIp2E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGD,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEnCo2E,UAAU,CAAEp2E,IAAC,CAAE,GAAG,CAAEA,IAAC,EAAE,CAAC,CAAE;QAE3B;QAEA80E,cAAc,CAAEh/C,QAAQ,CAAC6Q,EAAE,CAAE,GAAGyvC,UAAU;MAE3C;;MAEA;;MAEA,KAAM,IAAIp2E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGD,MAAM,EAAEC,IAAC,EAAG,EAAG;QAEnC,IAAM0hD,SAAS,GAAG00B,UAAU,CAAEp2E,IAAC,CAAE;QAEjC0hD,SAAS,CAAE,CAAC,CAAE,GAAG1hD,IAAC;QAClB0hD,SAAS,CAAE,CAAC,CAAE,GAAGwzB,gBAAgB,CAAEl1E,IAAC,CAAE;MAEvC;MAEAo2E,UAAU,CAACC,IAAI,CAAEzB,gBAAiB,CAAC;MAEnC,KAAM,IAAI50E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9B,IAAKA,IAAC,GAAGD,MAAM,IAAIq2E,UAAU,CAAEp2E,IAAC,CAAE,CAAE,CAAC,CAAE,EAAG;UAEzCi1E,cAAc,CAAEj1E,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGo2E,UAAU,CAAEp2E,IAAC,CAAE,CAAE,CAAC,CAAE;UAC/Ci1E,cAAc,CAAEj1E,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGo2E,UAAU,CAAEp2E,IAAC,CAAE,CAAE,CAAC,CAAE;QAEhD,CAAC,MAAM;UAENi1E,cAAc,CAAEj1E,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGyD,MAAM,CAAC6yE,gBAAgB;UAClDrB,cAAc,CAAEj1E,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAE7B;MAED;MAEAi1E,cAAc,CAACoB,IAAI,CAAE1B,aAAc,CAAC;MAEpC,IAAMY,aAAY,GAAGz/C,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ;MACtD,IAAMw/C,aAAY,GAAG1/C,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM;MAEpD,IAAIgjD,mBAAkB,GAAG,CAAC;MAE1B,KAAM,IAAIh2E,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9B,IAAM0hD,UAAS,GAAGuzB,cAAc,CAAEj1E,IAAC,CAAE;QACrC,IAAMyQ,KAAK,GAAGixC,UAAS,CAAE,CAAC,CAAE;QAC5B,IAAMtnD,OAAK,GAAGsnD,UAAS,CAAE,CAAC,CAAE;QAE5B,IAAKjxC,KAAK,KAAKhN,MAAM,CAAC6yE,gBAAgB,IAAIl8E,OAAK,EAAG;UAEjD,IAAKm7E,aAAY,IAAIz/C,QAAQ,CAACqmB,YAAY,CAAE,aAAa,GAAGn8C,IAAE,CAAC,KAAKu1E,aAAY,CAAE9kE,KAAK,CAAE,EAAG;YAE3FqlB,QAAQ,CAACsmB,YAAY,CAAE,aAAa,GAAGp8C,IAAC,EAAEu1E,aAAY,CAAE9kE,KAAK,CAAG,CAAC;UAElE;UAEA,IAAK+kE,aAAY,IAAI1/C,QAAQ,CAACqmB,YAAY,CAAE,aAAa,GAAGn8C,IAAE,CAAC,KAAKw1E,aAAY,CAAE/kE,KAAK,CAAE,EAAG;YAE3FqlB,QAAQ,CAACsmB,YAAY,CAAE,aAAa,GAAGp8C,IAAC,EAAEw1E,aAAY,CAAE/kE,KAAK,CAAG,CAAC;UAElE;UAEAgxC,eAAe,CAAEzhD,IAAC,CAAE,GAAG5F,OAAK;UAC5B47E,mBAAkB,IAAI57E,OAAK;QAE5B,CAAC,MAAM;UAEN,IAAKm7E,aAAY,IAAIz/C,QAAQ,CAACwmB,YAAY,CAAE,aAAa,GAAGt8C,IAAE,CAAC,KAAK,IAAI,EAAG;YAE1E81B,QAAQ,CAACumB,eAAe,CAAE,aAAa,GAAGr8C,IAAE,CAAC;UAE9C;UAEA,IAAKw1E,aAAY,IAAI1/C,QAAQ,CAACwmB,YAAY,CAAE,aAAa,GAAGt8C,IAAE,CAAC,KAAK,IAAI,EAAG;YAE1E81B,QAAQ,CAACumB,eAAe,CAAE,aAAa,GAAGr8C,IAAE,CAAC;UAE9C;UAEAyhD,eAAe,CAAEzhD,IAAC,CAAE,GAAG,CAAC;QAEzB;MAED;;MAEA;MACA;MACA;MACA,IAAMi2E,mBAAkB,GAAGngD,QAAQ,CAAC8lB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAGo6B,mBAAkB;MAErFzR,OAAO,CAAC2R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE1nB,EAAE,EAAE,0BAA0B,EAAEwnB,mBAAmB,CAAC;MACpF1R,OAAO,CAAC2R,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAE1nB,EAAE,EAAE,uBAAuB,EAAEhN,eAAgB,CAAC;IAE/E;EAED;EAEA,OAAO;IAEN/0B,MAAM,EAAEA;EAET,CAAC;AAEF;AAEA,SAAS6pD,YAAYA,CAAE9nB,EAAE,EAAE5mB,UAAU,EAAE9R,UAAU,EAAEn3B,IAAI,EAAG;EAEzD,IAAI43E,SAAS,GAAG,IAAI3nB,OAAO,CAAC,CAAC;EAE7B,SAASniC,MAAMA,CAAE1rB,MAAM,EAAG;IAEzB,IAAMmtD,KAAK,GAAGvvD,IAAI,CAACkrD,MAAM,CAACqE,KAAK;IAE/B,IAAMr4B,QAAQ,GAAG90B,MAAM,CAAC80B,QAAQ;IAChC,IAAM2gD,cAAc,GAAG5uC,UAAU,CAAClxB,GAAG,CAAE3V,MAAM,EAAE80B,QAAS,CAAC;;IAEzD;;IAEA,IAAK0gD,SAAS,CAAC7/D,GAAG,CAAE8/D,cAAe,CAAC,KAAKtoB,KAAK,EAAG;MAEhDtmB,UAAU,CAACnb,MAAM,CAAE+pD,cAAe,CAAC;MAEnCD,SAAS,CAAC9gE,GAAG,CAAE+gE,cAAc,EAAEtoB,KAAM,CAAC;IAEvC;IAEA,IAAKntD,MAAM,CAACknC,eAAe,EAAG;MAE7B,IAAKlnC,MAAM,CAACsP,gBAAgB,CAAE,SAAS,EAAEomE,sBAAuB,CAAC,KAAK,KAAK,EAAG;QAE7E11E,MAAM,CAACiP,gBAAgB,CAAE,SAAS,EAAEymE,sBAAuB,CAAC;MAE7D;MAEA,IAAKF,SAAS,CAAC7/D,GAAG,CAAE3V,MAAO,CAAC,KAAKmtD,KAAK,EAAG;QAExCp4B,UAAU,CAACrJ,MAAM,CAAE1rB,MAAM,CAACmnC,cAAc,EAAEsmB,EAAE,CAAC2Y,YAAa,CAAC;QAE3D,IAAKpmE,MAAM,CAAConC,aAAa,KAAK,IAAI,EAAG;UAEpCrS,UAAU,CAACrJ,MAAM,CAAE1rB,MAAM,CAAConC,aAAa,EAAEqmB,EAAE,CAAC2Y,YAAa,CAAC;QAE3D;QAEAoP,SAAS,CAAC9gE,GAAG,CAAE1U,MAAM,EAAEmtD,KAAM,CAAC;MAE/B;IAED;IAEA,IAAKntD,MAAM,CAACioC,aAAa,EAAG;MAE3B,IAAMG,QAAQ,GAAGpoC,MAAM,CAACooC,QAAQ;MAEhC,IAAKotC,SAAS,CAAC7/D,GAAG,CAAEyyB,QAAS,CAAC,KAAK+kB,KAAK,EAAG;QAE1C/kB,QAAQ,CAAC1c,MAAM,CAAC,CAAC;QAEjB8pD,SAAS,CAAC9gE,GAAG,CAAE0zB,QAAQ,EAAE+kB,KAAM,CAAC;MAEjC;IAED;IAEA,OAAOsoB,cAAc;EAEtB;EAEA,SAAS9vD,OAAOA,CAAA,EAAG;IAElB6vD,SAAS,GAAG,IAAI3nB,OAAO,CAAC,CAAC;EAE1B;EAEA,SAAS6nB,sBAAsBA,CAAE9lE,KAAK,EAAG;IAExC,IAAM+lE,aAAa,GAAG/lE,KAAK,CAACjO,MAAM;IAElCg0E,aAAa,CAACpmE,mBAAmB,CAAE,SAAS,EAAEmmE,sBAAuB,CAAC;IAEtE3gD,UAAU,CAACqQ,MAAM,CAAEuwC,aAAa,CAACxuC,cAAe,CAAC;IAEjD,IAAKwuC,aAAa,CAACvuC,aAAa,KAAK,IAAI,EAAGrS,UAAU,CAACqQ,MAAM,CAAEuwC,aAAa,CAACvuC,aAAc,CAAC;EAE7F;EAEA,OAAO;IAEN1b,MAAM,EAAEA,MAAM;IACd/F,OAAO,EAAEA;EAEV,CAAC;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMiwD,YAAY,GAAG,aAAc,IAAIxyD,OAAO,CAAC,CAAC;AAChD,IAAMyyD,iBAAiB,GAAG,aAAc,IAAI1sD,gBAAgB,CAAC,CAAC;AAC9D,IAAM2sD,cAAc,GAAG,aAAc,IAAIhsD,aAAa,CAAC,CAAC;AACxD,IAAMisD,gBAAgB,GAAG,aAAc,IAAIhtB,WAAW,CAAC,CAAC;;AAExD;;AAEA;;AAEA,IAAMitB,aAAa,GAAG,EAAE;AACxB,IAAMC,aAAa,GAAG,EAAE;;AAExB;;AAEA,IAAMC,SAAS,GAAG,IAAIphE,YAAY,CAAE,EAAG,CAAC;AACxC,IAAMqhE,SAAS,GAAG,IAAIrhE,YAAY,CAAE,CAAE,CAAC;AACvC,IAAMshE,SAAS,GAAG,IAAIthE,YAAY,CAAE,CAAE,CAAC;;AAEvC;;AAEA,SAASuhE,OAAOA,CAAExmE,KAAK,EAAEymE,OAAO,EAAEC,SAAS,EAAG;EAE7C,IAAMC,SAAS,GAAG3mE,KAAK,CAAE,CAAC,CAAE;EAE5B,IAAK2mE,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAG,OAAO3mE,KAAK;EACnD;EACA;;EAEA,IAAMoB,CAAC,GAAGqlE,OAAO,GAAGC,SAAS;EAC7B,IAAIl5D,CAAC,GAAG24D,aAAa,CAAE/kE,CAAC,CAAE;EAE1B,IAAKoM,CAAC,KAAK5f,SAAS,EAAG;IAEtB4f,CAAC,GAAG,IAAIvI,YAAY,CAAE7D,CAAE,CAAC;IACzB+kE,aAAa,CAAE/kE,CAAC,CAAE,GAAGoM,CAAC;EAEvB;EAEA,IAAKi5D,OAAO,KAAK,CAAC,EAAG;IAEpBE,SAAS,CAACt9D,OAAO,CAAEmE,CAAC,EAAE,CAAE,CAAC;IAEzB,KAAM,IAAIre,CAAC,GAAG,CAAC,EAAEia,MAAM,GAAG,CAAC,EAAEja,CAAC,KAAKs3E,OAAO,EAAE,EAAGt3E,CAAC,EAAG;MAElDia,MAAM,IAAIs9D,SAAS;MACnB1mE,KAAK,CAAE7Q,CAAC,CAAE,CAACka,OAAO,CAAEmE,CAAC,EAAEpE,MAAO,CAAC;IAEhC;EAED;EAEA,OAAOoE,CAAC;AAET;AAEA,SAASo5D,WAAWA,CAAE7iE,CAAC,EAAEC,CAAC,EAAG;EAE5B,IAAKD,CAAC,CAAC7U,MAAM,KAAK8U,CAAC,CAAC9U,MAAM,EAAG,OAAO,KAAK;EAEzC,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG8D,CAAC,CAAC7U,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;IAE5C,IAAK4U,CAAC,CAAE5U,CAAC,CAAE,KAAK6U,CAAC,CAAE7U,CAAC,CAAE,EAAG,OAAO,KAAK;EAEtC;EAEA,OAAO,IAAI;AAEZ;AAEA,SAASy4C,SAASA,CAAE7jC,CAAC,EAAEC,CAAC,EAAG;EAE1B,KAAM,IAAI7U,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG+D,CAAC,CAAC9U,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;IAE5C4U,CAAC,CAAE5U,CAAC,CAAE,GAAG6U,CAAC,CAAE7U,CAAC,CAAE;EAEhB;AAED;;AAEA;;AAEA,SAAS03E,aAAaA,CAAEjxD,QAAQ,EAAExU,CAAC,EAAG;EAErC,IAAIoM,CAAC,GAAG44D,aAAa,CAAEhlE,CAAC,CAAE;EAE1B,IAAKoM,CAAC,KAAK5f,SAAS,EAAG;IAEtB4f,CAAC,GAAG,IAAInI,UAAU,CAAEjE,CAAE,CAAC;IACvBglE,aAAa,CAAEhlE,CAAC,CAAE,GAAGoM,CAAC;EAEvB;EAEA,KAAM,IAAIre,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;IAEhCqe,CAAC,CAAEre,CAAC,CAAE,GAAGymB,QAAQ,CAACkxD,mBAAmB,CAAC,CAAC;EAExC;EAEA,OAAOt5D,CAAC;AAET;;AAEA;;AAEA;AACA;;AAEA;;AAEA,SAASu5D,WAAWA,CAAEnpB,EAAE,EAAEr3C,CAAC,EAAG;EAE7B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,EAAG;EAExBq3C,EAAE,CAACopB,SAAS,CAAE,IAAI,CAACC,IAAI,EAAE1gE,CAAE,CAAC;EAE5BqyB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC;AAEf;;AAEA;;AAEA,SAAS2gE,WAAWA,CAAEtpB,EAAE,EAAEr3C,CAAC,EAAG;EAE7B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,EAAG;MAE/C+7C,EAAE,CAACupB,SAAS,CAAE,IAAI,CAACF,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAE,CAAC;MAEnC+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAK+kE,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAACwpB,UAAU,CAAE,IAAI,CAACH,IAAI,EAAE1gE,CAAE,CAAC;IAE7BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;AAEA,SAAS8gE,WAAWA,CAAEzpB,EAAE,EAAEr3C,CAAC,EAAG;EAE7B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,IAAI+2B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC6P,CAAC,EAAG;MAErEwnC,EAAE,CAAC0pB,SAAS,CAAE,IAAI,CAACL,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAE,CAAC;MAExCwiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;MAChB+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC6P,CAAC;IAEjB;EAED,CAAC,MAAM,IAAK7P,CAAC,CAACiH,CAAC,KAAK5f,SAAS,EAAG;IAE/B,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAACiH,CAAC,IAAIorB,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAACoG,CAAC,IAAIisB,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAACvC,CAAC,EAAG;MAErE45C,EAAE,CAAC0pB,SAAS,CAAE,IAAI,CAACL,IAAI,EAAE1gE,CAAC,CAACiH,CAAC,EAAEjH,CAAC,CAACoG,CAAC,EAAEpG,CAAC,CAACvC,CAAE,CAAC;MAExC40B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAACiH,CAAC;MAChBorB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAACoG,CAAC;MAChBisB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAACvC,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAK4iE,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAAC2pB,UAAU,CAAE,IAAI,CAACN,IAAI,EAAE1gE,CAAE,CAAC;IAE7BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;AAEA,SAASihE,WAAWA,CAAE5pB,EAAE,EAAEr3C,CAAC,EAAG;EAE7B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,IAAI+2B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC6P,CAAC,IAAIwiB,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC8P,CAAC,EAAG;MAE3FunC,EAAE,CAAC6pB,SAAS,CAAE,IAAI,CAACR,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAC,EAAE7P,CAAC,CAAC8P,CAAE,CAAC;MAE7CuiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;MAChB+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC6P,CAAC;MAChBwiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC8P,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKuwD,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAAC8pB,UAAU,CAAE,IAAI,CAACT,IAAI,EAAE1gE,CAAE,CAAC;IAE7BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;;AAEA;;AAEA,SAASohE,UAAUA,CAAE/pB,EAAE,EAAEr3C,CAAC,EAAG;EAE5B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAMvxB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;EAE3B,IAAKA,QAAQ,KAAKzZ,SAAS,EAAG;IAE7B,IAAKg5E,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAACgqB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAE1gE,CAAE,CAAC;IAE1CqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB,CAAC,MAAM;IAEN,IAAKqgE,WAAW,CAAEhuC,KAAK,EAAEvxB,QAAS,CAAC,EAAG;IAEtCk/D,SAAS,CAAC1hE,GAAG,CAAEwC,QAAS,CAAC;IAEzBu2C,EAAE,CAACgqB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAEV,SAAU,CAAC;IAElD3+B,SAAS,CAAEhP,KAAK,EAAEvxB,QAAS,CAAC;EAE7B;AAED;AAEA,SAASwgE,UAAUA,CAAEjqB,EAAE,EAAEr3C,CAAC,EAAG;EAE5B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAMvxB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;EAE3B,IAAKA,QAAQ,KAAKzZ,SAAS,EAAG;IAE7B,IAAKg5E,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAACkqB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAE1gE,CAAE,CAAC;IAE1CqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB,CAAC,MAAM;IAEN,IAAKqgE,WAAW,CAAEhuC,KAAK,EAAEvxB,QAAS,CAAC,EAAG;IAEtCi/D,SAAS,CAACzhE,GAAG,CAAEwC,QAAS,CAAC;IAEzBu2C,EAAE,CAACkqB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAEX,SAAU,CAAC;IAElD1+B,SAAS,CAAEhP,KAAK,EAAEvxB,QAAS,CAAC;EAE7B;AAED;AAEA,SAAS0gE,UAAUA,CAAEnqB,EAAE,EAAEr3C,CAAC,EAAG;EAE5B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAMvxB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;EAE3B,IAAKA,QAAQ,KAAKzZ,SAAS,EAAG;IAE7B,IAAKg5E,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAACoqB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAE1gE,CAAE,CAAC;IAE1CqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB,CAAC,MAAM;IAEN,IAAKqgE,WAAW,CAAEhuC,KAAK,EAAEvxB,QAAS,CAAC,EAAG;IAEtCg/D,SAAS,CAACxhE,GAAG,CAAEwC,QAAS,CAAC;IAEzBu2C,EAAE,CAACoqB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAEZ,SAAU,CAAC;IAElDz+B,SAAS,CAAEhP,KAAK,EAAEvxB,QAAS,CAAC;EAE7B;AAED;;AAEA;;AAEA,SAAS4gE,WAAWA,CAAErqB,EAAE,EAAEr3C,CAAC,EAAG;EAE7B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,EAAG;EAExBq3C,EAAE,CAACsqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAE1gE,CAAE,CAAC;EAE5BqyB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC;AAEf;;AAEA;;AAEA,SAAS4hE,WAAWA,CAAEvqB,EAAE,EAAEr3C,CAAC,EAAG;EAE7B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,EAAG;MAE/C+7C,EAAE,CAACwqB,SAAS,CAAE,IAAI,CAACnB,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAE,CAAC;MAEnC+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAK+kE,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAACyqB,UAAU,CAAE,IAAI,CAACpB,IAAI,EAAE1gE,CAAE,CAAC;IAE7BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;AAEA,SAAS+hE,WAAWA,CAAE1qB,EAAE,EAAEr3C,CAAC,EAAG;EAE7B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,IAAI+2B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC6P,CAAC,EAAG;MAErEwnC,EAAE,CAAC2qB,SAAS,CAAE,IAAI,CAACtB,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAE,CAAC;MAExCwiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;MAChB+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC6P,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKwwD,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAAC4qB,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAE1gE,CAAE,CAAC;IAE7BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;AAEA,SAASkiE,WAAWA,CAAE7qB,EAAE,EAAEr3C,CAAC,EAAG;EAE7B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,IAAI+2B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC6P,CAAC,IAAIwiB,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC8P,CAAC,EAAG;MAE3FunC,EAAE,CAAC8qB,SAAS,CAAE,IAAI,CAACzB,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAC,EAAE7P,CAAC,CAAC8P,CAAE,CAAC;MAE7CuiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;MAChB+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC6P,CAAC;MAChBwiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC8P,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKuwD,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAAC+qB,UAAU,CAAE,IAAI,CAAC1B,IAAI,EAAE1gE,CAAE,CAAC;IAE7BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;;AAEA;;AAEA,SAASqiE,YAAYA,CAAEhrB,EAAE,EAAEr3C,CAAC,EAAG;EAE9B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,EAAG;EAExBq3C,EAAE,CAACirB,UAAU,CAAE,IAAI,CAAC5B,IAAI,EAAE1gE,CAAE,CAAC;EAE7BqyB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC;AAEf;;AAEA;;AAEA,SAASuiE,YAAYA,CAAElrB,EAAE,EAAEr3C,CAAC,EAAG;EAE9B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,EAAG;MAE/C+7C,EAAE,CAACmrB,UAAU,CAAE,IAAI,CAAC9B,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAE,CAAC;MAEpC+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAK+kE,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAACorB,WAAW,CAAE,IAAI,CAAC/B,IAAI,EAAE1gE,CAAE,CAAC;IAE9BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;AAEA,SAAS0iE,YAAYA,CAAErrB,EAAE,EAAEr3C,CAAC,EAAG;EAE9B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,IAAI+2B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC6P,CAAC,EAAG;MAErEwnC,EAAE,CAACsrB,UAAU,CAAE,IAAI,CAACjC,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAE,CAAC;MAEzCwiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;MAChB+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC6P,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKwwD,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAACurB,WAAW,CAAE,IAAI,CAAClC,IAAI,EAAE1gE,CAAE,CAAC;IAE9BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;AAEA,SAAS6iE,YAAYA,CAAExrB,EAAE,EAAEr3C,CAAC,EAAG;EAE9B,IAAMqyB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKryB,CAAC,CAAChF,CAAC,KAAK3T,SAAS,EAAG;IAExB,IAAKgrC,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAChF,CAAC,IAAIq3B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC1E,CAAC,IAAI+2B,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC6P,CAAC,IAAIwiB,KAAK,CAAE,CAAC,CAAE,KAAKryB,CAAC,CAAC8P,CAAC,EAAG;MAE3FunC,EAAE,CAACyrB,UAAU,CAAE,IAAI,CAACpC,IAAI,EAAE1gE,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAC,EAAE7P,CAAC,CAAC8P,CAAE,CAAC;MAE9CuiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAChF,CAAC;MAChBq3B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC1E,CAAC;MAChB+2B,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC6P,CAAC;MAChBwiB,KAAK,CAAE,CAAC,CAAE,GAAGryB,CAAC,CAAC8P,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKuwD,WAAW,CAAEhuC,KAAK,EAAEryB,CAAE,CAAC,EAAG;IAE/Bq3C,EAAE,CAAC0rB,WAAW,CAAE,IAAI,CAACrC,IAAI,EAAE1gE,CAAE,CAAC;IAE9BqhC,SAAS,CAAEhP,KAAK,EAAEryB,CAAE,CAAC;EAEtB;AAED;;AAGA;;AAEA,SAASgjE,UAAUA,CAAE3rB,EAAE,EAAEr3C,CAAC,EAAEqP,QAAQ,EAAG;EAEtC,IAAMgjB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM4wC,IAAI,GAAG5zD,QAAQ,CAACkxD,mBAAmB,CAAC,CAAC;EAE3C,IAAKluC,KAAK,CAAE,CAAC,CAAE,KAAK4wC,IAAI,EAAG;IAE1B5rB,EAAE,CAACsqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;IAC/B5wC,KAAK,CAAE,CAAC,CAAE,GAAG4wC,IAAI;EAElB;EAEA5zD,QAAQ,CAAC6zD,YAAY,CAAEljE,CAAC,IAAIw/D,YAAY,EAAEyD,IAAK,CAAC;AAEjD;AAEA,SAASE,YAAYA,CAAE9rB,EAAE,EAAEr3C,CAAC,EAAEqP,QAAQ,EAAG;EAExC,IAAMgjB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM4wC,IAAI,GAAG5zD,QAAQ,CAACkxD,mBAAmB,CAAC,CAAC;EAE3C,IAAKluC,KAAK,CAAE,CAAC,CAAE,KAAK4wC,IAAI,EAAG;IAE1B5rB,EAAE,CAACsqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;IAC/B5wC,KAAK,CAAE,CAAC,CAAE,GAAG4wC,IAAI;EAElB;EAEA5zD,QAAQ,CAAC+zD,YAAY,CAAEpjE,CAAC,IAAI0/D,cAAc,EAAEuD,IAAK,CAAC;AAEnD;AAEA,SAASI,UAAUA,CAAEhsB,EAAE,EAAEr3C,CAAC,EAAEqP,QAAQ,EAAG;EAEtC,IAAMgjB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM4wC,IAAI,GAAG5zD,QAAQ,CAACkxD,mBAAmB,CAAC,CAAC;EAE3C,IAAKluC,KAAK,CAAE,CAAC,CAAE,KAAK4wC,IAAI,EAAG;IAE1B5rB,EAAE,CAACsqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;IAC/B5wC,KAAK,CAAE,CAAC,CAAE,GAAG4wC,IAAI;EAElB;EAEA5zD,QAAQ,CAACi0D,cAAc,CAAEtjE,CAAC,IAAI2/D,gBAAgB,EAAEsD,IAAK,CAAC;AAEvD;AAEA,SAASM,iBAAiBA,CAAElsB,EAAE,EAAEr3C,CAAC,EAAEqP,QAAQ,EAAG;EAE7C,IAAMgjB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM4wC,IAAI,GAAG5zD,QAAQ,CAACkxD,mBAAmB,CAAC,CAAC;EAE3C,IAAKluC,KAAK,CAAE,CAAC,CAAE,KAAK4wC,IAAI,EAAG;IAE1B5rB,EAAE,CAACsqB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEuC,IAAK,CAAC;IAC/B5wC,KAAK,CAAE,CAAC,CAAE,GAAG4wC,IAAI;EAElB;EAEA5zD,QAAQ,CAACm0D,iBAAiB,CAAExjE,CAAC,IAAIy/D,iBAAiB,EAAEwD,IAAK,CAAC;AAE3D;;AAEA;;AAEA,SAASQ,iBAAiBA,CAAE5+E,IAAI,EAAG;EAElC,QAASA,IAAI;IAEZ,KAAK,MAAM;MAAE,OAAO27E,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;;IAEjC,KAAK,MAAM;MAAE,OAAOG,UAAU;IAAE;IAChC,KAAK,MAAM;MAAE,OAAOE,UAAU;IAAE;IAChC,KAAK,MAAM;MAAE,OAAOE,UAAU;IAAE;;IAEhC,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;;IAE9C,KAAK,MAAM;MAAE,OAAOG,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOE,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOG,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOG,YAAY;IAAE;;IAElC,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOG,UAAU;IAElB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOG,YAAY;IAEpB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,UAAU;IAElB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,iBAAiB;EAE1B;AAED;;AAGA;;AAEA,SAASG,gBAAgBA,CAAErsB,EAAE,EAAEr3C,CAAC,EAAG;EAElCq3C,EAAE,CAACssB,UAAU,CAAE,IAAI,CAACjD,IAAI,EAAE1gE,CAAE,CAAC;AAE9B;;AAEA;;AAEA,SAAS4jE,gBAAgBA,CAAEvsB,EAAE,EAAEr3C,CAAC,EAAG;EAElC,IAAM+L,IAAI,GAAGk0D,OAAO,CAAEjgE,CAAC,EAAE,IAAI,CAACwd,IAAI,EAAE,CAAE,CAAC;EAEvC65B,EAAE,CAACwpB,UAAU,CAAE,IAAI,CAACH,IAAI,EAAE30D,IAAK,CAAC;AAEjC;AAEA,SAAS83D,gBAAgBA,CAAExsB,EAAE,EAAEr3C,CAAC,EAAG;EAElC,IAAM+L,IAAI,GAAGk0D,OAAO,CAAEjgE,CAAC,EAAE,IAAI,CAACwd,IAAI,EAAE,CAAE,CAAC;EAEvC65B,EAAE,CAAC2pB,UAAU,CAAE,IAAI,CAACN,IAAI,EAAE30D,IAAK,CAAC;AAEjC;AAEA,SAAS+3D,gBAAgBA,CAAEzsB,EAAE,EAAEr3C,CAAC,EAAG;EAElC,IAAM+L,IAAI,GAAGk0D,OAAO,CAAEjgE,CAAC,EAAE,IAAI,CAACwd,IAAI,EAAE,CAAE,CAAC;EAEvC65B,EAAE,CAAC8pB,UAAU,CAAE,IAAI,CAACT,IAAI,EAAE30D,IAAK,CAAC;AAEjC;;AAEA;;AAEA,SAASg4D,eAAeA,CAAE1sB,EAAE,EAAEr3C,CAAC,EAAG;EAEjC,IAAM+L,IAAI,GAAGk0D,OAAO,CAAEjgE,CAAC,EAAE,IAAI,CAACwd,IAAI,EAAE,CAAE,CAAC;EAEvC65B,EAAE,CAACgqB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAE30D,IAAK,CAAC;AAE9C;AAEA,SAASi4D,eAAeA,CAAE3sB,EAAE,EAAEr3C,CAAC,EAAG;EAEjC,IAAM+L,IAAI,GAAGk0D,OAAO,CAAEjgE,CAAC,EAAE,IAAI,CAACwd,IAAI,EAAE,CAAE,CAAC;EAEvC65B,EAAE,CAACkqB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAE30D,IAAK,CAAC;AAE9C;AAEA,SAASk4D,eAAeA,CAAE5sB,EAAE,EAAEr3C,CAAC,EAAG;EAEjC,IAAM+L,IAAI,GAAGk0D,OAAO,CAAEjgE,CAAC,EAAE,IAAI,CAACwd,IAAI,EAAE,EAAG,CAAC;EAExC65B,EAAE,CAACoqB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAE30D,IAAK,CAAC;AAE9C;;AAEA;;AAEA,SAASm4D,gBAAgBA,CAAE7sB,EAAE,EAAEr3C,CAAC,EAAG;EAElCq3C,EAAE,CAAC8sB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAE1gE,CAAE,CAAC;AAE9B;;AAEA;;AAEA,SAASokE,gBAAgBA,CAAE/sB,EAAE,EAAEr3C,CAAC,EAAG;EAElCq3C,EAAE,CAACyqB,UAAU,CAAE,IAAI,CAACpB,IAAI,EAAE1gE,CAAE,CAAC;AAE9B;AAEA,SAASqkE,gBAAgBA,CAAEhtB,EAAE,EAAEr3C,CAAC,EAAG;EAElCq3C,EAAE,CAAC4qB,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAE1gE,CAAE,CAAC;AAE9B;AAEA,SAASskE,gBAAgBA,CAAEjtB,EAAE,EAAEr3C,CAAC,EAAG;EAElCq3C,EAAE,CAAC+qB,UAAU,CAAE,IAAI,CAAC1B,IAAI,EAAE1gE,CAAE,CAAC;AAE9B;;AAEA;;AAEA,SAASukE,iBAAiBA,CAAEltB,EAAE,EAAEr3C,CAAC,EAAG;EAEnCq3C,EAAE,CAACmtB,WAAW,CAAE,IAAI,CAAC9D,IAAI,EAAE1gE,CAAE,CAAC;AAE/B;;AAEA;;AAEA,SAASykE,iBAAiBA,CAAEptB,EAAE,EAAEr3C,CAAC,EAAG;EAEnCq3C,EAAE,CAACorB,WAAW,CAAE,IAAI,CAAC/B,IAAI,EAAE1gE,CAAE,CAAC;AAE/B;AAEA,SAAS0kE,iBAAiBA,CAAErtB,EAAE,EAAEr3C,CAAC,EAAG;EAEnCq3C,EAAE,CAACurB,WAAW,CAAE,IAAI,CAAClC,IAAI,EAAE1gE,CAAE,CAAC;AAE/B;AAEA,SAAS2kE,iBAAiBA,CAAEttB,EAAE,EAAEr3C,CAAC,EAAG;EAEnCq3C,EAAE,CAAC0rB,WAAW,CAAE,IAAI,CAACrC,IAAI,EAAE1gE,CAAE,CAAC;AAE/B;;AAGA;;AAEA,SAAS4kE,eAAeA,CAAEvtB,EAAE,EAAEr3C,CAAC,EAAEqP,QAAQ,EAAG;EAE3C,IAAMgjB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAMx3B,CAAC,GAAGmF,CAAC,CAACrX,MAAM;EAElB,IAAMk8E,KAAK,GAAGvE,aAAa,CAAEjxD,QAAQ,EAAExU,CAAE,CAAC;EAE1C,IAAK,CAAEwlE,WAAW,CAAEhuC,KAAK,EAAEwyC,KAAM,CAAC,EAAG;IAEpCxtB,EAAE,CAAC8sB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAM,CAAC;IAEjCxjC,SAAS,CAAEhP,KAAK,EAAEwyC,KAAM,CAAC;EAE1B;EAEA,KAAM,IAAIj8E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;IAEhCymB,QAAQ,CAAC6zD,YAAY,CAAEljE,CAAC,CAAEpX,CAAC,CAAE,IAAI42E,YAAY,EAAEqF,KAAK,CAAEj8E,CAAC,CAAG,CAAC;EAE5D;AAED;AAEA,SAASk8E,gBAAgBA,CAAEztB,EAAE,EAAEr3C,CAAC,EAAEqP,QAAQ,EAAG;EAE5C,IAAMgjB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAMx3B,CAAC,GAAGmF,CAAC,CAACrX,MAAM;EAElB,IAAMk8E,KAAK,GAAGvE,aAAa,CAAEjxD,QAAQ,EAAExU,CAAE,CAAC;EAE1C,IAAK,CAAEwlE,WAAW,CAAEhuC,KAAK,EAAEwyC,KAAM,CAAC,EAAG;IAEpCxtB,EAAE,CAAC8sB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAM,CAAC;IAEjCxjC,SAAS,CAAEhP,KAAK,EAAEwyC,KAAM,CAAC;EAE1B;EAEA,KAAM,IAAIj8E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;IAEhCymB,QAAQ,CAAC+zD,YAAY,CAAEpjE,CAAC,CAAEpX,CAAC,CAAE,IAAI82E,cAAc,EAAEmF,KAAK,CAAEj8E,CAAC,CAAG,CAAC;EAE9D;AAED;AAEA,SAASm8E,eAAeA,CAAE1tB,EAAE,EAAEr3C,CAAC,EAAEqP,QAAQ,EAAG;EAE3C,IAAMgjB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAMx3B,CAAC,GAAGmF,CAAC,CAACrX,MAAM;EAElB,IAAMk8E,KAAK,GAAGvE,aAAa,CAAEjxD,QAAQ,EAAExU,CAAE,CAAC;EAE1C,IAAK,CAAEwlE,WAAW,CAAEhuC,KAAK,EAAEwyC,KAAM,CAAC,EAAG;IAEpCxtB,EAAE,CAAC8sB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAM,CAAC;IAEjCxjC,SAAS,CAAEhP,KAAK,EAAEwyC,KAAM,CAAC;EAE1B;EAEA,KAAM,IAAIj8E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;IAEhCymB,QAAQ,CAACi0D,cAAc,CAAEtjE,CAAC,CAAEpX,CAAC,CAAE,IAAI+2E,gBAAgB,EAAEkF,KAAK,CAAEj8E,CAAC,CAAG,CAAC;EAElE;AAED;AAEA,SAASo8E,qBAAqBA,CAAE3tB,EAAE,EAAEr3C,CAAC,EAAEqP,QAAQ,EAAG;EAEjD,IAAMgjB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAMx3B,CAAC,GAAGmF,CAAC,CAACrX,MAAM;EAElB,IAAMk8E,KAAK,GAAGvE,aAAa,CAAEjxD,QAAQ,EAAExU,CAAE,CAAC;EAE1C,IAAK,CAAEwlE,WAAW,CAAEhuC,KAAK,EAAEwyC,KAAM,CAAC,EAAG;IAEpCxtB,EAAE,CAAC8sB,UAAU,CAAE,IAAI,CAACzD,IAAI,EAAEmE,KAAM,CAAC;IAEjCxjC,SAAS,CAAEhP,KAAK,EAAEwyC,KAAM,CAAC;EAE1B;EAEA,KAAM,IAAIj8E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;IAEhCymB,QAAQ,CAACm0D,iBAAiB,CAAExjE,CAAC,CAAEpX,CAAC,CAAE,IAAI62E,iBAAiB,EAAEoF,KAAK,CAAEj8E,CAAC,CAAG,CAAC;EAEtE;AAED;;AAGA;;AAEA,SAASq8E,kBAAkBA,CAAEpgF,IAAI,EAAG;EAEnC,QAASA,IAAI;IAEZ,KAAK,MAAM;MAAE,OAAO6+E,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOE,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;;IAEtC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;IACrC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;IACrC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;;IAErC,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;;IAEnD,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOE,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;;IAEvC,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,eAAe;IAEvB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,gBAAgB;IAExB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,eAAe;IAEvB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,qBAAqB;EAE9B;AAED;;AAEA;AAAA,IAEME,aAAa,gBAAAv5E,YAAA,CAElB,SAAAu5E,cAAa31C,EAAE,EAAE41C,UAAU,EAAEzE,IAAI,EAAG;EAAAv1E,eAAA,OAAA+5E,aAAA;EAEnC,IAAI,CAAC31C,EAAE,GAAGA,EAAE;EACZ,IAAI,CAACmxC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACruC,KAAK,GAAG,EAAE;EACf,IAAI,CAAC0sC,QAAQ,GAAG0E,iBAAiB,CAAE0B,UAAU,CAACtgF,IAAK,CAAC;;EAEpD;AAED,CAAC;AAAA,IAIIugF,gBAAgB,gBAAAz5E,YAAA,CAErB,SAAAy5E,iBAAa71C,EAAE,EAAE41C,UAAU,EAAEzE,IAAI,EAAG;EAAAv1E,eAAA,OAAAi6E,gBAAA;EAEnC,IAAI,CAAC71C,EAAE,GAAGA,EAAE;EACZ,IAAI,CAACmxC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACruC,KAAK,GAAG,EAAE;EACf,IAAI,CAAC7U,IAAI,GAAG2nD,UAAU,CAAC3nD,IAAI;EAC3B,IAAI,CAACuhD,QAAQ,GAAGkG,kBAAkB,CAAEE,UAAU,CAACtgF,IAAK,CAAC;;EAErD;AAED,CAAC;AAAA,IAIIwgF,iBAAiB;EAEtB,SAAAA,kBAAa91C,EAAE,EAAG;IAAApkC,eAAA,OAAAk6E,iBAAA;IAEjB,IAAI,CAAC91C,EAAE,GAAGA,EAAE;IAEZ,IAAI,CAAC+1C,GAAG,GAAG,EAAE;IACb,IAAI,CAACtrC,GAAG,GAAG,CAAC,CAAC;EAEd;EAACruC,YAAA,CAAA05E,iBAAA;IAAAviF,GAAA;IAAAE,KAAA,EAED,SAAA+7E,SAAU1nB,EAAE,EAAEr0D,KAAK,EAAEqsB,QAAQ,EAAG;MAE/B,IAAMi2D,GAAG,GAAG,IAAI,CAACA,GAAG;MAEpB,KAAM,IAAI18E,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGyqE,GAAG,CAAC38E,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEhD,IAAM+zB,CAAC,GAAG2oD,GAAG,CAAE18E,CAAC,CAAE;QAClB+zB,CAAC,CAACoiD,QAAQ,CAAE1nB,EAAE,EAAEr0D,KAAK,CAAE25B,CAAC,CAAC4S,EAAE,CAAE,EAAElgB,QAAS,CAAC;MAE1C;IAED;EAAC;EAAA,OAAAg2D,iBAAA;AAAA,KAIF;AAEA;AAEA,IAAME,UAAU,GAAG,qBAAqB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAUA,CAAEC,SAAS,EAAEC,aAAa,EAAG;EAE/CD,SAAS,CAACH,GAAG,CAACl9E,IAAI,CAAEs9E,aAAc,CAAC;EACnCD,SAAS,CAACzrC,GAAG,CAAE0rC,aAAa,CAACn2C,EAAE,CAAE,GAAGm2C,aAAa;AAElD;AAEA,SAASC,YAAYA,CAAER,UAAU,EAAEzE,IAAI,EAAE+E,SAAS,EAAG;EAEpD,IAAMG,IAAI,GAAGT,UAAU,CAACj8E,IAAI;IAC3B28E,UAAU,GAAGD,IAAI,CAACj9E,MAAM;;EAEzB;EACA48E,UAAU,CAACO,SAAS,GAAG,CAAC;EAExB,OAAQ,IAAI,EAAG;IAEd,IAAMC,KAAK,GAAGR,UAAU,CAAC3nC,IAAI,CAAEgoC,IAAK,CAAC;MACpCI,QAAQ,GAAGT,UAAU,CAACO,SAAS;IAEhC,IAAIv2C,EAAE,GAAGw2C,KAAK,CAAE,CAAC,CAAE;IACnB,IAAME,SAAS,GAAGF,KAAK,CAAE,CAAC,CAAE,KAAK,GAAG;MACnCG,SAAS,GAAGH,KAAK,CAAE,CAAC,CAAE;IAEvB,IAAKE,SAAS,EAAG12C,EAAE,GAAGA,EAAE,GAAG,CAAC,CAAC,CAAC;;IAE9B,IAAK22C,SAAS,KAAK7+E,SAAS,IAAI6+E,SAAS,KAAK,GAAG,IAAIF,QAAQ,GAAG,CAAC,KAAKH,UAAU,EAAG;MAElF;;MAEAL,UAAU,CAAEC,SAAS,EAAES,SAAS,KAAK7+E,SAAS,GAC7C,IAAI69E,aAAa,CAAE31C,EAAE,EAAE41C,UAAU,EAAEzE,IAAK,CAAC,GACzC,IAAI0E,gBAAgB,CAAE71C,EAAE,EAAE41C,UAAU,EAAEzE,IAAK,CAAE,CAAC;MAE/C;IAED,CAAC,MAAM;MAEN;;MAEA,IAAM1mC,GAAG,GAAGyrC,SAAS,CAACzrC,GAAG;MACzB,IAAItyC,IAAI,GAAGsyC,GAAG,CAAEzK,EAAE,CAAE;MAEpB,IAAK7nC,IAAI,KAAKL,SAAS,EAAG;QAEzBK,IAAI,GAAG,IAAI29E,iBAAiB,CAAE91C,EAAG,CAAC;QAClCi2C,UAAU,CAAEC,SAAS,EAAE/9E,IAAK,CAAC;MAE9B;MAEA+9E,SAAS,GAAG/9E,IAAI;IAEjB;EAED;AAED;;AAEA;AAAA,IAEMy+E,aAAa;EAElB,SAAAA,cAAa9uB,EAAE,EAAE8V,OAAO,EAAG;IAAAhiE,eAAA,OAAAg7E,aAAA;IAE1B,IAAI,CAACb,GAAG,GAAG,EAAE;IACb,IAAI,CAACtrC,GAAG,GAAG,CAAC,CAAC;IAEb,IAAMn/B,CAAC,GAAGw8C,EAAE,CAAC+uB,mBAAmB,CAAEjZ,OAAO,EAAE9V,EAAE,CAACgvB,eAAgB,CAAC;IAE/D,KAAM,IAAIz9E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;MAE9B,IAAMpB,IAAI,GAAG6vD,EAAE,CAACivB,gBAAgB,CAAEnZ,OAAO,EAAEvkE,CAAE,CAAC;QAC7C83E,IAAI,GAAGrpB,EAAE,CAACkvB,kBAAkB,CAAEpZ,OAAO,EAAE3lE,IAAI,CAAC0B,IAAK,CAAC;MAEnDy8E,YAAY,CAAEn+E,IAAI,EAAEk5E,IAAI,EAAE,IAAK,CAAC;IAEjC;EAED;EAAC/0E,YAAA,CAAAw6E,aAAA;IAAArjF,GAAA;IAAAE,KAAA,EAED,SAAA+7E,SAAU1nB,EAAE,EAAEnuD,IAAI,EAAElG,KAAK,EAAEqsB,QAAQ,EAAG;MAErC,IAAMsN,CAAC,GAAG,IAAI,CAACqd,GAAG,CAAE9wC,IAAI,CAAE;MAE1B,IAAKyzB,CAAC,KAAKt1B,SAAS,EAAGs1B,CAAC,CAACoiD,QAAQ,CAAE1nB,EAAE,EAAEr0D,KAAK,EAAEqsB,QAAS,CAAC;IAEzD;EAAC;IAAAvsB,GAAA;IAAAE,KAAA,EAED,SAAAwjF,YAAanvB,EAAE,EAAEztD,MAAM,EAAEV,IAAI,EAAG;MAE/B,IAAM8W,CAAC,GAAGpW,MAAM,CAAEV,IAAI,CAAE;MAExB,IAAK8W,CAAC,KAAK3Y,SAAS,EAAG,IAAI,CAAC03E,QAAQ,CAAE1nB,EAAE,EAAEnuD,IAAI,EAAE8W,CAAE,CAAC;IAEpD;EAAC;IAAAld,GAAA;IAAAE,KAAA,EAED,SAAAyjF,OAAepvB,EAAE,EAAEiuB,GAAG,EAAEhgF,MAAM,EAAE+pB,QAAQ,EAAG;MAE1C,KAAM,IAAIzmB,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGyqE,GAAG,CAAC38E,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEhD,IAAM+zB,CAAC,GAAG2oD,GAAG,CAAE18E,CAAC,CAAE;UACjBoX,CAAC,GAAG1a,MAAM,CAAEq3B,CAAC,CAAC4S,EAAE,CAAE;QAEnB,IAAKvvB,CAAC,CAACoP,WAAW,KAAK,KAAK,EAAG;UAE9B;UACAuN,CAAC,CAACoiD,QAAQ,CAAE1nB,EAAE,EAAEr3C,CAAC,CAAChd,KAAK,EAAEqsB,QAAS,CAAC;QAEpC;MAED;IAED;EAAC;IAAAvsB,GAAA;IAAAE,KAAA,EAED,SAAA0jF,aAAqBpB,GAAG,EAAEhgF,MAAM,EAAG;MAElC,IAAM2hB,CAAC,GAAG,EAAE;MAEZ,KAAM,IAAIre,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGyqE,GAAG,CAAC38E,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEhD,IAAM+zB,CAAC,GAAG2oD,GAAG,CAAE18E,CAAC,CAAE;QAClB,IAAK+zB,CAAC,CAAC4S,EAAE,IAAIjqC,MAAM,EAAG2hB,CAAC,CAAC7e,IAAI,CAAEu0B,CAAE,CAAC;MAElC;MAEA,OAAO1V,CAAC;IAET;EAAC;EAAA,OAAAk/D,aAAA;AAAA;AAIF,SAASQ,WAAWA,CAAEtvB,EAAE,EAAExyD,IAAI,EAAE64C,MAAM,EAAG;EAExC,IAAM4V,MAAM,GAAG+D,EAAE,CAACuvB,YAAY,CAAE/hF,IAAK,CAAC;EAEtCwyD,EAAE,CAACwvB,YAAY,CAAEvzB,MAAM,EAAE5V,MAAO,CAAC;EACjC2Z,EAAE,CAACyvB,aAAa,CAAExzB,MAAO,CAAC;EAE1B,OAAOA,MAAM;AAEd;AAEA,IAAIyzB,cAAc,GAAG,CAAC;AAEtB,SAASC,YAAYA,CAAEtpC,MAAM,EAAEupC,SAAS,EAAG;EAE1C,IAAMnK,KAAK,GAAGp/B,MAAM,CAACwpC,KAAK,CAAE,IAAK,CAAC;EAClC,IAAMC,MAAM,GAAG,EAAE;EAEjB,IAAMr6D,IAAI,GAAGhT,IAAI,CAACa,GAAG,CAAEssE,SAAS,GAAG,CAAC,EAAE,CAAE,CAAC;EACzC,IAAMG,EAAE,GAAGttE,IAAI,CAACY,GAAG,CAAEusE,SAAS,GAAG,CAAC,EAAEnK,KAAK,CAACn0E,MAAO,CAAC;EAElD,KAAM,IAAIC,CAAC,GAAGkkB,IAAI,EAAElkB,CAAC,GAAGw+E,EAAE,EAAEx+E,CAAC,EAAG,EAAG;IAElC,IAAM0rD,IAAI,GAAG1rD,CAAC,GAAG,CAAC;IAClBu+E,MAAM,CAAC/+E,IAAI,IAAAqiB,MAAA,CAAK6pC,IAAI,KAAK2yB,SAAS,GAAG,GAAG,GAAG,GAAG,OAAAx8D,MAAA,CAAI6pC,IAAI,QAAA7pC,MAAA,CAAKqyD,KAAK,CAAEl0E,CAAC,CAAE,CAAG,CAAC;EAE1E;EAEA,OAAOu+E,MAAM,CAACE,IAAI,CAAE,IAAK,CAAC;AAE3B;AAEA,SAASC,qBAAqBA,CAAEn9D,UAAU,EAAG;EAE5C,QAASA,UAAU;IAElB,KAAKhU,oBAAoB;MACxB,OAAO,CAAE,QAAQ,EAAE,WAAW,CAAE;IACjC,KAAKD,cAAc;MAClB,OAAO,CAAE,MAAM,EAAE,WAAW,CAAE;IAC/B;MACCqI,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAE2L,UAAW,CAAC;MAC1E,OAAO,CAAE,QAAQ,EAAE,WAAW,CAAE;EAElC;AAED;AAEA,SAASo9D,eAAeA,CAAElwB,EAAE,EAAE/D,MAAM,EAAEzuD,IAAI,EAAG;EAE5C,IAAM2iF,MAAM,GAAGnwB,EAAE,CAACowB,kBAAkB,CAAEn0B,MAAM,EAAE+D,EAAE,CAACqwB,cAAe,CAAC;EACjE,IAAMC,MAAM,GAAGtwB,EAAE,CAACuwB,gBAAgB,CAAEt0B,MAAO,CAAC,CAACu0B,IAAI,CAAC,CAAC;EAEnD,IAAKL,MAAM,IAAIG,MAAM,KAAK,EAAE,EAAG,OAAO,EAAE;EAExC,IAAMG,YAAY,GAAG,gBAAgB,CAAClqC,IAAI,CAAE+pC,MAAO,CAAC;EACpD,IAAKG,YAAY,EAAG;IAEnB;IACA;;IAEA,IAAMb,SAAS,GAAGnpC,QAAQ,CAAEgqC,YAAY,CAAE,CAAC,CAAG,CAAC;IAC/C,OAAOjjF,IAAI,CAACkjF,WAAW,CAAC,CAAC,GAAG,MAAM,GAAGJ,MAAM,GAAG,MAAM,GAAGX,YAAY,CAAE3vB,EAAE,CAAC2wB,eAAe,CAAE10B,MAAO,CAAC,EAAE2zB,SAAU,CAAC;EAE/G,CAAC,MAAM;IAEN,OAAOU,MAAM;EAEd;AAED;AAEA,SAASM,wBAAwBA,CAAEC,YAAY,EAAE/9D,UAAU,EAAG;EAE7D,IAAM0zB,UAAU,GAAGypC,qBAAqB,CAAEn9D,UAAW,CAAC;EACtD,OAAO,OAAO,GAAG+9D,YAAY,GAAG,kCAAkC,GAAGrqC,UAAU,CAAE,CAAC,CAAE,GAAGA,UAAU,CAAE,CAAC,CAAE,GAAG,KAAK;AAE/G;AAEA,SAASsqC,sBAAsBA,CAAED,YAAY,EAAEhc,WAAW,EAAG;EAE5D,IAAIkc,eAAe;EAEnB,QAASlc,WAAW;IAEnB,KAAKn8D,iBAAiB;MACrBq4E,eAAe,GAAG,QAAQ;MAC1B;IAED,KAAKp4E,mBAAmB;MACvBo4E,eAAe,GAAG,UAAU;MAC5B;IAED,KAAKn4E,iBAAiB;MACrBm4E,eAAe,GAAG,iBAAiB;MACnC;IAED,KAAKl4E,qBAAqB;MACzBk4E,eAAe,GAAG,YAAY;MAC9B;IAED,KAAKj4E,iBAAiB;MACrBi4E,eAAe,GAAG,QAAQ;MAC1B;IAED;MACC7pE,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAE0tD,WAAY,CAAC;MAC3Ekc,eAAe,GAAG,QAAQ;EAE5B;EAEA,OAAO,OAAO,GAAGF,YAAY,GAAG,0BAA0B,GAAGE,eAAe,GAAG,yBAAyB;AAEzG;AAEA,SAASC,kBAAkBA,CAAE12C,UAAU,EAAG;EAEzC,IAAM22C,MAAM,GAAG,CACZ32C,UAAU,CAAC42C,oBAAoB,IAAI,CAAC,CAAE52C,UAAU,CAAC62C,kBAAkB,IAAI72C,UAAU,CAAC4I,OAAO,IAAI5I,UAAU,CAAC82C,qBAAqB,IAAI92C,UAAU,CAAC4H,kBAAkB,IAAI5H,UAAU,CAAC+K,WAAW,IAAI/K,UAAU,CAAC+2C,QAAQ,KAAK,UAAU,GAAK,iDAAiD,GAAG,EAAE,EAC3R,CAAE/2C,UAAU,CAACg3C,kBAAkB,IAAIh3C,UAAU,CAACmgC,sBAAsB,KAAMngC,UAAU,CAACi3C,0BAA0B,GAAG,uCAAuC,GAAG,EAAE,EAC5Jj3C,UAAU,CAACk3C,oBAAoB,IAAIl3C,UAAU,CAACm3C,4BAA4B,GAAK,0CAA0C,GAAG,EAAE,EAChI,CAAEn3C,UAAU,CAACo3C,yBAAyB,IAAIp3C,UAAU,CAAC0J,MAAM,IAAI1J,UAAU,CAACgK,YAAY,KAAMhK,UAAU,CAACq3C,iCAAiC,GAAG,+CAA+C,GAAG,EAAE,CAC/L;EAED,OAAOV,MAAM,CAACW,MAAM,CAAEC,eAAgB,CAAC,CAAC7B,IAAI,CAAE,IAAK,CAAC;AAErD;AAEA,SAAS8B,eAAeA,CAAEp7B,OAAO,EAAG;EAEnC,IAAMu6B,MAAM,GAAG,EAAE;EAEjB,KAAM,IAAMp/E,IAAI,IAAI6kD,OAAO,EAAG;IAE7B,IAAM/qD,OAAK,GAAG+qD,OAAO,CAAE7kD,IAAI,CAAE;IAE7B,IAAKlG,OAAK,KAAK,KAAK,EAAG;IAEvBslF,MAAM,CAAClgF,IAAI,CAAE,UAAU,GAAGc,IAAI,GAAG,GAAG,GAAGlG,OAAM,CAAC;EAE/C;EAEA,OAAOslF,MAAM,CAACjB,IAAI,CAAE,IAAK,CAAC;AAE3B;AAEA,SAAS+B,uBAAuBA,CAAE/xB,EAAE,EAAE8V,OAAO,EAAG;EAE/C,IAAMxuC,UAAU,GAAG,CAAC,CAAC;EAErB,IAAM9jB,CAAC,GAAGw8C,EAAE,CAAC+uB,mBAAmB,CAAEjZ,OAAO,EAAE9V,EAAE,CAACgyB,iBAAkB,CAAC;EAEjE,KAAM,IAAIzgF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiS,CAAC,EAAEjS,CAAC,EAAG,EAAG;IAE9B,IAAMpB,IAAI,GAAG6vD,EAAE,CAACiyB,eAAe,CAAEnc,OAAO,EAAEvkE,CAAE,CAAC;IAC7C,IAAMM,IAAI,GAAG1B,IAAI,CAAC0B,IAAI;IAEtB,IAAI4mE,YAAY,GAAG,CAAC;IACpB,IAAKtoE,IAAI,CAAC3C,IAAI,KAAKwyD,EAAE,CAACkyB,UAAU,EAAGzZ,YAAY,GAAG,CAAC;IACnD,IAAKtoE,IAAI,CAAC3C,IAAI,KAAKwyD,EAAE,CAACmyB,UAAU,EAAG1Z,YAAY,GAAG,CAAC;IACnD,IAAKtoE,IAAI,CAAC3C,IAAI,KAAKwyD,EAAE,CAACoyB,UAAU,EAAG3Z,YAAY,GAAG,CAAC;;IAEnD;;IAEAnxC,UAAU,CAAEz1B,IAAI,CAAE,GAAG;MACpBrE,IAAI,EAAE2C,IAAI,CAAC3C,IAAI;MACfiqE,QAAQ,EAAEzX,EAAE,CAACqyB,iBAAiB,CAAEvc,OAAO,EAAEjkE,IAAK,CAAC;MAC/C4mE,YAAY,EAAEA;IACf,CAAC;EAEF;EAEA,OAAOnxC,UAAU;AAElB;AAEA,SAASuqD,eAAeA,CAAExrC,MAAM,EAAG;EAElC,OAAOA,MAAM,KAAK,EAAE;AAErB;AAEA,SAASisC,gBAAgBA,CAAEjsC,MAAM,EAAE/L,UAAU,EAAG;EAE/C,IAAMi4C,kBAAkB,GAAGj4C,UAAU,CAACk4C,mBAAmB,GAAGl4C,UAAU,CAACm4C,gBAAgB,GAAGn4C,UAAU,CAACo4C,2BAA2B;EAEhI,OAAOrsC,MAAM,CACXssC,OAAO,CAAE,iBAAiB,EAAEr4C,UAAU,CAACs4C,YAAa,CAAC,CACrDD,OAAO,CAAE,kBAAkB,EAAEr4C,UAAU,CAACu4C,aAAc,CAAC,CACvDF,OAAO,CAAE,sBAAsB,EAAEr4C,UAAU,CAACm4C,gBAAiB,CAAC,CAC9DE,OAAO,CAAE,wBAAwB,EAAEJ,kBAAmB,CAAC,CACvDI,OAAO,CAAE,uBAAuB,EAAEr4C,UAAU,CAACw4C,iBAAkB,CAAC,CAChEH,OAAO,CAAE,mBAAmB,EAAEr4C,UAAU,CAACy4C,cAAe,CAAC,CACzDJ,OAAO,CAAE,kBAAkB,EAAEr4C,UAAU,CAAC04C,aAAc,CAAC,CACvDL,OAAO,CAAE,wBAAwB,EAAEr4C,UAAU,CAAC24C,kBAAmB,CAAC,CAClEN,OAAO,CAAE,mCAAmC,EAAEr4C,UAAU,CAACo4C,2BAA4B,CAAC,CACtFC,OAAO,CAAE,yBAAyB,EAAEr4C,UAAU,CAACk4C,mBAAoB,CAAC,CACpEG,OAAO,CAAE,0BAA0B,EAAEr4C,UAAU,CAAC44C,oBAAqB,CAAC;AAEzE;AAEA,SAASC,wBAAwBA,CAAE9sC,MAAM,EAAE/L,UAAU,EAAG;EAEvD,OAAO+L,MAAM,CACXssC,OAAO,CAAE,sBAAsB,EAAEr4C,UAAU,CAAC84C,iBAAkB,CAAC,CAC/DT,OAAO,CAAE,wBAAwB,EAAIr4C,UAAU,CAAC84C,iBAAiB,GAAG94C,UAAU,CAAC+4C,mBAAsB,CAAC;AAEzG;;AAEA;;AAEA,IAAMC,cAAc,GAAG,kCAAkC;AAEzD,SAASC,eAAeA,CAAEltC,MAAM,EAAG;EAElC,OAAOA,MAAM,CAACssC,OAAO,CAAEW,cAAc,EAAEE,eAAgB,CAAC;AAEzD;AAEA,IAAMC,cAAc,GAAG,IAAIC,GAAG,CAAE,CAC/B,CAAE,oBAAoB,EAAE,qBAAqB,CAAE;AAAE;AACjD,CAAE,yBAAyB,EAAE,0BAA0B,CAAE;AAAE;AAC3D,CAAE,iBAAiB,EAAE,iBAAiB,CAAE,CAAE;AAAA,CACzC,CAAC;;AAEH,SAASF,eAAeA,CAAE9E,KAAK,EAAEiF,OAAO,EAAG;EAE1C,IAAIttC,MAAM,GAAGwkB,WAAW,CAAE8oB,OAAO,CAAE;EAEnC,IAAKttC,MAAM,KAAKr2C,SAAS,EAAG;IAE3B,IAAM4jF,UAAU,GAAGH,cAAc,CAACvrE,GAAG,CAAEyrE,OAAQ,CAAC;IAEhD,IAAKC,UAAU,KAAK5jF,SAAS,EAAG;MAE/Bq2C,MAAM,GAAGwkB,WAAW,CAAE+oB,UAAU,CAAE;MAClC1sE,OAAO,CAACC,IAAI,CAAE,+EAA+E,EAAEwsE,OAAO,EAAEC,UAAW,CAAC;IAErH,CAAC,MAAM;MAEN,MAAM,IAAItkF,KAAK,CAAE,4BAA4B,GAAGqkF,OAAO,GAAG,GAAI,CAAC;IAEhE;EAED;EAEA,OAAOJ,eAAe,CAAEltC,MAAO,CAAC;AAEjC;;AAEA;;AAEA,IAAMwtC,iBAAiB,GAAG,8IAA8I;AAExK,SAASC,WAAWA,CAAEztC,MAAM,EAAG;EAE9B,OAAOA,MAAM,CAACssC,OAAO,CAAEkB,iBAAiB,EAAEE,YAAa,CAAC;AAEzD;AAEA,SAASA,YAAYA,CAAErF,KAAK,EAAEnhC,KAAK,EAAEiG,GAAG,EAAEwgC,OAAO,EAAG;EAEnD,IAAI3tC,MAAM,GAAG,EAAE;EAEf,KAAM,IAAI90C,CAAC,GAAGk1C,QAAQ,CAAE8G,KAAM,CAAC,EAAEh8C,CAAC,GAAGk1C,QAAQ,CAAE+M,GAAI,CAAC,EAAEjiD,CAAC,EAAG,EAAG;IAE5D80C,MAAM,IAAI2tC,OAAO,CACfrB,OAAO,CAAE,cAAc,EAAE,IAAI,GAAGphF,CAAC,GAAG,IAAK,CAAC,CAC1CohF,OAAO,CAAE,sBAAsB,EAAEphF,CAAE,CAAC;EAEvC;EAEA,OAAO80C,MAAM;AAEd;;AAEA;;AAEA,SAAS4tC,iBAAiBA,CAAE35C,UAAU,EAAG;EAExC,IAAI45C,eAAe,GAAG,YAAY,GAAG55C,UAAU,CAAC2F,SAAS,GAAG,qBAAqB,GAAG3F,UAAU,CAAC2F,SAAS,GAAG,OAAO;EAElH,IAAK3F,UAAU,CAAC2F,SAAS,KAAK,OAAO,EAAG;IAEvCi0C,eAAe,IAAI,0BAA0B;EAE9C,CAAC,MAAM,IAAK55C,UAAU,CAAC2F,SAAS,KAAK,SAAS,EAAG;IAEhDi0C,eAAe,IAAI,4BAA4B;EAEhD,CAAC,MAAM,IAAK55C,UAAU,CAAC2F,SAAS,KAAK,MAAM,EAAG;IAE7Ci0C,eAAe,IAAI,yBAAyB;EAE7C;EAEA,OAAOA,eAAe;AAEvB;AAEA,SAASC,2BAA2BA,CAAE75C,UAAU,EAAG;EAElD,IAAI85C,mBAAmB,GAAG,sBAAsB;EAEhD,IAAK95C,UAAU,CAAC+5C,aAAa,KAAKp+E,YAAY,EAAG;IAEhDm+E,mBAAmB,GAAG,oBAAoB;EAE3C,CAAC,MAAM,IAAK95C,UAAU,CAAC+5C,aAAa,KAAKn+E,gBAAgB,EAAG;IAE3Dk+E,mBAAmB,GAAG,yBAAyB;EAEhD,CAAC,MAAM,IAAK95C,UAAU,CAAC+5C,aAAa,KAAKl+E,YAAY,EAAG;IAEvDi+E,mBAAmB,GAAG,oBAAoB;EAE3C;EAEA,OAAOA,mBAAmB;AAE3B;AAEA,SAASE,wBAAwBA,CAAEh6C,UAAU,EAAG;EAE/C,IAAIi6C,gBAAgB,GAAG,kBAAkB;EAEzC,IAAKj6C,UAAU,CAAC0J,MAAM,EAAG;IAExB,QAAS1J,UAAU,CAACk6C,UAAU;MAE7B,KAAKx7E,qBAAqB;MAC1B,KAAKC,qBAAqB;QACzBs7E,gBAAgB,GAAG,kBAAkB;QACrC;MAED,KAAKn7E,uBAAuB;QAC3Bm7E,gBAAgB,GAAG,qBAAqB;QACxC;IAEF;EAED;EAEA,OAAOA,gBAAgB;AAExB;AAEA,SAASE,wBAAwBA,CAAEn6C,UAAU,EAAG;EAE/C,IAAIo6C,gBAAgB,GAAG,wBAAwB;EAE/C,IAAKp6C,UAAU,CAAC0J,MAAM,EAAG;IAExB,QAAS1J,UAAU,CAACk6C,UAAU;MAE7B,KAAKv7E,qBAAqB;QAEzBy7E,gBAAgB,GAAG,wBAAwB;QAC3C;IAEF;EAED;EAEA,OAAOA,gBAAgB;AAExB;AAEA,SAASC,4BAA4BA,CAAEr6C,UAAU,EAAG;EAEnD,IAAIs6C,oBAAoB,GAAG,sBAAsB;EAEjD,IAAKt6C,UAAU,CAAC0J,MAAM,EAAG;IAExB,QAAS1J,UAAU,CAAC2J,OAAO;MAE1B,KAAK3rC,iBAAiB;QACrBs8E,oBAAoB,GAAG,0BAA0B;QACjD;MAED,KAAKr8E,YAAY;QAChBq8E,oBAAoB,GAAG,qBAAqB;QAC5C;MAED,KAAKp8E,YAAY;QAChBo8E,oBAAoB,GAAG,qBAAqB;QAC5C;IAEF;EAED;EAEA,OAAOA,oBAAoB;AAE5B;AAEA,SAASC,kBAAkBA,CAAEv6C,UAAU,EAAG;EAEzC,IAAMw6C,WAAW,GAAGx6C,UAAU,CAAC62C,kBAAkB;EAEjD,IAAK2D,WAAW,KAAK,IAAI,EAAG,OAAO,IAAI;EAEvC,IAAMC,MAAM,GAAGtyE,IAAI,CAACk+D,IAAI,CAAEmU,WAAY,CAAC,GAAG,CAAC;EAE3C,IAAME,WAAW,GAAG,GAAG,GAAGF,WAAW;EAErC,IAAMG,UAAU,GAAG,GAAG,IAAK,CAAC,GAAGxyE,IAAI,CAACa,GAAG,CAAEb,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEmvE,MAAO,CAAC,EAAE,CAAC,GAAG,EAAG,CAAC,CAAE;EAE1E,OAAO;IAAEE,UAAU,EAAVA,UAAU;IAAED,WAAW,EAAXA,WAAW;IAAED,MAAM,EAANA;EAAO,CAAC;AAE3C;AAEA,SAASG,YAAYA,CAAEp/B,QAAQ,EAAEq/B,QAAQ,EAAE76C,UAAU,EAAEk7B,aAAa,EAAG;EAEtE;EACA;;EAEA,IAAMxV,EAAE,GAAGlK,QAAQ,CAAC9hC,UAAU,CAAC,CAAC;EAEhC,IAAM0iC,OAAO,GAAGpc,UAAU,CAACoc,OAAO;EAElC,IAAIE,YAAY,GAAGtc,UAAU,CAACsc,YAAY;EAC1C,IAAIC,cAAc,GAAGvc,UAAU,CAACuc,cAAc;EAE9C,IAAMu9B,mBAAmB,GAAGD,2BAA2B,CAAE75C,UAAW,CAAC;EACrE,IAAMi6C,gBAAgB,GAAGD,wBAAwB,CAAEh6C,UAAW,CAAC;EAC/D,IAAMo6C,gBAAgB,GAAGD,wBAAwB,CAAEn6C,UAAW,CAAC;EAC/D,IAAMs6C,oBAAoB,GAAGD,4BAA4B,CAAEr6C,UAAW,CAAC;EACvE,IAAM86C,gBAAgB,GAAGP,kBAAkB,CAAEv6C,UAAW,CAAC;EAEzD,IAAM+6C,gBAAgB,GAAG/6C,UAAU,CAAC4lB,QAAQ,GAAG,EAAE,GAAG8wB,kBAAkB,CAAE12C,UAAW,CAAC;EAEpF,IAAMg7C,aAAa,GAAGxD,eAAe,CAAEp7B,OAAQ,CAAC;EAEhD,IAAMof,OAAO,GAAG9V,EAAE,CAACu1B,aAAa,CAAC,CAAC;EAElC,IAAIC,YAAY,EAAEC,cAAc;EAChC,IAAIC,aAAa,GAAGp7C,UAAU,CAACkd,WAAW,GAAG,WAAW,GAAGld,UAAU,CAACkd,WAAW,GAAG,IAAI,GAAG,EAAE;EAE7F,IAAKld,UAAU,CAACq7C,mBAAmB,EAAG;IAErCH,YAAY,GAAG,CAEd,sBAAsB,GAAGl7C,UAAU,CAACs7C,UAAU,EAC9C,sBAAsB,GAAGt7C,UAAU,CAACu7C,UAAU,EAE9CP,aAAa,CAEb,CAAC1D,MAAM,CAAEC,eAAgB,CAAC,CAAC7B,IAAI,CAAE,IAAK,CAAC;IAExC,IAAKwF,YAAY,CAAClkF,MAAM,GAAG,CAAC,EAAG;MAE9BkkF,YAAY,IAAI,IAAI;IAErB;IAEAC,cAAc,GAAG,CAEhBJ,gBAAgB,EAEhB,sBAAsB,GAAG/6C,UAAU,CAACs7C,UAAU,EAC9C,sBAAsB,GAAGt7C,UAAU,CAACu7C,UAAU,EAE9CP,aAAa,CAEb,CAAC1D,MAAM,CAAEC,eAAgB,CAAC,CAAC7B,IAAI,CAAE,IAAK,CAAC;IAExC,IAAKyF,cAAc,CAACnkF,MAAM,GAAG,CAAC,EAAG;MAEhCmkF,cAAc,IAAI,IAAI;IAEvB;EAED,CAAC,MAAM;IAEND,YAAY,GAAG,CAEdvB,iBAAiB,CAAE35C,UAAW,CAAC,EAE/B,sBAAsB,GAAGA,UAAU,CAACs7C,UAAU,EAC9C,sBAAsB,GAAGt7C,UAAU,CAACu7C,UAAU,EAE9CP,aAAa,EAEbh7C,UAAU,CAACw7C,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrDx7C,UAAU,CAACy7C,eAAe,GAAG,8BAA8B,GAAG,EAAE,EAEhEz7C,UAAU,CAAC07C,MAAM,IAAI17C,UAAU,CAACgL,GAAG,GAAG,iBAAiB,GAAG,EAAE,EAC5DhL,UAAU,CAAC07C,MAAM,IAAI17C,UAAU,CAAC27C,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAEjE37C,UAAU,CAACqI,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvCrI,UAAU,CAAC0J,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7C1J,UAAU,CAAC0J,MAAM,GAAG,UAAU,GAAG0wC,gBAAgB,GAAG,EAAE,EACtDp6C,UAAU,CAACwI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDxI,UAAU,CAAC0I,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3C1I,UAAU,CAAC4I,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/C5I,UAAU,CAAC8I,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnD9I,UAAU,CAAC47C,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAC1E57C,UAAU,CAAC82C,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E92C,UAAU,CAACiJ,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/DjJ,UAAU,CAACsJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvDtJ,UAAU,CAACoI,aAAa,GAAG,2BAA2B,GAAG,EAAE,EAE3DpI,UAAU,CAAC0H,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD1H,UAAU,CAAC2H,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E3H,UAAU,CAAC4H,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtE5H,UAAU,CAACiI,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7DjI,UAAU,CAACkI,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhFlI,UAAU,CAACuJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDvJ,UAAU,CAACyJ,gBAAgB,GAAG,+BAA+B,GAAG,EAAE,EAClEzJ,UAAU,CAACwJ,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAE1ExJ,UAAU,CAACoJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDpJ,UAAU,CAACqJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDrJ,UAAU,CAACuI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDvI,UAAU,CAACoE,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDpE,UAAU,CAACgK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDhK,UAAU,CAACiK,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/DjK,UAAU,CAACmK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDnK,UAAU,CAACq4B,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5Dr4B,UAAU,CAACu4B,iBAAiB,GAAG,gCAAgC,GAAG,EAAE;IAEpE;;IAEAv4B,UAAU,CAAC67C,KAAK,GAAG,iBAAiB,GAAG77C,UAAU,CAAC67C,KAAK,GAAG,EAAE,EAC5D77C,UAAU,CAAC87C,UAAU,GAAG,sBAAsB,GAAG97C,UAAU,CAAC87C,UAAU,GAAG,EAAE,EAC3E97C,UAAU,CAAC+7C,UAAU,GAAG,sBAAsB,GAAG/7C,UAAU,CAAC+7C,UAAU,GAAG,EAAE,EAC3E/7C,UAAU,CAACg8C,OAAO,GAAG,mBAAmB,GAAGh8C,UAAU,CAACg8C,OAAO,GAAG,EAAE,EAClEh8C,UAAU,CAACi8C,aAAa,GAAG,yBAAyB,GAAGj8C,UAAU,CAACi8C,aAAa,GAAG,EAAE,EACpFj8C,UAAU,CAACk8C,SAAS,GAAG,qBAAqB,GAAGl8C,UAAU,CAACk8C,SAAS,GAAG,EAAE,EACxEl8C,UAAU,CAACm8C,WAAW,GAAG,uBAAuB,GAAGn8C,UAAU,CAACm8C,WAAW,GAAG,EAAE,EAC9En8C,UAAU,CAACo8C,iBAAiB,GAAG,6BAA6B,GAAGp8C,UAAU,CAACo8C,iBAAiB,GAAG,EAAE,EAEhGp8C,UAAU,CAACq8C,cAAc,GAAG,0BAA0B,GAAGr8C,UAAU,CAACq8C,cAAc,GAAG,EAAE,EACvFr8C,UAAU,CAACs8C,cAAc,GAAG,0BAA0B,GAAGt8C,UAAU,CAACs8C,cAAc,GAAG,EAAE,EAEvFt8C,UAAU,CAACu8C,eAAe,GAAG,2BAA2B,GAAGv8C,UAAU,CAACu8C,eAAe,GAAG,EAAE,EAE1Fv8C,UAAU,CAACw8C,cAAc,GAAG,0BAA0B,GAAGx8C,UAAU,CAACw8C,cAAc,GAAG,EAAE,EACvFx8C,UAAU,CAACy8C,oBAAoB,GAAG,iCAAiC,GAAGz8C,UAAU,CAACy8C,oBAAoB,GAAG,EAAE,EAC1Gz8C,UAAU,CAAC08C,uBAAuB,GAAG,oCAAoC,GAAG18C,UAAU,CAAC08C,uBAAuB,GAAG,EAAE,EAEnH18C,UAAU,CAAC28C,gBAAgB,GAAG,4BAA4B,GAAG38C,UAAU,CAAC28C,gBAAgB,GAAG,EAAE,EAC7F38C,UAAU,CAAC48C,yBAAyB,GAAG,sCAAsC,GAAG58C,UAAU,CAAC48C,yBAAyB,GAAG,EAAE,EAEzH58C,UAAU,CAAC68C,eAAe,GAAG,4BAA4B,GAAG78C,UAAU,CAAC68C,eAAe,GAAG,EAAE,EAC3F78C,UAAU,CAAC88C,mBAAmB,GAAG,gCAAgC,GAAG98C,UAAU,CAAC88C,mBAAmB,GAAG,EAAE,EAEvG98C,UAAU,CAAC+8C,aAAa,GAAG,yBAAyB,GAAG/8C,UAAU,CAAC+8C,aAAa,GAAG,EAAE,EACpF/8C,UAAU,CAACg9C,kBAAkB,GAAG,+BAA+B,GAAGh9C,UAAU,CAACg9C,kBAAkB,GAAG,EAAE,EACpGh9C,UAAU,CAACi9C,sBAAsB,GAAG,mCAAmC,GAAGj9C,UAAU,CAACi9C,sBAAsB,GAAG,EAAE,EAEhHj9C,UAAU,CAACk9C,iBAAiB,GAAG,6BAA6B,GAAGl9C,UAAU,CAACk9C,iBAAiB,GAAG,EAAE,EAChGl9C,UAAU,CAACm9C,cAAc,GAAG,0BAA0B,GAAGn9C,UAAU,CAACm9C,cAAc,GAAG,EAAE;IAEvF;;IAEAn9C,UAAU,CAACo9C,cAAc,IAAIp9C,UAAU,CAAC+K,WAAW,KAAK,KAAK,GAAG,qBAAqB,GAAG,EAAE,EAC1F/K,UAAU,CAACiE,YAAY,GAAG,mBAAmB,GAAG,EAAE,EAClDjE,UAAU,CAACq9C,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDr9C,UAAU,CAACs9C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Ct9C,UAAU,CAACu9C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cv9C,UAAU,CAACw9C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAE9Cx9C,UAAU,CAACy9C,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDz9C,UAAU,CAAC+K,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnD/K,UAAU,CAAC09C,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EAEjD19C,UAAU,CAACwsC,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDxsC,UAAU,CAACysC,YAAY,IAAIzsC,UAAU,CAAC+K,WAAW,KAAK,KAAK,GAAG,0BAA0B,GAAG,EAAE,EAC3F/K,UAAU,CAAC0sC,WAAW,IAAI1sC,UAAU,CAAC4lB,QAAQ,GAAK,yBAAyB,GAAG,EAAE,EAChF5lB,UAAU,CAACosC,iBAAiB,GAAG,CAAC,IAAIpsC,UAAU,CAAC4lB,QAAQ,GAAK,8BAA8B,GAAG,EAAE,EAC/F5lB,UAAU,CAACosC,iBAAiB,GAAG,CAAC,IAAIpsC,UAAU,CAAC4lB,QAAQ,GAAK,sCAAsC,GAAG5lB,UAAU,CAAC29C,kBAAkB,GAAG,EAAE,EACvI39C,UAAU,CAACosC,iBAAiB,GAAG,CAAC,IAAIpsC,UAAU,CAAC4lB,QAAQ,GAAK,6BAA6B,GAAG5lB,UAAU,CAACosC,iBAAiB,GAAG,EAAE,EAC/HpsC,UAAU,CAAC49C,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpD59C,UAAU,CAAC69C,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhD79C,UAAU,CAAC89C,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1D99C,UAAU,CAAC89C,gBAAgB,GAAG,UAAU,GAAGhE,mBAAmB,GAAG,EAAE,EAEnE95C,UAAU,CAACsK,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAE/DtK,UAAU,CAAC+9C,eAAe,GAAG,uBAAuB,GAAG,EAAE,EAEzD/9C,UAAU,CAACmgC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAChEngC,UAAU,CAACmgC,sBAAsB,IAAIngC,UAAU,CAACi3C,0BAA0B,GAAK,6BAA6B,GAAG,EAAE,EAEnH,2BAA2B,EAC3B,+BAA+B,EAC/B,gCAAgC,EAChC,0BAA0B,EAC1B,4BAA4B,EAC5B,8BAA8B,EAC9B,8BAA8B,EAE9B,uBAAuB,EAEvB,iCAAiC,EAEjC,QAAQ,EAER,6BAA6B,EAE7B,gCAAgC,EAEhC,QAAQ,EAER,0BAA0B,EAC1B,wBAAwB,EACxB,oBAAoB,EAEpB,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,gBAAgB,EAEhB,sBAAsB,EAEtB,QAAQ,EAER,oBAAoB,EAEpB,0BAA0B,EAE1B,QAAQ,EAER,gCAAgC,EAEhC,wBAAwB,EAExB,4BAA4B,EAE5B,wBAAwB,EAExB,QAAQ,EAER,0EAA0E,EAE1E,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAE/B,0BAA0B,EAE1B,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAEhC,QAAQ,EAER,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAEhC,SAAS,EAET,QAAQ,EAER,qBAAqB,EAErB,4BAA4B,EAC5B,6BAA6B,EAE7B,QAAQ,EAER,IAAI,CAEJ,CAACK,MAAM,CAAEC,eAAgB,CAAC,CAAC7B,IAAI,CAAE,IAAK,CAAC;IAExCyF,cAAc,GAAG,CAEhBJ,gBAAgB,EAEhBpB,iBAAiB,CAAE35C,UAAW,CAAC,EAE/B,sBAAsB,GAAGA,UAAU,CAACs7C,UAAU,EAC9C,sBAAsB,GAAGt7C,UAAU,CAACu7C,UAAU,EAE9CP,aAAa,EAEbh7C,UAAU,CAAC07C,MAAM,IAAI17C,UAAU,CAACgL,GAAG,GAAG,iBAAiB,GAAG,EAAE,EAC5DhL,UAAU,CAAC07C,MAAM,IAAI17C,UAAU,CAAC27C,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAEjE37C,UAAU,CAACqI,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvCrI,UAAU,CAACsI,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7CtI,UAAU,CAAC0J,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7C1J,UAAU,CAAC0J,MAAM,GAAG,UAAU,GAAGuwC,gBAAgB,GAAG,EAAE,EACtDj6C,UAAU,CAAC0J,MAAM,GAAG,UAAU,GAAG0wC,gBAAgB,GAAG,EAAE,EACtDp6C,UAAU,CAAC0J,MAAM,GAAG,UAAU,GAAG4wC,oBAAoB,GAAG,EAAE,EAC1DQ,gBAAgB,GAAG,6BAA6B,GAAGA,gBAAgB,CAACH,UAAU,GAAG,EAAE,EACnFG,gBAAgB,GAAG,8BAA8B,GAAGA,gBAAgB,CAACJ,WAAW,GAAG,EAAE,EACrFI,gBAAgB,GAAG,yBAAyB,GAAGA,gBAAgB,CAACL,MAAM,GAAG,IAAI,GAAG,EAAE,EAClFz6C,UAAU,CAACwI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDxI,UAAU,CAAC0I,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3C1I,UAAU,CAAC4I,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/C5I,UAAU,CAAC8I,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnD9I,UAAU,CAAC47C,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAC1E57C,UAAU,CAAC82C,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E92C,UAAU,CAACsJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvDtJ,UAAU,CAAC9jB,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrD8jB,UAAU,CAACoI,aAAa,GAAG,2BAA2B,GAAG,EAAE,EAE3DpI,UAAU,CAACwH,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnDxH,UAAU,CAAC0H,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD1H,UAAU,CAAC2H,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5E3H,UAAU,CAAC4H,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtE5H,UAAU,CAAC8H,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvD9H,UAAU,CAACiI,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7DjI,UAAU,CAACkI,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhFlI,UAAU,CAACuJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDvJ,UAAU,CAACyJ,gBAAgB,GAAG,+BAA+B,GAAG,EAAE,EAClEzJ,UAAU,CAACwJ,oBAAoB,GAAG,mCAAmC,GAAG,EAAE,EAE1ExJ,UAAU,CAACoJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDpJ,UAAU,CAACqJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDrJ,UAAU,CAACuI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDvI,UAAU,CAAC0K,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnD1K,UAAU,CAACoE,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDpE,UAAU,CAAC+G,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3C/G,UAAU,CAACq4B,aAAa,GAAG,4BAA4B,GAAG,EAAE,EAC5Dr4B,UAAU,CAACu4B,iBAAiB,GAAG,gCAAgC,GAAG,EAAE,EAEpEv4B,UAAU,CAACgK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDhK,UAAU,CAACiK,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/DjK,UAAU,CAACmK,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzDnK,UAAU,CAACo9C,cAAc,IAAIp9C,UAAU,CAAC+K,WAAW,KAAK,KAAK,GAAG,qBAAqB,GAAG,EAAE,EAC1F/K,UAAU,CAACiE,YAAY,IAAIjE,UAAU,CAACy7C,eAAe,GAAG,mBAAmB,GAAG,EAAE,EAChFz7C,UAAU,CAACq9C,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDr9C,UAAU,CAACs9C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Ct9C,UAAU,CAACu9C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAC9Cv9C,UAAU,CAACw9C,UAAU,GAAG,iBAAiB,GAAG,EAAE,EAE9Cx9C,UAAU,CAACy9C,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDz9C,UAAU,CAAC+J,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvD/J,UAAU,CAAC+K,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnD/K,UAAU,CAAC49C,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpD59C,UAAU,CAAC69C,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhD79C,UAAU,CAAC89C,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1D99C,UAAU,CAAC89C,gBAAgB,GAAG,UAAU,GAAGhE,mBAAmB,GAAG,EAAE,EAEnE95C,UAAU,CAACiG,kBAAkB,GAAG,6BAA6B,GAAG,EAAE,EAElEjG,UAAU,CAAC+9C,eAAe,GAAG,uBAAuB,GAAG,EAAE,EAEzD/9C,UAAU,CAACg+C,kBAAkB,GAAG,8BAA8B,GAAG,EAAE,EAEnEh+C,UAAU,CAACmgC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAChEngC,UAAU,CAACmgC,sBAAsB,IAAIngC,UAAU,CAACi3C,0BAA0B,GAAK,6BAA6B,GAAG,EAAE,EAEnH,0BAA0B,EAC1B,8BAA8B,EAC9B,8BAA8B,EAE5Bj3C,UAAU,CAACu6B,WAAW,KAAKp8D,aAAa,GAAK,sBAAsB,GAAG,EAAE,EACxE6hC,UAAU,CAACu6B,WAAW,KAAKp8D,aAAa,GAAKoyD,WAAW,CAAE,2BAA2B,CAAE,GAAG,EAAE;IAAE;IAC9FvwB,UAAU,CAACu6B,WAAW,KAAKp8D,aAAa,GAAKq4E,sBAAsB,CAAE,aAAa,EAAEx2C,UAAU,CAACu6B,WAAY,CAAC,GAAG,EAAE,EAEnHv6B,UAAU,CAAC+F,SAAS,GAAG,mBAAmB,GAAG,EAAE,EAC/C/F,UAAU,CAACi+C,MAAM,GAAG,gBAAgB,GAAG,EAAE,EAEzC1tB,WAAW,CAAE,0BAA0B,CAAE;IAAE;IAC3C+lB,wBAAwB,CAAE,qBAAqB,EAAEt2C,UAAU,CAAC0b,gBAAiB,CAAC,EAE9E1b,UAAU,CAACk+C,eAAe,GAAG,wBAAwB,GAAGl+C,UAAU,CAACm+C,YAAY,GAAG,EAAE,EAEpF,IAAI,CAEJ,CAAC7G,MAAM,CAAEC,eAAgB,CAAC,CAAC7B,IAAI,CAAE,IAAK,CAAC;EAEzC;EAEAp5B,YAAY,GAAG28B,eAAe,CAAE38B,YAAa,CAAC;EAC9CA,YAAY,GAAG07B,gBAAgB,CAAE17B,YAAY,EAAEtc,UAAW,CAAC;EAC3Dsc,YAAY,GAAGu8B,wBAAwB,CAAEv8B,YAAY,EAAEtc,UAAW,CAAC;EAEnEuc,cAAc,GAAG08B,eAAe,CAAE18B,cAAe,CAAC;EAClDA,cAAc,GAAGy7B,gBAAgB,CAAEz7B,cAAc,EAAEvc,UAAW,CAAC;EAC/Duc,cAAc,GAAGs8B,wBAAwB,CAAEt8B,cAAc,EAAEvc,UAAW,CAAC;EAEvEsc,YAAY,GAAGk9B,WAAW,CAAEl9B,YAAa,CAAC;EAC1CC,cAAc,GAAGi9B,WAAW,CAAEj9B,cAAe,CAAC;EAE9C,IAAKvc,UAAU,CAAC4lB,QAAQ,IAAI5lB,UAAU,CAACq7C,mBAAmB,KAAK,IAAI,EAAG;IAErE;;IAEAD,aAAa,GAAG,mBAAmB;IAEnCF,YAAY,GAAG,CACd,mCAAmC,EACnC,sBAAsB,EACtB,qBAAqB,EACrB,2BAA2B,CAC3B,CAACxF,IAAI,CAAE,IAAK,CAAC,GAAG,IAAI,GAAGwF,YAAY;IAEpCC,cAAc,GAAG,CAChB,oBAAoB,EAClBn7C,UAAU,CAACkd,WAAW,KAAKr2C,KAAK,GAAK,EAAE,GAAG,mDAAmD,EAC7Fm5B,UAAU,CAACkd,WAAW,KAAKr2C,KAAK,GAAK,EAAE,GAAG,mCAAmC,EAC/E,sCAAsC,EACtC,2BAA2B,EAC3B,6BAA6B,EAC7B,mCAAmC,EACnC,oCAAoC,EACpC,4CAA4C,EAC5C,sCAAsC,EACtC,sCAAsC,EACtC,8CAA8C,EAC9C,wCAAwC,CACxC,CAAC6uE,IAAI,CAAE,IAAK,CAAC,GAAG,IAAI,GAAGyF,cAAc;EAEvC;EAEA,IAAMiD,UAAU,GAAGhD,aAAa,GAAGF,YAAY,GAAG5+B,YAAY;EAC9D,IAAM+hC,YAAY,GAAGjD,aAAa,GAAGD,cAAc,GAAG5+B,cAAc;;EAEpE;EACA;;EAEA,IAAM+hC,cAAc,GAAGtJ,WAAW,CAAEtvB,EAAE,EAAEA,EAAE,CAACma,aAAa,EAAEue,UAAW,CAAC;EACtE,IAAMG,gBAAgB,GAAGvJ,WAAW,CAAEtvB,EAAE,EAAEA,EAAE,CAACqa,eAAe,EAAEse,YAAa,CAAC;EAE5E34B,EAAE,CAAC84B,YAAY,CAAEhjB,OAAO,EAAE8iB,cAAe,CAAC;EAC1C54B,EAAE,CAAC84B,YAAY,CAAEhjB,OAAO,EAAE+iB,gBAAiB,CAAC;;EAE5C;;EAEA,IAAKv+C,UAAU,CAACgd,mBAAmB,KAAKtnD,SAAS,EAAG;IAEnDgwD,EAAE,CAAC+4B,kBAAkB,CAAEjjB,OAAO,EAAE,CAAC,EAAEx7B,UAAU,CAACgd,mBAAoB,CAAC;EAEpE,CAAC,MAAM,IAAKhd,UAAU,CAACwsC,YAAY,KAAK,IAAI,EAAG;IAE9C;IACA9mB,EAAE,CAAC+4B,kBAAkB,CAAEjjB,OAAO,EAAE,CAAC,EAAE,UAAW,CAAC;EAEhD;EAEA9V,EAAE,CAACg5B,WAAW,CAAEljB,OAAQ,CAAC;;EAEzB;EACA,IAAKhgB,QAAQ,CAACmjC,KAAK,CAACC,iBAAiB,EAAG;IAEvC,IAAMC,UAAU,GAAGn5B,EAAE,CAACo5B,iBAAiB,CAAEtjB,OAAQ,CAAC,CAAC0a,IAAI,CAAC,CAAC;IACzD,IAAM6I,SAAS,GAAGr5B,EAAE,CAACuwB,gBAAgB,CAAEqI,cAAe,CAAC,CAACpI,IAAI,CAAC,CAAC;IAC9D,IAAM8I,WAAW,GAAGt5B,EAAE,CAACuwB,gBAAgB,CAAEsI,gBAAiB,CAAC,CAACrI,IAAI,CAAC,CAAC;IAElE,IAAI+I,QAAQ,GAAG,IAAI;IACnB,IAAIC,eAAe,GAAG,IAAI;IAE1B,IAAKx5B,EAAE,CAAC+uB,mBAAmB,CAAEjZ,OAAO,EAAE9V,EAAE,CAACy5B,WAAY,CAAC,KAAK,KAAK,EAAG;MAElEF,QAAQ,GAAG,KAAK;MAEhB,IAAK,OAAOzjC,QAAQ,CAACmjC,KAAK,CAACS,aAAa,KAAK,UAAU,EAAG;QAEzD5jC,QAAQ,CAACmjC,KAAK,CAACS,aAAa,CAAE15B,EAAE,EAAE8V,OAAO,EAAE8iB,cAAc,EAAEC,gBAAiB,CAAC;MAE9E,CAAC,MAAM;QAEN;;QAEA,IAAMc,YAAY,GAAGzJ,eAAe,CAAElwB,EAAE,EAAE44B,cAAc,EAAE,QAAS,CAAC;QACpE,IAAMgB,cAAc,GAAG1J,eAAe,CAAElwB,EAAE,EAAE64B,gBAAgB,EAAE,UAAW,CAAC;QAE1E3xE,OAAO,CAAChY,KAAK,CACZ,mCAAmC,GAAG8wD,EAAE,CAAC65B,QAAQ,CAAC,CAAC,GAAG,KAAK,GAC3D,kBAAkB,GAAG75B,EAAE,CAAC+uB,mBAAmB,CAAEjZ,OAAO,EAAE9V,EAAE,CAAC85B,eAAgB,CAAC,GAAG,MAAM,GACnF,oBAAoB,GAAGX,UAAU,GAAG,IAAI,GACxCQ,YAAY,GAAG,IAAI,GACnBC,cACD,CAAC;MAEF;IAED,CAAC,MAAM,IAAKT,UAAU,KAAK,EAAE,EAAG;MAE/BjyE,OAAO,CAACC,IAAI,CAAE,uCAAuC,EAAEgyE,UAAW,CAAC;IAEpE,CAAC,MAAM,IAAKE,SAAS,KAAK,EAAE,IAAIC,WAAW,KAAK,EAAE,EAAG;MAEpDE,eAAe,GAAG,KAAK;IAExB;IAEA,IAAKA,eAAe,EAAG;MAEtB,IAAI,CAACO,WAAW,GAAG;QAElBR,QAAQ,EAAEA,QAAQ;QAElBJ,UAAU,EAAEA,UAAU;QAEtBviC,YAAY,EAAE;UAEb9wC,GAAG,EAAEuzE,SAAS;UACdW,MAAM,EAAExE;QAET,CAAC;QAED3+B,cAAc,EAAE;UAEf/wC,GAAG,EAAEwzE,WAAW;UAChBU,MAAM,EAAEvE;QAET;MAED,CAAC;IAEF;EAED;;EAEA;;EAEA;EACA;EACA;;EAEAz1B,EAAE,CAACi6B,YAAY,CAAErB,cAAe,CAAC;EACjC54B,EAAE,CAACi6B,YAAY,CAAEpB,gBAAiB,CAAC;;EAEnC;;EAEA,IAAIqB,cAAc;EAElB,IAAI,CAACzS,WAAW,GAAG,YAAY;IAE9B,IAAKyS,cAAc,KAAKlqF,SAAS,EAAG;MAEnCkqF,cAAc,GAAG,IAAIpL,aAAa,CAAE9uB,EAAE,EAAE8V,OAAQ,CAAC;IAElD;IAEA,OAAOokB,cAAc;EAEtB,CAAC;;EAED;;EAEA,IAAI/iB,gBAAgB;EAEpB,IAAI,CAACI,aAAa,GAAG,YAAY;IAEhC,IAAKJ,gBAAgB,KAAKnnE,SAAS,EAAG;MAErCmnE,gBAAgB,GAAG4a,uBAAuB,CAAE/xB,EAAE,EAAE8V,OAAQ,CAAC;IAE1D;IAEA,OAAOqB,gBAAgB;EAExB,CAAC;;EAED;;EAEA,IAAI,CAACgjB,OAAO,GAAG,YAAY;IAE1B3kB,aAAa,CAAC4D,sBAAsB,CAAE,IAAK,CAAC;IAE5CpZ,EAAE,CAACo6B,aAAa,CAAEtkB,OAAQ,CAAC;IAC3B,IAAI,CAACA,OAAO,GAAG9lE,SAAS;EAEzB,CAAC;;EAED;;EAEA,IAAI,CAACxC,IAAI,GAAG8sC,UAAU,CAACs7C,UAAU;EACjC,IAAI,CAAC/jF,IAAI,GAAGyoC,UAAU,CAACu7C,UAAU;EACjC,IAAI,CAAC39C,EAAE,GAAGw3C,cAAc,EAAG;EAC3B,IAAI,CAACyF,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACkF,SAAS,GAAG,CAAC;EAClB,IAAI,CAACvkB,OAAO,GAAGA,OAAO;EACtB,IAAI,CAAClf,YAAY,GAAGgiC,cAAc;EAClC,IAAI,CAAC/hC,cAAc,GAAGgiC,gBAAgB;EAEtC,OAAO,IAAI;AAEZ;AAEA,IAAIyB,KAAK,GAAG,CAAC;AAAC,IAERC,gBAAgB;EAErB,SAAAA,iBAAA,EAAc;IAAAzmF,eAAA,OAAAymF,gBAAA;IAEb,IAAI,CAACC,WAAW,GAAG,IAAI9G,GAAG,CAAC,CAAC;IAC5B,IAAI,CAAC+G,aAAa,GAAG,IAAI/G,GAAG,CAAC,CAAC;EAE/B;EAACp/E,YAAA,CAAAimF,gBAAA;IAAA9uF,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAQ2c,QAAQ,EAAG;MAElB,IAAMgc,YAAY,GAAGhc,QAAQ,CAACgc,YAAY;MAC1C,IAAMC,cAAc,GAAGjc,QAAQ,CAACic,cAAc;MAE9C,IAAM6jC,iBAAiB,GAAG,IAAI,CAACC,eAAe,CAAE/jC,YAAa,CAAC;MAC9D,IAAMgkC,mBAAmB,GAAG,IAAI,CAACD,eAAe,CAAE9jC,cAAe,CAAC;MAElE,IAAMgkC,eAAe,GAAG,IAAI,CAACC,0BAA0B,CAAElgD,QAAS,CAAC;MAEnE,IAAKigD,eAAe,CAAC9gB,GAAG,CAAE2gB,iBAAkB,CAAC,KAAK,KAAK,EAAG;QAEzDG,eAAe,CAACjyE,GAAG,CAAE8xE,iBAAkB,CAAC;QACxCA,iBAAiB,CAACL,SAAS,EAAG;MAE/B;MAEA,IAAKQ,eAAe,CAAC9gB,GAAG,CAAE6gB,mBAAoB,CAAC,KAAK,KAAK,EAAG;QAE3DC,eAAe,CAACjyE,GAAG,CAAEgyE,mBAAoB,CAAC;QAC1CA,mBAAmB,CAACP,SAAS,EAAG;MAEjC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5uF,GAAA;IAAAE,KAAA,EAED,SAAAgsC,OAAQiD,QAAQ,EAAG;MAElB,IAAMigD,eAAe,GAAG,IAAI,CAACJ,aAAa,CAACvyE,GAAG,CAAE0yB,QAAS,CAAC;MAAC,IAAAmgD,UAAA,GAAApgC,0BAAA,CAEhCkgC,eAAe;QAAAG,MAAA;MAAA;QAA1C,KAAAD,UAAA,CAAA31E,CAAA,MAAA41E,MAAA,GAAAD,UAAA,CAAAv3E,CAAA,IAAAjU,IAAA,GAA6C;UAAA,IAAjC0rF,WAAW,GAAAD,MAAA,CAAArvF,KAAA;UAEtBsvF,WAAW,CAACZ,SAAS,EAAG;UAExB,IAAKY,WAAW,CAACZ,SAAS,KAAK,CAAC,EAAG,IAAI,CAACG,WAAW,CAACj5B,MAAM,CAAE05B,WAAW,CAACC,IAAK,CAAC;QAE/E;MAAC,SAAA1uF,GAAA;QAAAuuF,UAAA,CAAAvxE,CAAA,CAAAhd,GAAA;MAAA;QAAAuuF,UAAA,CAAAjsE,CAAA;MAAA;MAED,IAAI,CAAC2rE,aAAa,CAACl5B,MAAM,CAAE3mB,QAAS,CAAC;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAAnvC,GAAA;IAAAE,KAAA,EAED,SAAAwvF,kBAAmBvgD,QAAQ,EAAG;MAE7B,OAAO,IAAI,CAAC+/C,eAAe,CAAE//C,QAAQ,CAACgc,YAAa,CAAC,CAAC1e,EAAE;IAExD;EAAC;IAAAzsC,GAAA;IAAAE,KAAA,EAED,SAAAyvF,oBAAqBxgD,QAAQ,EAAG;MAE/B,OAAO,IAAI,CAAC+/C,eAAe,CAAE//C,QAAQ,CAACic,cAAe,CAAC,CAAC3e,EAAE;IAE1D;EAAC;IAAAzsC,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACsiE,WAAW,CAAC3iD,KAAK,CAAC,CAAC;MACxB,IAAI,CAAC4iD,aAAa,CAAC5iD,KAAK,CAAC,CAAC;IAE3B;EAAC;IAAApsC,GAAA;IAAAE,KAAA,EAED,SAAAmvF,2BAA4BlgD,QAAQ,EAAG;MAEtC,IAAMI,KAAK,GAAG,IAAI,CAACy/C,aAAa;MAChC,IAAIxzE,GAAG,GAAG+zB,KAAK,CAAC9yB,GAAG,CAAE0yB,QAAS,CAAC;MAE/B,IAAK3zB,GAAG,KAAKjX,SAAS,EAAG;QAExBiX,GAAG,GAAG,IAAIo0E,GAAG,CAAC,CAAC;QACfrgD,KAAK,CAAC/zB,GAAG,CAAE2zB,QAAQ,EAAE3zB,GAAI,CAAC;MAE3B;MAEA,OAAOA,GAAG;IAEX;EAAC;IAAAxb,GAAA;IAAAE,KAAA,EAED,SAAAgvF,gBAAiBO,IAAI,EAAG;MAEvB,IAAMlgD,KAAK,GAAG,IAAI,CAACw/C,WAAW;MAC9B,IAAIc,KAAK,GAAGtgD,KAAK,CAAC9yB,GAAG,CAAEgzE,IAAK,CAAC;MAE7B,IAAKI,KAAK,KAAKtrF,SAAS,EAAG;QAE1BsrF,KAAK,GAAG,IAAIC,gBAAgB,CAAEL,IAAK,CAAC;QACpClgD,KAAK,CAAC/zB,GAAG,CAAEi0E,IAAI,EAAEI,KAAM,CAAC;MAEzB;MAEA,OAAOA,KAAK;IAEb;EAAC;EAAA,OAAAf,gBAAA;AAAA;AAAA,IAIIgB,gBAAgB,gBAAAjnF,YAAA,CAErB,SAAAinF,iBAAaL,IAAI,EAAG;EAAApnF,eAAA,OAAAynF,gBAAA;EAEnB,IAAI,CAACrjD,EAAE,GAAGoiD,KAAK,EAAG;EAElB,IAAI,CAACY,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACb,SAAS,GAAG,CAAC;AAEnB,CAAC;AAIF,SAASmB,aAAaA,CAAE1lC,QAAQ,EAAE2d,QAAQ,EAAEC,UAAU,EAAE1c,UAAU,EAAEiJ,YAAY,EAAEuV,aAAa,EAAEze,QAAQ,EAAG;EAE3G,IAAM0kC,cAAc,GAAG,IAAI/nD,MAAM,CAAC,CAAC;EACnC,IAAMgoD,cAAc,GAAG,IAAInB,gBAAgB,CAAC,CAAC;EAC7C,IAAMvU,QAAQ,GAAG,EAAE;EAEnB,IAAM2V,SAAS,GAAG17B,YAAY,CAACC,QAAQ;EACvC,IAAMua,sBAAsB,GAAGxa,YAAY,CAACwa,sBAAsB;EAClE,IAAMmhB,wBAAwB,GAAG37B,YAAY,CAACwb,cAAc;EAE5D,IAAIx7B,SAAS,GAAGggB,YAAY,CAAChgB,SAAS;EAEtC,IAAM47C,SAAS,GAAG;IACjBC,iBAAiB,EAAE,OAAO;IAC1BC,oBAAoB,EAAE,cAAc;IACpCC,kBAAkB,EAAE,QAAQ;IAC5Bl0C,iBAAiB,EAAE,OAAO;IAC1Bm0C,mBAAmB,EAAE,SAAS;IAC9BC,iBAAiB,EAAE,OAAO;IAC1BC,gBAAgB,EAAE,MAAM;IACxBC,oBAAoB,EAAE,UAAU;IAChCC,oBAAoB,EAAE,UAAU;IAChCC,kBAAkB,EAAE,QAAQ;IAC5BC,iBAAiB,EAAE,OAAO;IAC1BC,kBAAkB,EAAE,QAAQ;IAC5BC,cAAc,EAAE,QAAQ;IACxBC,cAAc,EAAE,QAAQ;IACxBC,cAAc,EAAE;EACjB,CAAC;EAED,SAASC,UAAUA,CAAEjxF,KAAK,EAAG;IAE5B,IAAKA,KAAK,KAAK,CAAC,EAAG,OAAO,IAAI;IAE9B,YAAAynB,MAAA,CAAaznB,KAAK;EAEnB;EAEA,SAASkxF,aAAaA,CAAEjiD,QAAQ,EAAEkc,MAAM,EAAEgmC,OAAO,EAAE/hC,KAAK,EAAExoD,MAAM,EAAG;IAElE,IAAM+yC,GAAG,GAAGyV,KAAK,CAACzV,GAAG;IACrB,IAAMje,QAAQ,GAAG90B,MAAM,CAAC80B,QAAQ;IAChC,IAAM6S,WAAW,GAAGU,QAAQ,CAACmiD,sBAAsB,GAAGhiC,KAAK,CAAC7gB,WAAW,GAAG,IAAI;IAE9E,IAAM8J,MAAM,GAAG,CAAEpJ,QAAQ,CAACmiD,sBAAsB,GAAGrpB,UAAU,GAAGD,QAAQ,EAAGvrD,GAAG,CAAE0yB,QAAQ,CAACoJ,MAAM,IAAI9J,WAAY,CAAC;IAChH,IAAMi3C,kBAAkB,GAAK,CAAC,CAAEntC,MAAM,IAAQA,MAAM,CAAC/tB,OAAO,KAAK7c,uBAAyB,GAAG4qC,MAAM,CAACtwB,KAAK,CAACK,MAAM,GAAG,IAAI;IAEvH,IAAMs9D,QAAQ,GAAGwK,SAAS,CAAEjhD,QAAQ,CAACptC,IAAI,CAAE;;IAE3C;IACA;;IAEA,IAAKotC,QAAQ,CAACqF,SAAS,KAAK,IAAI,EAAG;MAElCA,SAAS,GAAGggB,YAAY,CAACga,eAAe,CAAEr/B,QAAQ,CAACqF,SAAU,CAAC;MAE9D,IAAKA,SAAS,KAAKrF,QAAQ,CAACqF,SAAS,EAAG;QAEvC/4B,OAAO,CAACC,IAAI,CAAE,mCAAmC,EAAEyzB,QAAQ,CAACqF,SAAS,EAAE,sBAAsB,EAAEA,SAAS,EAAE,UAAW,CAAC;MAEvH;IAED;;IAEA;;IAEA,IAAMqO,cAAc,GAAGjnB,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ,IAAIF,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM,IAAI8C,QAAQ,CAAC6lB,eAAe,CAACj7B,KAAK;IAC7H,IAAMy0D,iBAAiB,GAAKp4B,cAAc,KAAKt+C,SAAS,GAAKs+C,cAAc,CAACh9C,MAAM,GAAG,CAAC;IAEtF,IAAI2mF,kBAAkB,GAAG,CAAC;IAE1B,IAAK5wD,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ,KAAKv3B,SAAS,EAAGioF,kBAAkB,GAAG,CAAC;IAC7E,IAAK5wD,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM,KAAKv0B,SAAS,EAAGioF,kBAAkB,GAAG,CAAC;IAC3E,IAAK5wD,QAAQ,CAAC6lB,eAAe,CAACj7B,KAAK,KAAKjiB,SAAS,EAAGioF,kBAAkB,GAAG,CAAC;;IAE1E;;IAEA,IAAIrhC,YAAY,EAAEC,cAAc;IAChC,IAAImmC,oBAAoB,EAAEC,sBAAsB;IAEhD,IAAK5L,QAAQ,EAAG;MAEf,IAAMp1B,MAAM,GAAG6U,SAAS,CAAEugB,QAAQ,CAAE;MAEpCz6B,YAAY,GAAGqF,MAAM,CAACrF,YAAY;MAClCC,cAAc,GAAGoF,MAAM,CAACpF,cAAc;IAEvC,CAAC,MAAM;MAEND,YAAY,GAAGhc,QAAQ,CAACgc,YAAY;MACpCC,cAAc,GAAGjc,QAAQ,CAACic,cAAc;MAExC6kC,cAAc,CAACz9D,MAAM,CAAE2c,QAAS,CAAC;MAEjCoiD,oBAAoB,GAAGtB,cAAc,CAACP,iBAAiB,CAAEvgD,QAAS,CAAC;MACnEqiD,sBAAsB,GAAGvB,cAAc,CAACN,mBAAmB,CAAExgD,QAAS,CAAC;IAExE;IAEA,IAAMqgB,mBAAmB,GAAGnF,QAAQ,CAACC,eAAe,CAAC,CAAC;IAEtD,IAAMmnC,gBAAgB,GAAG3qF,MAAM,CAACknC,eAAe,KAAK,IAAI;IAExD,IAAM0jD,OAAO,GAAG,CAAC,CAAEviD,QAAQ,CAAC+H,GAAG;IAC/B,IAAMy6C,UAAU,GAAG,CAAC,CAAExiD,QAAQ,CAACgI,MAAM;IACrC,IAAMy6C,UAAU,GAAG,CAAC,CAAEr5C,MAAM;IAC5B,IAAMs5C,SAAS,GAAG,CAAC,CAAE1iD,QAAQ,CAACoI,KAAK;IACnC,IAAMu6C,YAAY,GAAG,CAAC,CAAE3iD,QAAQ,CAACkI,QAAQ;IACzC,IAAM06C,WAAW,GAAG,CAAC,CAAE5iD,QAAQ,CAACsI,OAAO;IACvC,IAAMu6C,aAAa,GAAG,CAAC,CAAE7iD,QAAQ,CAACwI,SAAS;IAC3C,IAAMs6C,mBAAmB,GAAG,CAAC,CAAE9iD,QAAQ,CAAC2I,eAAe;IACvD,IAAMo6C,eAAe,GAAG,CAAC,CAAE/iD,QAAQ,CAACgJ,WAAW;IAE/C,IAAMg6C,gBAAgB,GAAG,CAAC,CAAEhjD,QAAQ,CAAC+I,YAAY;IACjD,IAAMk6C,gBAAgB,GAAG,CAAC,CAAEjjD,QAAQ,CAAC8I,YAAY;IAEjD,IAAMo6C,cAAc,GAAGljD,QAAQ,CAACpkB,UAAU,GAAG,CAAC;IAC9C,IAAMunE,aAAa,GAAGnjD,QAAQ,CAACkH,SAAS,GAAG,CAAC;IAC5C,IAAMk8C,eAAe,GAAGpjD,QAAQ,CAACwH,WAAW,GAAG,CAAC;IAChD,IAAM67C,SAAS,GAAGrjD,QAAQ,CAACyG,KAAK,GAAG,CAAC;IACpC,IAAM68C,gBAAgB,GAAGtjD,QAAQ,CAAC0J,YAAY,GAAG,CAAC;IAElD,IAAM65C,iBAAiB,GAAGL,cAAc,IAAI,CAAC,CAAEljD,QAAQ,CAAC8H,aAAa;IAErE,IAAM07C,gBAAgB,GAAGL,aAAa,IAAI,CAAC,CAAEnjD,QAAQ,CAACoH,YAAY;IAClE,IAAMq8C,uBAAuB,GAAGN,aAAa,IAAI,CAAC,CAAEnjD,QAAQ,CAACsH,kBAAkB;IAC/E,IAAMo8C,0BAA0B,GAAGP,aAAa,IAAI,CAAC,CAAEnjD,QAAQ,CAACqH,qBAAqB;IAErF,IAAMs8C,kBAAkB,GAAGP,eAAe,IAAI,CAAC,CAAEpjD,QAAQ,CAAC2H,cAAc;IACxE,IAAMi8C,4BAA4B,GAAGR,eAAe,IAAI,CAAC,CAAEpjD,QAAQ,CAAC4H,uBAAuB;IAE3F,IAAMi8C,kBAAkB,GAAGR,SAAS,IAAI,CAAC,CAAErjD,QAAQ,CAAC+3B,aAAa;IACjE,IAAM+rB,sBAAsB,GAAGT,SAAS,IAAI,CAAC,CAAErjD,QAAQ,CAACi4B,iBAAiB;IAEzE,IAAM8rB,eAAe,GAAG,CAAC,CAAE/jD,QAAQ,CAACiJ,WAAW;IAC/C,IAAM+6C,qBAAqB,GAAG,CAAC,CAAEhkD,QAAQ,CAACmJ,gBAAgB;IAC1D,IAAM86C,yBAAyB,GAAG,CAAC,CAAEjkD,QAAQ,CAACkJ,oBAAoB;IAElE,IAAMg7C,mBAAmB,GAAGZ,gBAAgB,IAAI,CAAC,CAAEtjD,QAAQ,CAAC2J,eAAe;IAC3E,IAAMw6C,gBAAgB,GAAGb,gBAAgB,IAAI,CAAC,CAAEtjD,QAAQ,CAAC6J,YAAY;IAErE,IAAMu6C,eAAe,GAAG,CAAC,CAAEpkD,QAAQ,CAACyJ,WAAW;IAE/C,IAAM46C,YAAY,GAAG,CAAC,CAAErkD,QAAQ,CAACiI,QAAQ;IAEzC,IAAMq8C,aAAa,GAAGtkD,QAAQ,CAACoK,SAAS,GAAG,CAAC;IAE5C,IAAMm6C,aAAa,GAAG,CAAC,CAAEvkD,QAAQ,CAAC8D,SAAS;IAE3C,IAAM0gD,cAAc,GAAG,CAAC,CAAExkD,QAAQ,CAACoc,UAAU;IAE7C,IAAMqoC,iBAAiB,GAAG,CAAC,CAAEh4D,QAAQ,CAACC,UAAU,CAACoV,GAAG;IACpD,IAAM4iD,iBAAiB,GAAG,CAAC,CAAEj4D,QAAQ,CAACC,UAAU,CAACqV,GAAG;IACpD,IAAM4iD,iBAAiB,GAAG,CAAC,CAAEl4D,QAAQ,CAACC,UAAU,CAACsV,GAAG;IAEpD,IAAIi4B,WAAW,GAAGp8D,aAAa;IAE/B,IAAKmiC,QAAQ,CAAC6F,UAAU,EAAG;MAE1B,IAAKwa,mBAAmB,KAAK,IAAI,IAAIA,mBAAmB,CAACukC,gBAAgB,KAAK,IAAI,EAAG;QAEpF3qB,WAAW,GAAG/e,QAAQ,CAAC+e,WAAW;MAEnC;IAED;IAEA,IAAMv6B,UAAU,GAAG;MAElB4lB,QAAQ,EAAEy7B,SAAS;MAEnBtK,QAAQ,EAAEA,QAAQ;MAClBuE,UAAU,EAAEh7C,QAAQ,CAACptC,IAAI;MACzBqoF,UAAU,EAAEj7C,QAAQ,CAAC/oC,IAAI;MAEzB+kD,YAAY,EAAEA,YAAY;MAC1BC,cAAc,EAAEA,cAAc;MAC9BH,OAAO,EAAE9b,QAAQ,CAAC8b,OAAO;MAEzBsmC,oBAAoB,EAAEA,oBAAoB;MAC1CC,sBAAsB,EAAEA,sBAAsB;MAE9CtH,mBAAmB,EAAE/6C,QAAQ,CAAC+6C,mBAAmB,KAAK,IAAI;MAC1Dn+B,WAAW,EAAE5c,QAAQ,CAAC4c,WAAW;MAEjCvX,SAAS,EAAEA,SAAS;MAEpB61C,UAAU,EAAEoH,gBAAgB;MAC5BnH,eAAe,EAAEmH,gBAAgB,IAAI3qF,MAAM,CAAConC,aAAa,KAAK,IAAI;MAElE8lD,sBAAsB,EAAE7D,wBAAwB;MAChD5lC,gBAAgB,EAAIiF,mBAAmB,KAAK,IAAI,GAAKnF,QAAQ,CAACE,gBAAgB,GAAKiF,mBAAmB,CAACukC,gBAAgB,KAAK,IAAI,GAAGvkC,mBAAmB,CAACngC,OAAO,CAAChI,UAAU,GAAGhU,oBAAsB;MAElM6jC,GAAG,EAAEw6C,OAAO;MACZv6C,MAAM,EAAEw6C,UAAU;MAClBp5C,MAAM,EAAEq5C,UAAU;MAClB7I,UAAU,EAAE6I,UAAU,IAAIr5C,MAAM,CAAC/tB,OAAO;MACxCk7D,kBAAkB,EAAEA,kBAAkB;MACtCnuC,KAAK,EAAEs6C,SAAS;MAChBx6C,QAAQ,EAAEy6C,YAAY;MACtBr6C,OAAO,EAAEs6C,WAAW;MACpBp6C,SAAS,EAAEq6C,aAAa;MACxBl6C,eAAe,EAAEq4C,wBAAwB,IAAI8B,mBAAmB;MAChE95C,WAAW,EAAE+5C,eAAe;MAE5BzH,oBAAoB,EAAEuH,aAAa,IAAI7iD,QAAQ,CAACyI,aAAa,KAAK1kC,oBAAoB;MACtFyyE,qBAAqB,EAAEqM,aAAa,IAAI7iD,QAAQ,CAACyI,aAAa,KAAK3kC,qBAAqB;MAExFilC,YAAY,EAAEi6C,gBAAgB;MAC9Bl6C,YAAY,EAAEm6C,gBAAgB;MAE9BrnE,UAAU,EAAEsnE,cAAc;MAC1Bp7C,aAAa,EAAEy7C,iBAAiB;MAEhCr8C,SAAS,EAAEi8C,aAAa;MACxB/7C,YAAY,EAAEo8C,gBAAgB;MAC9Bl8C,kBAAkB,EAAEm8C,uBAAuB;MAC3Cp8C,qBAAqB,EAAEq8C,0BAA0B;MAEjDl8C,WAAW,EAAE47C,eAAe;MAC5Bz7C,cAAc,EAAEg8C,kBAAkB;MAClC/7C,uBAAuB,EAAEg8C,4BAA4B;MAErDn9C,KAAK,EAAE48C,SAAS;MAChBtrB,aAAa,EAAE8rB,kBAAkB;MACjC5rB,iBAAiB,EAAE6rB,sBAAsB;MAEzC76C,WAAW,EAAE86C,eAAe;MAC5B56C,gBAAgB,EAAE66C,qBAAqB;MACvC96C,oBAAoB,EAAE+6C,yBAAyB;MAE/Cv6C,YAAY,EAAE45C,gBAAgB;MAC9B35C,eAAe,EAAEu6C,mBAAmB;MACpCr6C,YAAY,EAAEs6C,gBAAgB;MAE9B16C,WAAW,EAAE26C,eAAe;MAE5BzG,MAAM,EAAE39C,QAAQ,CAAC6D,WAAW,KAAK,KAAK,IAAI7D,QAAQ,CAACyD,QAAQ,KAAK5nC,cAAc;MAE9EosC,QAAQ,EAAEo8C,YAAY;MACtBj6C,SAAS,EAAEk6C,aAAa;MACxBxgD,SAAS,EAAEygD,aAAa;MAExBl7C,OAAO,EAAErJ,QAAQ,CAACqJ,OAAO;MAEzB;;MAEAkyC,KAAK,EAAEgH,OAAO,IAAIP,UAAU,CAAEhiD,QAAQ,CAAC+H,GAAG,CAAC5rB,OAAQ,CAAC;MACpDu/D,OAAO,EAAEgH,SAAS,IAAIV,UAAU,CAAEhiD,QAAQ,CAACoI,KAAK,CAACjsB,OAAQ,CAAC;MAC1Ds/D,UAAU,EAAEkH,YAAY,IAAIX,UAAU,CAAEhiD,QAAQ,CAACkI,QAAQ,CAAC/rB,OAAQ,CAAC;MACnEy/D,SAAS,EAAEgH,WAAW,IAAIZ,UAAU,CAAEhiD,QAAQ,CAACsI,OAAO,CAACnsB,OAAQ,CAAC;MAChE0/D,WAAW,EAAEgH,aAAa,IAAIb,UAAU,CAAEhiD,QAAQ,CAACwI,SAAS,CAACrsB,OAAQ,CAAC;MACtE2/D,iBAAiB,EAAEgH,mBAAmB,IAAId,UAAU,CAAEhiD,QAAQ,CAAC2I,eAAe,CAACxsB,OAAQ,CAAC;MACxFw/D,aAAa,EAAEoH,eAAe,IAAIf,UAAU,CAAEhiD,QAAQ,CAACgJ,WAAW,CAAC7sB,OAAQ,CAAC;MAE5E4/D,cAAc,EAAEiH,gBAAgB,IAAIhB,UAAU,CAAEhiD,QAAQ,CAAC+I,YAAY,CAAC5sB,OAAQ,CAAC;MAC/E6/D,cAAc,EAAEiH,gBAAgB,IAAIjB,UAAU,CAAEhiD,QAAQ,CAAC8I,YAAY,CAAC3sB,OAAQ,CAAC;MAE/E8/D,eAAe,EAAEsH,iBAAiB,IAAIvB,UAAU,CAAEhiD,QAAQ,CAAC8H,aAAa,CAAC3rB,OAAQ,CAAC;MAElF+/D,cAAc,EAAEsH,gBAAgB,IAAIxB,UAAU,CAAEhiD,QAAQ,CAACoH,YAAY,CAACjrB,OAAQ,CAAC;MAC/EggE,oBAAoB,EAAEsH,uBAAuB,IAAIzB,UAAU,CAAEhiD,QAAQ,CAACsH,kBAAkB,CAACnrB,OAAQ,CAAC;MAClGigE,uBAAuB,EAAEsH,0BAA0B,IAAI1B,UAAU,CAAEhiD,QAAQ,CAACqH,qBAAqB,CAAClrB,OAAQ,CAAC;MAE3GkgE,gBAAgB,EAAEsH,kBAAkB,IAAI3B,UAAU,CAAEhiD,QAAQ,CAAC2H,cAAc,CAACxrB,OAAQ,CAAC;MACrFmgE,yBAAyB,EAAEsH,4BAA4B,IAAI5B,UAAU,CAAEhiD,QAAQ,CAAC4H,uBAAuB,CAACzrB,OAAQ,CAAC;MAEjHogE,eAAe,EAAEsH,kBAAkB,IAAI7B,UAAU,CAAEhiD,QAAQ,CAAC+3B,aAAa,CAAC57C,OAAQ,CAAC;MACnFqgE,mBAAmB,EAAEsH,sBAAsB,IAAI9B,UAAU,CAAEhiD,QAAQ,CAACi4B,iBAAiB,CAAC97C,OAAQ,CAAC;MAE/FsgE,aAAa,EAAEsH,eAAe,IAAI/B,UAAU,CAAEhiD,QAAQ,CAACiJ,WAAW,CAAC9sB,OAAQ,CAAC;MAC5EugE,kBAAkB,EAAEsH,qBAAqB,IAAIhC,UAAU,CAAEhiD,QAAQ,CAACmJ,gBAAgB,CAAChtB,OAAQ,CAAC;MAC5FwgE,sBAAsB,EAAEsH,yBAAyB,IAAIjC,UAAU,CAAEhiD,QAAQ,CAACkJ,oBAAoB,CAAC/sB,OAAQ,CAAC;MAExGygE,iBAAiB,EAAEsH,mBAAmB,IAAIlC,UAAU,CAAEhiD,QAAQ,CAAC2J,eAAe,CAACxtB,OAAQ,CAAC;MACxF0gE,cAAc,EAAEsH,gBAAgB,IAAInC,UAAU,CAAEhiD,QAAQ,CAAC6J,YAAY,CAAC1tB,OAAQ,CAAC;MAE/Eq/D,UAAU,EAAE6I,YAAY,IAAIrC,UAAU,CAAEhiD,QAAQ,CAACiI,QAAQ,CAAC9rB,OAAQ,CAAC;MAEnE;;MAEA2gE,cAAc,EAAE,CAAC,CAAErwD,QAAQ,CAACC,UAAU,CAAC4mB,OAAO,KAAMuvC,aAAa,IAAIK,cAAc,CAAE;MACrFv/C,YAAY,EAAE3D,QAAQ,CAAC2D,YAAY;MACnCo5C,YAAY,EAAE/8C,QAAQ,CAAC2D,YAAY,KAAK,IAAI,IAAI,CAAC,CAAElX,QAAQ,CAACC,UAAU,CAACrV,KAAK,IAAIoV,QAAQ,CAACC,UAAU,CAACrV,KAAK,CAACo3B,QAAQ,KAAK,CAAC;MACxHuuC,UAAU,EAAEyH,iBAAiB;MAC7BxH,UAAU,EAAEyH,iBAAiB;MAC7BxH,UAAU,EAAEyH,iBAAiB;MAE7BxH,SAAS,EAAExlF,MAAM,CAAC8nC,QAAQ,KAAK,IAAI,IAAI,CAAC,CAAEhT,QAAQ,CAACC,UAAU,CAAClP,EAAE,KAAM+kE,OAAO,IAAI8B,YAAY,CAAE;MAE/F35C,GAAG,EAAE,CAAC,CAAEA,GAAG;MACX0wC,MAAM,EAAEp7C,QAAQ,CAAC0K,GAAG,KAAK,IAAI;MAC7B2wC,OAAO,EAAI3wC,GAAG,IAAIA,GAAG,CAACo6C,SAAW;MAEjCr6C,WAAW,EAAEzK,QAAQ,CAACyK,WAAW,KAAK,IAAI;MAE1CT,eAAe,EAAEhK,QAAQ,CAACgK,eAAe,KAAK,IAAI;MAClD61B,sBAAsB,EAAEA,sBAAsB;MAE9Cud,QAAQ,EAAEzlF,MAAM,CAACioC,aAAa,KAAK,IAAI;MAEvCssC,YAAY,EAAEz/C,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ,KAAKv3B,SAAS;MAC7D+2E,YAAY,EAAE1/C,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM,KAAKv0B,SAAS;MAC3Dg3E,WAAW,EAAE3/C,QAAQ,CAAC6lB,eAAe,CAACj7B,KAAK,KAAKjiB,SAAS;MACzD02E,iBAAiB,EAAEA,iBAAiB;MACpCuR,kBAAkB,EAAEA,kBAAkB;MAEtCrF,YAAY,EAAE97B,MAAM,CAAC6oC,WAAW,CAACruF,MAAM;MACvCyhF,cAAc,EAAEj8B,MAAM,CAAClwB,KAAK,CAACt1B,MAAM;MACnCuhF,aAAa,EAAE/7B,MAAM,CAAC8oC,IAAI,CAACtuF,MAAM;MACjCmhF,gBAAgB,EAAE37B,MAAM,CAACgZ,YAAY,CAACx+D,MAAM;MAC5CwhF,iBAAiB,EAAEh8B,MAAM,CAAC+oC,QAAQ,CAACvuF,MAAM;MACzC0hF,aAAa,EAAEl8B,MAAM,CAACgpC,IAAI,CAACxuF,MAAM;MAEjC2hF,kBAAkB,EAAEn8B,MAAM,CAACyY,oBAAoB,CAACj+D,MAAM;MACtD4hF,oBAAoB,EAAEp8B,MAAM,CAACuZ,cAAc,CAAC/+D,MAAM;MAClDkhF,mBAAmB,EAAE17B,MAAM,CAACiZ,aAAa,CAACz+D,MAAM;MAChDohF,2BAA2B,EAAE57B,MAAM,CAAC47B,2BAA2B;MAE/DU,iBAAiB,EAAEr8B,QAAQ,CAACqlB,SAAS;MACrCiX,mBAAmB,EAAEt8B,QAAQ,CAACslB,eAAe;MAE7Ch8B,SAAS,EAAEzF,QAAQ,CAACyF,SAAS;MAE7B+3C,gBAAgB,EAAEtiC,QAAQ,CAACiqC,SAAS,CAACptE,OAAO,IAAImqE,OAAO,CAACxrF,MAAM,GAAG,CAAC;MAClE+iF,aAAa,EAAEv+B,QAAQ,CAACiqC,SAAS,CAACvyF,IAAI;MAEtCqnE,WAAW,EAAEA,WAAW;MACxBwjB,eAAe,EAAEviC,QAAQ,CAACkqC,gBAAgB;MAE1C1H,kBAAkB,EAAE6E,OAAO,IAAMviD,QAAQ,CAAC+H,GAAG,CAACs9C,cAAc,KAAK,IAAM,IAAMrlD,QAAQ,CAAC+H,GAAG,CAAC7vB,UAAU,KAAKjU,cAAgB;MAEzH0hC,kBAAkB,EAAE3F,QAAQ,CAAC2F,kBAAkB;MAE/C23C,WAAW,EAAEt9C,QAAQ,CAAC0D,IAAI,KAAKhoC,UAAU;MACzC6hF,SAAS,EAAEv9C,QAAQ,CAAC0D,IAAI,KAAKjoC,QAAQ;MAErCmiF,eAAe,EAAE59C,QAAQ,CAAC69C,YAAY,IAAI,CAAC;MAC3CA,YAAY,EAAE79C,QAAQ,CAAC69C,YAAY,IAAI,CAAC;MAExCnhC,mBAAmB,EAAE1c,QAAQ,CAAC0c,mBAAmB;MAEjD45B,oBAAoB,EAAEkO,cAAc,IAAIxkD,QAAQ,CAACoc,UAAU,CAACC,WAAW,KAAK,IAAI;MAChFq6B,kBAAkB,EAAE8N,cAAc,IAAIxkD,QAAQ,CAACoc,UAAU,CAACE,SAAS,KAAK,IAAI;MAC5Es6B,oBAAoB,EAAE4N,cAAc,IAAIxkD,QAAQ,CAACoc,UAAU,CAACG,WAAW,KAAK,IAAI;MAChFu6B,yBAAyB,EAAE0N,cAAc,IAAIxkD,QAAQ,CAACoc,UAAU,CAACI,gBAAgB,KAAK,IAAI;MAE1Fm6B,0BAA0B,EAAEoK,SAAS,IAAI3kC,UAAU,CAAC+iB,GAAG,CAAE,gBAAiB,CAAC;MAC3E0X,4BAA4B,EAAEkK,SAAS,IAAI3kC,UAAU,CAAC+iB,GAAG,CAAE,oBAAqB,CAAC;MACjF4X,iCAAiC,EAAEgK,SAAS,IAAI3kC,UAAU,CAAC+iB,GAAG,CAAE,wBAAyB,CAAC;MAE1Fl5B,qBAAqB,EAAEjG,QAAQ,CAACiG,qBAAqB,CAAC;IAEvD,CAAC;IAED,OAAOvG,UAAU;EAElB;EAEA,SAAS4lD,kBAAkBA,CAAE5lD,UAAU,EAAG;IAEzC,IAAMl4B,KAAK,GAAG,EAAE;IAEhB,IAAKk4B,UAAU,CAAC+2C,QAAQ,EAAG;MAE1BjvE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC+2C,QAAS,CAAC;IAElC,CAAC,MAAM;MAENjvE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC0iD,oBAAqB,CAAC;MAC7C56E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC2iD,sBAAuB,CAAC;IAEhD;IAEA,IAAK3iD,UAAU,CAACoc,OAAO,KAAK1mD,SAAS,EAAG;MAEvC,KAAM,IAAM6B,IAAI,IAAIyoC,UAAU,CAACoc,OAAO,EAAG;QAExCt0C,KAAK,CAACrR,IAAI,CAAEc,IAAK,CAAC;QAClBuQ,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACoc,OAAO,CAAE7kD,IAAI,CAAG,CAAC;MAEzC;IAED;IAEA,IAAKyoC,UAAU,CAACq7C,mBAAmB,KAAK,KAAK,EAAG;MAE/CwK,4BAA4B,CAAE/9E,KAAK,EAAEk4B,UAAW,CAAC;MACjD8lD,0BAA0B,CAAEh+E,KAAK,EAAEk4B,UAAW,CAAC;MAC/Cl4B,KAAK,CAACrR,IAAI,CAAE+kD,QAAQ,CAACE,gBAAiB,CAAC;IAExC;IAEA5zC,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACuG,qBAAsB,CAAC;IAE9C,OAAOz+B,KAAK,CAAC4tE,IAAI,CAAC,CAAC;EAEpB;EAEA,SAASmQ,4BAA4BA,CAAE/9E,KAAK,EAAEk4B,UAAU,EAAG;IAE1Dl4B,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC2F,SAAU,CAAC;IAClC79B,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC0b,gBAAiB,CAAC;IACzC5zC,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACk6C,UAAW,CAAC;IACnCpyE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC62C,kBAAmB,CAAC;IAC3C/uE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC67C,KAAM,CAAC;IAC9B/zE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC87C,UAAW,CAAC;IACnCh0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC+7C,UAAW,CAAC;IACnCj0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACg8C,OAAQ,CAAC;IAChCl0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACk8C,SAAU,CAAC;IAClCp0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACm8C,WAAY,CAAC;IACpCr0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACo8C,iBAAkB,CAAC;IAC1Ct0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACi8C,aAAc,CAAC;IACtCn0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACq8C,cAAe,CAAC;IACvCv0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACs8C,cAAe,CAAC;IACvCx0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACu8C,eAAgB,CAAC;IACxCz0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACw8C,cAAe,CAAC;IACvC10E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACy8C,oBAAqB,CAAC;IAC7C30E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC08C,uBAAwB,CAAC;IAChD50E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC28C,gBAAiB,CAAC;IACzC70E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC48C,yBAA0B,CAAC;IAClD90E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC68C,eAAgB,CAAC;IACxC/0E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC88C,mBAAoB,CAAC;IAC5Ch1E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC+8C,aAAc,CAAC;IACtCj1E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACg9C,kBAAmB,CAAC;IAC3Cl1E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACi9C,sBAAuB,CAAC;IAC/Cn1E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACk9C,iBAAkB,CAAC;IAC1Cp1E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACm9C,cAAe,CAAC;IACvCr1E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC2J,OAAQ,CAAC;IAChC7hC,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC27C,OAAQ,CAAC;IAChC7zE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACsK,eAAgB,CAAC;IACxCxiC,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACosC,iBAAkB,CAAC;IAC1CtkE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC+lD,mBAAoB,CAAC;IAC5Cj+E,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACs4C,YAAa,CAAC;IACrCxwE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACy4C,cAAe,CAAC;IACvC3wE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACu4C,aAAc,CAAC;IACtCzwE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACm4C,gBAAiB,CAAC;IACzCrwE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC04C,aAAc,CAAC;IACtC5wE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACw4C,iBAAkB,CAAC;IAC1C1wE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC24C,kBAAmB,CAAC;IAC3C7wE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC44C,oBAAqB,CAAC;IAC7C9wE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACk4C,mBAAoB,CAAC;IAC5CpwE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACo4C,2BAA4B,CAAC;IACpDtwE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC+5C,aAAc,CAAC;IACtCjyE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACu6B,WAAY,CAAC;IACpCzyD,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC84C,iBAAkB,CAAC;IAC1ChxE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAAC+4C,mBAAoB,CAAC;IAC5CjxE,KAAK,CAACrR,IAAI,CAAEupC,UAAU,CAACm+C,YAAa,CAAC;EAEtC;EAEA,SAAS2H,0BAA0BA,CAAEh+E,KAAK,EAAEk4B,UAAU,EAAG;IAExDmhD,cAAc,CAACznD,UAAU,CAAC,CAAC;IAE3B,IAAKsG,UAAU,CAAC4lB,QAAQ,EACvBu7B,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACmlD,sBAAsB,EACrChE,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACw7C,UAAU,EACzB2F,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACy7C,eAAe,EAC9B0F,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACsI,MAAM,EACrB64C,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC0J,MAAM,EACrBy3C,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC47C,oBAAoB,EACnCuF,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC82C,qBAAqB,EACpCqK,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACwH,SAAS,EACxB25C,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC8H,WAAW,EAC1Bq5C,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC0K,SAAS,EACxBy2C,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACiE,YAAY,EAC3Bk9C,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACq9C,YAAY,EAC3B8D,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACs9C,UAAU,EACzB6D,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACu9C,UAAU,EACzB4D,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACw9C,UAAU,EACzB2D,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACo9C,cAAc,EAC7B+D,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAAC9jB,UAAU,EACzBilE,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAE5BxxB,KAAK,CAACrR,IAAI,CAAE0qF,cAAc,CAAC9nD,IAAK,CAAC;IACjC8nD,cAAc,CAACznD,UAAU,CAAC,CAAC;IAE3B,IAAKsG,UAAU,CAACgL,GAAG,EAClBm2C,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC07C,MAAM,EACrByF,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC+K,WAAW,EAC1Bo2C,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACmgC,sBAAsB,EACrCghB,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC09C,QAAQ,EACvByD,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACwsC,YAAY,EAC3B2U,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACysC,YAAY,EAC3B0U,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC0sC,WAAW,EAC1ByU,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAACiG,kBAAkB,EACjCk7C,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC89C,gBAAgB,EAC/BqD,cAAc,CAAC7nD,MAAM,CAAE,CAAE,CAAC;IAC3B,IAAK0G,UAAU,CAAC+9C,eAAe,EAC9BoD,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAAC49C,WAAW,EAC1BuD,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAAC69C,SAAS,EACxBsD,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACk+C,eAAe,EAC9BiD,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAAC+F,SAAS,EACxBo7C,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACgK,YAAY,EAC3Bm3C,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAAC+G,KAAK,EACpBo6C,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACi+C,MAAM,EACrBkD,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACy9C,SAAS,EACxB0D,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAC5B,IAAK0G,UAAU,CAACg+C,kBAAkB,EACjCmD,cAAc,CAAC7nD,MAAM,CAAE,EAAG,CAAC;IAE5BxxB,KAAK,CAACrR,IAAI,CAAE0qF,cAAc,CAAC9nD,IAAK,CAAC;EAElC;EAEA,SAAS8zC,WAAWA,CAAE7sC,QAAQ,EAAG;IAEhC,IAAMy2C,QAAQ,GAAGwK,SAAS,CAAEjhD,QAAQ,CAACptC,IAAI,CAAE;IAC3C,IAAIkoD,QAAQ;IAEZ,IAAK27B,QAAQ,EAAG;MAEf,IAAMp1B,MAAM,GAAG6U,SAAS,CAAEugB,QAAQ,CAAE;MACpC37B,QAAQ,GAAGO,aAAa,CAACxtC,KAAK,CAAEwzC,MAAM,CAACvG,QAAS,CAAC;IAElD,CAAC,MAAM;MAENA,QAAQ,GAAG9a,QAAQ,CAAC8a,QAAQ;IAE7B;IAEA,OAAOA,QAAQ;EAEhB;EAEA,SAAS4qC,cAAcA,CAAEhmD,UAAU,EAAE66C,QAAQ,EAAG;IAE/C,IAAIrf,OAAO;;IAEX;IACA,KAAM,IAAIljC,CAAC,GAAG,CAAC,EAAE2tD,EAAE,GAAGva,QAAQ,CAAC10E,MAAM,EAAEshC,CAAC,GAAG2tD,EAAE,EAAE3tD,CAAC,EAAG,EAAG;MAErD,IAAM4tD,kBAAkB,GAAGxa,QAAQ,CAAEpzC,CAAC,CAAE;MAExC,IAAK4tD,kBAAkB,CAACrL,QAAQ,KAAKA,QAAQ,EAAG;QAE/Crf,OAAO,GAAG0qB,kBAAkB;QAC5B,EAAG1qB,OAAO,CAACukB,SAAS;QAEpB;MAED;IAED;IAEA,IAAKvkB,OAAO,KAAK9lE,SAAS,EAAG;MAE5B8lE,OAAO,GAAG,IAAIof,YAAY,CAAEp/B,QAAQ,EAAEq/B,QAAQ,EAAE76C,UAAU,EAAEk7B,aAAc,CAAC;MAC3EwQ,QAAQ,CAACj1E,IAAI,CAAE+kE,OAAQ,CAAC;IAEzB;IAEA,OAAOA,OAAO;EAEf;EAEA,SAAS2qB,cAAcA,CAAE3qB,OAAO,EAAG;IAElC,IAAK,EAAGA,OAAO,CAACukB,SAAS,KAAK,CAAC,EAAG;MAEjC;MACA,IAAM9oF,CAAC,GAAGy0E,QAAQ,CAACpkE,OAAO,CAAEk0D,OAAQ,CAAC;MACrCkQ,QAAQ,CAAEz0E,CAAC,CAAE,GAAGy0E,QAAQ,CAAEA,QAAQ,CAAC10E,MAAM,GAAG,CAAC,CAAE;MAC/C00E,QAAQ,CAACvzE,GAAG,CAAC,CAAC;;MAEd;MACAqjE,OAAO,CAACqkB,OAAO,CAAC,CAAC;IAElB;EAED;EAEA,SAASuG,kBAAkBA,CAAE9lD,QAAQ,EAAG;IAEvC8gD,cAAc,CAAC/jD,MAAM,CAAEiD,QAAS,CAAC;EAElC;EAEA,SAAS1iB,OAAOA,CAAA,EAAG;IAElBwjE,cAAc,CAACxjE,OAAO,CAAC,CAAC;EAEzB;EAEA,OAAO;IACN2kE,aAAa,EAAEA,aAAa;IAC5BqD,kBAAkB,EAAEA,kBAAkB;IACtCzY,WAAW,EAAEA,WAAW;IACxB6Y,cAAc,EAAEA,cAAc;IAC9BG,cAAc,EAAEA,cAAc;IAC9BC,kBAAkB,EAAEA,kBAAkB;IACtC;IACA1a,QAAQ,EAAEA,QAAQ;IAClB9tD,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAASyoE,eAAeA,CAAA,EAAG;EAE1B,IAAI1xB,UAAU,GAAG,IAAI7O,OAAO,CAAC,CAAC;EAE9B,SAASl4C,GAAGA,CAAE3V,MAAM,EAAG;IAEtB,IAAIowC,GAAG,GAAGssB,UAAU,CAAC/mD,GAAG,CAAE3V,MAAO,CAAC;IAElC,IAAKowC,GAAG,KAAK3yC,SAAS,EAAG;MAExB2yC,GAAG,GAAG,CAAC,CAAC;MACRssB,UAAU,CAAChoD,GAAG,CAAE1U,MAAM,EAAEowC,GAAI,CAAC;IAE9B;IAEA,OAAOA,GAAG;EAEX;EAEA,SAAShL,MAAMA,CAAEplC,MAAM,EAAG;IAEzB08D,UAAU,CAAC1N,MAAM,CAAEhvD,MAAO,CAAC;EAE5B;EAEA,SAAS0rB,MAAMA,CAAE1rB,MAAM,EAAE9G,GAAG,EAAEE,KAAK,EAAG;IAErCsjE,UAAU,CAAC/mD,GAAG,CAAE3V,MAAO,CAAC,CAAE9G,GAAG,CAAE,GAAGE,KAAK;EAExC;EAEA,SAASusB,OAAOA,CAAA,EAAG;IAElB+2C,UAAU,GAAG,IAAI7O,OAAO,CAAC,CAAC;EAE3B;EAEA,OAAO;IACNl4C,GAAG,EAAEA,GAAG;IACRyvB,MAAM,EAAEA,MAAM;IACd1Z,MAAM,EAAEA,MAAM;IACd/F,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAAS0oE,iBAAiBA,CAAEz6E,CAAC,EAAEC,CAAC,EAAG;EAElC,IAAKD,CAAC,CAAC06E,UAAU,KAAKz6E,CAAC,CAACy6E,UAAU,EAAG;IAEpC,OAAO16E,CAAC,CAAC06E,UAAU,GAAGz6E,CAAC,CAACy6E,UAAU;EAEnC,CAAC,MAAM,IAAK16E,CAAC,CAACiwB,WAAW,KAAKhwB,CAAC,CAACgwB,WAAW,EAAG;IAE7C,OAAOjwB,CAAC,CAACiwB,WAAW,GAAGhwB,CAAC,CAACgwB,WAAW;EAErC,CAAC,MAAM,IAAKjwB,CAAC,CAACy0B,QAAQ,CAAC1C,EAAE,KAAK9xB,CAAC,CAACw0B,QAAQ,CAAC1C,EAAE,EAAG;IAE7C,OAAO/xB,CAAC,CAACy0B,QAAQ,CAAC1C,EAAE,GAAG9xB,CAAC,CAACw0B,QAAQ,CAAC1C,EAAE;EAErC,CAAC,MAAM,IAAK/xB,CAAC,CAACqS,CAAC,KAAKpS,CAAC,CAACoS,CAAC,EAAG;IAEzB,OAAOrS,CAAC,CAACqS,CAAC,GAAGpS,CAAC,CAACoS,CAAC;EAEjB,CAAC,MAAM;IAEN,OAAOrS,CAAC,CAAC+xB,EAAE,GAAG9xB,CAAC,CAAC8xB,EAAE;EAEnB;AAED;AAEA,SAAS4oD,wBAAwBA,CAAE36E,CAAC,EAAEC,CAAC,EAAG;EAEzC,IAAKD,CAAC,CAAC06E,UAAU,KAAKz6E,CAAC,CAACy6E,UAAU,EAAG;IAEpC,OAAO16E,CAAC,CAAC06E,UAAU,GAAGz6E,CAAC,CAACy6E,UAAU;EAEnC,CAAC,MAAM,IAAK16E,CAAC,CAACiwB,WAAW,KAAKhwB,CAAC,CAACgwB,WAAW,EAAG;IAE7C,OAAOjwB,CAAC,CAACiwB,WAAW,GAAGhwB,CAAC,CAACgwB,WAAW;EAErC,CAAC,MAAM,IAAKjwB,CAAC,CAACqS,CAAC,KAAKpS,CAAC,CAACoS,CAAC,EAAG;IAEzB,OAAOpS,CAAC,CAACoS,CAAC,GAAGrS,CAAC,CAACqS,CAAC;EAEjB,CAAC,MAAM;IAEN,OAAOrS,CAAC,CAAC+xB,EAAE,GAAG9xB,CAAC,CAAC8xB,EAAE;EAEnB;AAED;AAGA,SAAS6oD,eAAeA,CAAA,EAAG;EAE1B,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAIC,gBAAgB,GAAG,CAAC;EAExB,IAAM1I,MAAM,GAAG,EAAE;EACjB,IAAM2I,YAAY,GAAG,EAAE;EACvB,IAAMziD,WAAW,GAAG,EAAE;EAEtB,SAAS69B,IAAIA,CAAA,EAAG;IAEf2kB,gBAAgB,GAAG,CAAC;IAEpB1I,MAAM,CAACjnF,MAAM,GAAG,CAAC;IACjB4vF,YAAY,CAAC5vF,MAAM,GAAG,CAAC;IACvBmtC,WAAW,CAACntC,MAAM,GAAG,CAAC;EAEvB;EAEA,SAAS6vF,iBAAiBA,CAAE5uF,MAAM,EAAE80B,QAAQ,EAAEuT,QAAQ,EAAEimD,UAAU,EAAEroE,CAAC,EAAEm3B,KAAK,EAAG;IAE9E,IAAIyxC,UAAU,GAAGJ,WAAW,CAAEC,gBAAgB,CAAE;IAEhD,IAAKG,UAAU,KAAKpxF,SAAS,EAAG;MAE/BoxF,UAAU,GAAG;QACZlpD,EAAE,EAAE3lC,MAAM,CAAC2lC,EAAE;QACb3lC,MAAM,EAAEA,MAAM;QACd80B,QAAQ,EAAEA,QAAQ;QAClBuT,QAAQ,EAAEA,QAAQ;QAClBimD,UAAU,EAAEA,UAAU;QACtBzqD,WAAW,EAAE7jC,MAAM,CAAC6jC,WAAW;QAC/B5d,CAAC,EAAEA,CAAC;QACJm3B,KAAK,EAAEA;MACR,CAAC;MAEDqxC,WAAW,CAAEC,gBAAgB,CAAE,GAAGG,UAAU;IAE7C,CAAC,MAAM;MAENA,UAAU,CAAClpD,EAAE,GAAG3lC,MAAM,CAAC2lC,EAAE;MACzBkpD,UAAU,CAAC7uF,MAAM,GAAGA,MAAM;MAC1B6uF,UAAU,CAAC/5D,QAAQ,GAAGA,QAAQ;MAC9B+5D,UAAU,CAACxmD,QAAQ,GAAGA,QAAQ;MAC9BwmD,UAAU,CAACP,UAAU,GAAGA,UAAU;MAClCO,UAAU,CAAChrD,WAAW,GAAG7jC,MAAM,CAAC6jC,WAAW;MAC3CgrD,UAAU,CAAC5oE,CAAC,GAAGA,CAAC;MAChB4oE,UAAU,CAACzxC,KAAK,GAAGA,KAAK;IAEzB;IAEAsxC,gBAAgB,EAAG;IAEnB,OAAOG,UAAU;EAElB;EAEA,SAASrwF,IAAIA,CAAEwB,MAAM,EAAE80B,QAAQ,EAAEuT,QAAQ,EAAEimD,UAAU,EAAEroE,CAAC,EAAEm3B,KAAK,EAAG;IAEjE,IAAMyxC,UAAU,GAAGD,iBAAiB,CAAE5uF,MAAM,EAAE80B,QAAQ,EAAEuT,QAAQ,EAAEimD,UAAU,EAAEroE,CAAC,EAAEm3B,KAAM,CAAC;IAExF,IAAK/U,QAAQ,CAAC0J,YAAY,GAAG,GAAG,EAAG;MAElC48C,YAAY,CAACnwF,IAAI,CAAEqwF,UAAW,CAAC;IAEhC,CAAC,MAAM,IAAKxmD,QAAQ,CAAC6D,WAAW,KAAK,IAAI,EAAG;MAE3CA,WAAW,CAAC1tC,IAAI,CAAEqwF,UAAW,CAAC;IAE/B,CAAC,MAAM;MAEN7I,MAAM,CAACxnF,IAAI,CAAEqwF,UAAW,CAAC;IAE1B;EAED;EAEA,SAAStsB,OAAOA,CAAEviE,MAAM,EAAE80B,QAAQ,EAAEuT,QAAQ,EAAEimD,UAAU,EAAEroE,CAAC,EAAEm3B,KAAK,EAAG;IAEpE,IAAMyxC,UAAU,GAAGD,iBAAiB,CAAE5uF,MAAM,EAAE80B,QAAQ,EAAEuT,QAAQ,EAAEimD,UAAU,EAAEroE,CAAC,EAAEm3B,KAAM,CAAC;IAExF,IAAK/U,QAAQ,CAAC0J,YAAY,GAAG,GAAG,EAAG;MAElC48C,YAAY,CAACpsB,OAAO,CAAEssB,UAAW,CAAC;IAEnC,CAAC,MAAM,IAAKxmD,QAAQ,CAAC6D,WAAW,KAAK,IAAI,EAAG;MAE3CA,WAAW,CAACq2B,OAAO,CAAEssB,UAAW,CAAC;IAElC,CAAC,MAAM;MAEN7I,MAAM,CAACzjB,OAAO,CAAEssB,UAAW,CAAC;IAE7B;EAED;EAEA,SAASxZ,IAAIA,CAAEyZ,gBAAgB,EAAEC,qBAAqB,EAAG;IAExD,IAAK/I,MAAM,CAACjnF,MAAM,GAAG,CAAC,EAAGinF,MAAM,CAAC3Q,IAAI,CAAEyZ,gBAAgB,IAAIT,iBAAkB,CAAC;IAC7E,IAAKM,YAAY,CAAC5vF,MAAM,GAAG,CAAC,EAAG4vF,YAAY,CAACtZ,IAAI,CAAE0Z,qBAAqB,IAAIR,wBAAyB,CAAC;IACrG,IAAKriD,WAAW,CAACntC,MAAM,GAAG,CAAC,EAAGmtC,WAAW,CAACmpC,IAAI,CAAE0Z,qBAAqB,IAAIR,wBAAyB,CAAC;EAEpG;EAEA,SAASrtF,MAAMA,CAAA,EAAG;IAEjB;;IAEA,KAAM,IAAIlC,CAAC,GAAG0vF,gBAAgB,EAAE5jE,EAAE,GAAG2jE,WAAW,CAAC1vF,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;MAEvE,IAAM6vF,UAAU,GAAGJ,WAAW,CAAEzvF,CAAC,CAAE;MAEnC,IAAK6vF,UAAU,CAAClpD,EAAE,KAAK,IAAI,EAAG;MAE9BkpD,UAAU,CAAClpD,EAAE,GAAG,IAAI;MACpBkpD,UAAU,CAAC7uF,MAAM,GAAG,IAAI;MACxB6uF,UAAU,CAAC/5D,QAAQ,GAAG,IAAI;MAC1B+5D,UAAU,CAACxmD,QAAQ,GAAG,IAAI;MAC1BwmD,UAAU,CAACzxC,KAAK,GAAG,IAAI;IAExB;EAED;EAEA,OAAO;IAEN4oC,MAAM,EAAEA,MAAM;IACd2I,YAAY,EAAEA,YAAY;IAC1BziD,WAAW,EAAEA,WAAW;IAExB69B,IAAI,EAAEA,IAAI;IACVvrE,IAAI,EAAEA,IAAI;IACV+jE,OAAO,EAAEA,OAAO;IAChBrhE,MAAM,EAAEA,MAAM;IAEdm0E,IAAI,EAAEA;EACP,CAAC;AAEF;AAEA,SAAS2Z,gBAAgBA,CAAA,EAAG;EAE3B,IAAIC,KAAK,GAAG,IAAIphC,OAAO,CAAC,CAAC;EAEzB,SAASl4C,GAAGA,CAAE6yC,KAAK,EAAE0mC,eAAe,EAAG;IAEtC,IAAMC,SAAS,GAAGF,KAAK,CAACt5E,GAAG,CAAE6yC,KAAM,CAAC;IACpC,IAAI4mC,IAAI;IAER,IAAKD,SAAS,KAAK1xF,SAAS,EAAG;MAE9B2xF,IAAI,GAAG,IAAIZ,eAAe,CAAC,CAAC;MAC5BS,KAAK,CAACv6E,GAAG,CAAE8zC,KAAK,EAAE,CAAE4mC,IAAI,CAAG,CAAC;IAE7B,CAAC,MAAM;MAEN,IAAKF,eAAe,IAAIC,SAAS,CAACpwF,MAAM,EAAG;QAE1CqwF,IAAI,GAAG,IAAIZ,eAAe,CAAC,CAAC;QAC5BW,SAAS,CAAC3wF,IAAI,CAAE4wF,IAAK,CAAC;MAEvB,CAAC,MAAM;QAENA,IAAI,GAAGD,SAAS,CAAED,eAAe,CAAE;MAEpC;IAED;IAEA,OAAOE,IAAI;EAEZ;EAEA,SAASzpE,OAAOA,CAAA,EAAG;IAElBspE,KAAK,GAAG,IAAIphC,OAAO,CAAC,CAAC;EAEtB;EAEA,OAAO;IACNl4C,GAAG,EAAEA,GAAG;IACRgQ,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAAS0pE,aAAaA,CAAA,EAAG;EAExB,IAAM9qC,MAAM,GAAG,CAAC,CAAC;EAEjB,OAAO;IAEN5uC,GAAG,EAAE,SAAAA,IAAW25E,KAAK,EAAG;MAEvB,IAAK/qC,MAAM,CAAE+qC,KAAK,CAAC3pD,EAAE,CAAE,KAAKloC,SAAS,EAAG;QAEvC,OAAO8mD,MAAM,CAAE+qC,KAAK,CAAC3pD,EAAE,CAAE;MAE1B;MAEA,IAAIwd,QAAQ;MAEZ,QAASmsC,KAAK,CAACr0F,IAAI;QAElB,KAAK,kBAAkB;UACtBkoD,QAAQ,GAAG;YACV3qB,SAAS,EAAE,IAAI7I,OAAO,CAAC,CAAC;YACxBjQ,KAAK,EAAE,IAAI4zB,KAAK,CAAC;UAClB,CAAC;UACD;QAED,KAAK,WAAW;UACf6P,QAAQ,GAAG;YACVnuB,QAAQ,EAAE,IAAIrF,OAAO,CAAC,CAAC;YACvB6I,SAAS,EAAE,IAAI7I,OAAO,CAAC,CAAC;YACxBjQ,KAAK,EAAE,IAAI4zB,KAAK,CAAC,CAAC;YAClB3O,QAAQ,EAAE,CAAC;YACXw4B,OAAO,EAAE,CAAC;YACVC,WAAW,EAAE,CAAC;YACdC,KAAK,EAAE;UACR,CAAC;UACD;QAED,KAAK,YAAY;UAChBla,QAAQ,GAAG;YACVnuB,QAAQ,EAAE,IAAIrF,OAAO,CAAC,CAAC;YACvBjQ,KAAK,EAAE,IAAI4zB,KAAK,CAAC,CAAC;YAClB3O,QAAQ,EAAE,CAAC;YACX04B,KAAK,EAAE;UACR,CAAC;UACD;QAED,KAAK,iBAAiB;UACrBla,QAAQ,GAAG;YACV3qB,SAAS,EAAE,IAAI7I,OAAO,CAAC,CAAC;YACxBsuC,QAAQ,EAAE,IAAI3qB,KAAK,CAAC,CAAC;YACrB4qB,WAAW,EAAE,IAAI5qB,KAAK,CAAC;UACxB,CAAC;UACD;QAED,KAAK,eAAe;UACnB6P,QAAQ,GAAG;YACVzjC,KAAK,EAAE,IAAI4zB,KAAK,CAAC,CAAC;YAClBte,QAAQ,EAAE,IAAIrF,OAAO,CAAC,CAAC;YACvB4/D,SAAS,EAAE,IAAI5/D,OAAO,CAAC,CAAC;YACxB6/D,UAAU,EAAE,IAAI7/D,OAAO,CAAC;UACzB,CAAC;UACD;MAEF;MAEA40B,MAAM,CAAE+qC,KAAK,CAAC3pD,EAAE,CAAE,GAAGwd,QAAQ;MAE7B,OAAOA,QAAQ;IAEhB;EAED,CAAC;AAEF;AAEA,SAASssC,mBAAmBA,CAAA,EAAG;EAE9B,IAAMlrC,MAAM,GAAG,CAAC,CAAC;EAEjB,OAAO;IAEN5uC,GAAG,EAAE,SAAAA,IAAW25E,KAAK,EAAG;MAEvB,IAAK/qC,MAAM,CAAE+qC,KAAK,CAAC3pD,EAAE,CAAE,KAAKloC,SAAS,EAAG;QAEvC,OAAO8mD,MAAM,CAAE+qC,KAAK,CAAC3pD,EAAE,CAAE;MAE1B;MAEA,IAAIwd,QAAQ;MAEZ,QAASmsC,KAAK,CAACr0F,IAAI;QAElB,KAAK,kBAAkB;UACtBkoD,QAAQ,GAAG;YACVyZ,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAIvnD,OAAO,CAAC;UAC5B,CAAC;UACD;QAED,KAAK,WAAW;UACf2tC,QAAQ,GAAG;YACVyZ,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAIvnD,OAAO,CAAC;UAC5B,CAAC;UACD;QAED,KAAK,YAAY;UAChB2tC,QAAQ,GAAG;YACVyZ,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAIvnD,OAAO,CAAC,CAAC;YAC5BooD,gBAAgB,EAAE,CAAC;YACnBC,eAAe,EAAE;UAClB,CAAC;UACD;;QAED;MAED;;MAEAtZ,MAAM,CAAE+qC,KAAK,CAAC3pD,EAAE,CAAE,GAAGwd,QAAQ;MAE7B,OAAOA,QAAQ;IAEhB;EAED,CAAC;AAEF;AAIA,IAAIusC,WAAW,GAAG,CAAC;AAEnB,SAASC,oCAAoCA,CAAEC,MAAM,EAAEC,MAAM,EAAG;EAE/D,OAAO,CAAEA,MAAM,CAACnsD,UAAU,GAAG,CAAC,GAAG,CAAC,KAAOksD,MAAM,CAAClsD,UAAU,GAAG,CAAC,GAAG,CAAC,CAAE,IAAKmsD,MAAM,CAACz/C,GAAG,GAAG,CAAC,GAAG,CAAC,CAAE,IAAKw/C,MAAM,CAACx/C,GAAG,GAAG,CAAC,GAAG,CAAC,CAAE;AAEvH;AAEA,SAAS0/C,WAAWA,CAAErrC,UAAU,EAAEiJ,YAAY,EAAG;EAEhD,IAAMjlB,KAAK,GAAG,IAAI4mD,aAAa,CAAC,CAAC;EAEjC,IAAMU,WAAW,GAAGN,mBAAmB,CAAC,CAAC;EAEzC,IAAM3yF,KAAK,GAAG;IAEbylB,OAAO,EAAE,CAAC;IAEVytE,IAAI,EAAE;MACLC,iBAAiB,EAAE,CAAE,CAAC;MACtBC,WAAW,EAAE,CAAE,CAAC;MAChBC,UAAU,EAAE,CAAE,CAAC;MACfC,cAAc,EAAE,CAAE,CAAC;MACnBC,UAAU,EAAE,CAAE,CAAC;MAEfC,qBAAqB,EAAE,CAAE,CAAC;MAC1BC,eAAe,EAAE,CAAE,CAAC;MACpBC,cAAc,EAAE,CAAE,CAAC;MACnBC,WAAW,EAAE,CAAE;IAChB,CAAC;IAEDC,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACpBC,KAAK,EAAE,EAAE;IACTvD,WAAW,EAAE,EAAE;IACfwD,iBAAiB,EAAE,EAAE;IACrB5zB,oBAAoB,EAAE,EAAE;IACxBC,uBAAuB,EAAE,EAAE;IAC3BowB,IAAI,EAAE,EAAE;IACR9vB,YAAY,EAAE,EAAE;IAChBszB,UAAU,EAAE,EAAE;IACdrzB,aAAa,EAAE,EAAE;IACjBC,eAAe,EAAE,EAAE;IACnB6vB,QAAQ,EAAE,EAAE;IACZwD,YAAY,EAAE,IAAI;IAClBC,YAAY,EAAE,IAAI;IAClB18D,KAAK,EAAE,EAAE;IACT28D,WAAW,EAAE,EAAE;IACflzB,cAAc,EAAE,EAAE;IAClBC,iBAAiB,EAAE,EAAE;IACrBwvB,IAAI,EAAE,EAAE;IACRpN,2BAA2B,EAAE;EAE9B,CAAC;EAED,KAAM,IAAInhF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAGlC,KAAK,CAAC6zF,KAAK,CAACnyF,IAAI,CAAE,IAAImxB,OAAO,CAAC,CAAE,CAAC;EAEhE,IAAMshE,OAAO,GAAG,IAAIthE,OAAO,CAAC,CAAC;EAC7B,IAAMxS,OAAO,GAAG,IAAIie,OAAO,CAAC,CAAC;EAC7B,IAAM81D,QAAQ,GAAG,IAAI91D,OAAO,CAAC,CAAC;EAE9B,SAASkoC,KAAKA,CAAE/e,MAAM,EAAEuhC,eAAe,EAAG;IAEzC,IAAIzoE,CAAC,GAAG,CAAC;MAAEb,CAAC,GAAG,CAAC;MAAE3I,CAAC,GAAG,CAAC;IAEvB,KAAM,IAAI7U,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAGlC,KAAK,CAAC6zF,KAAK,CAAE3xF,IAAC,CAAE,CAAC0V,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE9D,IAAIu7E,iBAAiB,GAAG,CAAC;IACzB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,UAAU,GAAG,CAAC;IAElB,IAAIC,qBAAqB,GAAG,CAAC;IAC7B,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIU,sBAAsB,GAAG,CAAC;;IAE9B;IACA5sC,MAAM,CAAC8wB,IAAI,CAAEsa,oCAAqC,CAAC;;IAEnD;IACA,IAAMyB,WAAW,GAAKtL,eAAe,KAAK,IAAI,GAAK51E,IAAI,CAACC,EAAE,GAAG,CAAC;IAE9D,KAAM,IAAInR,IAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGy0C,MAAM,CAACxlD,MAAM,EAAEC,IAAC,GAAG8Q,CAAC,EAAE9Q,IAAC,EAAG,EAAG;MAEjD,IAAMswF,KAAK,GAAG/qC,MAAM,CAAEvlD,IAAC,CAAE;MAEzB,IAAM0gB,KAAK,GAAG4vE,KAAK,CAAC5vE,KAAK;MACzB,IAAM2xE,SAAS,GAAG/B,KAAK,CAAC+B,SAAS;MACjC,IAAM1sD,QAAQ,GAAG2qD,KAAK,CAAC3qD,QAAQ;MAE/B,IAAM6oD,SAAS,GAAK8B,KAAK,CAAC3vB,MAAM,IAAI2vB,KAAK,CAAC3vB,MAAM,CAACvvB,GAAG,GAAKk/C,KAAK,CAAC3vB,MAAM,CAACvvB,GAAG,CAAC7nB,OAAO,GAAG,IAAI;MAExF,IAAK+mE,KAAK,CAACgC,cAAc,EAAG;QAE3Bj0E,CAAC,IAAIqC,KAAK,CAACrC,CAAC,GAAGg0E,SAAS,GAAGD,WAAW;QACtC50E,CAAC,IAAIkD,KAAK,CAAClD,CAAC,GAAG60E,SAAS,GAAGD,WAAW;QACtCv9E,CAAC,IAAI6L,KAAK,CAAC7L,CAAC,GAAGw9E,SAAS,GAAGD,WAAW;MAEvC,CAAC,MAAM,IAAK9B,KAAK,CAACiC,YAAY,EAAG;QAEhC,KAAM,IAAIv6D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9Bl6B,KAAK,CAAC6zF,KAAK,CAAE35D,CAAC,CAAE,CAACxgB,eAAe,CAAE84E,KAAK,CAACkC,EAAE,CAACC,YAAY,CAAEz6D,CAAC,CAAE,EAAEq6D,SAAU,CAAC;QAE1E;MAED,CAAC,MAAM,IAAK/B,KAAK,CAACoC,kBAAkB,EAAG;QAEtC,IAAMvuC,QAAQ,GAAG1a,KAAK,CAAC9yB,GAAG,CAAE25E,KAAM,CAAC;QAEnCnsC,QAAQ,CAACzjC,KAAK,CAACvJ,IAAI,CAAEm5E,KAAK,CAAC5vE,KAAM,CAAC,CAAC7I,cAAc,CAAEy4E,KAAK,CAAC+B,SAAS,GAAGD,WAAY,CAAC;QAElF,IAAK9B,KAAK,CAAC5rD,UAAU,EAAG;UAEvB,IAAMi8B,MAAM,GAAG2vB,KAAK,CAAC3vB,MAAM;UAE3B,IAAMgyB,cAAc,GAAG5B,WAAW,CAACp6E,GAAG,CAAE25E,KAAM,CAAC;UAE/CqC,cAAc,CAAC/0B,UAAU,GAAG+C,MAAM,CAACiyB,IAAI;UACvCD,cAAc,CAAC90B,gBAAgB,GAAG8C,MAAM,CAACkyB,UAAU;UACnDF,cAAc,CAAC70B,YAAY,GAAG6C,MAAM,CAACvtC,MAAM;UAC3Cu/D,cAAc,CAAC50B,aAAa,GAAG4C,MAAM,CAACmyB,OAAO;UAE7Ch1F,KAAK,CAAC8zF,iBAAiB,CAAEX,iBAAiB,CAAE,GAAG0B,cAAc;UAC7D70F,KAAK,CAACkgE,oBAAoB,CAAEizB,iBAAiB,CAAE,GAAGzC,SAAS;UAC3D1wF,KAAK,CAACmgE,uBAAuB,CAAEgzB,iBAAiB,CAAE,GAAGX,KAAK,CAAC3vB,MAAM,CAACthD,MAAM;UAExEiyE,qBAAqB,EAAG;QAEzB;QAEAxzF,KAAK,CAACswF,WAAW,CAAE6C,iBAAiB,CAAE,GAAG9sC,QAAQ;QAEjD8sC,iBAAiB,EAAG;MAErB,CAAC,MAAM,IAAKX,KAAK,CAACyC,WAAW,EAAG;QAE/B,IAAM5uC,SAAQ,GAAG1a,KAAK,CAAC9yB,GAAG,CAAE25E,KAAM,CAAC;QAEnCnsC,SAAQ,CAACnuB,QAAQ,CAACvC,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;QAE5DiyB,SAAQ,CAACzjC,KAAK,CAACvJ,IAAI,CAAEuJ,KAAM,CAAC,CAAC7I,cAAc,CAAEw6E,SAAS,GAAGD,WAAY,CAAC;QACtEjuC,SAAQ,CAACxe,QAAQ,GAAGA,QAAQ;QAE5Bwe,SAAQ,CAACga,OAAO,GAAGjtD,IAAI,CAAC8D,GAAG,CAAEs7E,KAAK,CAACv3E,KAAM,CAAC;QAC1CorC,SAAQ,CAACia,WAAW,GAAGltD,IAAI,CAAC8D,GAAG,CAAEs7E,KAAK,CAACv3E,KAAK,IAAK,CAAC,GAAGu3E,KAAK,CAAC0C,QAAQ,CAAG,CAAC;QACvE7uC,SAAQ,CAACka,KAAK,GAAGiyB,KAAK,CAACjyB,KAAK;QAE5BvgE,KAAK,CAACuwF,IAAI,CAAE8C,UAAU,CAAE,GAAGhtC,SAAQ;QAEnC,IAAMwc,OAAM,GAAG2vB,KAAK,CAAC3vB,MAAM;QAE3B,IAAK2vB,KAAK,CAACl/C,GAAG,EAAG;UAEhBtzC,KAAK,CAACygE,YAAY,CAAEkzB,WAAW,CAAE,GAAGnB,KAAK,CAACl/C,GAAG;UAC7CqgD,WAAW,EAAG;;UAEd;UACA;UACA9wB,OAAM,CAACsyB,cAAc,CAAE3C,KAAM,CAAC;UAE9B,IAAKA,KAAK,CAAC5rD,UAAU,EAAGytD,sBAAsB,EAAG;QAElD;QAEAr0F,KAAK,CAAC2gE,eAAe,CAAE0yB,UAAU,CAAE,GAAGxwB,OAAM,CAACthD,MAAM;QAEnD,IAAKixE,KAAK,CAAC5rD,UAAU,EAAG;UAEvB,IAAMiuD,eAAc,GAAG5B,WAAW,CAACp6E,GAAG,CAAE25E,KAAM,CAAC;UAE/CqC,eAAc,CAAC/0B,UAAU,GAAG+C,OAAM,CAACiyB,IAAI;UACvCD,eAAc,CAAC90B,gBAAgB,GAAG8C,OAAM,CAACkyB,UAAU;UACnDF,eAAc,CAAC70B,YAAY,GAAG6C,OAAM,CAACvtC,MAAM;UAC3Cu/D,eAAc,CAAC50B,aAAa,GAAG4C,OAAM,CAACmyB,OAAO;UAE7Ch1F,KAAK,CAAC+zF,UAAU,CAAEV,UAAU,CAAE,GAAGwB,eAAc;UAC/C70F,KAAK,CAAC0gE,aAAa,CAAE2yB,UAAU,CAAE,GAAG3C,SAAS;UAE7CgD,cAAc,EAAG;QAElB;QAEAL,UAAU,EAAG;MAEd,CAAC,MAAM,IAAKb,KAAK,CAAC4C,eAAe,EAAG;QAEnC,IAAM/uC,UAAQ,GAAG1a,KAAK,CAAC9yB,GAAG,CAAE25E,KAAM,CAAC;QAEnCnsC,UAAQ,CAACzjC,KAAK,CAACvJ,IAAI,CAAEuJ,KAAM,CAAC,CAAC7I,cAAc,CAAEw6E,SAAU,CAAC;QAExDluC,UAAQ,CAACosC,SAAS,CAAC76E,GAAG,CAAE46E,KAAK,CAAC/tE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAI,CAAC;QACrD4hC,UAAQ,CAACqsC,UAAU,CAAC96E,GAAG,CAAE,GAAG,EAAE46E,KAAK,CAAC9tE,MAAM,GAAG,GAAG,EAAE,GAAI,CAAC;QAEvD1kB,KAAK,CAACwwF,QAAQ,CAAE8C,cAAc,CAAE,GAAGjtC,UAAQ;QAE3CitC,cAAc,EAAG;MAElB,CAAC,MAAM,IAAKd,KAAK,CAAC6C,YAAY,EAAG;QAEhC,IAAMhvC,UAAQ,GAAG1a,KAAK,CAAC9yB,GAAG,CAAE25E,KAAM,CAAC;QAEnCnsC,UAAQ,CAACzjC,KAAK,CAACvJ,IAAI,CAAEm5E,KAAK,CAAC5vE,KAAM,CAAC,CAAC7I,cAAc,CAAEy4E,KAAK,CAAC+B,SAAS,GAAGD,WAAY,CAAC;QAClFjuC,UAAQ,CAACxe,QAAQ,GAAG2qD,KAAK,CAAC3qD,QAAQ;QAClCwe,UAAQ,CAACka,KAAK,GAAGiyB,KAAK,CAACjyB,KAAK;QAE5B,IAAKiyB,KAAK,CAAC5rD,UAAU,EAAG;UAEvB,IAAMi8B,QAAM,GAAG2vB,KAAK,CAAC3vB,MAAM;UAE3B,IAAMgyB,gBAAc,GAAG5B,WAAW,CAACp6E,GAAG,CAAE25E,KAAM,CAAC;UAE/CqC,gBAAc,CAAC/0B,UAAU,GAAG+C,QAAM,CAACiyB,IAAI;UACvCD,gBAAc,CAAC90B,gBAAgB,GAAG8C,QAAM,CAACkyB,UAAU;UACnDF,gBAAc,CAAC70B,YAAY,GAAG6C,QAAM,CAACvtC,MAAM;UAC3Cu/D,gBAAc,CAAC50B,aAAa,GAAG4C,QAAM,CAACmyB,OAAO;UAC7CH,gBAAc,CAAC/zB,gBAAgB,GAAG+B,QAAM,CAAC9uC,MAAM,CAACoP,IAAI;UACpD0xD,gBAAc,CAAC9zB,eAAe,GAAG8B,QAAM,CAAC9uC,MAAM,CAACqP,GAAG;UAElDpjC,KAAK,CAACk0F,WAAW,CAAEd,WAAW,CAAE,GAAGyB,gBAAc;UACjD70F,KAAK,CAACghE,cAAc,CAAEoyB,WAAW,CAAE,GAAG1C,SAAS;UAC/C1wF,KAAK,CAACihE,iBAAiB,CAAEmyB,WAAW,CAAE,GAAGZ,KAAK,CAAC3vB,MAAM,CAACthD,MAAM;UAE5DkyE,eAAe,EAAG;QAEnB;QAEAzzF,KAAK,CAACu3B,KAAK,CAAE67D,WAAW,CAAE,GAAG/sC,UAAQ;QAErC+sC,WAAW,EAAG;MAEf,CAAC,MAAM,IAAKZ,KAAK,CAAC8C,iBAAiB,EAAG;QAErC,IAAMjvC,UAAQ,GAAG1a,KAAK,CAAC9yB,GAAG,CAAE25E,KAAM,CAAC;QAEnCnsC,UAAQ,CAAC8a,QAAQ,CAAC9nD,IAAI,CAAEm5E,KAAK,CAAC5vE,KAAM,CAAC,CAAC7I,cAAc,CAAEw6E,SAAS,GAAGD,WAAY,CAAC;QAC/EjuC,UAAQ,CAAC+a,WAAW,CAAC/nD,IAAI,CAAEm5E,KAAK,CAACpxB,WAAY,CAAC,CAACrnD,cAAc,CAAEw6E,SAAS,GAAGD,WAAY,CAAC;QAExFt0F,KAAK,CAACywF,IAAI,CAAE8C,UAAU,CAAE,GAAGltC,UAAQ;QAEnCktC,UAAU,EAAG;MAEd;IAED;IAEA,IAAKD,cAAc,GAAG,CAAC,EAAG;MAEzB,IAAK1iC,YAAY,CAACC,QAAQ,EAAG;QAE5B;;QAEA7wD,KAAK,CAACg0F,YAAY,GAAGr2B,WAAW,CAAC43B,WAAW;QAC5Cv1F,KAAK,CAACi0F,YAAY,GAAGt2B,WAAW,CAAC63B,WAAW;MAE7C,CAAC,MAAM;QAEN;;QAEA,IAAK7tC,UAAU,CAAC+iB,GAAG,CAAE,0BAA2B,CAAC,KAAK,IAAI,EAAG;UAE5D1qE,KAAK,CAACg0F,YAAY,GAAGr2B,WAAW,CAAC43B,WAAW;UAC5Cv1F,KAAK,CAACi0F,YAAY,GAAGt2B,WAAW,CAAC63B,WAAW;QAE7C,CAAC,MAAM,IAAK7tC,UAAU,CAAC+iB,GAAG,CAAE,+BAAgC,CAAC,KAAK,IAAI,EAAG;UAExE1qE,KAAK,CAACg0F,YAAY,GAAGr2B,WAAW,CAAC83B,UAAU;UAC3Cz1F,KAAK,CAACi0F,YAAY,GAAGt2B,WAAW,CAAC+3B,UAAU;QAE5C,CAAC,MAAM;UAEN79E,OAAO,CAAChY,KAAK,CAAE,6EAA8E,CAAC;QAE/F;MAED;IAED;IAEAG,KAAK,CAAC4zF,OAAO,CAAE,CAAC,CAAE,GAAGrzE,CAAC;IACtBvgB,KAAK,CAAC4zF,OAAO,CAAE,CAAC,CAAE,GAAGl0E,CAAC;IACtB1f,KAAK,CAAC4zF,OAAO,CAAE,CAAC,CAAE,GAAG78E,CAAC;IAEtB,IAAMm8E,IAAI,GAAGlzF,KAAK,CAACkzF,IAAI;IAEvB,IAAKA,IAAI,CAACC,iBAAiB,KAAKA,iBAAiB,IAChDD,IAAI,CAACE,WAAW,KAAKA,WAAW,IAChCF,IAAI,CAACG,UAAU,KAAKA,UAAU,IAC9BH,IAAI,CAACI,cAAc,KAAKA,cAAc,IACtCJ,IAAI,CAACK,UAAU,KAAKA,UAAU,IAC9BL,IAAI,CAACM,qBAAqB,KAAKA,qBAAqB,IACpDN,IAAI,CAACO,eAAe,KAAKA,eAAe,IACxCP,IAAI,CAACQ,cAAc,KAAKA,cAAc,IACtCR,IAAI,CAACS,WAAW,KAAKA,WAAW,EAAG;MAEnC3zF,KAAK,CAACswF,WAAW,CAACruF,MAAM,GAAGkxF,iBAAiB;MAC5CnzF,KAAK,CAACuwF,IAAI,CAACtuF,MAAM,GAAGoxF,UAAU;MAC9BrzF,KAAK,CAACwwF,QAAQ,CAACvuF,MAAM,GAAGqxF,cAAc;MACtCtzF,KAAK,CAACu3B,KAAK,CAACt1B,MAAM,GAAGmxF,WAAW;MAChCpzF,KAAK,CAACywF,IAAI,CAACxuF,MAAM,GAAGsxF,UAAU;MAE9BvzF,KAAK,CAAC8zF,iBAAiB,CAAC7xF,MAAM,GAAGuxF,qBAAqB;MACtDxzF,KAAK,CAACkgE,oBAAoB,CAACj+D,MAAM,GAAGuxF,qBAAqB;MACzDxzF,KAAK,CAACk0F,WAAW,CAACjyF,MAAM,GAAGwxF,eAAe;MAC1CzzF,KAAK,CAACghE,cAAc,CAAC/+D,MAAM,GAAGwxF,eAAe;MAC7CzzF,KAAK,CAAC+zF,UAAU,CAAC9xF,MAAM,GAAGyxF,cAAc;MACxC1zF,KAAK,CAAC0gE,aAAa,CAACz+D,MAAM,GAAGyxF,cAAc;MAC3C1zF,KAAK,CAACmgE,uBAAuB,CAACl+D,MAAM,GAAGuxF,qBAAqB;MAC5DxzF,KAAK,CAACihE,iBAAiB,CAACh/D,MAAM,GAAGwxF,eAAe;MAChDzzF,KAAK,CAAC2gE,eAAe,CAAC1+D,MAAM,GAAGyxF,cAAc,GAAGC,WAAW,GAAGU,sBAAsB;MACpFr0F,KAAK,CAACygE,YAAY,CAACx+D,MAAM,GAAG0xF,WAAW;MACvC3zF,KAAK,CAACqjF,2BAA2B,GAAGgR,sBAAsB;MAE1DnB,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;MAC1CD,IAAI,CAACE,WAAW,GAAGA,WAAW;MAC9BF,IAAI,CAACG,UAAU,GAAGA,UAAU;MAC5BH,IAAI,CAACI,cAAc,GAAGA,cAAc;MACpCJ,IAAI,CAACK,UAAU,GAAGA,UAAU;MAE5BL,IAAI,CAACM,qBAAqB,GAAGA,qBAAqB;MAClDN,IAAI,CAACO,eAAe,GAAGA,eAAe;MACtCP,IAAI,CAACQ,cAAc,GAAGA,cAAc;MACpCR,IAAI,CAACS,WAAW,GAAGA,WAAW;MAE9B3zF,KAAK,CAACylB,OAAO,GAAGmtE,WAAW,EAAG;IAE/B;EAED;EAEA,SAAS+C,SAASA,CAAEluC,MAAM,EAAE1zB,MAAM,EAAG;IAEpC,IAAIo/D,iBAAiB,GAAG,CAAC;IACzB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,UAAU,GAAG,CAAC;IAElB,IAAMrlB,UAAU,GAAGn6C,MAAM,CAACC,kBAAkB;IAE5C,KAAM,IAAI9xB,IAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGy0C,MAAM,CAACxlD,MAAM,EAAEC,IAAC,GAAG8Q,CAAC,EAAE9Q,IAAC,EAAG,EAAG;MAEjD,IAAMswF,KAAK,GAAG/qC,MAAM,CAAEvlD,IAAC,CAAE;MAEzB,IAAKswF,KAAK,CAACoC,kBAAkB,EAAG;QAE/B,IAAMvuC,QAAQ,GAAGrmD,KAAK,CAACswF,WAAW,CAAE6C,iBAAiB,CAAE;QAEvD9sC,QAAQ,CAAC3qB,SAAS,CAAC/F,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;QAC7D+/D,OAAO,CAACx+D,qBAAqB,CAAE68D,KAAK,CAAC3tF,MAAM,CAACuvB,WAAY,CAAC;QACzDiyB,QAAQ,CAAC3qB,SAAS,CAAC/hB,GAAG,CAAEw6E,OAAQ,CAAC;QACjC9tC,QAAQ,CAAC3qB,SAAS,CAACrH,kBAAkB,CAAE65C,UAAW,CAAC;QAEnDilB,iBAAiB,EAAG;MAErB,CAAC,MAAM,IAAKX,KAAK,CAACyC,WAAW,EAAG;QAE/B,IAAM5uC,UAAQ,GAAGrmD,KAAK,CAACuwF,IAAI,CAAE8C,UAAU,CAAE;QAEzChtC,UAAQ,CAACnuB,QAAQ,CAACvC,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;QAC5DiyB,UAAQ,CAACnuB,QAAQ,CAAC1O,YAAY,CAAE0kD,UAAW,CAAC;QAE5C7nB,UAAQ,CAAC3qB,SAAS,CAAC/F,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;QAC7D+/D,OAAO,CAACx+D,qBAAqB,CAAE68D,KAAK,CAAC3tF,MAAM,CAACuvB,WAAY,CAAC;QACzDiyB,UAAQ,CAAC3qB,SAAS,CAAC/hB,GAAG,CAAEw6E,OAAQ,CAAC;QACjC9tC,UAAQ,CAAC3qB,SAAS,CAACrH,kBAAkB,CAAE65C,UAAW,CAAC;QAEnDmlB,UAAU,EAAG;MAEd,CAAC,MAAM,IAAKb,KAAK,CAAC4C,eAAe,EAAG;QAEnC,IAAM/uC,UAAQ,GAAGrmD,KAAK,CAACwwF,QAAQ,CAAE8C,cAAc,CAAE;QAEjDjtC,UAAQ,CAACnuB,QAAQ,CAACvC,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;QAC5DiyB,UAAQ,CAACnuB,QAAQ,CAAC1O,YAAY,CAAE0kD,UAAW,CAAC;;QAE5C;QACAkmB,QAAQ,CAAC32E,QAAQ,CAAC,CAAC;QACnB4C,OAAO,CAAChH,IAAI,CAAEm5E,KAAK,CAACp+D,WAAY,CAAC;QACjC/T,OAAO,CAACnC,WAAW,CAAEgwD,UAAW,CAAC;QACjCkmB,QAAQ,CAACl1D,eAAe,CAAE7e,OAAQ,CAAC;QAEnCgmC,UAAQ,CAACosC,SAAS,CAAC76E,GAAG,CAAE46E,KAAK,CAAC/tE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAI,CAAC;QACrD4hC,UAAQ,CAACqsC,UAAU,CAAC96E,GAAG,CAAE,GAAG,EAAE46E,KAAK,CAAC9tE,MAAM,GAAG,GAAG,EAAE,GAAI,CAAC;QAEvD2hC,UAAQ,CAACosC,SAAS,CAACjpE,YAAY,CAAE4qE,QAAS,CAAC;QAC3C/tC,UAAQ,CAACqsC,UAAU,CAAClpE,YAAY,CAAE4qE,QAAS,CAAC;QAE5Cd,cAAc,EAAG;MAElB,CAAC,MAAM,IAAKd,KAAK,CAAC6C,YAAY,EAAG;QAEhC,IAAMhvC,UAAQ,GAAGrmD,KAAK,CAACu3B,KAAK,CAAE67D,WAAW,CAAE;QAE3C/sC,UAAQ,CAACnuB,QAAQ,CAACvC,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;QAC5DiyB,UAAQ,CAACnuB,QAAQ,CAAC1O,YAAY,CAAE0kD,UAAW,CAAC;QAE5CklB,WAAW,EAAG;MAEf,CAAC,MAAM,IAAKZ,KAAK,CAAC8C,iBAAiB,EAAG;QAErC,IAAMjvC,UAAQ,GAAGrmD,KAAK,CAACywF,IAAI,CAAE8C,UAAU,CAAE;QAEzCltC,UAAQ,CAAC3qB,SAAS,CAAC/F,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;QAC7DiyB,UAAQ,CAAC3qB,SAAS,CAACrH,kBAAkB,CAAE65C,UAAW,CAAC;QAEnDqlB,UAAU,EAAG;MAEd;IAED;EAED;EAEA,OAAO;IACN/sB,KAAK,EAAEA,KAAK;IACZmvB,SAAS,EAAEA,SAAS;IACpB31F,KAAK,EAAEA;EACR,CAAC;AAEF;AAEA,SAAS41F,gBAAgBA,CAAEjuC,UAAU,EAAEiJ,YAAY,EAAG;EAErD,IAAMnJ,MAAM,GAAG,IAAIurC,WAAW,CAAErrC,UAAU,EAAEiJ,YAAa,CAAC;EAE1D,IAAMilC,WAAW,GAAG,EAAE;EACtB,IAAMC,YAAY,GAAG,EAAE;EAEvB,SAAS7oB,IAAIA,CAAA,EAAG;IAEf4oB,WAAW,CAAC5zF,MAAM,GAAG,CAAC;IACtB6zF,YAAY,CAAC7zF,MAAM,GAAG,CAAC;EAExB;EAEA,SAAS8zF,SAASA,CAAEvD,KAAK,EAAG;IAE3BqD,WAAW,CAACn0F,IAAI,CAAE8wF,KAAM,CAAC;EAE1B;EAEA,SAASwD,UAAUA,CAAEC,WAAW,EAAG;IAElCH,YAAY,CAACp0F,IAAI,CAAEu0F,WAAY,CAAC;EAEjC;EAEA,SAASC,WAAWA,CAAElN,eAAe,EAAG;IAEvCvhC,MAAM,CAAC+e,KAAK,CAAEqvB,WAAW,EAAE7M,eAAgB,CAAC;EAE7C;EAEA,SAASmN,eAAeA,CAAEpiE,MAAM,EAAG;IAElC0zB,MAAM,CAACkuC,SAAS,CAAEE,WAAW,EAAE9hE,MAAO,CAAC;EAExC;EAEA,IAAM/zB,KAAK,GAAG;IACb61F,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAE1BruC,MAAM,EAAEA;EACT,CAAC;EAED,OAAO;IACNwlB,IAAI,EAAEA,IAAI;IACVjtE,KAAK,EAAEA,KAAK;IACZk2F,WAAW,EAAEA,WAAW;IACxBC,eAAe,EAAEA,eAAe;IAEhCJ,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA;EACb,CAAC;AAEF;AAEA,SAASI,iBAAiBA,CAAEzuC,UAAU,EAAEiJ,YAAY,EAAG;EAEtD,IAAIylC,YAAY,GAAG,IAAItlC,OAAO,CAAC,CAAC;EAEhC,SAASl4C,GAAGA,CAAE6yC,KAAK,EAAE0mC,eAAe,GAAG,CAAC,EAAG;IAE1C,IAAMkE,gBAAgB,GAAGD,YAAY,CAACx9E,GAAG,CAAE6yC,KAAM,CAAC;IAClD,IAAI6qC,WAAW;IAEf,IAAKD,gBAAgB,KAAK31F,SAAS,EAAG;MAErC41F,WAAW,GAAG,IAAIX,gBAAgB,CAAEjuC,UAAU,EAAEiJ,YAAa,CAAC;MAC9DylC,YAAY,CAACz+E,GAAG,CAAE8zC,KAAK,EAAE,CAAE6qC,WAAW,CAAG,CAAC;IAE3C,CAAC,MAAM;MAEN,IAAKnE,eAAe,IAAIkE,gBAAgB,CAACr0F,MAAM,EAAG;QAEjDs0F,WAAW,GAAG,IAAIX,gBAAgB,CAAEjuC,UAAU,EAAEiJ,YAAa,CAAC;QAC9D0lC,gBAAgB,CAAC50F,IAAI,CAAE60F,WAAY,CAAC;MAErC,CAAC,MAAM;QAENA,WAAW,GAAGD,gBAAgB,CAAElE,eAAe,CAAE;MAElD;IAED;IAEA,OAAOmE,WAAW;EAEnB;EAEA,SAAS1tE,OAAOA,CAAA,EAAG;IAElBwtE,YAAY,GAAG,IAAItlC,OAAO,CAAC,CAAC;EAE7B;EAEA,OAAO;IACNl4C,GAAG,EAAEA,GAAG;IACRgQ,OAAO,EAAEA;EACV,CAAC;AAEF;AAAC,IAEK4jE,iBAAiB,0BAAA+J,UAAA;EAAAhwE,SAAA,CAAAimE,iBAAA,EAAA+J,UAAA;EAAA,IAAAC,QAAA,GAAA/vE,YAAA,CAAA+lE,iBAAA;EAEtB,SAAAA,kBAAaxhD,UAAU,EAAG;IAAA,IAAAyrD,OAAA;IAAAjyF,eAAA,OAAAgoF,iBAAA;IAEzBiK,OAAA,GAAAD,QAAA,CAAAr4F,IAAA;IAEAs4F,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAKv4F,IAAI,GAAG,mBAAmB;IAE/Bu4F,OAAA,CAAKtN,YAAY,GAAGj6E,iBAAiB;IAErCunF,OAAA,CAAKpjD,GAAG,GAAG,IAAI;IAEfojD,OAAA,CAAKljD,QAAQ,GAAG,IAAI;IAEpBkjD,OAAA,CAAKxiD,eAAe,GAAG,IAAI;IAC3BwiD,OAAA,CAAKviD,iBAAiB,GAAG,CAAC;IAC1BuiD,OAAA,CAAKtiD,gBAAgB,GAAG,CAAC;IAEzBsiD,OAAA,CAAK9gD,SAAS,GAAG,KAAK;IACtB8gD,OAAA,CAAK7gD,kBAAkB,GAAG,CAAC;IAE3B6gD,OAAA,CAAKhlD,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAyrD,OAAA;EAE9B;EAACzxF,YAAA,CAAAwnF,iBAAA;IAAArwF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA0zC,iBAAA,CAAA1wF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC4hE,YAAY,GAAG5hE,MAAM,CAAC4hE,YAAY;MAEvC,IAAI,CAAC91C,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAACU,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG3sB,MAAM,CAAC2sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG5sB,MAAM,CAAC4sB,gBAAgB;MAE/C,IAAI,CAACwB,SAAS,GAAGpuB,MAAM,CAACouB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGruB,MAAM,CAACquB,kBAAkB;MAEnD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA42C,iBAAA;AAAA,EA9C8B99C,QAAQ;AAAA/yC,OAAA,CAAA6wF,iBAAA,GAAAA,iBAAA;AAAA,IAkDlCC,oBAAoB,0BAAAkK,UAAA;EAAApwE,SAAA,CAAAkmE,oBAAA,EAAAkK,UAAA;EAAA,IAAAC,QAAA,GAAAnwE,YAAA,CAAAgmE,oBAAA;EAEzB,SAAAA,qBAAazhD,UAAU,EAAG;IAAA,IAAA6rD,OAAA;IAAAryF,eAAA,OAAAioF,oBAAA;IAEzBoK,OAAA,GAAAD,QAAA,CAAAz4F,IAAA;IAEA04F,OAAA,CAAKC,sBAAsB,GAAG,IAAI;IAElCD,OAAA,CAAK34F,IAAI,GAAG,sBAAsB;IAElC24F,OAAA,CAAKxjD,GAAG,GAAG,IAAI;IAEfwjD,OAAA,CAAKtjD,QAAQ,GAAG,IAAI;IAEpBsjD,OAAA,CAAK5iD,eAAe,GAAG,IAAI;IAC3B4iD,OAAA,CAAK3iD,iBAAiB,GAAG,CAAC;IAC1B2iD,OAAA,CAAK1iD,gBAAgB,GAAG,CAAC;IAEzB0iD,OAAA,CAAKplD,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA6rD,OAAA;EAE9B;EAAC7xF,YAAA,CAAAynF,oBAAA;IAAAtwF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA2zC,oBAAA,CAAA3wF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC8rB,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAACU,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG3sB,MAAM,CAAC2sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG5sB,MAAM,CAAC4sB,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAs4C,oBAAA;AAAA,EApCiC/9C,QAAQ;AAAA/yC,OAAA,CAAA8wF,oBAAA,GAAAA,oBAAA;AAwC3C,IAAMsK,MAAM,GAAG,0DAA0D;AAEzE,IAAMC,QAAQ,GAAG,imCAAimC;AAElnC,SAASC,cAAcA,CAAE1nB,SAAS,EAAE2nB,QAAQ,EAAEC,aAAa,EAAG;EAAA,IAAAC,WAAA;EAE7D,IAAIC,QAAQ,GAAG,IAAIjpC,OAAO,CAAC,CAAC;EAE5B,IAAMkpC,cAAc,GAAG,IAAI7+E,OAAO,CAAC,CAAC;IACnC8+E,aAAa,GAAG,IAAI9+E,OAAO,CAAC,CAAC;IAE7B++E,SAAS,GAAG,IAAIxuE,OAAO,CAAC,CAAC;IAEzByuE,cAAc,GAAG,IAAIjL,iBAAiB,CAAE;MAAErD,YAAY,EAAEh6E;IAAiB,CAAE,CAAC;IAC5EuoF,iBAAiB,GAAG,IAAIjL,oBAAoB,CAAC,CAAC;IAE9CkL,cAAc,GAAG,CAAC,CAAC;IAEnBC,eAAe,GAAGT,aAAa,CAAC3rB,cAAc;EAE/C,IAAM/6B,UAAU,IAAA2mD,WAAA,OAAAn0E,eAAA,CAAAm0E,WAAA,EAAOtwF,SAAS,EAAIC,QAAQ,GAAAkc,eAAA,CAAAm0E,WAAA,EAAIrwF,QAAQ,EAAID,SAAS,GAAAmc,eAAA,CAAAm0E,WAAA,EAAIpwF,UAAU,EAAIA,UAAU,GAAAowF,WAAA,CAAE;EAEnG,IAAMS,sBAAsB,GAAG,IAAI9wC,cAAc,CAAE;IAClDK,OAAO,EAAE;MACR0wC,WAAW,EAAE;IACd,CAAC;IACD1xC,QAAQ,EAAE;MACT2xC,WAAW,EAAE;QAAE17F,KAAK,EAAE;MAAK,CAAC;MAC5B27F,UAAU,EAAE;QAAE37F,KAAK,EAAE,IAAIoc,OAAO,CAAC;MAAE,CAAC;MACpC4c,MAAM,EAAE;QAAEh5B,KAAK,EAAE;MAAI;IACtB,CAAC;IAEDirD,YAAY,EAAEyvC,MAAM;IACpBxvC,cAAc,EAAEyvC;EAEjB,CAAE,CAAC;EAEH,IAAMiB,wBAAwB,GAAGJ,sBAAsB,CAAC1+E,KAAK,CAAC,CAAC;EAC/D8+E,wBAAwB,CAAC7wC,OAAO,CAAC8wC,eAAe,GAAG,CAAC;EAEpD,IAAMC,aAAa,GAAG,IAAI56C,cAAc,CAAC,CAAC;EAC1C46C,aAAa,CAAC95C,YAAY,CACzB,UAAU,EACV,IAAIvE,eAAe,CAClB,IAAI/hC,YAAY,CAAE,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAG,CAAC,EAC/D,CACD,CACD,CAAC;EAED,IAAMqgF,cAAc,GAAG,IAAIp1C,IAAI,CAAEm1C,aAAa,EAAEN,sBAAuB,CAAC;EAExE,IAAM/yC,KAAK,GAAG,IAAI;EAElB,IAAI,CAACzhC,OAAO,GAAG,KAAK;EAEpB,IAAI,CAACg1E,UAAU,GAAG,IAAI;EACtB,IAAI,CAAC5vE,WAAW,GAAG,KAAK;EAExB,IAAI,CAACvqB,IAAI,GAAGyI,YAAY;EACxB,IAAI2xF,aAAa,GAAG,IAAI,CAACp6F,IAAI;EAE7B,IAAI,CAAC6tD,MAAM,GAAG,UAAWvE,MAAM,EAAEiE,KAAK,EAAE33B,MAAM,EAAG;IAEhD,IAAKgxB,KAAK,CAACzhC,OAAO,KAAK,KAAK,EAAG;IAC/B,IAAKyhC,KAAK,CAACuzC,UAAU,KAAK,KAAK,IAAIvzC,KAAK,CAACr8B,WAAW,KAAK,KAAK,EAAG;IAEjE,IAAK++B,MAAM,CAACxlD,MAAM,KAAK,CAAC,EAAG;IAE3B,IAAM2pD,mBAAmB,GAAG4jB,SAAS,CAAC9oB,eAAe,CAAC,CAAC;IACvD,IAAM8xC,cAAc,GAAGhpB,SAAS,CAACipB,iBAAiB,CAAC,CAAC;IACpD,IAAMC,iBAAiB,GAAGlpB,SAAS,CAACmpB,oBAAoB,CAAC,CAAC;IAE1D,IAAMC,MAAM,GAAGppB,SAAS,CAACxvE,KAAK;;IAE9B;IACA44F,MAAM,CAACC,WAAW,CAAE1xF,UAAW,CAAC;IAChCyxF,MAAM,CAAC9nC,OAAO,CAACluC,KAAK,CAACqiD,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAC3C2zB,MAAM,CAAC9nC,OAAO,CAACzlC,KAAK,CAACytE,OAAO,CAAE,IAAK,CAAC;IACpCF,MAAM,CAACG,cAAc,CAAE,KAAM,CAAC;;IAE9B;;IAEA,IAAMC,KAAK,GAAKT,aAAa,KAAKzxF,YAAY,IAAI,IAAI,CAAC3I,IAAI,KAAK2I,YAAc;IAC9E,IAAMmyF,OAAO,GAAKV,aAAa,KAAKzxF,YAAY,IAAI,IAAI,CAAC3I,IAAI,KAAK2I,YAAc;;IAEhF;;IAEA,KAAM,IAAI5E,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGy5B,MAAM,CAACxlD,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;MAEnD,IAAMswF,KAAK,GAAG/qC,MAAM,CAAEvlD,CAAC,CAAE;MACzB,IAAM2gE,MAAM,GAAG2vB,KAAK,CAAC3vB,MAAM;MAE3B,IAAKA,MAAM,KAAKliE,SAAS,EAAG;QAE3BkX,OAAO,CAACC,IAAI,CAAE,uBAAuB,EAAE06E,KAAK,EAAE,gBAAiB,CAAC;QAChE;MAED;MAEA,IAAK3vB,MAAM,CAACy1B,UAAU,KAAK,KAAK,IAAIz1B,MAAM,CAACn6C,WAAW,KAAK,KAAK,EAAG;MAEnE6uE,cAAc,CAACl+E,IAAI,CAAEwpD,MAAM,CAACmyB,OAAQ,CAAC;MAErC,IAAMkE,kBAAkB,GAAGr2B,MAAM,CAACs2B,eAAe,CAAC,CAAC;MAEnD5B,cAAc,CAACz9E,QAAQ,CAAEo/E,kBAAmB,CAAC;MAE7C1B,aAAa,CAACn+E,IAAI,CAAEwpD,MAAM,CAACmyB,OAAQ,CAAC;MAEpC,IAAKuC,cAAc,CAACjjF,CAAC,GAAGujF,eAAe,IAAIN,cAAc,CAAC3iF,CAAC,GAAGijF,eAAe,EAAG;QAE/E,IAAKN,cAAc,CAACjjF,CAAC,GAAGujF,eAAe,EAAG;UAEzCL,aAAa,CAACljF,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAEmiF,eAAe,GAAGqB,kBAAkB,CAAC5kF,CAAE,CAAC;UACtEijF,cAAc,CAACjjF,CAAC,GAAGkjF,aAAa,CAACljF,CAAC,GAAG4kF,kBAAkB,CAAC5kF,CAAC;UACzDuuD,MAAM,CAACmyB,OAAO,CAAC1gF,CAAC,GAAGkjF,aAAa,CAACljF,CAAC;QAEnC;QAEA,IAAKijF,cAAc,CAAC3iF,CAAC,GAAGijF,eAAe,EAAG;UAEzCL,aAAa,CAAC5iF,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAEmiF,eAAe,GAAGqB,kBAAkB,CAACtkF,CAAE,CAAC;UACtE2iF,cAAc,CAAC3iF,CAAC,GAAG4iF,aAAa,CAAC5iF,CAAC,GAAGskF,kBAAkB,CAACtkF,CAAC;UACzDiuD,MAAM,CAACmyB,OAAO,CAACpgF,CAAC,GAAG4iF,aAAa,CAAC5iF,CAAC;QAEnC;MAED;MAEA,IAAKiuD,MAAM,CAACvvB,GAAG,KAAK,IAAI,IAAI0lD,KAAK,KAAK,IAAI,IAAIC,OAAO,KAAK,IAAI,EAAG;QAEhE,IAAMG,IAAI,GAAK,IAAI,CAACj7F,IAAI,KAAK2I,YAAY,GAAK;UAAEmgB,SAAS,EAAE9c,aAAa;UAAE6c,SAAS,EAAE7c;QAAc,CAAC,GAAG,CAAC,CAAC;QAEzG,IAAK04D,MAAM,CAACvvB,GAAG,KAAK,IAAI,EAAG;UAE1BuvB,MAAM,CAACvvB,GAAG,CAACzqB,OAAO,CAAC,CAAC;QAErB;QAEAg6C,MAAM,CAACvvB,GAAG,GAAG,IAAItnB,iBAAiB,CAAEurE,cAAc,CAACjjF,CAAC,EAAEijF,cAAc,CAAC3iF,CAAC,EAAEwkF,IAAK,CAAC;QAC9Ev2B,MAAM,CAACvvB,GAAG,CAAC7nB,OAAO,CAACjpB,IAAI,GAAGgwF,KAAK,CAAChwF,IAAI,GAAG,YAAY;QAEnDqgE,MAAM,CAAC9uC,MAAM,CAACs1B,sBAAsB,CAAC,CAAC;MAEvC;MAEAmmB,SAAS,CAACzjB,eAAe,CAAE8W,MAAM,CAACvvB,GAAI,CAAC;MACvCk8B,SAAS,CAAChnC,KAAK,CAAC,CAAC;MAEjB,IAAM6wD,aAAa,GAAGx2B,MAAM,CAACy2B,gBAAgB,CAAC,CAAC;MAE/C,KAAM,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGF,aAAa,EAAEE,EAAE,EAAG,EAAG;QAE7C,IAAM/tE,QAAQ,GAAGq3C,MAAM,CAAC22B,WAAW,CAAED,EAAG,CAAC;QAEzC9B,SAAS,CAAC7/E,GAAG,CACZ4/E,aAAa,CAACljF,CAAC,GAAGkX,QAAQ,CAAClX,CAAC,EAC5BkjF,aAAa,CAAC5iF,CAAC,GAAG4W,QAAQ,CAAC5W,CAAC,EAC5B4iF,aAAa,CAACljF,CAAC,GAAGkX,QAAQ,CAACrC,CAAC,EAC5BquE,aAAa,CAAC5iF,CAAC,GAAG4W,QAAQ,CAACpC,CAC5B,CAAC;QAEDwvE,MAAM,CAACptE,QAAQ,CAAEisE,SAAU,CAAC;QAE5B50B,MAAM,CAACsyB,cAAc,CAAE3C,KAAK,EAAE+G,EAAG,CAAC;QAElCjC,QAAQ,GAAGz0B,MAAM,CAAC42B,UAAU,CAAC,CAAC;QAE9BC,YAAY,CAAEhuC,KAAK,EAAE33B,MAAM,EAAE8uC,MAAM,CAAC9uC,MAAM,EAAEy+D,KAAK,EAAE,IAAI,CAACr0F,IAAK,CAAC;MAE/D;;MAEA;;MAEA,IAAK0kE,MAAM,CAAC82B,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAACx7F,IAAI,KAAK2I,YAAY,EAAG;QAEvE8yF,OAAO,CAAE/2B,MAAM,EAAE9uC,MAAO,CAAC;MAE1B;MAEA8uC,MAAM,CAACn6C,WAAW,GAAG,KAAK;IAE3B;IAEA6vE,aAAa,GAAG,IAAI,CAACp6F,IAAI;IAEzB4mD,KAAK,CAACr8B,WAAW,GAAG,KAAK;IAEzB8mD,SAAS,CAACzjB,eAAe,CAAEH,mBAAmB,EAAE4sC,cAAc,EAAEE,iBAAkB,CAAC;EAEpF,CAAC;EAED,SAASkB,OAAOA,CAAE/2B,MAAM,EAAE9uC,MAAM,EAAG;IAElC,IAAMiE,QAAQ,GAAGm/D,QAAQ,CAACvoE,MAAM,CAAEypE,cAAe,CAAC;IAElD,IAAKP,sBAAsB,CAACzwC,OAAO,CAAC0wC,WAAW,KAAKl1B,MAAM,CAACg3B,WAAW,EAAG;MAExE/B,sBAAsB,CAACzwC,OAAO,CAAC0wC,WAAW,GAAGl1B,MAAM,CAACg3B,WAAW;MAC/D3B,wBAAwB,CAAC7wC,OAAO,CAAC0wC,WAAW,GAAGl1B,MAAM,CAACg3B,WAAW;MAEjE/B,sBAAsB,CAACpvE,WAAW,GAAG,IAAI;MACzCwvE,wBAAwB,CAACxvE,WAAW,GAAG,IAAI;IAE5C;IAEA,IAAKm6C,MAAM,CAACi3B,OAAO,KAAK,IAAI,EAAG;MAE9Bj3B,MAAM,CAACi3B,OAAO,GAAG,IAAI9tE,iBAAiB,CAAEurE,cAAc,CAACjjF,CAAC,EAAEijF,cAAc,CAAC3iF,CAAE,CAAC;IAE7E;;IAEA;;IAEAkjF,sBAAsB,CAACzxC,QAAQ,CAAC2xC,WAAW,CAAC17F,KAAK,GAAGumE,MAAM,CAACvvB,GAAG,CAAC7nB,OAAO;IACtEqsE,sBAAsB,CAACzxC,QAAQ,CAAC4xC,UAAU,CAAC37F,KAAK,GAAGumE,MAAM,CAACmyB,OAAO;IACjE8C,sBAAsB,CAACzxC,QAAQ,CAAC/wB,MAAM,CAACh5B,KAAK,GAAGumE,MAAM,CAACvtC,MAAM;IAC5Dk6C,SAAS,CAACzjB,eAAe,CAAE8W,MAAM,CAACi3B,OAAQ,CAAC;IAC3CtqB,SAAS,CAAChnC,KAAK,CAAC,CAAC;IACjBgnC,SAAS,CAACuqB,kBAAkB,CAAEhmE,MAAM,EAAE,IAAI,EAAEiE,QAAQ,EAAE8/D,sBAAsB,EAAEO,cAAc,EAAE,IAAK,CAAC;;IAEpG;;IAEAH,wBAAwB,CAAC7xC,QAAQ,CAAC2xC,WAAW,CAAC17F,KAAK,GAAGumE,MAAM,CAACi3B,OAAO,CAACruE,OAAO;IAC5EysE,wBAAwB,CAAC7xC,QAAQ,CAAC4xC,UAAU,CAAC37F,KAAK,GAAGumE,MAAM,CAACmyB,OAAO;IACnEkD,wBAAwB,CAAC7xC,QAAQ,CAAC/wB,MAAM,CAACh5B,KAAK,GAAGumE,MAAM,CAACvtC,MAAM;IAC9Dk6C,SAAS,CAACzjB,eAAe,CAAE8W,MAAM,CAACvvB,GAAI,CAAC;IACvCk8B,SAAS,CAAChnC,KAAK,CAAC,CAAC;IACjBgnC,SAAS,CAACuqB,kBAAkB,CAAEhmE,MAAM,EAAE,IAAI,EAAEiE,QAAQ,EAAEkgE,wBAAwB,EAAEG,cAAc,EAAE,IAAK,CAAC;EAEvG;EAEA,SAAS2B,gBAAgBA,CAAE92F,MAAM,EAAEqoC,QAAQ,EAAEinD,KAAK,EAAEr0F,IAAI,EAAG;IAE1D,IAAIqB,MAAM,GAAG,IAAI;IAEjB,IAAMy6F,cAAc,GAAKzH,KAAK,CAAC6C,YAAY,KAAK,IAAI,GAAKnyF,MAAM,CAACg3F,sBAAsB,GAAGh3F,MAAM,CAACi3F,mBAAmB;IAEnH,IAAKF,cAAc,KAAKt5F,SAAS,EAAG;MAEnCnB,MAAM,GAAGy6F,cAAc;IAExB,CAAC,MAAM;MAENz6F,MAAM,GAAKgzF,KAAK,CAAC6C,YAAY,KAAK,IAAI,GAAKsC,iBAAiB,GAAGD,cAAc;MAE7E,IAAOloB,SAAS,CAAC5C,oBAAoB,IAAIrhC,QAAQ,CAACkF,WAAW,KAAK,IAAI,IAAIzqB,KAAK,CAACC,OAAO,CAAEslB,QAAQ,CAACgF,cAAe,CAAC,IAAIhF,QAAQ,CAACgF,cAAc,CAACtuC,MAAM,KAAK,CAAC,IACvJspC,QAAQ,CAAC2I,eAAe,IAAI3I,QAAQ,CAAC4I,iBAAiB,KAAK,CAAG,IAC9D5I,QAAQ,CAACiI,QAAQ,IAAIjI,QAAQ,CAACoK,SAAS,GAAG,CAAG,IAC7CpK,QAAQ,CAAC+H,GAAG,IAAI/H,QAAQ,CAACoK,SAAS,GAAG,CAAG,EAAG;QAE7C;QACA;;QAEA,IAAMykD,IAAI,GAAG56F,MAAM,CAACqU,IAAI;UAAEwmF,IAAI,GAAG9uD,QAAQ,CAAC13B,IAAI;QAE9C,IAAIymF,mBAAmB,GAAG1C,cAAc,CAAEwC,IAAI,CAAE;QAEhD,IAAKE,mBAAmB,KAAK35F,SAAS,EAAG;UAExC25F,mBAAmB,GAAG,CAAC,CAAC;UACxB1C,cAAc,CAAEwC,IAAI,CAAE,GAAGE,mBAAmB;QAE7C;QAEA,IAAIC,cAAc,GAAGD,mBAAmB,CAAED,IAAI,CAAE;QAEhD,IAAKE,cAAc,KAAK55F,SAAS,EAAG;UAEnC45F,cAAc,GAAG/6F,MAAM,CAAC4Z,KAAK,CAAC,CAAC;UAC/BkhF,mBAAmB,CAAED,IAAI,CAAE,GAAGE,cAAc;QAE7C;QAEA/6F,MAAM,GAAG+6F,cAAc;MAExB;IAED;IAEA/6F,MAAM,CAACmnC,OAAO,GAAG4E,QAAQ,CAAC5E,OAAO;IACjCnnC,MAAM,CAACo2C,SAAS,GAAGrK,QAAQ,CAACqK,SAAS;IAErC,IAAKz3C,IAAI,KAAK2I,YAAY,EAAG;MAE5BtH,MAAM,CAACyvC,IAAI,GAAK1D,QAAQ,CAACmF,UAAU,KAAK,IAAI,GAAKnF,QAAQ,CAACmF,UAAU,GAAGnF,QAAQ,CAAC0D,IAAI;IAErF,CAAC,MAAM;MAENzvC,MAAM,CAACyvC,IAAI,GAAK1D,QAAQ,CAACmF,UAAU,KAAK,IAAI,GAAKnF,QAAQ,CAACmF,UAAU,GAAGA,UAAU,CAAEnF,QAAQ,CAAC0D,IAAI,CAAE;IAEnG;IAEAzvC,MAAM,CAACg0C,QAAQ,GAAGjI,QAAQ,CAACiI,QAAQ;IACnCh0C,MAAM,CAACm2C,SAAS,GAAGpK,QAAQ,CAACoK,SAAS;IACrCn2C,MAAM,CAAC8zC,GAAG,GAAG/H,QAAQ,CAAC+H,GAAG;IAEzB9zC,MAAM,CAACixC,WAAW,GAAGlF,QAAQ,CAACkF,WAAW;IACzCjxC,MAAM,CAAC+wC,cAAc,GAAGhF,QAAQ,CAACgF,cAAc;IAC/C/wC,MAAM,CAACgxC,gBAAgB,GAAGjF,QAAQ,CAACiF,gBAAgB;IAEnDhxC,MAAM,CAAC00C,eAAe,GAAG3I,QAAQ,CAAC2I,eAAe;IACjD10C,MAAM,CAAC20C,iBAAiB,GAAG5I,QAAQ,CAAC4I,iBAAiB;IACrD30C,MAAM,CAAC40C,gBAAgB,GAAG7I,QAAQ,CAAC6I,gBAAgB;IAEnD50C,MAAM,CAACq2C,kBAAkB,GAAGtK,QAAQ,CAACsK,kBAAkB;IACvDr2C,MAAM,CAACg2C,SAAS,GAAGjK,QAAQ,CAACiK,SAAS;IAErC,IAAKg9C,KAAK,CAAC6C,YAAY,KAAK,IAAI,IAAI71F,MAAM,CAACu3F,sBAAsB,KAAK,IAAI,EAAG;MAE5E,IAAMtpB,kBAAkB,GAAG+B,SAAS,CAAC5P,UAAU,CAAC/mD,GAAG,CAAErZ,MAAO,CAAC;MAC7DiuE,kBAAkB,CAAC+kB,KAAK,GAAGA,KAAK;IAEjC;IAEA,OAAOhzF,MAAM;EAEd;EAEA,SAASk6F,YAAYA,CAAEx2F,MAAM,EAAE6wB,MAAM,EAAEymE,YAAY,EAAEhI,KAAK,EAAEr0F,IAAI,EAAG;IAElE,IAAK+E,MAAM,CAACyjC,OAAO,KAAK,KAAK,EAAG;IAEhC,IAAMA,OAAO,GAAGzjC,MAAM,CAAC0hC,MAAM,CAACtgB,IAAI,CAAEyP,MAAM,CAAC6Q,MAAO,CAAC;IAEnD,IAAK+B,OAAO,KAAMzjC,MAAM,CAAC4nC,MAAM,IAAI5nC,MAAM,CAAC6nC,MAAM,IAAI7nC,MAAM,CAAC8nC,QAAQ,CAAE,EAAG;MAEvE,IAAK,CAAE9nC,MAAM,CAAC0jC,UAAU,IAAM1jC,MAAM,CAAC2jC,aAAa,IAAI1oC,IAAI,KAAK2I,YAAc,MAAQ,CAAE5D,MAAM,CAAC4jC,aAAa,IAAIwwD,QAAQ,CAAC3nC,gBAAgB,CAAEzsD,MAAO,CAAC,CAAE,EAAG;QAEtJA,MAAM,CAACmjC,eAAe,CAACpoB,gBAAgB,CAAEu8E,YAAY,CAACxmE,kBAAkB,EAAE9wB,MAAM,CAACkxB,WAAY,CAAC;QAE9F,IAAM4D,QAAQ,GAAGm/D,QAAQ,CAACvoE,MAAM,CAAE1rB,MAAO,CAAC;QAC1C,IAAMqoC,QAAQ,GAAGroC,MAAM,CAACqoC,QAAQ;QAEhC,IAAKvlB,KAAK,CAACC,OAAO,CAAEslB,QAAS,CAAC,EAAG;UAEhC,IAAMwS,MAAM,GAAG/lB,QAAQ,CAAC+lB,MAAM;UAE9B,KAAM,IAAI08C,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAG38C,MAAM,CAAC97C,MAAM,EAAEw4F,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;YAEnD,IAAMn6C,KAAK,GAAGvC,MAAM,CAAE08C,CAAC,CAAE;YACzB,IAAMv2C,aAAa,GAAG3Y,QAAQ,CAAE+U,KAAK,CAAC5B,aAAa,CAAE;YAErD,IAAKwF,aAAa,IAAIA,aAAa,CAACvd,OAAO,EAAG;cAE7C,IAAMg0D,aAAa,GAAGX,gBAAgB,CAAE92F,MAAM,EAAEghD,aAAa,EAAEsuC,KAAK,EAAEr0F,IAAK,CAAC;cAE5EqxE,SAAS,CAACuqB,kBAAkB,CAAES,YAAY,EAAE,IAAI,EAAExiE,QAAQ,EAAE2iE,aAAa,EAAEz3F,MAAM,EAAEo9C,KAAM,CAAC;YAE3F;UAED;QAED,CAAC,MAAM,IAAK/U,QAAQ,CAAC5E,OAAO,EAAG;UAE9B,IAAMg0D,eAAa,GAAGX,gBAAgB,CAAE92F,MAAM,EAAEqoC,QAAQ,EAAEinD,KAAK,EAAEr0F,IAAK,CAAC;UAEvEqxE,SAAS,CAACuqB,kBAAkB,CAAES,YAAY,EAAE,IAAI,EAAExiE,QAAQ,EAAE2iE,eAAa,EAAEz3F,MAAM,EAAE,IAAK,CAAC;QAE1F;MAED;IAED;IAEA,IAAMi1B,QAAQ,GAAGj1B,MAAM,CAACi1B,QAAQ;IAEhC,KAAM,IAAIj2B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGmlB,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;MAEnDw3F,YAAY,CAAEvhE,QAAQ,CAAEj2B,CAAC,CAAE,EAAE6xB,MAAM,EAAEymE,YAAY,EAAEhI,KAAK,EAAEr0F,IAAK,CAAC;IAEjE;EAED;AAED;AAEA,SAASy8F,UAAUA,CAAEjqC,EAAE,EAAEhJ,UAAU,EAAEiJ,YAAY,EAAG;EAAA,IAAAiqC,aAAA,EAAAC,WAAA;EAEnD,IAAMjqC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,SAASkqC,WAAWA,CAAA,EAAG;IAEtB,IAAIC,MAAM,GAAG,KAAK;IAElB,IAAMp4E,KAAK,GAAG,IAAIqG,OAAO,CAAC,CAAC;IAC3B,IAAIgyE,gBAAgB,GAAG,IAAI;IAC3B,IAAMC,iBAAiB,GAAG,IAAIjyE,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAEnD,OAAO;MAENkyE,OAAO,EAAE,SAAAA,QAAWC,SAAS,EAAG;QAE/B,IAAKH,gBAAgB,KAAKG,SAAS,IAAI,CAAEJ,MAAM,EAAG;UAEjDrqC,EAAE,CAACyqC,SAAS,CAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAU,CAAC;UAC1DH,gBAAgB,GAAGG,SAAS;QAE7B;MAED,CAAC;MAEDC,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDr2B,QAAQ,EAAE,SAAAA,SAAW1kD,CAAC,EAAEb,CAAC,EAAE3I,CAAC,EAAED,CAAC,EAAEo6B,kBAAkB,EAAG;QAErD,IAAKA,kBAAkB,KAAK,IAAI,EAAG;UAElC3wB,CAAC,IAAIzJ,CAAC;UAAE4I,CAAC,IAAI5I,CAAC;UAAEC,CAAC,IAAID,CAAC;QAEvB;QAEA8L,KAAK,CAAChL,GAAG,CAAE2I,CAAC,EAAEb,CAAC,EAAE3I,CAAC,EAAED,CAAE,CAAC;QAEvB,IAAKokF,iBAAiB,CAACj/E,MAAM,CAAE2G,KAAM,CAAC,KAAK,KAAK,EAAG;UAElD+tC,EAAE,CAAC4T,UAAU,CAAEhkD,CAAC,EAAEb,CAAC,EAAE3I,CAAC,EAAED,CAAE,CAAC;UAC3BokF,iBAAiB,CAAC7hF,IAAI,CAAEuJ,KAAM,CAAC;QAEhC;MAED,CAAC;MAED/gB,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElBm5F,MAAM,GAAG,KAAK;QAEdC,gBAAgB,GAAG,IAAI;QACvBC,iBAAiB,CAACtjF,GAAG,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;MAExC;IAED,CAAC;EAEF;;EAEA,SAAS2jF,WAAWA,CAAA,EAAG;IAEtB,IAAIP,MAAM,GAAG,KAAK;IAElB,IAAIQ,gBAAgB,GAAG,IAAI;IAC3B,IAAIC,gBAAgB,GAAG,IAAI;IAC3B,IAAIC,iBAAiB,GAAG,IAAI;IAE5B,OAAO;MAEN5C,OAAO,EAAE,SAAAA,QAAWjpD,SAAS,EAAG;QAE/B,IAAKA,SAAS,EAAG;UAEhBtL,MAAM,CAAEosB,EAAE,CAACgrC,UAAW,CAAC;QAExB,CAAC,MAAM;UAENj3D,OAAO,CAAEisB,EAAE,CAACgrC,UAAW,CAAC;QAEzB;MAED,CAAC;MAEDR,OAAO,EAAE,SAAAA,QAAWS,SAAS,EAAG;QAE/B,IAAKJ,gBAAgB,KAAKI,SAAS,IAAI,CAAEZ,MAAM,EAAG;UAEjDrqC,EAAE,CAACirC,SAAS,CAAEA,SAAU,CAAC;UACzBJ,gBAAgB,GAAGI,SAAS;QAE7B;MAED,CAAC;MAEDC,OAAO,EAAE,SAAAA,QAAWjsD,SAAS,EAAG;QAE/B,IAAK6rD,gBAAgB,KAAK7rD,SAAS,EAAG;UAErC,QAASA,SAAS;YAEjB,KAAKnnC,UAAU;cAEdkoD,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACmrC,KAAM,CAAC;cACxB;YAED,KAAKpzF,WAAW;cAEfioD,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACorC,MAAO,CAAC;cACzB;YAED,KAAKpzF,SAAS;cAEbgoD,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACqrC,IAAK,CAAC;cACvB;YAED,KAAKpzF,cAAc;cAElB+nD,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACsrC,MAAO,CAAC;cACzB;YAED,KAAKpzF,UAAU;cAEd8nD,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACurC,KAAM,CAAC;cACxB;YAED,KAAKpzF,iBAAiB;cAErB6nD,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACwrC,MAAO,CAAC;cACzB;YAED,KAAKpzF,YAAY;cAEhB4nD,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACyrC,OAAQ,CAAC;cAC1B;YAED,KAAKpzF,aAAa;cAEjB2nD,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAAC0rC,QAAS,CAAC;cAC3B;YAED;cAEC1rC,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACsrC,MAAO,CAAC;UAE3B;UAEAR,gBAAgB,GAAG7rD,SAAS;QAE7B;MAED,CAAC;MAEDyrD,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDr2B,QAAQ,EAAE,SAAAA,SAAW55C,KAAK,EAAG;QAE5B,IAAKqwE,iBAAiB,KAAKrwE,KAAK,EAAG;UAElCslC,EAAE,CAAC2rC,UAAU,CAAEjxE,KAAM,CAAC;UACtBqwE,iBAAiB,GAAGrwE,KAAK;QAE1B;MAED,CAAC;MAEDxpB,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElBm5F,MAAM,GAAG,KAAK;QAEdQ,gBAAgB,GAAG,IAAI;QACvBC,gBAAgB,GAAG,IAAI;QACvBC,iBAAiB,GAAG,IAAI;MAEzB;IAED,CAAC;EAEF;EAEA,SAASa,aAAaA,CAAA,EAAG;IAExB,IAAIvB,MAAM,GAAG,KAAK;IAElB,IAAIwB,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,sBAAsB,GAAG,IAAI;IACjC,IAAIC,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,mBAAmB,GAAG,IAAI;IAE9B,OAAO;MAENjE,OAAO,EAAE,SAAAA,QAAWkE,WAAW,EAAG;QAEjC,IAAK,CAAEhC,MAAM,EAAG;UAEf,IAAKgC,WAAW,EAAG;YAElBz4D,MAAM,CAAEosB,EAAE,CAACssC,YAAa,CAAC;UAE1B,CAAC,MAAM;YAENv4D,OAAO,CAAEisB,EAAE,CAACssC,YAAa,CAAC;UAE3B;QAED;MAED,CAAC;MAED9B,OAAO,EAAE,SAAAA,QAAW+B,WAAW,EAAG;QAEjC,IAAKV,kBAAkB,KAAKU,WAAW,IAAI,CAAElC,MAAM,EAAG;UAErDrqC,EAAE,CAACusC,WAAW,CAAEA,WAAY,CAAC;UAC7BV,kBAAkB,GAAGU,WAAW;QAEjC;MAED,CAAC;MAEDrB,OAAO,EAAE,SAAAA,QAAW7rD,WAAW,EAAEC,UAAU,EAAEitD,WAAW,EAAG;QAE1D,IAAKT,kBAAkB,KAAKzsD,WAAW,IAClC0sD,iBAAiB,KAAKzsD,UAAU,IAChC0sD,sBAAsB,KAAKO,WAAW,EAAG;UAE7CvsC,EAAE,CAAC3gB,WAAW,CAAEA,WAAW,EAAEC,UAAU,EAAEitD,WAAY,CAAC;UAEtDT,kBAAkB,GAAGzsD,WAAW;UAChC0sD,iBAAiB,GAAGzsD,UAAU;UAC9B0sD,sBAAsB,GAAGO,WAAW;QAErC;MAED,CAAC;MAEDC,KAAK,EAAE,SAAAA,MAAWhtD,WAAW,EAAEC,YAAY,EAAEC,YAAY,EAAG;QAE3D,IAAKusD,kBAAkB,KAAKzsD,WAAW,IAClC0sD,mBAAmB,KAAKzsD,YAAY,IACpC0sD,mBAAmB,KAAKzsD,YAAY,EAAG;UAE3CsgB,EAAE,CAACysC,SAAS,CAAEjtD,WAAW,EAAEC,YAAY,EAAEC,YAAa,CAAC;UAEvDusD,kBAAkB,GAAGzsD,WAAW;UAChC0sD,mBAAmB,GAAGzsD,YAAY;UAClC0sD,mBAAmB,GAAGzsD,YAAY;QAEnC;MAED,CAAC;MAEDgrD,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDr2B,QAAQ,EAAE,SAAAA,SAAWjY,OAAO,EAAG;QAE9B,IAAK+vC,mBAAmB,KAAK/vC,OAAO,EAAG;UAEtC2D,EAAE,CAAC0sC,YAAY,CAAErwC,OAAQ,CAAC;UAC1B+vC,mBAAmB,GAAG/vC,OAAO;QAE9B;MAED,CAAC;MAEDnrD,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElBm5F,MAAM,GAAG,KAAK;QAEdwB,kBAAkB,GAAG,IAAI;QACzBC,kBAAkB,GAAG,IAAI;QACzBC,iBAAiB,GAAG,IAAI;QACxBC,sBAAsB,GAAG,IAAI;QAC7BC,kBAAkB,GAAG,IAAI;QACzBC,mBAAmB,GAAG,IAAI;QAC1BC,mBAAmB,GAAG,IAAI;QAC1BC,mBAAmB,GAAG,IAAI;MAE3B;IAED,CAAC;EAEF;;EAEA;;EAEA,IAAMO,WAAW,GAAG,IAAIvC,WAAW,CAAC,CAAC;EACrC,IAAMrvE,WAAW,GAAG,IAAI6vE,WAAW,CAAC,CAAC;EACrC,IAAM5vE,aAAa,GAAG,IAAI4wE,aAAa,CAAC,CAAC;EAEzC,IAAMgB,WAAW,GAAG,IAAIxsC,OAAO,CAAC,CAAC;EACjC,IAAMysC,aAAa,GAAG,IAAIzsC,OAAO,CAAC,CAAC;EAEnC,IAAI0sC,mBAAmB,GAAG,CAAC,CAAC;EAE5B,IAAIC,wBAAwB,GAAG,CAAC,CAAC;EACjC,IAAIC,kBAAkB,GAAG,IAAI5sC,OAAO,CAAC,CAAC;EACtC,IAAI6sC,kBAAkB,GAAG,EAAE;EAE3B,IAAIC,cAAc,GAAG,IAAI;EAEzB,IAAIC,sBAAsB,GAAG,KAAK;EAClC,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,yBAAyB,GAAG,IAAI;EACpC,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,wBAAwB,GAAG,KAAK;EAEpC,IAAIC,gBAAgB,GAAG,IAAI;EAC3B,IAAIC,eAAe,GAAG,IAAI;EAE1B,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,IAAIC,0BAA0B,GAAG,IAAI;EACrC,IAAIC,yBAAyB,GAAG,IAAI;EAEpC,IAAMtzB,WAAW,GAAG1a,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACiuC,gCAAiC,CAAC;EAE1E,IAAIC,kBAAkB,GAAG,KAAK;EAC9B,IAAIp5E,OAAO,GAAG,CAAC;EACf,IAAMq5E,SAAS,GAAGnuC,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACouC,OAAQ,CAAC;EAE/C,IAAKD,SAAS,CAACvsF,OAAO,CAAE,OAAQ,CAAC,KAAK,CAAE,CAAC,EAAG;IAE3CkT,OAAO,GAAGwxB,UAAU,CAAE,aAAa,CAACC,IAAI,CAAE4nD,SAAU,CAAC,CAAE,CAAC,CAAG,CAAC;IAC5DD,kBAAkB,GAAKp5E,OAAO,IAAI,GAAK;EAExC,CAAC,MAAM,IAAKq5E,SAAS,CAACvsF,OAAO,CAAE,WAAY,CAAC,KAAK,CAAE,CAAC,EAAG;IAEtDkT,OAAO,GAAGwxB,UAAU,CAAE,iBAAiB,CAACC,IAAI,CAAE4nD,SAAU,CAAC,CAAE,CAAC,CAAG,CAAC;IAChED,kBAAkB,GAAKp5E,OAAO,IAAI,GAAK;EAExC;EAEA,IAAIu5E,kBAAkB,GAAG,IAAI;EAC7B,IAAIC,oBAAoB,GAAG,CAAC,CAAC;EAE7B,IAAMC,YAAY,GAAGvuC,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACwuC,WAAY,CAAC;EACtD,IAAMC,aAAa,GAAGzuC,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAAC0uC,QAAS,CAAC;EAEpD,IAAMC,cAAc,GAAG,IAAIr2E,OAAO,CAAC,CAAC,CAAC/M,SAAS,CAAEgjF,YAAa,CAAC;EAC9D,IAAMK,eAAe,GAAG,IAAIt2E,OAAO,CAAC,CAAC,CAAC/M,SAAS,CAAEkjF,aAAc,CAAC;EAEhE,SAASI,aAAaA,CAAErhG,IAAI,EAAE0G,MAAM,EAAEgpB,KAAK,EAAE4xE,UAAU,EAAG;IAEzD,IAAMp6E,IAAI,GAAG,IAAIlN,UAAU,CAAE,CAAE,CAAC,CAAC,CAAC;IAClC,IAAMsT,OAAO,GAAGklC,EAAE,CAAC6uC,aAAa,CAAC,CAAC;IAElC7uC,EAAE,CAAC+uC,WAAW,CAAEvhG,IAAI,EAAEstB,OAAQ,CAAC;IAC/BklC,EAAE,CAACgvC,aAAa,CAAExhG,IAAI,EAAEwyD,EAAE,CAACivC,kBAAkB,EAAEjvC,EAAE,CAACkvC,OAAQ,CAAC;IAC3DlvC,EAAE,CAACgvC,aAAa,CAAExhG,IAAI,EAAEwyD,EAAE,CAACmvC,kBAAkB,EAAEnvC,EAAE,CAACkvC,OAAQ,CAAC;IAE3D,KAAM,IAAI39F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2rB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;MAElC,IAAK2uD,QAAQ,KAAM1yD,IAAI,KAAKwyD,EAAE,CAACovC,UAAU,IAAI5hG,IAAI,KAAKwyD,EAAE,CAACqvC,gBAAgB,CAAE,EAAG;QAE7ErvC,EAAE,CAACsvC,UAAU,CAAEp7F,MAAM,EAAE,CAAC,EAAE8rD,EAAE,CAACuvC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAET,UAAU,EAAE,CAAC,EAAE9uC,EAAE,CAACuvC,IAAI,EAAEvvC,EAAE,CAACgB,aAAa,EAAEtsC,IAAK,CAAC;MAE1F,CAAC,MAAM;QAENsrC,EAAE,CAACwvC,UAAU,CAAEt7F,MAAM,GAAG3C,CAAC,EAAE,CAAC,EAAEyuD,EAAE,CAACuvC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEvvC,EAAE,CAACuvC,IAAI,EAAEvvC,EAAE,CAACgB,aAAa,EAAEtsC,IAAK,CAAC;MAElF;IAED;IAEA,OAAOoG,OAAO;EAEf;EAEA,IAAM20E,aAAa,GAAG,CAAC,CAAC;EACxBA,aAAa,CAAEzvC,EAAE,CAAC0vC,UAAU,CAAE,GAAGb,aAAa,CAAE7uC,EAAE,CAAC0vC,UAAU,EAAE1vC,EAAE,CAAC0vC,UAAU,EAAE,CAAE,CAAC;EACjFD,aAAa,CAAEzvC,EAAE,CAAC2vC,gBAAgB,CAAE,GAAGd,aAAa,CAAE7uC,EAAE,CAAC2vC,gBAAgB,EAAE3vC,EAAE,CAAC4vC,2BAA2B,EAAE,CAAE,CAAC;EAE9G,IAAK1vC,QAAQ,EAAG;IAEfuvC,aAAa,CAAEzvC,EAAE,CAACqvC,gBAAgB,CAAE,GAAGR,aAAa,CAAE7uC,EAAE,CAACqvC,gBAAgB,EAAErvC,EAAE,CAACqvC,gBAAgB,EAAE,CAAC,EAAE,CAAE,CAAC;IACtGI,aAAa,CAAEzvC,EAAE,CAACovC,UAAU,CAAE,GAAGP,aAAa,CAAE7uC,EAAE,CAACovC,UAAU,EAAEpvC,EAAE,CAACovC,UAAU,EAAE,CAAC,EAAE,CAAE,CAAC;EAErF;;EAEA;;EAEAzC,WAAW,CAACr4B,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;EAClCv5C,WAAW,CAACu5C,QAAQ,CAAE,CAAE,CAAC;EACzBt5C,aAAa,CAACs5C,QAAQ,CAAE,CAAE,CAAC;EAE3B1gC,MAAM,CAAEosB,EAAE,CAACgrC,UAAW,CAAC;EACvBjwE,WAAW,CAACmwE,OAAO,CAAEjzF,cAAe,CAAC;EAErC43F,YAAY,CAAE,KAAM,CAAC;EACrBC,WAAW,CAAEj6F,YAAa,CAAC;EAC3B+9B,MAAM,CAAEosB,EAAE,CAAC+vC,SAAU,CAAC;EAEtB7H,WAAW,CAAE1xF,UAAW,CAAC;;EAEzB;;EAEA,SAASo9B,MAAMA,CAAEsE,EAAE,EAAG;IAErB,IAAK40D,mBAAmB,CAAE50D,EAAE,CAAE,KAAK,IAAI,EAAG;MAEzC8nB,EAAE,CAACpsB,MAAM,CAAEsE,EAAG,CAAC;MACf40D,mBAAmB,CAAE50D,EAAE,CAAE,GAAG,IAAI;IAEjC;EAED;EAEA,SAASnE,OAAOA,CAAEmE,EAAE,EAAG;IAEtB,IAAK40D,mBAAmB,CAAE50D,EAAE,CAAE,KAAK,KAAK,EAAG;MAE1C8nB,EAAE,CAACjsB,OAAO,CAAEmE,EAAG,CAAC;MAChB40D,mBAAmB,CAAE50D,EAAE,CAAE,GAAG,KAAK;IAElC;EAED;EAEA,SAAS83D,eAAeA,CAAE97F,MAAM,EAAE+7F,WAAW,EAAG;IAE/C,IAAKlD,wBAAwB,CAAE74F,MAAM,CAAE,KAAK+7F,WAAW,EAAG;MAEzDjwC,EAAE,CAACgwC,eAAe,CAAE97F,MAAM,EAAE+7F,WAAY,CAAC;MAEzClD,wBAAwB,CAAE74F,MAAM,CAAE,GAAG+7F,WAAW;MAEhD,IAAK/vC,QAAQ,EAAG;QAEf;;QAEA,IAAKhsD,MAAM,KAAK8rD,EAAE,CAACkwC,gBAAgB,EAAG;UAErCnD,wBAAwB,CAAE/sC,EAAE,CAACmwC,WAAW,CAAE,GAAGF,WAAW;QAEzD;QAEA,IAAK/7F,MAAM,KAAK8rD,EAAE,CAACmwC,WAAW,EAAG;UAEhCpD,wBAAwB,CAAE/sC,EAAE,CAACkwC,gBAAgB,CAAE,GAAGD,WAAW;QAE9D;MAED;MAEA,OAAO,IAAI;IAEZ;IAEA,OAAO,KAAK;EAEb;EAEA,SAAS94C,WAAWA,CAAE2C,YAAY,EAAEm2C,WAAW,EAAG;IAEjD,IAAI94C,WAAW,GAAG81C,kBAAkB;IAEpC,IAAIl1E,WAAW,GAAG,KAAK;IAEvB,IAAK+hC,YAAY,EAAG;MAEnB3C,WAAW,GAAG61C,kBAAkB,CAAC9kF,GAAG,CAAE+nF,WAAY,CAAC;MAEnD,IAAK94C,WAAW,KAAKnnD,SAAS,EAAG;QAEhCmnD,WAAW,GAAG,EAAE;QAChB61C,kBAAkB,CAAC/lF,GAAG,CAAEgpF,WAAW,EAAE94C,WAAY,CAAC;MAEnD;MAEA,IAAK2C,YAAY,CAAC18B,4BAA4B,EAAG;QAEhD,IAAMpF,QAAQ,GAAG8hC,YAAY,CAACh/B,OAAO;QAErC,IAAKq8B,WAAW,CAAC7lD,MAAM,KAAK0mB,QAAQ,CAAC1mB,MAAM,IAAI6lD,WAAW,CAAE,CAAC,CAAE,KAAK6I,EAAE,CAACowC,iBAAiB,EAAG;UAE1F,KAAM,IAAI7+F,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGrF,QAAQ,CAAC1mB,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;YAErD4lD,WAAW,CAAE5lD,CAAC,CAAE,GAAGyuD,EAAE,CAACowC,iBAAiB,GAAG7+F,CAAC;UAE5C;UAEA4lD,WAAW,CAAC7lD,MAAM,GAAG0mB,QAAQ,CAAC1mB,MAAM;UAEpCymB,WAAW,GAAG,IAAI;QAEnB;MAED,CAAC,MAAM;QAEN,IAAKo/B,WAAW,CAAE,CAAC,CAAE,KAAK6I,EAAE,CAACowC,iBAAiB,EAAG;UAEhDj5C,WAAW,CAAE,CAAC,CAAE,GAAG6I,EAAE,CAACowC,iBAAiB;UAEvCr4E,WAAW,GAAG,IAAI;QAEnB;MAED;IAED,CAAC,MAAM;MAEN,IAAKo/B,WAAW,CAAE,CAAC,CAAE,KAAK6I,EAAE,CAACqwC,IAAI,EAAG;QAEnCl5C,WAAW,CAAE,CAAC,CAAE,GAAG6I,EAAE,CAACqwC,IAAI;QAE1Bt4E,WAAW,GAAG,IAAI;MAEnB;IAED;IAEA,IAAKA,WAAW,EAAG;MAElB,IAAKkoC,YAAY,CAACC,QAAQ,EAAG;QAE5BF,EAAE,CAAC7I,WAAW,CAAEA,WAAY,CAAC;MAE9B,CAAC,MAAM;QAENH,UAAU,CAAC9uC,GAAG,CAAE,oBAAqB,CAAC,CAACooF,gBAAgB,CAAEn5C,WAAY,CAAC;MAEvE;IAED;EAGD;EAEA,SAASo5C,UAAUA,CAAEz6B,OAAO,EAAG;IAE9B,IAAKo3B,cAAc,KAAKp3B,OAAO,EAAG;MAEjC9V,EAAE,CAACuwC,UAAU,CAAEz6B,OAAQ,CAAC;MAExBo3B,cAAc,GAAGp3B,OAAO;MAExB,OAAO,IAAI;IAEZ;IAEA,OAAO,KAAK;EAEb;EAEA,IAAM06B,YAAY,IAAAtG,aAAA,OAAA33E,eAAA,CAAA23E,aAAA,EACfpzF,WAAW,EAAIkpD,EAAE,CAACywC,QAAQ,GAAAl+E,eAAA,CAAA23E,aAAA,EAC1BnzF,gBAAgB,EAAIipD,EAAE,CAAC0wC,aAAa,GAAAn+E,eAAA,CAAA23E,aAAA,EACpClzF,uBAAuB,EAAIgpD,EAAE,CAAC2wC,qBAAqB,GAAAzG,aAAA,CACrD;EAED,IAAKhqC,QAAQ,EAAG;IAEfswC,YAAY,CAAEv5F,WAAW,CAAE,GAAG+oD,EAAE,CAAC4wC,GAAG;IACpCJ,YAAY,CAAEt5F,WAAW,CAAE,GAAG8oD,EAAE,CAAC6wC,GAAG;EAErC,CAAC,MAAM;IAEN,IAAMv7B,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,kBAAmB,CAAC;IAEtD,IAAKotD,SAAS,KAAK,IAAI,EAAG;MAEzBk7B,YAAY,CAAEv5F,WAAW,CAAE,GAAGq+D,SAAS,CAACw7B,OAAO;MAC/CN,YAAY,CAAEt5F,WAAW,CAAE,GAAGo+D,SAAS,CAACy7B,OAAO;IAEhD;EAED;EAEA,IAAMC,UAAU,IAAA7G,WAAA,OAAA53E,eAAA,CAAA43E,WAAA,EACbhzF,UAAU,EAAI6oD,EAAE,CAACixC,IAAI,GAAA1+E,eAAA,CAAA43E,WAAA,EACrB/yF,SAAS,EAAI4oD,EAAE,CAACkxC,GAAG,GAAA3+E,eAAA,CAAA43E,WAAA,EACnB9yF,cAAc,EAAI2oD,EAAE,CAACmxC,SAAS,GAAA5+E,eAAA,CAAA43E,WAAA,EAC9B5yF,cAAc,EAAIyoD,EAAE,CAACoxC,SAAS,GAAA7+E,eAAA,CAAA43E,WAAA,EAC9BtyF,sBAAsB,EAAImoD,EAAE,CAACqxC,kBAAkB,GAAA9+E,eAAA,CAAA43E,WAAA,EAC/CxyF,cAAc,EAAIqoD,EAAE,CAACsxC,SAAS,GAAA/+E,eAAA,CAAA43E,WAAA,EAC9B1yF,cAAc,EAAIuoD,EAAE,CAACuxC,SAAS,GAAAh/E,eAAA,CAAA43E,WAAA,EAC9B7yF,sBAAsB,EAAI0oD,EAAE,CAACwxC,mBAAmB,GAAAj/E,eAAA,CAAA43E,WAAA,EAChD3yF,sBAAsB,EAAIwoD,EAAE,CAACyxC,mBAAmB,GAAAl/E,eAAA,CAAA43E,WAAA,EAChDvyF,sBAAsB,EAAIooD,EAAE,CAAC0xC,mBAAmB,GAAAn/E,eAAA,CAAA43E,WAAA,EAChDzyF,sBAAsB,EAAIsoD,EAAE,CAAC2xC,mBAAmB,GAAAxH,WAAA,CAClD;EAED,SAASjC,WAAWA,CAAE7pD,QAAQ,EAAEQ,aAAa,EAAEF,QAAQ,EAAEC,QAAQ,EAAEI,kBAAkB,EAAEF,aAAa,EAAEC,aAAa,EAAEwB,kBAAkB,EAAG;IAEzI,IAAKlC,QAAQ,KAAK7nC,UAAU,EAAG;MAE9B,IAAK22F,sBAAsB,KAAK,IAAI,EAAG;QAEtCp5D,OAAO,CAAEisB,EAAE,CAAC4xC,KAAM,CAAC;QACnBzE,sBAAsB,GAAG,KAAK;MAE/B;MAEA;IAED;IAEA,IAAKA,sBAAsB,KAAK,KAAK,EAAG;MAEvCv5D,MAAM,CAAEosB,EAAE,CAAC4xC,KAAM,CAAC;MAClBzE,sBAAsB,GAAG,IAAI;IAE9B;IAEA,IAAK9uD,QAAQ,KAAKxnC,cAAc,EAAG;MAElC,IAAKwnC,QAAQ,KAAK+uD,eAAe,IAAI7sD,kBAAkB,KAAKotD,wBAAwB,EAAG;QAEtF,IAAKN,oBAAoB,KAAKv2F,WAAW,IAAI02F,yBAAyB,KAAK12F,WAAW,EAAG;UAExFkpD,EAAE,CAACnhB,aAAa,CAAEmhB,EAAE,CAACywC,QAAS,CAAC;UAE/BpD,oBAAoB,GAAGv2F,WAAW;UAClC02F,yBAAyB,GAAG12F,WAAW;QAExC;QAEA,IAAKypC,kBAAkB,EAAG;UAEzB,QAASlC,QAAQ;YAEhB,KAAK5nC,cAAc;cAClBupD,EAAE,CAAC6xC,iBAAiB,CAAE7xC,EAAE,CAACkxC,GAAG,EAAElxC,EAAE,CAACyxC,mBAAmB,EAAEzxC,EAAE,CAACkxC,GAAG,EAAElxC,EAAE,CAACyxC,mBAAoB,CAAC;cACtF;YAED,KAAK/6F,gBAAgB;cACpBspD,EAAE,CAAC8xC,SAAS,CAAE9xC,EAAE,CAACkxC,GAAG,EAAElxC,EAAE,CAACkxC,GAAI,CAAC;cAC9B;YAED,KAAKv6F,mBAAmB;cACvBqpD,EAAE,CAAC6xC,iBAAiB,CAAE7xC,EAAE,CAACixC,IAAI,EAAEjxC,EAAE,CAACwxC,mBAAmB,EAAExxC,EAAE,CAACixC,IAAI,EAAEjxC,EAAE,CAACkxC,GAAI,CAAC;cACxE;YAED,KAAKt6F,gBAAgB;cACpBopD,EAAE,CAAC6xC,iBAAiB,CAAE7xC,EAAE,CAACixC,IAAI,EAAEjxC,EAAE,CAACmxC,SAAS,EAAEnxC,EAAE,CAACixC,IAAI,EAAEjxC,EAAE,CAACoxC,SAAU,CAAC;cACpE;YAED;cACClqF,OAAO,CAAChY,KAAK,CAAE,sCAAsC,EAAEmvC,QAAS,CAAC;cACjE;UAEF;QAED,CAAC,MAAM;UAEN,QAASA,QAAQ;YAEhB,KAAK5nC,cAAc;cAClBupD,EAAE,CAAC6xC,iBAAiB,CAAE7xC,EAAE,CAACoxC,SAAS,EAAEpxC,EAAE,CAACyxC,mBAAmB,EAAEzxC,EAAE,CAACkxC,GAAG,EAAElxC,EAAE,CAACyxC,mBAAoB,CAAC;cAC5F;YAED,KAAK/6F,gBAAgB;cACpBspD,EAAE,CAAC8xC,SAAS,CAAE9xC,EAAE,CAACoxC,SAAS,EAAEpxC,EAAE,CAACkxC,GAAI,CAAC;cACpC;YAED,KAAKv6F,mBAAmB;cACvBqpD,EAAE,CAAC6xC,iBAAiB,CAAE7xC,EAAE,CAACixC,IAAI,EAAEjxC,EAAE,CAACwxC,mBAAmB,EAAExxC,EAAE,CAACixC,IAAI,EAAEjxC,EAAE,CAACkxC,GAAI,CAAC;cACxE;YAED,KAAKt6F,gBAAgB;cACpBopD,EAAE,CAAC8xC,SAAS,CAAE9xC,EAAE,CAACixC,IAAI,EAAEjxC,EAAE,CAACmxC,SAAU,CAAC;cACrC;YAED;cACCjqF,OAAO,CAAChY,KAAK,CAAE,sCAAsC,EAAEmvC,QAAS,CAAC;cACjE;UAEF;QAED;QAEAivD,eAAe,GAAG,IAAI;QACtBC,eAAe,GAAG,IAAI;QACtBE,oBAAoB,GAAG,IAAI;QAC3BC,oBAAoB,GAAG,IAAI;QAE3BN,eAAe,GAAG/uD,QAAQ;QAC1BsvD,wBAAwB,GAAGptD,kBAAkB;MAE9C;MAEA;IAED;;IAEA;;IAEAvB,kBAAkB,GAAGA,kBAAkB,IAAIH,aAAa;IACxDC,aAAa,GAAGA,aAAa,IAAIH,QAAQ;IACzCI,aAAa,GAAGA,aAAa,IAAIH,QAAQ;IAEzC,IAAKC,aAAa,KAAKwuD,oBAAoB,IAAIruD,kBAAkB,KAAKwuD,yBAAyB,EAAG;MAEjGxtC,EAAE,CAAC+xC,qBAAqB,CAAEvB,YAAY,CAAE3xD,aAAa,CAAE,EAAE2xD,YAAY,CAAExxD,kBAAkB,CAAG,CAAC;MAE7FquD,oBAAoB,GAAGxuD,aAAa;MACpC2uD,yBAAyB,GAAGxuD,kBAAkB;IAE/C;IAEA,IAAKL,QAAQ,KAAK2uD,eAAe,IAAI1uD,QAAQ,KAAK2uD,eAAe,IAAIzuD,aAAa,KAAK2uD,oBAAoB,IAAI1uD,aAAa,KAAK2uD,oBAAoB,EAAG;MAEvJ1tC,EAAE,CAAC6xC,iBAAiB,CAAEb,UAAU,CAAEryD,QAAQ,CAAE,EAAEqyD,UAAU,CAAEpyD,QAAQ,CAAE,EAAEoyD,UAAU,CAAElyD,aAAa,CAAE,EAAEkyD,UAAU,CAAEjyD,aAAa,CAAG,CAAC;MAEhIuuD,eAAe,GAAG3uD,QAAQ;MAC1B4uD,eAAe,GAAG3uD,QAAQ;MAC1B6uD,oBAAoB,GAAG3uD,aAAa;MACpC4uD,oBAAoB,GAAG3uD,aAAa;IAErC;IAEAquD,eAAe,GAAG/uD,QAAQ;IAC1BsvD,wBAAwB,GAAG,KAAK;EAEjC;EAEA,SAASqE,WAAWA,CAAEp3D,QAAQ,EAAEq3D,WAAW,EAAG;IAE7Cr3D,QAAQ,CAAC0D,IAAI,KAAKhoC,UAAU,GACzBy9B,OAAO,CAAEisB,EAAE,CAAC+vC,SAAU,CAAC,GACvBn8D,MAAM,CAAEosB,EAAE,CAAC+vC,SAAU,CAAC;IAEzB,IAAI5X,SAAS,GAAKv9C,QAAQ,CAAC0D,IAAI,KAAKjoC,QAAU;IAC9C,IAAK47F,WAAW,EAAG9Z,SAAS,GAAG,CAAEA,SAAS;IAE1C0X,YAAY,CAAE1X,SAAU,CAAC;IAEvBv9C,QAAQ,CAACyD,QAAQ,KAAK5nC,cAAc,IAAImkC,QAAQ,CAAC6D,WAAW,KAAK,KAAK,GACrEypD,WAAW,CAAE1xF,UAAW,CAAC,GACzB0xF,WAAW,CAAEttD,QAAQ,CAACyD,QAAQ,EAAEzD,QAAQ,CAACiE,aAAa,EAAEjE,QAAQ,CAAC+D,QAAQ,EAAE/D,QAAQ,CAACgE,QAAQ,EAAEhE,QAAQ,CAACoE,kBAAkB,EAAEpE,QAAQ,CAACkE,aAAa,EAAElE,QAAQ,CAACmE,aAAa,EAAEnE,QAAQ,CAAC2F,kBAAmB,CAAC;IAE3MxlB,WAAW,CAACmwE,OAAO,CAAEtwD,QAAQ,CAACqE,SAAU,CAAC;IACzClkB,WAAW,CAACotE,OAAO,CAAEvtD,QAAQ,CAACsE,SAAU,CAAC;IACzCnkB,WAAW,CAACyvE,OAAO,CAAE5vD,QAAQ,CAACuE,UAAW,CAAC;IAC1CwtD,WAAW,CAACnC,OAAO,CAAE5vD,QAAQ,CAACoF,UAAW,CAAC;IAE1C,IAAML,YAAY,GAAG/E,QAAQ,CAAC+E,YAAY;IAC1C3kB,aAAa,CAACmtE,OAAO,CAAExoD,YAAa,CAAC;IACrC,IAAKA,YAAY,EAAG;MAEnB3kB,aAAa,CAACwvE,OAAO,CAAE5vD,QAAQ,CAACwE,gBAAiB,CAAC;MAClDpkB,aAAa,CAACkwE,OAAO,CAAEtwD,QAAQ,CAACyE,WAAW,EAAEzE,QAAQ,CAAC0E,UAAU,EAAE1E,QAAQ,CAAC2E,eAAgB,CAAC;MAC5FvkB,aAAa,CAACwxE,KAAK,CAAE5xD,QAAQ,CAAC4E,WAAW,EAAE5E,QAAQ,CAAC6E,YAAY,EAAE7E,QAAQ,CAAC8E,YAAa,CAAC;IAE1F;IAEAwyD,gBAAgB,CAAEt3D,QAAQ,CAACsF,aAAa,EAAEtF,QAAQ,CAACuF,mBAAmB,EAAEvF,QAAQ,CAACwF,kBAAmB,CAAC;IAErGxF,QAAQ,CAAC0F,eAAe,KAAK,IAAI,GAC9B1M,MAAM,CAAEosB,EAAE,CAACmyC,wBAAyB,CAAC,GACrCp+D,OAAO,CAAEisB,EAAE,CAACmyC,wBAAyB,CAAC;EAE1C;;EAEA;;EAEA,SAAStC,YAAYA,CAAE1X,SAAS,EAAG;IAElC,IAAKyV,gBAAgB,KAAKzV,SAAS,EAAG;MAErC,IAAKA,SAAS,EAAG;QAEhBn4B,EAAE,CAACoyC,SAAS,CAAEpyC,EAAE,CAACqyC,EAAG,CAAC;MAEtB,CAAC,MAAM;QAENryC,EAAE,CAACoyC,SAAS,CAAEpyC,EAAE,CAACsyC,GAAI,CAAC;MAEvB;MAEA1E,gBAAgB,GAAGzV,SAAS;IAE7B;EAED;EAEA,SAAS2X,WAAWA,CAAEyC,QAAQ,EAAG;IAEhC,IAAKA,QAAQ,KAAK38F,YAAY,EAAG;MAEhCg+B,MAAM,CAAEosB,EAAE,CAAC+vC,SAAU,CAAC;MAEtB,IAAKwC,QAAQ,KAAK1E,eAAe,EAAG;QAEnC,IAAK0E,QAAQ,KAAK18F,YAAY,EAAG;UAEhCmqD,EAAE,CAACuyC,QAAQ,CAAEvyC,EAAE,CAACqwC,IAAK,CAAC;QAEvB,CAAC,MAAM,IAAKkC,QAAQ,KAAKz8F,aAAa,EAAG;UAExCkqD,EAAE,CAACuyC,QAAQ,CAAEvyC,EAAE,CAACwyC,KAAM,CAAC;QAExB,CAAC,MAAM;UAENxyC,EAAE,CAACuyC,QAAQ,CAAEvyC,EAAE,CAACyyC,cAAe,CAAC;QAEjC;MAED;IAED,CAAC,MAAM;MAEN1+D,OAAO,CAAEisB,EAAE,CAAC+vC,SAAU,CAAC;IAExB;IAEAlC,eAAe,GAAG0E,QAAQ;EAE3B;EAEA,SAASG,YAAYA,CAAE5+E,KAAK,EAAG;IAE9B,IAAKA,KAAK,KAAKg6E,gBAAgB,EAAG;MAEjC,IAAKI,kBAAkB,EAAGluC,EAAE,CAAC2yC,SAAS,CAAE7+E,KAAM,CAAC;MAE/Cg6E,gBAAgB,GAAGh6E,KAAK;IAEzB;EAED;EAEA,SAASo+E,gBAAgBA,CAAEhyD,aAAa,EAAE0yD,MAAM,EAAEplB,KAAK,EAAG;IAEzD,IAAKttC,aAAa,EAAG;MAEpBtM,MAAM,CAAEosB,EAAE,CAAC6yC,mBAAoB,CAAC;MAEhC,IAAK9E,0BAA0B,KAAK6E,MAAM,IAAI5E,yBAAyB,KAAKxgB,KAAK,EAAG;QAEnFxtB,EAAE,CAAC9f,aAAa,CAAE0yD,MAAM,EAAEplB,KAAM,CAAC;QAEjCugB,0BAA0B,GAAG6E,MAAM;QACnC5E,yBAAyB,GAAGxgB,KAAK;MAElC;IAED,CAAC,MAAM;MAENz5C,OAAO,CAAEisB,EAAE,CAAC6yC,mBAAoB,CAAC;IAElC;EAED;EAEA,SAASzK,cAAcA,CAAExtE,WAAW,EAAG;IAEtC,IAAKA,WAAW,EAAG;MAElBgZ,MAAM,CAAEosB,EAAE,CAAC8yC,YAAa,CAAC;IAE1B,CAAC,MAAM;MAEN/+D,OAAO,CAAEisB,EAAE,CAAC8yC,YAAa,CAAC;IAE3B;EAED;;EAEA;;EAEA,SAASC,aAAaA,CAAEC,SAAS,EAAG;IAEnC,IAAKA,SAAS,KAAKhjG,SAAS,EAAGgjG,SAAS,GAAGhzC,EAAE,CAACizC,QAAQ,GAAGv4B,WAAW,GAAG,CAAC;IAExE,IAAK2zB,kBAAkB,KAAK2E,SAAS,EAAG;MAEvChzC,EAAE,CAAC+yC,aAAa,CAAEC,SAAU,CAAC;MAC7B3E,kBAAkB,GAAG2E,SAAS;IAE/B;EAED;EAEA,SAASjE,WAAWA,CAAEmE,SAAS,EAAEC,YAAY,EAAEH,SAAS,EAAG;IAE1D,IAAKA,SAAS,KAAKhjG,SAAS,EAAG;MAE9B,IAAKq+F,kBAAkB,KAAK,IAAI,EAAG;QAElC2E,SAAS,GAAGhzC,EAAE,CAACizC,QAAQ,GAAGv4B,WAAW,GAAG,CAAC;MAE1C,CAAC,MAAM;QAENs4B,SAAS,GAAG3E,kBAAkB;MAE/B;IAED;IAEA,IAAI+E,YAAY,GAAG9E,oBAAoB,CAAE0E,SAAS,CAAE;IAEpD,IAAKI,YAAY,KAAKpjG,SAAS,EAAG;MAEjCojG,YAAY,GAAG;QAAE5lG,IAAI,EAAEwC,SAAS;QAAE8qB,OAAO,EAAE9qB;MAAU,CAAC;MACtDs+F,oBAAoB,CAAE0E,SAAS,CAAE,GAAGI,YAAY;IAEjD;IAEA,IAAKA,YAAY,CAAC5lG,IAAI,KAAK0lG,SAAS,IAAIE,YAAY,CAACt4E,OAAO,KAAKq4E,YAAY,EAAG;MAE/E,IAAK9E,kBAAkB,KAAK2E,SAAS,EAAG;QAEvChzC,EAAE,CAAC+yC,aAAa,CAAEC,SAAU,CAAC;QAC7B3E,kBAAkB,GAAG2E,SAAS;MAE/B;MAEAhzC,EAAE,CAAC+uC,WAAW,CAAEmE,SAAS,EAAEC,YAAY,IAAI1D,aAAa,CAAEyD,SAAS,CAAG,CAAC;MAEvEE,YAAY,CAAC5lG,IAAI,GAAG0lG,SAAS;MAC7BE,YAAY,CAACt4E,OAAO,GAAGq4E,YAAY;IAEpC;EAED;EAEA,SAASE,aAAaA,CAAA,EAAG;IAExB,IAAMD,YAAY,GAAG9E,oBAAoB,CAAED,kBAAkB,CAAE;IAE/D,IAAK+E,YAAY,KAAKpjG,SAAS,IAAIojG,YAAY,CAAC5lG,IAAI,KAAKwC,SAAS,EAAG;MAEpEgwD,EAAE,CAAC+uC,WAAW,CAAEqE,YAAY,CAAC5lG,IAAI,EAAE,IAAK,CAAC;MAEzC4lG,YAAY,CAAC5lG,IAAI,GAAGwC,SAAS;MAC7BojG,YAAY,CAACt4E,OAAO,GAAG9qB,SAAS;IAEjC;EAED;EAEA,SAASsjG,oBAAoBA,CAAA,EAAG;IAE/B,IAAI;MAEHtzC,EAAE,CAACszC,oBAAoB,CAACx7D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAE/C,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASqkG,oBAAoBA,CAAA,EAAG;IAE/B,IAAI;MAEHvzC,EAAE,CAACuzC,oBAAoB,CAACz7D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAE/C,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASskG,aAAaA,CAAA,EAAG;IAExB,IAAI;MAEHxzC,EAAE,CAACwzC,aAAa,CAAC17D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAExC,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASukG,aAAaA,CAAA,EAAG;IAExB,IAAI;MAEHzzC,EAAE,CAACyzC,aAAa,CAAC37D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAExC,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASwkG,uBAAuBA,CAAA,EAAG;IAElC,IAAI;MAEH1zC,EAAE,CAAC0zC,uBAAuB,CAAC57D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAElD,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASykG,uBAAuBA,CAAA,EAAG;IAElC,IAAI;MAEH3zC,EAAE,CAAC2zC,uBAAuB,CAAC77D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAElD,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAAS0kG,YAAYA,CAAA,EAAG;IAEvB,IAAI;MAEH5zC,EAAE,CAAC4zC,YAAY,CAAC97D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAEvC,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAAS2kG,YAAYA,CAAA,EAAG;IAEvB,IAAI;MAEH7zC,EAAE,CAAC6zC,YAAY,CAAC/7D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAEvC,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASsgG,UAAUA,CAAA,EAAG;IAErB,IAAI;MAEHxvC,EAAE,CAACwvC,UAAU,CAAC13D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAErC,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;EAEA,SAASogG,UAAUA,CAAA,EAAG;IAErB,IAAI;MAEHtvC,EAAE,CAACsvC,UAAU,CAACx3D,KAAK,CAAEkoB,EAAE,EAAEtoB,SAAU,CAAC;IAErC,CAAC,CAAC,OAAQxoC,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C;EAED;;EAEA;;EAEA,SAASyrB,OAAOA,CAAEA,OAAO,EAAG;IAE3B,IAAKg0E,cAAc,CAACrjF,MAAM,CAAEqP,OAAQ,CAAC,KAAK,KAAK,EAAG;MAEjDqlC,EAAE,CAACrlC,OAAO,CAAEA,OAAO,CAAChX,CAAC,EAAEgX,OAAO,CAAC1W,CAAC,EAAE0W,OAAO,CAACnC,CAAC,EAAEmC,OAAO,CAAClC,CAAE,CAAC;MACxDk2E,cAAc,CAACjmF,IAAI,CAAEiS,OAAQ,CAAC;IAE/B;EAED;EAEA,SAASE,QAAQA,CAAEA,QAAQ,EAAG;IAE7B,IAAK+zE,eAAe,CAACtjF,MAAM,CAAEuP,QAAS,CAAC,KAAK,KAAK,EAAG;MAEnDmlC,EAAE,CAACnlC,QAAQ,CAAEA,QAAQ,CAAClX,CAAC,EAAEkX,QAAQ,CAAC5W,CAAC,EAAE4W,QAAQ,CAACrC,CAAC,EAAEqC,QAAQ,CAACpC,CAAE,CAAC;MAC7Dm2E,eAAe,CAAClmF,IAAI,CAAEmS,QAAS,CAAC;IAEjC;EAED;EAEA,SAASi5E,gBAAgBA,CAAEC,aAAa,EAAEj+B,OAAO,EAAG;IAEnD,IAAI7/C,OAAO,GAAG42E,aAAa,CAAC3kF,GAAG,CAAE4tD,OAAQ,CAAC;IAE1C,IAAK7/C,OAAO,KAAKjmB,SAAS,EAAG;MAE5BimB,OAAO,GAAG,IAAImqC,OAAO,CAAC,CAAC;MAEvBysC,aAAa,CAAC5lF,GAAG,CAAE6uD,OAAO,EAAE7/C,OAAQ,CAAC;IAEtC;IAEA,IAAI+9E,UAAU,GAAG/9E,OAAO,CAAC/N,GAAG,CAAE6rF,aAAc,CAAC;IAE7C,IAAKC,UAAU,KAAKhkG,SAAS,EAAG;MAE/BgkG,UAAU,GAAGh0C,EAAE,CAACi0C,oBAAoB,CAAEn+B,OAAO,EAAEi+B,aAAa,CAACliG,IAAK,CAAC;MAEnEokB,OAAO,CAAChP,GAAG,CAAE8sF,aAAa,EAAEC,UAAW,CAAC;IAEzC;EAED;EAEA,SAASE,mBAAmBA,CAAEH,aAAa,EAAEj+B,OAAO,EAAG;IAEtD,IAAM7/C,OAAO,GAAG42E,aAAa,CAAC3kF,GAAG,CAAE4tD,OAAQ,CAAC;IAC5C,IAAMk+B,UAAU,GAAG/9E,OAAO,CAAC/N,GAAG,CAAE6rF,aAAc,CAAC;IAE/C,IAAKnH,WAAW,CAAC1kF,GAAG,CAAE4tD,OAAQ,CAAC,KAAKk+B,UAAU,EAAG;MAEhD;MACAh0C,EAAE,CAACk0C,mBAAmB,CAAEp+B,OAAO,EAAEk+B,UAAU,EAAED,aAAa,CAACI,mBAAoB,CAAC;MAEhFvH,WAAW,CAAC3lF,GAAG,CAAE6uD,OAAO,EAAEk+B,UAAW,CAAC;IAEvC;EAED;;EAEA;;EAEA,SAAS9iG,KAAKA,CAAA,EAAG;IAEhB;;IAEA8uD,EAAE,CAACjsB,OAAO,CAAEisB,EAAE,CAAC4xC,KAAM,CAAC;IACtB5xC,EAAE,CAACjsB,OAAO,CAAEisB,EAAE,CAAC+vC,SAAU,CAAC;IAC1B/vC,EAAE,CAACjsB,OAAO,CAAEisB,EAAE,CAACgrC,UAAW,CAAC;IAC3BhrC,EAAE,CAACjsB,OAAO,CAAEisB,EAAE,CAAC6yC,mBAAoB,CAAC;IACpC7yC,EAAE,CAACjsB,OAAO,CAAEisB,EAAE,CAAC8yC,YAAa,CAAC;IAC7B9yC,EAAE,CAACjsB,OAAO,CAAEisB,EAAE,CAACssC,YAAa,CAAC;IAC7BtsC,EAAE,CAACjsB,OAAO,CAAEisB,EAAE,CAACmyC,wBAAyB,CAAC;IAEzCnyC,EAAE,CAACnhB,aAAa,CAAEmhB,EAAE,CAACywC,QAAS,CAAC;IAC/BzwC,EAAE,CAAC8xC,SAAS,CAAE9xC,EAAE,CAACkxC,GAAG,EAAElxC,EAAE,CAACixC,IAAK,CAAC;IAC/BjxC,EAAE,CAAC6xC,iBAAiB,CAAE7xC,EAAE,CAACkxC,GAAG,EAAElxC,EAAE,CAACixC,IAAI,EAAEjxC,EAAE,CAACkxC,GAAG,EAAElxC,EAAE,CAACixC,IAAK,CAAC;IAExDjxC,EAAE,CAACyqC,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;IACtCzqC,EAAE,CAAC4T,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE3B5T,EAAE,CAACirC,SAAS,CAAE,IAAK,CAAC;IACpBjrC,EAAE,CAAC/gB,SAAS,CAAE+gB,EAAE,CAACqrC,IAAK,CAAC;IACvBrrC,EAAE,CAAC2rC,UAAU,CAAE,CAAE,CAAC;IAElB3rC,EAAE,CAACusC,WAAW,CAAE,UAAW,CAAC;IAC5BvsC,EAAE,CAAC3gB,WAAW,CAAE2gB,EAAE,CAACorC,MAAM,EAAE,CAAC,EAAE,UAAW,CAAC;IAC1CprC,EAAE,CAACysC,SAAS,CAAEzsC,EAAE,CAACo0C,IAAI,EAAEp0C,EAAE,CAACo0C,IAAI,EAAEp0C,EAAE,CAACo0C,IAAK,CAAC;IACzCp0C,EAAE,CAAC0sC,YAAY,CAAE,CAAE,CAAC;IAEpB1sC,EAAE,CAACuyC,QAAQ,CAAEvyC,EAAE,CAACqwC,IAAK,CAAC;IACtBrwC,EAAE,CAACoyC,SAAS,CAAEpyC,EAAE,CAACsyC,GAAI,CAAC;IAEtBtyC,EAAE,CAAC9f,aAAa,CAAE,CAAC,EAAE,CAAE,CAAC;IAExB8f,EAAE,CAAC+yC,aAAa,CAAE/yC,EAAE,CAACizC,QAAS,CAAC;IAE/BjzC,EAAE,CAACgwC,eAAe,CAAEhwC,EAAE,CAACmwC,WAAW,EAAE,IAAK,CAAC;IAE1C,IAAKjwC,QAAQ,KAAK,IAAI,EAAG;MAExBF,EAAE,CAACgwC,eAAe,CAAEhwC,EAAE,CAACkwC,gBAAgB,EAAE,IAAK,CAAC;MAC/ClwC,EAAE,CAACgwC,eAAe,CAAEhwC,EAAE,CAACq0C,gBAAgB,EAAE,IAAK,CAAC;IAEhD;IAEAr0C,EAAE,CAACuwC,UAAU,CAAE,IAAK,CAAC;IAErBvwC,EAAE,CAAC2yC,SAAS,CAAE,CAAE,CAAC;IAEjB3yC,EAAE,CAACrlC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEqlC,EAAE,CAAC1uC,MAAM,CAACwC,KAAK,EAAEksC,EAAE,CAAC1uC,MAAM,CAACyC,MAAO,CAAC;IACrDisC,EAAE,CAACnlC,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAEmlC,EAAE,CAAC1uC,MAAM,CAACwC,KAAK,EAAEksC,EAAE,CAAC1uC,MAAM,CAACyC,MAAO,CAAC;;IAEtD;;IAEA+4E,mBAAmB,GAAG,CAAC,CAAC;IAExBuB,kBAAkB,GAAG,IAAI;IACzBC,oBAAoB,GAAG,CAAC,CAAC;IAEzBvB,wBAAwB,GAAG,CAAC,CAAC;IAC7BC,kBAAkB,GAAG,IAAI5sC,OAAO,CAAC,CAAC;IAClC6sC,kBAAkB,GAAG,EAAE;IAEvBC,cAAc,GAAG,IAAI;IAErBC,sBAAsB,GAAG,KAAK;IAC9BC,eAAe,GAAG,IAAI;IACtBC,oBAAoB,GAAG,IAAI;IAC3BC,eAAe,GAAG,IAAI;IACtBC,eAAe,GAAG,IAAI;IACtBC,yBAAyB,GAAG,IAAI;IAChCC,oBAAoB,GAAG,IAAI;IAC3BC,oBAAoB,GAAG,IAAI;IAC3BC,wBAAwB,GAAG,KAAK;IAEhCC,gBAAgB,GAAG,IAAI;IACvBC,eAAe,GAAG,IAAI;IAEtBC,gBAAgB,GAAG,IAAI;IAEvBC,0BAA0B,GAAG,IAAI;IACjCC,yBAAyB,GAAG,IAAI;IAEhCW,cAAc,CAAC1nF,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE+4C,EAAE,CAAC1uC,MAAM,CAACwC,KAAK,EAAEksC,EAAE,CAAC1uC,MAAM,CAACyC,MAAO,CAAC;IAC7D66E,eAAe,CAAC3nF,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE+4C,EAAE,CAAC1uC,MAAM,CAACwC,KAAK,EAAEksC,EAAE,CAAC1uC,MAAM,CAACyC,MAAO,CAAC;IAE9D44E,WAAW,CAACz7F,KAAK,CAAC,CAAC;IACnB6pB,WAAW,CAAC7pB,KAAK,CAAC,CAAC;IACnB8pB,aAAa,CAAC9pB,KAAK,CAAC,CAAC;EAEtB;EAEA,OAAO;IAENivD,OAAO,EAAE;MACRluC,KAAK,EAAE06E,WAAW;MAClBjyE,KAAK,EAAEK,WAAW;MAClBshC,OAAO,EAAErhC;IACV,CAAC;IAED4Y,MAAM,EAAEA,MAAM;IACdG,OAAO,EAAEA,OAAO;IAEhBi8D,eAAe,EAAEA,eAAe;IAChC74C,WAAW,EAAEA,WAAW;IAExBo5C,UAAU,EAAEA,UAAU;IAEtBrI,WAAW,EAAEA,WAAW;IACxB8J,WAAW,EAAEA,WAAW;IAExBnC,YAAY,EAAEA,YAAY;IAC1BC,WAAW,EAAEA,WAAW;IAExB4C,YAAY,EAAEA,YAAY;IAC1BR,gBAAgB,EAAEA,gBAAgB;IAElC9J,cAAc,EAAEA,cAAc;IAE9B2K,aAAa,EAAEA,aAAa;IAC5BhE,WAAW,EAAEA,WAAW;IACxBsE,aAAa,EAAEA,aAAa;IAC5BC,oBAAoB,EAAEA,oBAAoB;IAC1CC,oBAAoB,EAAEA,oBAAoB;IAC1C/D,UAAU,EAAEA,UAAU;IACtBF,UAAU,EAAEA,UAAU;IAEtBwE,gBAAgB,EAAEA,gBAAgB;IAClCI,mBAAmB,EAAEA,mBAAmB;IAExCN,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA,YAAY;IAC1BL,aAAa,EAAEA,aAAa;IAC5BC,aAAa,EAAEA,aAAa;IAC5BC,uBAAuB,EAAEA,uBAAuB;IAChDC,uBAAuB,EAAEA,uBAAuB;IAEhDh5E,OAAO,EAAEA,OAAO;IAChBE,QAAQ,EAAEA,QAAQ;IAElB3pB,KAAK,EAAEA;EAER,CAAC;AAEF;AAEA,SAASojG,aAAaA,CAAEC,GAAG,EAAEv9C,UAAU,EAAE3nD,KAAK,EAAE4/D,UAAU,EAAEhP,YAAY,EAAEu0C,KAAK,EAAErkG,IAAI,EAAG;EAAA,IAAAskG,aAAA,EAAAC,WAAA,EAAAC,YAAA;EAEvF,IAAMz0C,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EACtC,IAAMwa,WAAW,GAAGza,YAAY,CAACya,WAAW;EAC5C,IAAMM,cAAc,GAAG/a,YAAY,CAAC+a,cAAc;EAClD,IAAMF,cAAc,GAAG7a,YAAY,CAAC6a,cAAc;EAClD,IAAMc,UAAU,GAAG3b,YAAY,CAAC2b,UAAU;EAC1C,IAAMg5B,kBAAkB,GAAG59C,UAAU,CAAC+iB,GAAG,CAAE,sCAAuC,CAAC,GAAG/iB,UAAU,CAAC9uC,GAAG,CAAE,sCAAuC,CAAC,GAAG,IAAI;EACrJ,IAAM2sF,6BAA6B,GAAG,OAAOC,SAAS,KAAK,WAAW,GAAG,KAAK,GAAG,gBAAgB,CAACnhF,IAAI,CAAEmhF,SAAS,CAACC,SAAU,CAAC;EAE7H,IAAMC,cAAc,GAAG,IAAI50C,OAAO,CAAC,CAAC;EACpC,IAAI7sC,OAAO;EAEX,IAAM0hF,QAAQ,GAAG,IAAI70C,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA;EACA;;EAEA,IAAI80C,kBAAkB,GAAG,KAAK;EAE9B,IAAI;IAEHA,kBAAkB,GAAG,OAAOC,eAAe,KAAK;IAC/C;IAAA,GACK,IAAIA,eAAe,CAAE,CAAC,EAAE,CAAE,CAAC,CAACnhF,UAAU,CAAE,IAAK,CAAC,KAAO,IAAI;EAEhE,CAAC,CAAC,OAAQxnB,GAAG,EAAG;;IAEf;EAAA;EAID,SAAS4oG,YAAYA,CAAEthF,KAAK,EAAEC,MAAM,EAAG;IAEtC;;IAEA,OAAOmhF,kBAAkB;IACxB;IACA,IAAIC,eAAe,CAAErhF,KAAK,EAAEC,MAAO,CAAC,GAAG5C,eAAe,CAAE,QAAS,CAAC;EAEpE;EAEA,SAASkkF,WAAWA,CAAE3hF,KAAK,EAAE4hF,eAAe,EAAEC,cAAc,EAAEC,OAAO,EAAG;IAEvE,IAAInlF,KAAK,GAAG,CAAC;;IAEb;;IAEA,IAAKqD,KAAK,CAACI,KAAK,GAAG0hF,OAAO,IAAI9hF,KAAK,CAACK,MAAM,GAAGyhF,OAAO,EAAG;MAEtDnlF,KAAK,GAAGmlF,OAAO,GAAG/yF,IAAI,CAACa,GAAG,CAAEoQ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;IAExD;;IAEA;;IAEA,IAAK1D,KAAK,GAAG,CAAC,IAAIilF,eAAe,KAAK,IAAI,EAAG;MAE5C;;MAEA,IAAO,OAAOhhF,gBAAgB,KAAK,WAAW,IAAIZ,KAAK,YAAYY,gBAAgB,IAChF,OAAOT,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOU,WAAW,KAAK,WAAW,IAAIb,KAAK,YAAYa,WAAa,EAAG;QAEzE,IAAMxP,KAAK,GAAGuwF,eAAe,GAAGtvF,eAAe,GAAGvD,IAAI,CAACsC,KAAK;QAE5D,IAAM+O,KAAK,GAAG/O,KAAK,CAAEsL,KAAK,GAAGqD,KAAK,CAACI,KAAM,CAAC;QAC1C,IAAMC,MAAM,GAAGhP,KAAK,CAAEsL,KAAK,GAAGqD,KAAK,CAACK,MAAO,CAAC;QAE5C,IAAKR,OAAO,KAAKvjB,SAAS,EAAGujB,OAAO,GAAG6hF,YAAY,CAAEthF,KAAK,EAAEC,MAAO,CAAC;;QAEpE;;QAEA,IAAMzC,MAAM,GAAGikF,cAAc,GAAGH,YAAY,CAAEthF,KAAK,EAAEC,MAAO,CAAC,GAAGR,OAAO;QAEvEjC,MAAM,CAACwC,KAAK,GAAGA,KAAK;QACpBxC,MAAM,CAACyC,MAAM,GAAGA,MAAM;QAEtB,IAAM7mB,OAAO,GAAGokB,MAAM,CAAC0C,UAAU,CAAE,IAAK,CAAC;QACzC9mB,OAAO,CAACinB,SAAS,CAAET,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEI,KAAK,EAAEC,MAAO,CAAC;QAE/C7M,OAAO,CAACC,IAAI,CAAE,sDAAsD,GAAGuM,KAAK,CAACI,KAAK,GAAG,GAAG,GAAGJ,KAAK,CAACK,MAAM,GAAG,QAAQ,GAAGD,KAAK,GAAG,GAAG,GAAGC,MAAM,GAAG,IAAK,CAAC;QAElJ,OAAOzC,MAAM;MAEd,CAAC,MAAM;QAEN,IAAK,MAAM,IAAIoC,KAAK,EAAG;UAEtBxM,OAAO,CAACC,IAAI,CAAE,wDAAwD,GAAGuM,KAAK,CAACI,KAAK,GAAG,GAAG,GAAGJ,KAAK,CAACK,MAAM,GAAG,IAAK,CAAC;QAEnH;QAEA,OAAOL,KAAK;MAEb;IAED;IAEA,OAAOA,KAAK;EAEb;EAEA,SAAS+hF,cAAcA,CAAE/hF,KAAK,EAAG;IAEhC,OAAOhO,YAAY,CAAEgO,KAAK,CAACI,KAAM,CAAC,IAAIpO,YAAY,CAAEgO,KAAK,CAACK,MAAO,CAAC;EAEnE;EAEA,SAAS2hF,sBAAsBA,CAAE56E,OAAO,EAAG;IAE1C,IAAKolC,QAAQ,EAAG,OAAO,KAAK;IAE5B,OAASplC,OAAO,CAAC3E,KAAK,KAAK7c,mBAAmB,IAAIwhB,OAAO,CAAC1E,KAAK,KAAK9c,mBAAmB,IACpFwhB,OAAO,CAACxE,SAAS,KAAK9c,aAAa,IAAIshB,OAAO,CAACxE,SAAS,KAAKzc,YAAc;EAE/E;EAEA,SAAS87F,2BAA2BA,CAAE76E,OAAO,EAAE86E,YAAY,EAAG;IAE7D,OAAO96E,OAAO,CAAC3D,eAAe,IAAIy+E,YAAY,IAC7C96E,OAAO,CAACxE,SAAS,KAAK9c,aAAa,IAAIshB,OAAO,CAACxE,SAAS,KAAKzc,YAAY;EAE3E;EAEA,SAASg8F,cAAcA,CAAE3hG,MAAM,EAAG;IAEjCqgG,GAAG,CAACsB,cAAc,CAAE3hG,MAAO,CAAC;EAE7B;EAEA,SAAS4hG,iBAAiBA,CAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,MAAM,EAAEnjF,UAAU,EAAEojF,mBAAmB,GAAG,KAAK,EAAG;IAE3G,IAAKh2C,QAAQ,KAAK,KAAK,EAAG,OAAO81C,QAAQ;IAEzC,IAAKD,kBAAkB,KAAK,IAAI,EAAG;MAElC,IAAKxB,GAAG,CAAEwB,kBAAkB,CAAE,KAAK/lG,SAAS,EAAG,OAAOukG,GAAG,CAAEwB,kBAAkB,CAAE;MAE/E7uF,OAAO,CAACC,IAAI,CAAE,2EAA2E,GAAG4uF,kBAAkB,GAAG,IAAK,CAAC;IAExH;IAEA,IAAI/+E,cAAc,GAAGg/E,QAAQ;IAE7B,IAAKA,QAAQ,KAAKzB,GAAG,CAAC4B,GAAG,EAAG;MAE3B,IAAKF,MAAM,KAAK1B,GAAG,CAAC9zC,KAAK,EAAGzpC,cAAc,GAAGu9E,GAAG,CAAC6B,IAAI;MACrD,IAAKH,MAAM,KAAK1B,GAAG,CAAC7zC,UAAU,EAAG1pC,cAAc,GAAGu9E,GAAG,CAAC8B,IAAI;MAC1D,IAAKJ,MAAM,KAAK1B,GAAG,CAACvzC,aAAa,EAAGhqC,cAAc,GAAGu9E,GAAG,CAAC+B,EAAE;IAE5D;IAEA,IAAKN,QAAQ,KAAKzB,GAAG,CAACgC,WAAW,EAAG;MAEnC,IAAKN,MAAM,KAAK1B,GAAG,CAACvzC,aAAa,EAAGhqC,cAAc,GAAGu9E,GAAG,CAACiC,IAAI;MAC7D,IAAKP,MAAM,KAAK1B,GAAG,CAAC5zC,cAAc,EAAG3pC,cAAc,GAAGu9E,GAAG,CAACkC,KAAK;MAC/D,IAAKR,MAAM,KAAK1B,GAAG,CAAC1zC,YAAY,EAAG7pC,cAAc,GAAGu9E,GAAG,CAACmC,KAAK;MAC7D,IAAKT,MAAM,KAAK1B,GAAG,CAACxzC,IAAI,EAAG/pC,cAAc,GAAGu9E,GAAG,CAACoC,GAAG;MACnD,IAAKV,MAAM,KAAK1B,GAAG,CAAC3zC,KAAK,EAAG5pC,cAAc,GAAGu9E,GAAG,CAACqC,IAAI;MACrD,IAAKX,MAAM,KAAK1B,GAAG,CAACzzC,GAAG,EAAG9pC,cAAc,GAAGu9E,GAAG,CAACsC,IAAI;IAEpD;IAEA,IAAKb,QAAQ,KAAKzB,GAAG,CAACuC,EAAE,EAAG;MAE1B,IAAKb,MAAM,KAAK1B,GAAG,CAAC9zC,KAAK,EAAGzpC,cAAc,GAAGu9E,GAAG,CAACwC,KAAK;MACtD,IAAKd,MAAM,KAAK1B,GAAG,CAAC7zC,UAAU,EAAG1pC,cAAc,GAAGu9E,GAAG,CAACyC,KAAK;MAC3D,IAAKf,MAAM,KAAK1B,GAAG,CAACvzC,aAAa,EAAGhqC,cAAc,GAAGu9E,GAAG,CAAC0C,GAAG;IAE7D;IAEA,IAAKjB,QAAQ,KAAKzB,GAAG,CAAChF,IAAI,EAAG;MAE5B,IAAK0G,MAAM,KAAK1B,GAAG,CAAC9zC,KAAK,EAAGzpC,cAAc,GAAGu9E,GAAG,CAAC2C,OAAO;MACxD,IAAKjB,MAAM,KAAK1B,GAAG,CAAC7zC,UAAU,EAAG1pC,cAAc,GAAGu9E,GAAG,CAAC4C,OAAO;MAC7D,IAAKlB,MAAM,KAAK1B,GAAG,CAACvzC,aAAa,EAAGhqC,cAAc,GAAKlE,UAAU,KAAKjU,cAAc,IAAIq3F,mBAAmB,KAAK,KAAK,GAAK3B,GAAG,CAAC6C,YAAY,GAAG7C,GAAG,CAAC8C,KAAK;MACtJ,IAAKpB,MAAM,KAAK1B,GAAG,CAAC+C,sBAAsB,EAAGtgF,cAAc,GAAGu9E,GAAG,CAACgD,KAAK;MACvE,IAAKtB,MAAM,KAAK1B,GAAG,CAACiD,sBAAsB,EAAGxgF,cAAc,GAAGu9E,GAAG,CAACkD,OAAO;IAE1E;IAEA,IAAKzgF,cAAc,KAAKu9E,GAAG,CAAC8B,IAAI,IAAIr/E,cAAc,KAAKu9E,GAAG,CAAC6B,IAAI,IAC9Dp/E,cAAc,KAAKu9E,GAAG,CAACyC,KAAK,IAAIhgF,cAAc,KAAKu9E,GAAG,CAACwC,KAAK,IAC5D//E,cAAc,KAAKu9E,GAAG,CAAC4C,OAAO,IAAIngF,cAAc,KAAKu9E,GAAG,CAAC2C,OAAO,EAAG;MAEnElgD,UAAU,CAAC9uC,GAAG,CAAE,wBAAyB,CAAC;IAE3C;IAEA,OAAO8O,cAAc;EAEtB;EAEA,SAAS0gF,YAAYA,CAAE58E,OAAO,EAAEpH,KAAK,EAAEkiF,YAAY,EAAG;IAErD,IAAKD,2BAA2B,CAAE76E,OAAO,EAAE86E,YAAa,CAAC,KAAK,IAAI,IAAM96E,OAAO,CAAC68E,oBAAoB,IAAI78E,OAAO,CAACxE,SAAS,KAAK9c,aAAa,IAAIshB,OAAO,CAACxE,SAAS,KAAKzc,YAAc,EAAG;MAErL,OAAO4I,IAAI,CAACk+D,IAAI,CAAEl+D,IAAI,CAACa,GAAG,CAAEoQ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAE,CAAC,GAAG,CAAC;IAE9D,CAAC,MAAM,IAAK+G,OAAO,CAAChE,OAAO,KAAK9mB,SAAS,IAAI8qB,OAAO,CAAChE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;MAEzE;;MAEA,OAAOwpB,OAAO,CAAChE,OAAO,CAACxlB,MAAM;IAE9B,CAAC,MAAM,IAAKwpB,OAAO,CAAC88E,mBAAmB,IAAIviF,KAAK,CAACC,OAAO,CAAEwF,OAAO,CAACpH,KAAM,CAAC,EAAG;MAE3E,OAAOA,KAAK,CAACoD,OAAO,CAACxlB,MAAM;IAE5B,CAAC,MAAM;MAEN;;MAEA,OAAO,CAAC;IAET;EAED;;EAEA;;EAEA,SAASumG,cAAcA,CAAE/oF,CAAC,EAAG;IAE5B,IAAKA,CAAC,KAAKtV,aAAa,IAAIsV,CAAC,KAAKrV,0BAA0B,IAAIqV,CAAC,KAAKnV,yBAAyB,EAAG;MAEjG,OAAO46F,GAAG,CAACrF,OAAO;IAEnB;IAEA,OAAOqF,GAAG,CAACuD,MAAM;EAElB;;EAEA;;EAEA,SAASl6B,gBAAgBA,CAAEz7D,KAAK,EAAG;IAElC,IAAM2Y,OAAO,GAAG3Y,KAAK,CAACjO,MAAM;IAE5B4mB,OAAO,CAAChZ,mBAAmB,CAAE,SAAS,EAAE87D,gBAAiB,CAAC;IAE1Dm6B,iBAAiB,CAAEj9E,OAAQ,CAAC;IAE5B,IAAKA,OAAO,CAACmlE,cAAc,EAAG;MAE7B+U,cAAc,CAACzzC,MAAM,CAAEzmC,OAAQ,CAAC;IAEjC;EAED;EAEA,SAASk9E,qBAAqBA,CAAE71F,KAAK,EAAG;IAEvC,IAAM23C,YAAY,GAAG33C,KAAK,CAACjO,MAAM;IAEjC4lD,YAAY,CAACh4C,mBAAmB,CAAE,SAAS,EAAEk2F,qBAAsB,CAAC;IAEpEC,sBAAsB,CAAEn+C,YAAa,CAAC;EAEvC;;EAEA;;EAEA,SAASi+C,iBAAiBA,CAAEj9E,OAAO,EAAG;IAErC,IAAMo9E,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC;IAEnD,IAAKo9E,iBAAiB,CAACC,WAAW,KAAKnoG,SAAS,EAAG;;IAEnD;;IAEA,IAAM6mB,MAAM,GAAGiE,OAAO,CAACjE,MAAM;IAC7B,IAAMuhF,aAAa,GAAGnD,QAAQ,CAAC/sF,GAAG,CAAE2O,MAAO,CAAC;IAE5C,IAAKuhF,aAAa,EAAG;MAEpB,IAAMjF,YAAY,GAAGiF,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;MAClElF,YAAY,CAAC9Y,SAAS,EAAG;;MAEzB;;MAEA,IAAK8Y,YAAY,CAAC9Y,SAAS,KAAK,CAAC,EAAG;QAEnCie,aAAa,CAAEx9E,OAAQ,CAAC;MAEzB;;MAEA;;MAEA,IAAK3vB,MAAM,CAACkH,IAAI,CAAE+lG,aAAc,CAAC,CAAC9mG,MAAM,KAAK,CAAC,EAAG;QAEhD2jG,QAAQ,CAAC1zC,MAAM,CAAE1qC,MAAO,CAAC;MAE1B;IAED;IAEAo4C,UAAU,CAACt3B,MAAM,CAAE7c,OAAQ,CAAC;EAE7B;EAEA,SAASw9E,aAAaA,CAAEx9E,OAAO,EAAG;IAEjC,IAAMo9E,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC;IACnDy5E,GAAG,CAAC+D,aAAa,CAAEJ,iBAAiB,CAACK,cAAe,CAAC;IAErD,IAAM1hF,MAAM,GAAGiE,OAAO,CAACjE,MAAM;IAC7B,IAAMuhF,aAAa,GAAGnD,QAAQ,CAAC/sF,GAAG,CAAE2O,MAAO,CAAC;IAC5C,OAAOuhF,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;IAEpDloG,IAAI,CAAC00E,MAAM,CAAC7sD,QAAQ,EAAG;EAExB;EAEA,SAASigF,sBAAsBA,CAAEn+C,YAAY,EAAG;IAE/C,IAAMh/B,OAAO,GAAGg/B,YAAY,CAACh/B,OAAO;IAEpC,IAAM09E,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;IAC7D,IAAMo+C,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC;IAEnD,IAAKo9E,iBAAiB,CAACK,cAAc,KAAKvoG,SAAS,EAAG;MAErDukG,GAAG,CAAC+D,aAAa,CAAEJ,iBAAiB,CAACK,cAAe,CAAC;MAErDpoG,IAAI,CAAC00E,MAAM,CAAC7sD,QAAQ,EAAG;IAExB;IAEA,IAAK8hC,YAAY,CAAC7+B,YAAY,EAAG;MAEhC6+B,YAAY,CAAC7+B,YAAY,CAAC/C,OAAO,CAAC,CAAC;IAEpC;IAEA,IAAK4hC,YAAY,CAACiC,uBAAuB,EAAG;MAE3C,KAAM,IAAIxqD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK8jB,KAAK,CAACC,OAAO,CAAEkjF,sBAAsB,CAACC,kBAAkB,CAAElnG,CAAC,CAAG,CAAC,EAAG;UAEtE,KAAM,IAAImnG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,sBAAsB,CAACC,kBAAkB,CAAElnG,CAAC,CAAE,CAACD,MAAM,EAAEonG,KAAK,EAAG,EAAGnE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACC,kBAAkB,CAAElnG,CAAC,CAAE,CAAEmnG,KAAK,CAAG,CAAC;QAEhL,CAAC,MAAM;UAENnE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACC,kBAAkB,CAAElnG,CAAC,CAAG,CAAC;QAExE;QAEA,IAAKinG,sBAAsB,CAACI,kBAAkB,EAAGrE,GAAG,CAACsE,kBAAkB,CAAEL,sBAAsB,CAACI,kBAAkB,CAAErnG,CAAC,CAAG,CAAC;MAE1H;IAED,CAAC,MAAM;MAEN,IAAK8jB,KAAK,CAACC,OAAO,CAAEkjF,sBAAsB,CAACC,kBAAmB,CAAC,EAAG;QAEjE,KAAM,IAAIC,MAAK,GAAG,CAAC,EAAEA,MAAK,GAAGF,sBAAsB,CAACC,kBAAkB,CAACnnG,MAAM,EAAEonG,MAAK,EAAG,EAAGnE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACC,kBAAkB,CAAEC,MAAK,CAAG,CAAC;MAEtK,CAAC,MAAM;QAENnE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACC,kBAAmB,CAAC;MAEnE;MAEA,IAAKD,sBAAsB,CAACI,kBAAkB,EAAGrE,GAAG,CAACsE,kBAAkB,CAAEL,sBAAsB,CAACI,kBAAmB,CAAC;MACpH,IAAKJ,sBAAsB,CAACM,8BAA8B,EAAGvE,GAAG,CAACoE,iBAAiB,CAAEH,sBAAsB,CAACM,8BAA+B,CAAC;MAE3I,IAAKN,sBAAsB,CAACO,wBAAwB,EAAG;QAEtD,KAAM,IAAIxnG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGinG,sBAAsB,CAACO,wBAAwB,CAACznG,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEnF,IAAKinG,sBAAsB,CAACO,wBAAwB,CAAExnG,IAAC,CAAE,EAAGgjG,GAAG,CAACsE,kBAAkB,CAAEL,sBAAsB,CAACO,wBAAwB,CAAExnG,IAAC,CAAG,CAAC;QAE3I;MAED;MAEA,IAAKinG,sBAAsB,CAACQ,wBAAwB,EAAGzE,GAAG,CAACsE,kBAAkB,CAAEL,sBAAsB,CAACQ,wBAAyB,CAAC;IAEjI;IAEA,IAAKl/C,YAAY,CAAC18B,4BAA4B,EAAG;MAEhD,KAAM,IAAI7rB,IAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGvC,OAAO,CAACxpB,MAAM,EAAEC,IAAC,GAAG8rB,EAAE,EAAE9rB,IAAC,EAAG,EAAG;QAEpD,IAAM0nG,oBAAoB,GAAGhqC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAO,CAAEvpB,IAAC,CAAG,CAAC;QAE3D,IAAK0nG,oBAAoB,CAACV,cAAc,EAAG;UAE1ChE,GAAG,CAAC+D,aAAa,CAAEW,oBAAoB,CAACV,cAAe,CAAC;UAExDpoG,IAAI,CAAC00E,MAAM,CAAC7sD,QAAQ,EAAG;QAExB;QAEAi3C,UAAU,CAACt3B,MAAM,CAAE7c,OAAO,CAAEvpB,IAAC,CAAG,CAAC;MAElC;IAED;IAEA09D,UAAU,CAACt3B,MAAM,CAAE7c,OAAQ,CAAC;IAC5Bm0C,UAAU,CAACt3B,MAAM,CAAEmiB,YAAa,CAAC;EAElC;;EAEA;;EAEA,IAAIo/C,YAAY,GAAG,CAAC;EAEpB,SAASC,iBAAiBA,CAAA,EAAG;IAE5BD,YAAY,GAAG,CAAC;EAEjB;EAEA,SAAShwB,mBAAmBA,CAAA,EAAG;IAE9B,IAAMkwB,WAAW,GAAGF,YAAY;IAEhC,IAAKE,WAAW,IAAI1+B,WAAW,EAAG;MAEjCxzD,OAAO,CAACC,IAAI,CAAE,qCAAqC,GAAGiyF,WAAW,GAAG,8CAA8C,GAAG1+B,WAAY,CAAC;IAEnI;IAEAw+B,YAAY,IAAI,CAAC;IAEjB,OAAOE,WAAW;EAEnB;EAEA,SAASC,kBAAkBA,CAAEv+E,OAAO,EAAG;IAEtC,IAAM1Y,KAAK,GAAG,EAAE;IAEhBA,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAAC3E,KAAM,CAAC;IAC3B/T,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAAC1E,KAAM,CAAC;IAC3BhU,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAACiB,KAAK,IAAI,CAAE,CAAC;IAChC3Z,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAACzE,SAAU,CAAC;IAC/BjU,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAACxE,SAAU,CAAC;IAC/BlU,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAACtE,UAAW,CAAC;IAChCpU,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAAC9D,cAAe,CAAC;IACpC5U,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAACvE,MAAO,CAAC;IAC5BnU,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAACttB,IAAK,CAAC;IAC1B4U,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAAC3D,eAAgB,CAAC;IACrC/U,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAAC1D,gBAAiB,CAAC;IACtChV,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAACzD,KAAM,CAAC;IAC3BjV,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAACxD,eAAgB,CAAC;IACrClV,KAAK,CAACrR,IAAI,CAAE+pB,OAAO,CAAChI,UAAW,CAAC;IAEhC,OAAO1Q,KAAK,CAAC4tE,IAAI,CAAC,CAAC;EAEpB;;EAEA;;EAEA,SAASnE,YAAYA,CAAE/wD,OAAO,EAAEw+E,IAAI,EAAG;IAEtC,IAAMpB,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC;IAEnD,IAAKA,OAAO,CAACmlE,cAAc,EAAGsZ,kBAAkB,CAAEz+E,OAAQ,CAAC;IAE3D,IAAKA,OAAO,CAACrD,qBAAqB,KAAK,KAAK,IAAIqD,OAAO,CAAChG,OAAO,GAAG,CAAC,IAAIojF,iBAAiB,CAACsB,SAAS,KAAK1+E,OAAO,CAAChG,OAAO,EAAG;MAExH,IAAMpB,KAAK,GAAGoH,OAAO,CAACpH,KAAK;MAE3B,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErBxM,OAAO,CAACC,IAAI,CAAE,yEAA0E,CAAC;MAE1F,CAAC,MAAM,IAAKuM,KAAK,CAAClgB,QAAQ,KAAK,KAAK,EAAG;QAEtC0T,OAAO,CAACC,IAAI,CAAE,wEAAyE,CAAC;MAEzF,CAAC,MAAM;QAENsyF,aAAa,CAAEvB,iBAAiB,EAAEp9E,OAAO,EAAEw+E,IAAK,CAAC;QACjD;MAED;IAED;IAEAjqG,KAAK,CAAC0/F,WAAW,CAAEwF,GAAG,CAAC7E,UAAU,EAAEwI,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;EAE3F;EAEA,SAASntB,iBAAiBA,CAAErxD,OAAO,EAAEw+E,IAAI,EAAG;IAE3C,IAAMpB,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC;IAEnD,IAAKA,OAAO,CAAChG,OAAO,GAAG,CAAC,IAAIojF,iBAAiB,CAACsB,SAAS,KAAK1+E,OAAO,CAAChG,OAAO,EAAG;MAE7E2kF,aAAa,CAAEvB,iBAAiB,EAAEp9E,OAAO,EAAEw+E,IAAK,CAAC;MACjD;IAED;IAEAjqG,KAAK,CAAC0/F,WAAW,CAAEwF,GAAG,CAAClF,gBAAgB,EAAE6I,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;EAEjG;EAEA,SAASvtB,YAAYA,CAAEjxD,OAAO,EAAEw+E,IAAI,EAAG;IAEtC,IAAMpB,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC;IAEnD,IAAKA,OAAO,CAAChG,OAAO,GAAG,CAAC,IAAIojF,iBAAiB,CAACsB,SAAS,KAAK1+E,OAAO,CAAChG,OAAO,EAAG;MAE7E2kF,aAAa,CAAEvB,iBAAiB,EAAEp9E,OAAO,EAAEw+E,IAAK,CAAC;MACjD;IAED;IAEAjqG,KAAK,CAAC0/F,WAAW,CAAEwF,GAAG,CAACnF,UAAU,EAAE8I,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;EAE3F;EAEA,SAASrtB,cAAcA,CAAEnxD,OAAO,EAAEw+E,IAAI,EAAG;IAExC,IAAMpB,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC;IAEnD,IAAKA,OAAO,CAAChG,OAAO,GAAG,CAAC,IAAIojF,iBAAiB,CAACsB,SAAS,KAAK1+E,OAAO,CAAChG,OAAO,EAAG;MAE7E4kF,iBAAiB,CAAExB,iBAAiB,EAAEp9E,OAAO,EAAEw+E,IAAK,CAAC;MACrD;IAED;IAEAjqG,KAAK,CAAC0/F,WAAW,CAAEwF,GAAG,CAAC5E,gBAAgB,EAAEuI,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;EAEjG;EAEA,IAAMK,YAAY,IAAAlF,aAAA,OAAAliF,eAAA,CAAAkiF,aAAA,EACfp7F,cAAc,EAAIk7F,GAAG,CAACqF,MAAM,GAAArnF,eAAA,CAAAkiF,aAAA,EAC5Bn7F,mBAAmB,EAAIi7F,GAAG,CAACsF,aAAa,GAAAtnF,eAAA,CAAAkiF,aAAA,EACxCl7F,sBAAsB,EAAIg7F,GAAG,CAACuF,eAAe,GAAArF,aAAA,CAC/C;EAED,IAAMsF,UAAU,IAAArF,WAAA,OAAAniF,eAAA,CAAAmiF,WAAA,EACbl7F,aAAa,EAAI+6F,GAAG,CAACrF,OAAO,GAAA38E,eAAA,CAAAmiF,WAAA,EAC5Bj7F,0BAA0B,EAAI86F,GAAG,CAACyF,sBAAsB,GAAAznF,eAAA,CAAAmiF,WAAA,EACxD/6F,yBAAyB,EAAI46F,GAAG,CAAC0F,qBAAqB,GAAA1nF,eAAA,CAAAmiF,WAAA,EAEtD76F,YAAY,EAAI06F,GAAG,CAACuD,MAAM,GAAAvlF,eAAA,CAAAmiF,WAAA,EAC1B56F,yBAAyB,EAAIy6F,GAAG,CAAC2F,qBAAqB,GAAA3nF,eAAA,CAAAmiF,WAAA,EACtD16F,wBAAwB,EAAIu6F,GAAG,CAAC4F,oBAAoB,GAAAzF,WAAA,CACtD;EAED,IAAM0F,WAAW,IAAAzF,YAAA,OAAApiF,eAAA,CAAAoiF,YAAA,EACd10F,YAAY,EAAIs0F,GAAG,CAACpJ,KAAK,GAAA54E,eAAA,CAAAoiF,YAAA,EACzBn0F,aAAa,EAAI+zF,GAAG,CAACnJ,MAAM,GAAA74E,eAAA,CAAAoiF,YAAA,EAC3Bz0F,WAAW,EAAIq0F,GAAG,CAAClJ,IAAI,GAAA94E,eAAA,CAAAoiF,YAAA,EACvBv0F,gBAAgB,EAAIm0F,GAAG,CAACjJ,MAAM,GAAA/4E,eAAA,CAAAoiF,YAAA,EAC9Bx0F,YAAY,EAAIo0F,GAAG,CAAChJ,KAAK,GAAAh5E,eAAA,CAAAoiF,YAAA,EACzBp0F,mBAAmB,EAAIg0F,GAAG,CAAC/I,MAAM,GAAAj5E,eAAA,CAAAoiF,YAAA,EACjCt0F,cAAc,EAAIk0F,GAAG,CAAC9I,OAAO,GAAAl5E,eAAA,CAAAoiF,YAAA,EAC7Br0F,eAAe,EAAIi0F,GAAG,CAAC7I,QAAQ,GAAAiJ,YAAA,CACjC;EAED,SAAS0F,oBAAoBA,CAAEC,WAAW,EAAEx/E,OAAO,EAAE86E,YAAY,EAAG;IAEnE,IAAKA,YAAY,EAAG;MAEnBrB,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACgG,cAAc,EAAEZ,YAAY,CAAE7+E,OAAO,CAAC3E,KAAK,CAAG,CAAC;MACnFo+E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACiG,cAAc,EAAEb,YAAY,CAAE7+E,OAAO,CAAC1E,KAAK,CAAG,CAAC;MAEnF,IAAKkkF,WAAW,KAAK/F,GAAG,CAACnF,UAAU,IAAIkL,WAAW,KAAK/F,GAAG,CAAClF,gBAAgB,EAAG;QAE7EkF,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACkG,cAAc,EAAEd,YAAY,CAAE7+E,OAAO,CAACiB,KAAK,CAAG,CAAC;MAEpF;MAEAw4E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACpF,kBAAkB,EAAE4K,UAAU,CAAEj/E,OAAO,CAACzE,SAAS,CAAG,CAAC;MACzFk+E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACtF,kBAAkB,EAAE8K,UAAU,CAAEj/E,OAAO,CAACxE,SAAS,CAAG,CAAC;IAE1F,CAAC,MAAM;MAENi+E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACgG,cAAc,EAAEhG,GAAG,CAACsF,aAAc,CAAC;MACvEtF,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACiG,cAAc,EAAEjG,GAAG,CAACsF,aAAc,CAAC;MAEvE,IAAKS,WAAW,KAAK/F,GAAG,CAACnF,UAAU,IAAIkL,WAAW,KAAK/F,GAAG,CAAClF,gBAAgB,EAAG;QAE7EkF,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACkG,cAAc,EAAElG,GAAG,CAACsF,aAAc,CAAC;MAExE;MAEA,IAAK/+E,OAAO,CAAC3E,KAAK,KAAK7c,mBAAmB,IAAIwhB,OAAO,CAAC1E,KAAK,KAAK9c,mBAAmB,EAAG;QAErF4N,OAAO,CAACC,IAAI,CAAE,+HAAgI,CAAC;MAEhJ;MAEAotF,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACpF,kBAAkB,EAAE0I,cAAc,CAAE/8E,OAAO,CAACzE,SAAU,CAAE,CAAC;MAC7Fk+E,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACtF,kBAAkB,EAAE4I,cAAc,CAAE/8E,OAAO,CAACxE,SAAU,CAAE,CAAC;MAE7F,IAAKwE,OAAO,CAACxE,SAAS,KAAK9c,aAAa,IAAIshB,OAAO,CAACxE,SAAS,KAAKzc,YAAY,EAAG;QAEhFqN,OAAO,CAACC,IAAI,CAAE,iIAAkI,CAAC;MAElJ;IAED;IAEA,IAAK2T,OAAO,CAAC4/E,eAAe,EAAG;MAE9BnG,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACoG,oBAAoB,EAAEpG,GAAG,CAACqG,sBAAuB,CAAC;MACtFrG,GAAG,CAACvF,aAAa,CAAEsL,WAAW,EAAE/F,GAAG,CAACsG,oBAAoB,EAAET,WAAW,CAAEt/E,OAAO,CAAC4/E,eAAe,CAAG,CAAC;IAEnG;IAEA,IAAK1jD,UAAU,CAAC+iB,GAAG,CAAE,gCAAiC,CAAC,KAAK,IAAI,EAAG;MAElE,IAAMzE,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,gCAAiC,CAAC;MAEpE,IAAK4S,OAAO,CAACzE,SAAS,KAAK7c,aAAa,EAAG;MAC3C,IAAKshB,OAAO,CAACxE,SAAS,KAAK3c,yBAAyB,IAAImhB,OAAO,CAACxE,SAAS,KAAKtc,wBAAwB,EAAG;MACzG,IAAK8gB,OAAO,CAACttB,IAAI,KAAKgN,SAAS,IAAIw8C,UAAU,CAAC+iB,GAAG,CAAE,0BAA2B,CAAC,KAAK,KAAK,EAAG,OAAO,CAAC;MACpG,IAAK7Z,QAAQ,KAAK,KAAK,IAAMplC,OAAO,CAACttB,IAAI,KAAKiN,aAAa,IAAIu8C,UAAU,CAAC+iB,GAAG,CAAE,+BAAgC,CAAC,KAAK,KAAO,EAAG,OAAO,CAAC;;MAEvI,IAAKj/C,OAAO,CAACtE,UAAU,GAAG,CAAC,IAAIy4C,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC,CAACggF,mBAAmB,EAAG;QAE9EvG,GAAG,CAACwG,aAAa,CAAET,WAAW,EAAEhlC,SAAS,CAAC0lC,0BAA0B,EAAEv4F,IAAI,CAACY,GAAG,CAAEyX,OAAO,CAACtE,UAAU,EAAEypC,YAAY,CAAC6Z,gBAAgB,CAAC,CAAE,CAAE,CAAC;QACvI7K,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC,CAACggF,mBAAmB,GAAGhgF,OAAO,CAACtE,UAAU;MAEnE;IAED;EAED;EAEA,SAASykF,WAAWA,CAAE/C,iBAAiB,EAAEp9E,OAAO,EAAG;IAElD,IAAIogF,WAAW,GAAG,KAAK;IAEvB,IAAKhD,iBAAiB,CAACC,WAAW,KAAKnoG,SAAS,EAAG;MAElDkoG,iBAAiB,CAACC,WAAW,GAAG,IAAI;MAEpCr9E,OAAO,CAACtZ,gBAAgB,CAAE,SAAS,EAAEo8D,gBAAiB,CAAC;IAExD;;IAEA;;IAEA,IAAM/mD,MAAM,GAAGiE,OAAO,CAACjE,MAAM;IAC7B,IAAIuhF,aAAa,GAAGnD,QAAQ,CAAC/sF,GAAG,CAAE2O,MAAO,CAAC;IAE1C,IAAKuhF,aAAa,KAAKpoG,SAAS,EAAG;MAElCooG,aAAa,GAAG,CAAC,CAAC;MAClBnD,QAAQ,CAAChuF,GAAG,CAAE4P,MAAM,EAAEuhF,aAAc,CAAC;IAEtC;;IAEA;;IAEA,IAAM+C,eAAe,GAAG9B,kBAAkB,CAAEv+E,OAAQ,CAAC;IAErD,IAAKqgF,eAAe,KAAKjD,iBAAiB,CAACG,UAAU,EAAG;MAEvD;;MAEA,IAAKD,aAAa,CAAE+C,eAAe,CAAE,KAAKnrG,SAAS,EAAG;QAErD;;QAEAooG,aAAa,CAAE+C,eAAe,CAAE,GAAG;UAClCrgF,OAAO,EAAEy5E,GAAG,CAAC1F,aAAa,CAAC,CAAC;UAC5BxU,SAAS,EAAE;QACZ,CAAC;QAEDlqF,IAAI,CAAC00E,MAAM,CAAC7sD,QAAQ,EAAG;;QAEvB;QACA;;QAEAkjF,WAAW,GAAG,IAAI;MAEnB;MAEA9C,aAAa,CAAE+C,eAAe,CAAE,CAAC9gB,SAAS,EAAG;;MAE7C;MACA;;MAEA,IAAM8Y,YAAY,GAAGiF,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;MAElE,IAAKlF,YAAY,KAAKnjG,SAAS,EAAG;QAEjCooG,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE,CAAChe,SAAS,EAAG;QAE1D,IAAK8Y,YAAY,CAAC9Y,SAAS,KAAK,CAAC,EAAG;UAEnCie,aAAa,CAAEx9E,OAAQ,CAAC;QAEzB;MAED;;MAEA;;MAEAo9E,iBAAiB,CAACG,UAAU,GAAG8C,eAAe;MAC9CjD,iBAAiB,CAACK,cAAc,GAAGH,aAAa,CAAE+C,eAAe,CAAE,CAACrgF,OAAO;IAE5E;IAEA,OAAOogF,WAAW;EAEnB;EAEA,SAASzB,aAAaA,CAAEvB,iBAAiB,EAAEp9E,OAAO,EAAEw+E,IAAI,EAAG;IAE1D,IAAIgB,WAAW,GAAG/F,GAAG,CAAC7E,UAAU;IAEhC,IAAK50E,OAAO,CAACgB,kBAAkB,IAAIhB,OAAO,CAACsgF,wBAAwB,EAAGd,WAAW,GAAG/F,GAAG,CAAClF,gBAAgB;IACxG,IAAKv0E,OAAO,CAAC2B,eAAe,EAAG69E,WAAW,GAAG/F,GAAG,CAACnF,UAAU;IAE3D,IAAM8L,WAAW,GAAGD,WAAW,CAAE/C,iBAAiB,EAAEp9E,OAAQ,CAAC;IAC7D,IAAMjE,MAAM,GAAGiE,OAAO,CAACjE,MAAM;IAE7BxnB,KAAK,CAAC0/F,WAAW,CAAEuL,WAAW,EAAEpC,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;IAEvF,IAAM+B,gBAAgB,GAAGpsC,UAAU,CAAC/mD,GAAG,CAAE2O,MAAO,CAAC;IAEjD,IAAKA,MAAM,CAAC/B,OAAO,KAAKumF,gBAAgB,CAAC7B,SAAS,IAAI0B,WAAW,KAAK,IAAI,EAAG;MAE5E7rG,KAAK,CAAC0jG,aAAa,CAAEwB,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;MAE1C/E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACgH,mBAAmB,EAAEzgF,OAAO,CAACzD,KAAM,CAAC;MACzDk9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACiH,8BAA8B,EAAE1gF,OAAO,CAAC1D,gBAAiB,CAAC;MAC/Em9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACkH,gBAAgB,EAAE3gF,OAAO,CAACxD,eAAgB,CAAC;MAChEi9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACmH,kCAAkC,EAAEnH,GAAG,CAACoH,IAAK,CAAC;MAEnE,IAAMrG,eAAe,GAAGI,sBAAsB,CAAE56E,OAAQ,CAAC,IAAI26E,cAAc,CAAE36E,OAAO,CAACpH,KAAM,CAAC,KAAK,KAAK;MACtG,IAAIA,KAAK,GAAG2hF,WAAW,CAAEv6E,OAAO,CAACpH,KAAK,EAAE4hF,eAAe,EAAE,KAAK,EAAEx6B,cAAe,CAAC;MAChFpnD,KAAK,GAAGkoF,gBAAgB,CAAE9gF,OAAO,EAAEpH,KAAM,CAAC;MAE1C,IAAMkiF,YAAY,GAAGH,cAAc,CAAE/hF,KAAM,CAAC,IAAIwsC,QAAQ;QACvD81C,QAAQ,GAAGxB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACvE,MAAM,EAAEuE,OAAO,CAAChI,UAAW,CAAC;MAE/D,IAAImjF,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACttB,IAAK,CAAC;QACzCquG,gBAAgB,GAAG/F,iBAAiB,CAAEh7E,OAAO,CAAC9D,cAAc,EAAEg/E,QAAQ,EAAEC,MAAM,EAAEn7E,OAAO,CAAChI,UAAU,EAAEgI,OAAO,CAACmlE,cAAe,CAAC;MAE7Hoa,oBAAoB,CAAEC,WAAW,EAAEx/E,OAAO,EAAE86E,YAAa,CAAC;MAE1D,IAAIkG,MAAM;MACV,IAAMhlF,OAAO,GAAGgE,OAAO,CAAChE,OAAO;MAE/B,IAAMilF,aAAa,GAAK77C,QAAQ,IAAIplC,OAAO,CAACmlE,cAAc,KAAK,IAAM;MACrE,IAAM+b,cAAc,GAAKX,gBAAgB,CAAC7B,SAAS,KAAKxpG,SAAS,IAAQkrG,WAAW,KAAK,IAAM;MAC/F,IAAMe,MAAM,GAAGvE,YAAY,CAAE58E,OAAO,EAAEpH,KAAK,EAAEkiF,YAAa,CAAC;MAE3D,IAAK96E,OAAO,CAACohF,cAAc,EAAG;QAE7B;;QAEAL,gBAAgB,GAAGtH,GAAG,CAAC4H,eAAe;QAEtC,IAAKj8C,QAAQ,EAAG;UAEf,IAAKplC,OAAO,CAACttB,IAAI,KAAKgN,SAAS,EAAG;YAEjCqhG,gBAAgB,GAAGtH,GAAG,CAAC6H,kBAAkB;UAE1C,CAAC,MAAM,IAAKthF,OAAO,CAACttB,IAAI,KAAK+M,eAAe,EAAG;YAE9CshG,gBAAgB,GAAGtH,GAAG,CAAC8H,iBAAiB;UAEzC,CAAC,MAAM,IAAKvhF,OAAO,CAACttB,IAAI,KAAKoN,kBAAkB,EAAG;YAEjDihG,gBAAgB,GAAGtH,GAAG,CAAC+H,gBAAgB;UAExC,CAAC,MAAM;YAENT,gBAAgB,GAAGtH,GAAG,CAACgI,iBAAiB,CAAC,CAAC;UAE3C;QAED,CAAC,MAAM;UAEN,IAAKzhF,OAAO,CAACttB,IAAI,KAAKgN,SAAS,EAAG;YAEjC0M,OAAO,CAAChY,KAAK,CAAE,8DAA+D,CAAC;UAEhF;QAED;;QAEA;;QAEA,IAAK4rB,OAAO,CAACvE,MAAM,KAAKtb,WAAW,IAAI4gG,gBAAgB,KAAKtH,GAAG,CAAC4H,eAAe,EAAG;UAEjF;UACA;UACA;UACA,IAAKrhF,OAAO,CAACttB,IAAI,KAAK6M,iBAAiB,IAAIygB,OAAO,CAACttB,IAAI,KAAK+M,eAAe,EAAG;YAE7E2M,OAAO,CAACC,IAAI,CAAE,6FAA8F,CAAC;YAE7G2T,OAAO,CAACttB,IAAI,GAAG+M,eAAe;YAC9B07F,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACttB,IAAK,CAAC;UAEvC;QAED;QAEA,IAAKstB,OAAO,CAACvE,MAAM,KAAKrb,kBAAkB,IAAI2gG,gBAAgB,KAAKtH,GAAG,CAAC4H,eAAe,EAAG;UAExF;UACA;UACAN,gBAAgB,GAAGtH,GAAG,CAACiI,aAAa;;UAEpC;UACA;UACA;UACA,IAAK1hF,OAAO,CAACttB,IAAI,KAAKoN,kBAAkB,EAAG;YAE1CsM,OAAO,CAACC,IAAI,CAAE,kFAAmF,CAAC;YAElG2T,OAAO,CAACttB,IAAI,GAAGoN,kBAAkB;YACjCq7F,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACttB,IAAK,CAAC;UAEvC;QAED;;QAEA;;QAEA,IAAKwuG,cAAc,EAAG;UAErB,IAAKD,aAAa,EAAG;YAEpB1sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAEmM,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;UAErF,CAAC,MAAM;YAEN1kB,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAEmM,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;UAE9G;QAED;MAED,CAAC,MAAM,IAAKn7E,OAAO,CAACvF,aAAa,EAAG;QAEnC;QACA;QACA;;QAEA,IAAKuB,OAAO,CAACxlB,MAAM,GAAG,CAAC,IAAIskG,YAAY,EAAG;UAEzC,IAAKmG,aAAa,IAAIC,cAAc,EAAG;YAEtC3sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAEuM,MAAM,EAAEJ,gBAAgB,EAAE/kF,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEgD,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAO,CAAC;UAExG;UAEA,KAAM,IAAIxiB,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGvG,OAAO,CAACxlB,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;YAEpDuqG,MAAM,GAAGhlF,OAAO,CAAEvlB,CAAC,CAAE;YAErB,IAAKwqG,aAAa,EAAG;cAEpB1sG,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEn+F,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEuqG,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE6F,MAAM,CAACpnF,IAAK,CAAC;YAE3G,CAAC,MAAM;cAENrlB,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAEn+F,CAAC,EAAEsqG,gBAAgB,EAAEC,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE6F,MAAM,CAACpnF,IAAK,CAAC;YAEvH;UAED;UAEAoG,OAAO,CAAC3D,eAAe,GAAG,KAAK;QAEhC,CAAC,MAAM;UAEN,IAAK4kF,aAAa,EAAG;YAEpB,IAAKC,cAAc,EAAG;cAErB3sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAEuM,MAAM,EAAEJ,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;YAE1F;YAEA1kB,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEh8E,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEiiF,QAAQ,EAAEC,MAAM,EAAEviF,KAAK,CAACgB,IAAK,CAAC;UAExG,CAAC,MAAM;YAENrlB,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAEmM,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAEviF,KAAK,CAACgB,IAAK,CAAC;UAEpH;QAED;MAED,CAAC,MAAM,IAAKoG,OAAO,CAAC88E,mBAAmB,EAAG;QAEzC,IAAK98E,OAAO,CAACsgF,wBAAwB,EAAG;UAEvC,IAAKW,aAAa,IAAIC,cAAc,EAAG;YAEtC3sG,KAAK,CAACwkG,YAAY,CAAEU,GAAG,CAAClF,gBAAgB,EAAE4M,MAAM,EAAEJ,gBAAgB,EAAE/kF,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEgD,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAM,EAAEL,KAAK,CAACgH,KAAM,CAAC;UAE3H;UAEA,KAAM,IAAInpB,IAAC,GAAG,CAAC,EAAE8rB,IAAE,GAAGvG,OAAO,CAACxlB,MAAM,EAAEC,IAAC,GAAG8rB,IAAE,EAAE9rB,IAAC,EAAG,EAAG;YAEpDuqG,MAAM,GAAGhlF,OAAO,CAAEvlB,IAAC,CAAE;YAErB,IAAKupB,OAAO,CAACvE,MAAM,KAAKzb,UAAU,EAAG;cAEpC,IAAKk7F,QAAQ,KAAK,IAAI,EAAG;gBAExB,IAAK+F,aAAa,EAAG;kBAEpB1sG,KAAK,CAACskG,uBAAuB,CAAEY,GAAG,CAAClF,gBAAgB,EAAE99F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEuqG,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAEs7E,QAAQ,EAAE8F,MAAM,CAACpnF,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;gBAEzI,CAAC,MAAM;kBAENrlB,KAAK,CAACkkG,oBAAoB,CAAEgB,GAAG,CAAClF,gBAAgB,EAAE99F,IAAC,EAAEsqG,gBAAgB,EAAEC,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEohF,MAAM,CAACpnF,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;gBAExI;cAED,CAAC,MAAM;gBAENxN,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;cAEjH;YAED,CAAC,MAAM;cAEN,IAAK40F,aAAa,EAAG;gBAEpB1sG,KAAK,CAACokG,aAAa,CAAEc,GAAG,CAAClF,gBAAgB,EAAE99F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEuqG,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAEs7E,QAAQ,EAAEC,MAAM,EAAE6F,MAAM,CAACpnF,IAAK,CAAC;cAEjI,CAAC,MAAM;gBAENrlB,KAAK,CAACigG,UAAU,CAAEiF,GAAG,CAAClF,gBAAgB,EAAE99F,IAAC,EAAEsqG,gBAAgB,EAAEC,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEs7E,QAAQ,EAAEC,MAAM,EAAE6F,MAAM,CAACpnF,IAAK,CAAC;cAE1I;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAKqnF,aAAa,IAAIC,cAAc,EAAG;YAEtC3sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAEuM,MAAM,EAAEJ,gBAAgB,EAAE/kF,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEgD,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAO,CAAC;UAExG;UAEA,KAAM,IAAIxiB,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAGvG,OAAO,CAACxlB,MAAM,EAAEC,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAG;YAEpDuqG,MAAM,GAAGhlF,OAAO,CAAEvlB,IAAC,CAAE;YAErB,IAAKupB,OAAO,CAACvE,MAAM,KAAKzb,UAAU,EAAG;cAEpC,IAAKk7F,QAAQ,KAAK,IAAI,EAAG;gBAExB,IAAK+F,aAAa,EAAG;kBAEpB1sG,KAAK,CAACqkG,uBAAuB,CAAEa,GAAG,CAAC7E,UAAU,EAAEn+F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEuqG,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEiiF,QAAQ,EAAE8F,MAAM,CAACpnF,IAAK,CAAC;gBAE7G,CAAC,MAAM;kBAENrlB,KAAK,CAACikG,oBAAoB,CAAEiB,GAAG,CAAC7E,UAAU,EAAEn+F,IAAC,EAAEsqG,gBAAgB,EAAEC,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAE,CAAC,EAAE+nF,MAAM,CAACpnF,IAAK,CAAC;gBAE/G;cAED,CAAC,MAAM;gBAENxN,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;cAEjH;YAED,CAAC,MAAM;cAEN,IAAK40F,aAAa,EAAG;gBAEpB1sG,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEn+F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEuqG,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE6F,MAAM,CAACpnF,IAAK,CAAC;cAE3G,CAAC,MAAM;gBAENrlB,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAEn+F,IAAC,EAAEsqG,gBAAgB,EAAEC,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE6F,MAAM,CAACpnF,IAAK,CAAC;cAEvH;YAED;UAED;QAED;MAED,CAAC,MAAM,IAAKoG,OAAO,CAACgB,kBAAkB,EAAG;QAExC,IAAKigF,aAAa,EAAG;UAEpB,IAAKC,cAAc,EAAG;YAErB3sG,KAAK,CAACwkG,YAAY,CAAEU,GAAG,CAAClF,gBAAgB,EAAE4M,MAAM,EAAEJ,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAM,CAAC;UAE7G;UAEArrB,KAAK,CAACokG,aAAa,CAAEc,GAAG,CAAClF,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE37E,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAEs7E,QAAQ,EAAEC,MAAM,EAAEviF,KAAK,CAACgB,IAAK,CAAC;QAE9H,CAAC,MAAM;UAENrlB,KAAK,CAACigG,UAAU,CAAEiF,GAAG,CAAClF,gBAAgB,EAAE,CAAC,EAAEwM,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEs7E,QAAQ,EAAEC,MAAM,EAAEviF,KAAK,CAACgB,IAAK,CAAC;QAEvI;MAED,CAAC,MAAM,IAAKoG,OAAO,CAAC2B,eAAe,EAAG;QAErC,IAAKs/E,aAAa,EAAG;UAEpB,IAAKC,cAAc,EAAG;YAErB3sG,KAAK,CAACwkG,YAAY,CAAEU,GAAG,CAACnF,UAAU,EAAE6M,MAAM,EAAEJ,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAM,CAAC;UAEvG;UAEArrB,KAAK,CAACokG,aAAa,CAAEc,GAAG,CAACnF,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE17E,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAEs7E,QAAQ,EAAEC,MAAM,EAAEviF,KAAK,CAACgB,IAAK,CAAC;QAExH,CAAC,MAAM;UAENrlB,KAAK,CAACigG,UAAU,CAAEiF,GAAG,CAACnF,UAAU,EAAE,CAAC,EAAEyM,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEs7E,QAAQ,EAAEC,MAAM,EAAEviF,KAAK,CAACgB,IAAK,CAAC;QAEjI;MAED,CAAC,MAAM,IAAKoG,OAAO,CAAC68E,oBAAoB,EAAG;QAE1C,IAAKqE,cAAc,EAAG;UAErB,IAAKD,aAAa,EAAG;YAEpB1sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAEuM,MAAM,EAAEJ,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;UAE1F,CAAC,MAAM;YAEN,IAAID,KAAK,GAAGJ,KAAK,CAACI,KAAK;cAAEC,MAAM,GAAGL,KAAK,CAACK,MAAM;YAE9C,KAAM,IAAIxiB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG0qG,MAAM,EAAE1qG,IAAC,EAAG,EAAG;cAEnClC,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAEn+F,IAAC,EAAEsqG,gBAAgB,EAAE/nF,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;cAEjGniF,KAAK,KAAK,CAAC;cACXC,MAAM,KAAK,CAAC;YAEb;UAED;QAED;MAED,CAAC,MAAM;QAEN;;QAEA;QACA;QACA;;QAEA,IAAK+C,OAAO,CAACxlB,MAAM,GAAG,CAAC,IAAIskG,YAAY,EAAG;UAEzC,IAAKmG,aAAa,IAAIC,cAAc,EAAG;YAEtC3sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAEuM,MAAM,EAAEJ,gBAAgB,EAAE/kF,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEgD,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAO,CAAC;UAExG;UAEA,KAAM,IAAIxiB,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAGvG,OAAO,CAACxlB,MAAM,EAAEC,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAG;YAEpDuqG,MAAM,GAAGhlF,OAAO,CAAEvlB,IAAC,CAAE;YAErB,IAAKwqG,aAAa,EAAG;cAEpB1sG,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEn+F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEykG,QAAQ,EAAEC,MAAM,EAAE6F,MAAO,CAAC;YAEzE,CAAC,MAAM;cAENzsG,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAEn+F,IAAC,EAAEsqG,gBAAgB,EAAE7F,QAAQ,EAAEC,MAAM,EAAE6F,MAAO,CAAC;YAElF;UAED;UAEAhhF,OAAO,CAAC3D,eAAe,GAAG,KAAK;QAEhC,CAAC,MAAM;UAEN,IAAK4kF,aAAa,EAAG;YAEpB,IAAKC,cAAc,EAAG;cAErB3sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC7E,UAAU,EAAEuM,MAAM,EAAEJ,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;YAE1F;YAEA1kB,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEsG,QAAQ,EAAEC,MAAM,EAAEviF,KAAM,CAAC;UAExE,CAAC,MAAM;YAENrkB,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC7E,UAAU,EAAE,CAAC,EAAEmM,gBAAgB,EAAE7F,QAAQ,EAAEC,MAAM,EAAEviF,KAAM,CAAC;UAEjF;QAED;MAED;MAEA,IAAKiiF,2BAA2B,CAAE76E,OAAO,EAAE86E,YAAa,CAAC,EAAG;QAE3DC,cAAc,CAAEyE,WAAY,CAAC;MAE9B;MAEAe,gBAAgB,CAAC7B,SAAS,GAAG3iF,MAAM,CAAC/B,OAAO;MAE3C,IAAKgG,OAAO,CAACtD,QAAQ,EAAGsD,OAAO,CAACtD,QAAQ,CAAEsD,OAAQ,CAAC;IAEpD;IAEAo9E,iBAAiB,CAACsB,SAAS,GAAG1+E,OAAO,CAAChG,OAAO;EAE9C;EAEA,SAAS4kF,iBAAiBA,CAAExB,iBAAiB,EAAEp9E,OAAO,EAAEw+E,IAAI,EAAG;IAE9D,IAAKx+E,OAAO,CAACpH,KAAK,CAACpiB,MAAM,KAAK,CAAC,EAAG;IAElC,IAAM4pG,WAAW,GAAGD,WAAW,CAAE/C,iBAAiB,EAAEp9E,OAAQ,CAAC;IAC7D,IAAMjE,MAAM,GAAGiE,OAAO,CAACjE,MAAM;IAE7BxnB,KAAK,CAAC0/F,WAAW,CAAEwF,GAAG,CAAC5E,gBAAgB,EAAEuI,iBAAiB,CAACK,cAAc,EAAEhE,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;IAEhG,IAAM+B,gBAAgB,GAAGpsC,UAAU,CAAC/mD,GAAG,CAAE2O,MAAO,CAAC;IAEjD,IAAKA,MAAM,CAAC/B,OAAO,KAAKumF,gBAAgB,CAAC7B,SAAS,IAAI0B,WAAW,KAAK,IAAI,EAAG;MAE5E7rG,KAAK,CAAC0jG,aAAa,CAAEwB,GAAG,CAACtB,QAAQ,GAAGqG,IAAK,CAAC;MAE1C/E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACgH,mBAAmB,EAAEzgF,OAAO,CAACzD,KAAM,CAAC;MACzDk9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACiH,8BAA8B,EAAE1gF,OAAO,CAAC1D,gBAAiB,CAAC;MAC/Em9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACkH,gBAAgB,EAAE3gF,OAAO,CAACxD,eAAgB,CAAC;MAChEi9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACmH,kCAAkC,EAAEnH,GAAG,CAACoH,IAAK,CAAC;MAEnE,IAAMc,YAAY,GAAK3hF,OAAO,CAAC88E,mBAAmB,IAAI98E,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,CAACkkF,mBAAqB;MAC9F,IAAMriF,aAAa,GAAKuF,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,IAAIoH,OAAO,CAACpH,KAAK,CAAE,CAAC,CAAE,CAAC6B,aAAe;MAEhF,IAAMmnF,SAAS,GAAG,EAAE;MAEpB,KAAM,IAAInrG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK,CAAEkrG,YAAY,IAAI,CAAElnF,aAAa,EAAG;UAExCmnF,SAAS,CAAEnrG,CAAC,CAAE,GAAG8jG,WAAW,CAAEv6E,OAAO,CAACpH,KAAK,CAAEniB,CAAC,CAAE,EAAE,KAAK,EAAE,IAAI,EAAEypE,cAAe,CAAC;QAEhF,CAAC,MAAM;UAEN0hC,SAAS,CAAEnrG,CAAC,CAAE,GAAGgkB,aAAa,GAAGuF,OAAO,CAACpH,KAAK,CAAEniB,CAAC,CAAE,CAACmiB,KAAK,GAAGoH,OAAO,CAACpH,KAAK,CAAEniB,CAAC,CAAE;QAE/E;QAEAmrG,SAAS,CAAEnrG,CAAC,CAAE,GAAGqqG,gBAAgB,CAAE9gF,OAAO,EAAE4hF,SAAS,CAAEnrG,CAAC,CAAG,CAAC;MAE7D;MAEA,IAAMmiB,KAAK,GAAGgpF,SAAS,CAAE,CAAC,CAAE;QAC3B9G,YAAY,GAAGH,cAAc,CAAE/hF,KAAM,CAAC,IAAIwsC,QAAQ;QAClD81C,QAAQ,GAAGxB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACvE,MAAM,EAAEuE,OAAO,CAAChI,UAAW,CAAC;QAC9DmjF,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACttB,IAAK,CAAC;QACtCquG,gBAAgB,GAAG/F,iBAAiB,CAAEh7E,OAAO,CAAC9D,cAAc,EAAEg/E,QAAQ,EAAEC,MAAM,EAAEn7E,OAAO,CAAChI,UAAW,CAAC;MAErG,IAAMipF,aAAa,GAAK77C,QAAQ,IAAIplC,OAAO,CAACmlE,cAAc,KAAK,IAAM;MACrE,IAAM+b,cAAc,GAAKX,gBAAgB,CAAC7B,SAAS,KAAKxpG,SAAS,IAAQkrG,WAAW,KAAK,IAAM;MAC/F,IAAIe,MAAM,GAAGvE,YAAY,CAAE58E,OAAO,EAAEpH,KAAK,EAAEkiF,YAAa,CAAC;MAEzDyE,oBAAoB,CAAE9F,GAAG,CAAC5E,gBAAgB,EAAE70E,OAAO,EAAE86E,YAAa,CAAC;MAEnE,IAAI9+E,OAAO;MAEX,IAAK2lF,YAAY,EAAG;QAEnB,IAAKV,aAAa,IAAIC,cAAc,EAAG;UAEtC3sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC5E,gBAAgB,EAAEsM,MAAM,EAAEJ,gBAAgB,EAAEnoF,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;QAEhG;QAEA,KAAM,IAAIxiB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9BulB,OAAO,GAAG4lF,SAAS,CAAEnrG,IAAC,CAAE,CAACulB,OAAO;UAEhC,KAAM,IAAIyS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzS,OAAO,CAACxlB,MAAM,EAAEi4B,CAAC,EAAG,EAAG;YAE3C,IAAMuyE,MAAM,GAAGhlF,OAAO,CAAEyS,CAAC,CAAE;YAE3B,IAAKzO,OAAO,CAACvE,MAAM,KAAKzb,UAAU,EAAG;cAEpC,IAAKk7F,QAAQ,KAAK,IAAI,EAAG;gBAExB,IAAK+F,aAAa,EAAG;kBAEpB1sG,KAAK,CAACqkG,uBAAuB,CAAEa,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEg4B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEuyE,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEiiF,QAAQ,EAAE8F,MAAM,CAACpnF,IAAK,CAAC;gBAElI,CAAC,MAAM;kBAENrlB,KAAK,CAACikG,oBAAoB,CAAEiB,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEg4B,CAAC,EAAEsyE,gBAAgB,EAAEC,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAE,CAAC,EAAE+nF,MAAM,CAACpnF,IAAK,CAAC;gBAEpI;cAED,CAAC,MAAM;gBAENxN,OAAO,CAACC,IAAI,CAAE,iGAAkG,CAAC;cAElH;YAED,CAAC,MAAM;cAEN,IAAK40F,aAAa,EAAG;gBAEpB1sG,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEg4B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEuyE,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE6F,MAAM,CAACpnF,IAAK,CAAC;cAEhI,CAAC,MAAM;gBAENrlB,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEg4B,CAAC,EAAEsyE,gBAAgB,EAAEC,MAAM,CAAChoF,KAAK,EAAEgoF,MAAM,CAAC/nF,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE6F,MAAM,CAACpnF,IAAK,CAAC;cAE5I;YAED;UAED;QAED;MAED,CAAC,MAAM;QAENoC,OAAO,GAAGgE,OAAO,CAAChE,OAAO;QAEzB,IAAKilF,aAAa,IAAIC,cAAc,EAAG;UAEtC;UACA;UACA;;UAEA,IAAKllF,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG2qG,MAAM,EAAG;UAEnC5sG,KAAK,CAACukG,YAAY,CAAEW,GAAG,CAAC5E,gBAAgB,EAAEsM,MAAM,EAAEJ,gBAAgB,EAAEa,SAAS,CAAE,CAAC,CAAE,CAAC5oF,KAAK,EAAE4oF,SAAS,CAAE,CAAC,CAAE,CAAC3oF,MAAO,CAAC;QAElH;QAEA,KAAM,IAAIxiB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9B,IAAKgkB,aAAa,EAAG;YAEpB,IAAKwmF,aAAa,EAAG;cAEpB1sG,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEmrG,SAAS,CAAEnrG,IAAC,CAAE,CAACuiB,KAAK,EAAE4oF,SAAS,CAAEnrG,IAAC,CAAE,CAACwiB,MAAM,EAAEiiF,QAAQ,EAAEC,MAAM,EAAEyG,SAAS,CAAEnrG,IAAC,CAAE,CAACmjB,IAAK,CAAC;YAExJ,CAAC,MAAM;cAENrlB,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAE,CAAC,EAAEsqG,gBAAgB,EAAEa,SAAS,CAAEnrG,IAAC,CAAE,CAACuiB,KAAK,EAAE4oF,SAAS,CAAEnrG,IAAC,CAAE,CAACwiB,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAEyG,SAAS,CAAEnrG,IAAC,CAAE,CAACmjB,IAAK,CAAC;YAEpK;YAEA,KAAM,IAAI6U,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGzS,OAAO,CAACxlB,MAAM,EAAEi4B,GAAC,EAAG,EAAG;cAE3C,IAAMuyE,OAAM,GAAGhlF,OAAO,CAAEyS,GAAC,CAAE;cAC3B,IAAMozE,WAAW,GAAGb,OAAM,CAACpoF,KAAK,CAAEniB,IAAC,CAAE,CAACmiB,KAAK;cAE3C,IAAKqoF,aAAa,EAAG;gBAEpB1sG,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEg4B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEozE,WAAW,CAAC7oF,KAAK,EAAE6oF,WAAW,CAAC5oF,MAAM,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE0G,WAAW,CAACjoF,IAAK,CAAC;cAEnJ,CAAC,MAAM;gBAENrlB,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEg4B,GAAC,GAAG,CAAC,EAAEsyE,gBAAgB,EAAEc,WAAW,CAAC7oF,KAAK,EAAE6oF,WAAW,CAAC5oF,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE0G,WAAW,CAACjoF,IAAK,CAAC;cAE/J;YAED;UAED,CAAC,MAAM;YAEN,IAAKqnF,aAAa,EAAG;cAEpB1sG,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEykG,QAAQ,EAAEC,MAAM,EAAEyG,SAAS,CAAEnrG,IAAC,CAAG,CAAC;YAEtG,CAAC,MAAM;cAENlC,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAE,CAAC,EAAEsqG,gBAAgB,EAAE7F,QAAQ,EAAEC,MAAM,EAAEyG,SAAS,CAAEnrG,IAAC,CAAG,CAAC;YAE/G;YAEA,KAAM,IAAIg4B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGzS,OAAO,CAACxlB,MAAM,EAAEi4B,GAAC,EAAG,EAAG;cAE3C,IAAMuyE,QAAM,GAAGhlF,OAAO,CAAEyS,GAAC,CAAE;cAE3B,IAAKwyE,aAAa,EAAG;gBAEpB1sG,KAAK,CAACmkG,aAAa,CAAEe,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEg4B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEysE,QAAQ,EAAEC,MAAM,EAAE6F,QAAM,CAACpoF,KAAK,CAAEniB,IAAC,CAAG,CAAC;cAE7G,CAAC,MAAM;gBAENlC,KAAK,CAACmgG,UAAU,CAAE+E,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEg4B,GAAC,GAAG,CAAC,EAAEsyE,gBAAgB,EAAE7F,QAAQ,EAAEC,MAAM,EAAE6F,QAAM,CAACpoF,KAAK,CAAEniB,IAAC,CAAG,CAAC;cAEtH;YAED;UAED;QAED;MAED;MAEA,IAAKokG,2BAA2B,CAAE76E,OAAO,EAAE86E,YAAa,CAAC,EAAG;QAE3D;QACAC,cAAc,CAAEtB,GAAG,CAAC5E,gBAAiB,CAAC;MAEvC;MAEA0L,gBAAgB,CAAC7B,SAAS,GAAG3iF,MAAM,CAAC/B,OAAO;MAE3C,IAAKgG,OAAO,CAACtD,QAAQ,EAAGsD,OAAO,CAACtD,QAAQ,CAAEsD,OAAQ,CAAC;IAEpD;IAEAo9E,iBAAiB,CAACsB,SAAS,GAAG1+E,OAAO,CAAChG,OAAO;EAE9C;;EAEA;;EAEA;EACA,SAAS8nF,uBAAuBA,CAAE3M,WAAW,EAAEn2C,YAAY,EAAEh/B,OAAO,EAAE+hF,UAAU,EAAEC,aAAa,EAAEpE,KAAK,EAAG;IAExG,IAAM1C,QAAQ,GAAGxB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACvE,MAAM,EAAEuE,OAAO,CAAChI,UAAW,CAAC;IACpE,IAAMmjF,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACttB,IAAK,CAAC;IAC5C,IAAMquG,gBAAgB,GAAG/F,iBAAiB,CAAEh7E,OAAO,CAAC9D,cAAc,EAAEg/E,QAAQ,EAAEC,MAAM,EAAEn7E,OAAO,CAAChI,UAAW,CAAC;IAC1G,IAAM0lF,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;IAE7D,IAAK,CAAE0+C,sBAAsB,CAACuE,qBAAqB,EAAG;MAErD,IAAMjpF,KAAK,GAAGrR,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEw2C,YAAY,CAAChmC,KAAK,IAAI4kF,KAAM,CAAC;MACxD,IAAM3kF,MAAM,GAAGtR,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEw2C,YAAY,CAAC/lC,MAAM,IAAI2kF,KAAM,CAAC;MAE1D,IAAKoE,aAAa,KAAKvI,GAAG,CAACnF,UAAU,IAAI0N,aAAa,KAAKvI,GAAG,CAAClF,gBAAgB,EAAG;QAEjFhgG,KAAK,CAACigG,UAAU,CAAEwN,aAAa,EAAEpE,KAAK,EAAEmD,gBAAgB,EAAE/nF,KAAK,EAAEC,MAAM,EAAE+lC,YAAY,CAACp/B,KAAK,EAAE,CAAC,EAAEs7E,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;MAEzH,CAAC,MAAM;QAEN5mG,KAAK,CAACmgG,UAAU,CAAEsN,aAAa,EAAEpE,KAAK,EAAEmD,gBAAgB,EAAE/nF,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAEiiF,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;MAErG;IAED;IAEA5mG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,WAAY,CAAC;IAErD,IAAK+M,kBAAkB,CAAEljD,YAAa,CAAC,EAAG;MAEzC86C,kBAAkB,CAACqI,kCAAkC,CAAE1I,GAAG,CAACpE,WAAW,EAAE0M,UAAU,EAAEC,aAAa,EAAE7tC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC,CAACy9E,cAAc,EAAE,CAAC,EAAE2E,sBAAsB,CAAEpjD,YAAa,CAAE,CAAC;IAEzL,CAAC,MAAM,IAAKgjD,aAAa,KAAKvI,GAAG,CAAC7E,UAAU,IAAMoN,aAAa,IAAIvI,GAAG,CAAC3E,2BAA2B,IAAIkN,aAAa,IAAIvI,GAAG,CAAC4I,2BAA6B,EAAG;MAAE;;MAE5J5I,GAAG,CAAC6I,oBAAoB,CAAE7I,GAAG,CAACpE,WAAW,EAAE0M,UAAU,EAAEC,aAAa,EAAE7tC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC,CAACy9E,cAAc,EAAEG,KAAM,CAAC;IAExH;IAEArpG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAE,IAAK,CAAC;EAE/C;;EAGA;EACA,SAASkN,wBAAwBA,CAAEC,YAAY,EAAExjD,YAAY,EAAEyjD,aAAa,EAAG;IAE9EhJ,GAAG,CAACiJ,gBAAgB,CAAEjJ,GAAG,CAACkJ,YAAY,EAAEH,YAAa,CAAC;IAEtD,IAAKxjD,YAAY,CAAC/+B,WAAW,IAAI,CAAE++B,YAAY,CAAC9+B,aAAa,EAAG;MAE/D,IAAI6gF,gBAAgB,GAAGtH,GAAG,CAACgI,iBAAiB;MAE5C,IAAKgB,aAAa,IAAIP,kBAAkB,CAAEljD,YAAa,CAAC,EAAG;QAE1D,IAAM7+B,YAAY,GAAG6+B,YAAY,CAAC7+B,YAAY;QAE9C,IAAKA,YAAY,IAAIA,YAAY,CAACihF,cAAc,EAAG;UAElD,IAAKjhF,YAAY,CAACztB,IAAI,KAAKgN,SAAS,EAAG;YAEtCqhG,gBAAgB,GAAGtH,GAAG,CAAC6H,kBAAkB;UAE1C,CAAC,MAAM,IAAKnhF,YAAY,CAACztB,IAAI,KAAK+M,eAAe,EAAG;YAEnDshG,gBAAgB,GAAGtH,GAAG,CAAC8H,iBAAiB;UAEzC;QAED;QAEA,IAAMnhF,OAAO,GAAGgiF,sBAAsB,CAAEpjD,YAAa,CAAC;QAEtD,IAAKkjD,kBAAkB,CAAEljD,YAAa,CAAC,EAAG;UAEzC86C,kBAAkB,CAAC8I,iCAAiC,CAAEnJ,GAAG,CAACkJ,YAAY,EAAEviF,OAAO,EAAE2gF,gBAAgB,EAAE/hD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;QAE7I,CAAC,MAAM;UAENwgF,GAAG,CAACoJ,8BAA8B,CAAEpJ,GAAG,CAACkJ,YAAY,EAAEviF,OAAO,EAAE2gF,gBAAgB,EAAE/hD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;QAE3H;MAED,CAAC,MAAM;QAENwgF,GAAG,CAACqJ,mBAAmB,CAAErJ,GAAG,CAACkJ,YAAY,EAAE5B,gBAAgB,EAAE/hD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;MAEvG;MAEAwgF,GAAG,CAACsJ,uBAAuB,CAAEtJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACuJ,gBAAgB,EAAEvJ,GAAG,CAACkJ,YAAY,EAAEH,YAAa,CAAC;IAErG,CAAC,MAAM,IAAKxjD,YAAY,CAAC/+B,WAAW,IAAI++B,YAAY,CAAC9+B,aAAa,EAAG;MAEpE,IAAME,QAAO,GAAGgiF,sBAAsB,CAAEpjD,YAAa,CAAC;MAEtD,IAAKyjD,aAAa,IAAIP,kBAAkB,CAAEljD,YAAa,CAAC,KAAK,KAAK,EAAG;QAEpEy6C,GAAG,CAACoJ,8BAA8B,CAAEpJ,GAAG,CAACkJ,YAAY,EAAEviF,QAAO,EAAEq5E,GAAG,CAAC+H,gBAAgB,EAAExiD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;MAE/H,CAAC,MAAM,IAAKipF,kBAAkB,CAAEljD,YAAa,CAAC,EAAG;QAEhD86C,kBAAkB,CAAC8I,iCAAiC,CAAEnJ,GAAG,CAACkJ,YAAY,EAAEviF,QAAO,EAAEq5E,GAAG,CAAC+H,gBAAgB,EAAExiD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;MAEjJ,CAAC,MAAM;QAENwgF,GAAG,CAACqJ,mBAAmB,CAAErJ,GAAG,CAACkJ,YAAY,EAAElJ,GAAG,CAACiI,aAAa,EAAE1iD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;MAExG;MAGAwgF,GAAG,CAACsJ,uBAAuB,CAAEtJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACwJ,wBAAwB,EAAExJ,GAAG,CAACkJ,YAAY,EAAEH,YAAa,CAAC;IAE7G,CAAC,MAAM;MAEN,IAAMtlF,QAAQ,GAAG8hC,YAAY,CAAC18B,4BAA4B,KAAK,IAAI,GAAG08B,YAAY,CAACh/B,OAAO,GAAG,CAAEg/B,YAAY,CAACh/B,OAAO,CAAE;MAErH,KAAM,IAAIvpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGymB,QAAQ,CAAC1mB,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE5C,IAAMupB,OAAO,GAAG9C,QAAQ,CAAEzmB,CAAC,CAAE;QAE7B,IAAMykG,QAAQ,GAAGxB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACvE,MAAM,EAAEuE,OAAO,CAAChI,UAAW,CAAC;QACpE,IAAMmjF,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAE+H,OAAO,CAACttB,IAAK,CAAC;QAC5C,IAAMquG,iBAAgB,GAAG/F,iBAAiB,CAAEh7E,OAAO,CAAC9D,cAAc,EAAEg/E,QAAQ,EAAEC,MAAM,EAAEn7E,OAAO,CAAChI,UAAW,CAAC;QAC1G,IAAMoI,SAAO,GAAGgiF,sBAAsB,CAAEpjD,YAAa,CAAC;QAEtD,IAAKyjD,aAAa,IAAIP,kBAAkB,CAAEljD,YAAa,CAAC,KAAK,KAAK,EAAG;UAEpEy6C,GAAG,CAACoJ,8BAA8B,CAAEpJ,GAAG,CAACkJ,YAAY,EAAEviF,SAAO,EAAE2gF,iBAAgB,EAAE/hD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;QAE3H,CAAC,MAAM,IAAKipF,kBAAkB,CAAEljD,YAAa,CAAC,EAAG;UAEhD86C,kBAAkB,CAAC8I,iCAAiC,CAAEnJ,GAAG,CAACkJ,YAAY,EAAEviF,SAAO,EAAE2gF,iBAAgB,EAAE/hD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;QAE7I,CAAC,MAAM;UAENwgF,GAAG,CAACqJ,mBAAmB,CAAErJ,GAAG,CAACkJ,YAAY,EAAE5B,iBAAgB,EAAE/hD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;QAEvG;MAED;IAED;IAEAwgF,GAAG,CAACiJ,gBAAgB,CAAEjJ,GAAG,CAACkJ,YAAY,EAAE,IAAK,CAAC;EAE/C;;EAEA;EACA,SAASO,iBAAiBA,CAAE/N,WAAW,EAAEn2C,YAAY,EAAG;IAEvD,IAAMmkD,MAAM,GAAKnkD,YAAY,IAAIA,YAAY,CAACiC,uBAAyB;IACvE,IAAKkiD,MAAM,EAAG,MAAM,IAAI3uG,KAAK,CAAE,yDAA0D,CAAC;IAE1FD,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,WAAY,CAAC;IAErD,IAAK,EAAIn2C,YAAY,CAAC7+B,YAAY,IAAI6+B,YAAY,CAAC7+B,YAAY,CAACihF,cAAc,CAAE,EAAG;MAElF,MAAM,IAAI5sG,KAAK,CAAE,qEAAsE,CAAC;IAEzF;;IAEA;IACA,IAAK,CAAE2/D,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAY,CAAC7+B,YAAa,CAAC,CAACs9E,cAAc,IAC/Dz+C,YAAY,CAAC7+B,YAAY,CAACvH,KAAK,CAACI,KAAK,KAAKgmC,YAAY,CAAChmC,KAAK,IAC5DgmC,YAAY,CAAC7+B,YAAY,CAACvH,KAAK,CAACK,MAAM,KAAK+lC,YAAY,CAAC/lC,MAAM,EAAG;MAElE+lC,YAAY,CAAC7+B,YAAY,CAACvH,KAAK,CAACI,KAAK,GAAGgmC,YAAY,CAAChmC,KAAK;MAC1DgmC,YAAY,CAAC7+B,YAAY,CAACvH,KAAK,CAACK,MAAM,GAAG+lC,YAAY,CAAC/lC,MAAM;MAC5D+lC,YAAY,CAAC7+B,YAAY,CAAClD,WAAW,GAAG,IAAI;IAE7C;IAEA8zD,YAAY,CAAE/xB,YAAY,CAAC7+B,YAAY,EAAE,CAAE,CAAC;IAE5C,IAAMijF,iBAAiB,GAAGjvC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAY,CAAC7+B,YAAa,CAAC,CAACs9E,cAAc;IACpF,IAAMr9E,OAAO,GAAGgiF,sBAAsB,CAAEpjD,YAAa,CAAC;IAEtD,IAAKA,YAAY,CAAC7+B,YAAY,CAAC1E,MAAM,KAAKtb,WAAW,EAAG;MAEvD,IAAK+hG,kBAAkB,CAAEljD,YAAa,CAAC,EAAG;QAEzC86C,kBAAkB,CAACqI,kCAAkC,CAAE1I,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACuJ,gBAAgB,EAAEvJ,GAAG,CAAC7E,UAAU,EAAEwO,iBAAiB,EAAE,CAAC,EAAEhjF,OAAQ,CAAC;MAE9I,CAAC,MAAM;QAENq5E,GAAG,CAAC6I,oBAAoB,CAAE7I,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACuJ,gBAAgB,EAAEvJ,GAAG,CAAC7E,UAAU,EAAEwO,iBAAiB,EAAE,CAAE,CAAC;MAExG;IAED,CAAC,MAAM,IAAKpkD,YAAY,CAAC7+B,YAAY,CAAC1E,MAAM,KAAKrb,kBAAkB,EAAG;MAErE,IAAK8hG,kBAAkB,CAAEljD,YAAa,CAAC,EAAG;QAEzC86C,kBAAkB,CAACqI,kCAAkC,CAAE1I,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACwJ,wBAAwB,EAAExJ,GAAG,CAAC7E,UAAU,EAAEwO,iBAAiB,EAAE,CAAC,EAAEhjF,OAAQ,CAAC;MAEtJ,CAAC,MAAM;QAENq5E,GAAG,CAAC6I,oBAAoB,CAAE7I,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACwJ,wBAAwB,EAAExJ,GAAG,CAAC7E,UAAU,EAAEwO,iBAAiB,EAAE,CAAE,CAAC;MAEhH;IAED,CAAC,MAAM;MAEN,MAAM,IAAI5uG,KAAK,CAAE,6BAA8B,CAAC;IAEjD;EAED;;EAEA;EACA,SAAS6uG,sBAAsBA,CAAErkD,YAAY,EAAG;IAE/C,IAAM0+C,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;IAC7D,IAAMmkD,MAAM,GAAKnkD,YAAY,CAACiC,uBAAuB,KAAK,IAAM;IAEhE,IAAKjC,YAAY,CAAC7+B,YAAY,IAAI,CAAEu9E,sBAAsB,CAAC4F,yBAAyB,EAAG;MAEtF,IAAKH,MAAM,EAAG,MAAM,IAAI3uG,KAAK,CAAE,0DAA2D,CAAC;MAE3F0uG,iBAAiB,CAAExF,sBAAsB,CAACC,kBAAkB,EAAE3+C,YAAa,CAAC;IAE7E,CAAC,MAAM;MAEN,IAAKmkD,MAAM,EAAG;QAEbzF,sBAAsB,CAACI,kBAAkB,GAAG,EAAE;QAE9C,KAAM,IAAIrnG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9BlC,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACC,kBAAkB,CAAElnG,CAAC,CAAG,CAAC;UACxFinG,sBAAsB,CAACI,kBAAkB,CAAErnG,CAAC,CAAE,GAAGgjG,GAAG,CAAC8J,kBAAkB,CAAC,CAAC;UACzEhB,wBAAwB,CAAE7E,sBAAsB,CAACI,kBAAkB,CAAErnG,CAAC,CAAE,EAAEuoD,YAAY,EAAE,KAAM,CAAC;QAEhG;MAED,CAAC,MAAM;QAENzqD,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACC,kBAAmB,CAAC;QACnFD,sBAAsB,CAACI,kBAAkB,GAAGrE,GAAG,CAAC8J,kBAAkB,CAAC,CAAC;QACpEhB,wBAAwB,CAAE7E,sBAAsB,CAACI,kBAAkB,EAAE9+C,YAAY,EAAE,KAAM,CAAC;MAE3F;IAED;IAEAzqD,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAE,IAAK,CAAC;EAE/C;;EAEA;EACA,SAASmO,cAAcA,CAAExkD,YAAY,EAAEykD,YAAY,EAAEtjF,YAAY,EAAG;IAEnE,IAAMu9E,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;IAE7D,IAAKykD,YAAY,KAAKvuG,SAAS,EAAG;MAEjC4sG,uBAAuB,CAAEpE,sBAAsB,CAACC,kBAAkB,EAAE3+C,YAAY,EAAEA,YAAY,CAACh/B,OAAO,EAAEy5E,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC7E,UAAU,EAAE,CAAE,CAAC;IAEnJ;IAEA,IAAKz0E,YAAY,KAAKjrB,SAAS,EAAG;MAEjCmuG,sBAAsB,CAAErkD,YAAa,CAAC;IAEvC;EAED;;EAEA;EACA,SAAS0kD,iBAAiBA,CAAE1kD,YAAY,EAAG;IAE1C,IAAMh/B,OAAO,GAAGg/B,YAAY,CAACh/B,OAAO;IAEpC,IAAM09E,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;IAC7D,IAAMo+C,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC;IAEnDg/B,YAAY,CAACt4C,gBAAgB,CAAE,SAAS,EAAEw2F,qBAAsB,CAAC;IAEjE,IAAKl+C,YAAY,CAAC18B,4BAA4B,KAAK,IAAI,EAAG;MAEzD,IAAK86E,iBAAiB,CAACK,cAAc,KAAKvoG,SAAS,EAAG;QAErDkoG,iBAAiB,CAACK,cAAc,GAAGhE,GAAG,CAAC1F,aAAa,CAAC,CAAC;MAEvD;MAEAqJ,iBAAiB,CAACsB,SAAS,GAAG1+E,OAAO,CAAChG,OAAO;MAC7C3kB,IAAI,CAAC00E,MAAM,CAAC7sD,QAAQ,EAAG;IAExB;IAEA,IAAMimF,MAAM,GAAKnkD,YAAY,CAACiC,uBAAuB,KAAK,IAAM;IAChE,IAAM0iD,uBAAuB,GAAK3kD,YAAY,CAAC18B,4BAA4B,KAAK,IAAM;IACtF,IAAMw4E,YAAY,GAAGH,cAAc,CAAE37C,YAAa,CAAC,IAAIoG,QAAQ;;IAE/D;;IAEA,IAAK+9C,MAAM,EAAG;MAEbzF,sBAAsB,CAACC,kBAAkB,GAAG,EAAE;MAE9C,KAAM,IAAIlnG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK2uD,QAAQ,IAAIplC,OAAO,CAAChE,OAAO,IAAIgE,OAAO,CAAChE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;UAEhEknG,sBAAsB,CAACC,kBAAkB,CAAElnG,CAAC,CAAE,GAAG,EAAE;UAEnD,KAAM,IAAImnG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG59E,OAAO,CAAChE,OAAO,CAACxlB,MAAM,EAAEonG,KAAK,EAAG,EAAG;YAE/DF,sBAAsB,CAACC,kBAAkB,CAAElnG,CAAC,CAAE,CAAEmnG,KAAK,CAAE,GAAGnE,GAAG,CAACmK,iBAAiB,CAAC,CAAC;UAElF;QAED,CAAC,MAAM;UAENlG,sBAAsB,CAACC,kBAAkB,CAAElnG,CAAC,CAAE,GAAGgjG,GAAG,CAACmK,iBAAiB,CAAC,CAAC;QAEzE;MAED;IAED,CAAC,MAAM;MAEN,IAAKx+C,QAAQ,IAAIplC,OAAO,CAAChE,OAAO,IAAIgE,OAAO,CAAChE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;QAEhEknG,sBAAsB,CAACC,kBAAkB,GAAG,EAAE;QAE9C,KAAM,IAAIC,OAAK,GAAG,CAAC,EAAEA,OAAK,GAAG59E,OAAO,CAAChE,OAAO,CAACxlB,MAAM,EAAEonG,OAAK,EAAG,EAAG;UAE/DF,sBAAsB,CAACC,kBAAkB,CAAEC,OAAK,CAAE,GAAGnE,GAAG,CAACmK,iBAAiB,CAAC,CAAC;QAE7E;MAED,CAAC,MAAM;QAENlG,sBAAsB,CAACC,kBAAkB,GAAGlE,GAAG,CAACmK,iBAAiB,CAAC,CAAC;MAEpE;MAEA,IAAKD,uBAAuB,EAAG;QAE9B,IAAKx+C,YAAY,CAAC9I,WAAW,EAAG;UAE/B,IAAMn/B,QAAQ,GAAG8hC,YAAY,CAACh/B,OAAO;UAErC,KAAM,IAAIvpB,IAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGrF,QAAQ,CAAC1mB,MAAM,EAAEC,IAAC,GAAG8rB,EAAE,EAAE9rB,IAAC,EAAG,EAAG;YAErD,IAAM0nG,oBAAoB,GAAGhqC,UAAU,CAAC/mD,GAAG,CAAE8P,QAAQ,CAAEzmB,IAAC,CAAG,CAAC;YAE5D,IAAK0nG,oBAAoB,CAACV,cAAc,KAAKvoG,SAAS,EAAG;cAExDipG,oBAAoB,CAACV,cAAc,GAAGhE,GAAG,CAAC1F,aAAa,CAAC,CAAC;cAEzD1+F,IAAI,CAAC00E,MAAM,CAAC7sD,QAAQ,EAAG;YAExB;UAED;QAED,CAAC,MAAM;UAEN9Q,OAAO,CAACC,IAAI,CAAE,+GAAgH,CAAC;QAEhI;MAED;MAEA,IAAO+4C,QAAQ,IAAIpG,YAAY,CAAC5+B,OAAO,GAAG,CAAC,IAAM8hF,kBAAkB,CAAEljD,YAAa,CAAC,KAAK,KAAK,EAAG;QAE/F,IAAM9hC,SAAQ,GAAGymF,uBAAuB,GAAG3jF,OAAO,GAAG,CAAEA,OAAO,CAAE;QAEhE09E,sBAAsB,CAACM,8BAA8B,GAAGvE,GAAG,CAACmK,iBAAiB,CAAC,CAAC;QAC/ElG,sBAAsB,CAACO,wBAAwB,GAAG,EAAE;QAEpD1pG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACM,8BAA+B,CAAC;QAE/F,KAAM,IAAIvnG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGymB,SAAQ,CAAC1mB,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE5C,IAAMupB,QAAO,GAAG9C,SAAQ,CAAEzmB,IAAC,CAAE;UAC7BinG,sBAAsB,CAACO,wBAAwB,CAAExnG,IAAC,CAAE,GAAGgjG,GAAG,CAAC8J,kBAAkB,CAAC,CAAC;UAE/E9J,GAAG,CAACiJ,gBAAgB,CAAEjJ,GAAG,CAACkJ,YAAY,EAAEjF,sBAAsB,CAACO,wBAAwB,CAAExnG,IAAC,CAAG,CAAC;UAE9F,IAAMykG,QAAQ,GAAGxB,KAAK,CAACzhF,OAAO,CAAE+H,QAAO,CAACvE,MAAM,EAAEuE,QAAO,CAAChI,UAAW,CAAC;UACpE,IAAMmjF,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAE+H,QAAO,CAACttB,IAAK,CAAC;UAC5C,IAAMquG,gBAAgB,GAAG/F,iBAAiB,CAAEh7E,QAAO,CAAC9D,cAAc,EAAEg/E,QAAQ,EAAEC,MAAM,EAAEn7E,QAAO,CAAChI,UAAU,EAAEgnC,YAAY,CAAC0lC,gBAAgB,KAAK,IAAK,CAAC;UAClJ,IAAMtkE,OAAO,GAAGgiF,sBAAsB,CAAEpjD,YAAa,CAAC;UACtDy6C,GAAG,CAACoJ,8BAA8B,CAAEpJ,GAAG,CAACkJ,YAAY,EAAEviF,OAAO,EAAE2gF,gBAAgB,EAAE/hD,YAAY,CAAChmC,KAAK,EAAEgmC,YAAY,CAAC/lC,MAAO,CAAC;UAE1HwgF,GAAG,CAACsJ,uBAAuB,CAAEtJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,GAAG7+F,IAAC,EAAEgjG,GAAG,CAACkJ,YAAY,EAAEjF,sBAAsB,CAACO,wBAAwB,CAAExnG,IAAC,CAAG,CAAC;QAElJ;QAEAgjG,GAAG,CAACiJ,gBAAgB,CAAEjJ,GAAG,CAACkJ,YAAY,EAAE,IAAK,CAAC;QAE9C,IAAK3jD,YAAY,CAAC/+B,WAAW,EAAG;UAE/By9E,sBAAsB,CAACQ,wBAAwB,GAAGzE,GAAG,CAAC8J,kBAAkB,CAAC,CAAC;UAC1EhB,wBAAwB,CAAE7E,sBAAsB,CAACQ,wBAAwB,EAAEl/C,YAAY,EAAE,IAAK,CAAC;QAEhG;QAEAzqD,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAE,IAAK,CAAC;MAE/C;IAED;;IAEA;;IAEA,IAAK8N,MAAM,EAAG;MAEb5uG,KAAK,CAAC0/F,WAAW,CAAEwF,GAAG,CAAC5E,gBAAgB,EAAEuI,iBAAiB,CAACK,cAAe,CAAC;MAC3E8B,oBAAoB,CAAE9F,GAAG,CAAC5E,gBAAgB,EAAE70E,OAAO,EAAE86E,YAAa,CAAC;MAEnE,KAAM,IAAIrkG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9B,IAAK2uD,QAAQ,IAAIplC,OAAO,CAAChE,OAAO,IAAIgE,OAAO,CAAChE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;UAEhE,KAAM,IAAIonG,OAAK,GAAG,CAAC,EAAEA,OAAK,GAAG59E,OAAO,CAAChE,OAAO,CAACxlB,MAAM,EAAEonG,OAAK,EAAG,EAAG;YAE/DkE,uBAAuB,CAAEpE,sBAAsB,CAACC,kBAAkB,CAAElnG,IAAC,CAAE,CAAEmnG,OAAK,CAAE,EAAE5+C,YAAY,EAAEh/B,OAAO,EAAEy5E,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAEmnG,OAAM,CAAC;UAE7K;QAED,CAAC,MAAM;UAENkE,uBAAuB,CAAEpE,sBAAsB,CAACC,kBAAkB,CAAElnG,IAAC,CAAE,EAAEuoD,YAAY,EAAEh/B,OAAO,EAAEy5E,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC3E,2BAA2B,GAAGr+F,IAAC,EAAE,CAAE,CAAC;QAEhK;MAED;MAEA,IAAKokG,2BAA2B,CAAE76E,OAAO,EAAE86E,YAAa,CAAC,EAAG;QAE3DC,cAAc,CAAEtB,GAAG,CAAC5E,gBAAiB,CAAC;MAEvC;MAEAtgG,KAAK,CAACgkG,aAAa,CAAC,CAAC;IAEtB,CAAC,MAAM,IAAKoL,uBAAuB,EAAG;MAErC,IAAMzmF,UAAQ,GAAG8hC,YAAY,CAACh/B,OAAO;MAErC,KAAM,IAAIvpB,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAGrF,UAAQ,CAAC1mB,MAAM,EAAEC,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAG;QAErD,IAAMsrG,UAAU,GAAG7kF,UAAQ,CAAEzmB,IAAC,CAAE;QAChC,IAAM0nG,qBAAoB,GAAGhqC,UAAU,CAAC/mD,GAAG,CAAE20F,UAAW,CAAC;QAEzDxtG,KAAK,CAAC0/F,WAAW,CAAEwF,GAAG,CAAC7E,UAAU,EAAEuJ,qBAAoB,CAACV,cAAe,CAAC;QACxE8B,oBAAoB,CAAE9F,GAAG,CAAC7E,UAAU,EAAEmN,UAAU,EAAEjH,YAAa,CAAC;QAChEgH,uBAAuB,CAAEpE,sBAAsB,CAACC,kBAAkB,EAAE3+C,YAAY,EAAE+iD,UAAU,EAAEtI,GAAG,CAACnE,iBAAiB,GAAG7+F,IAAC,EAAEgjG,GAAG,CAAC7E,UAAU,EAAE,CAAE,CAAC;QAE5I,IAAKiG,2BAA2B,CAAEkH,UAAU,EAAEjH,YAAa,CAAC,EAAG;UAE9DC,cAAc,CAAEtB,GAAG,CAAC7E,UAAW,CAAC;QAEjC;MAED;MAEArgG,KAAK,CAACgkG,aAAa,CAAC,CAAC;IAEtB,CAAC,MAAM;MAEN,IAAIsL,aAAa,GAAGpK,GAAG,CAAC7E,UAAU;MAElC,IAAK51C,YAAY,CAACh9B,qBAAqB,IAAIg9B,YAAY,CAAC19B,wBAAwB,EAAG;QAElF,IAAK8jC,QAAQ,EAAG;UAEfy+C,aAAa,GAAG7kD,YAAY,CAACh9B,qBAAqB,GAAGy3E,GAAG,CAACnF,UAAU,GAAGmF,GAAG,CAAClF,gBAAgB;QAE3F,CAAC,MAAM;UAENnoF,OAAO,CAAChY,KAAK,CAAE,iGAAkG,CAAC;QAEnH;MAED;MAEAG,KAAK,CAAC0/F,WAAW,CAAE4P,aAAa,EAAEzG,iBAAiB,CAACK,cAAe,CAAC;MACpE8B,oBAAoB,CAAEsE,aAAa,EAAE7jF,OAAO,EAAE86E,YAAa,CAAC;MAE5D,IAAK11C,QAAQ,IAAIplC,OAAO,CAAChE,OAAO,IAAIgE,OAAO,CAAChE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;QAEhE,KAAM,IAAIonG,OAAK,GAAG,CAAC,EAAEA,OAAK,GAAG59E,OAAO,CAAChE,OAAO,CAACxlB,MAAM,EAAEonG,OAAK,EAAG,EAAG;UAE/DkE,uBAAuB,CAAEpE,sBAAsB,CAACC,kBAAkB,CAAEC,OAAK,CAAE,EAAE5+C,YAAY,EAAEh/B,OAAO,EAAEy5E,GAAG,CAACnE,iBAAiB,EAAEuO,aAAa,EAAEjG,OAAM,CAAC;QAElJ;MAED,CAAC,MAAM;QAENkE,uBAAuB,CAAEpE,sBAAsB,CAACC,kBAAkB,EAAE3+C,YAAY,EAAEh/B,OAAO,EAAEy5E,GAAG,CAACnE,iBAAiB,EAAEuO,aAAa,EAAE,CAAE,CAAC;MAErI;MAEA,IAAKhJ,2BAA2B,CAAE76E,OAAO,EAAE86E,YAAa,CAAC,EAAG;QAE3DC,cAAc,CAAE8I,aAAc,CAAC;MAEhC;MAEAtvG,KAAK,CAACgkG,aAAa,CAAC,CAAC;IAEtB;;IAEA;;IAEA,IAAKv5C,YAAY,CAAC/+B,WAAW,EAAG;MAE/BojF,sBAAsB,CAAErkD,YAAa,CAAC;IAEvC;EAED;EAEA,SAAS8kD,wBAAwBA,CAAE9kD,YAAY,EAAG;IAEjD,IAAM87C,YAAY,GAAGH,cAAc,CAAE37C,YAAa,CAAC,IAAIoG,QAAQ;IAE/D,IAAMloC,QAAQ,GAAG8hC,YAAY,CAAC18B,4BAA4B,KAAK,IAAI,GAAG08B,YAAY,CAACh/B,OAAO,GAAG,CAAEg/B,YAAY,CAACh/B,OAAO,CAAE;IAErH,KAAM,IAAIvpB,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGrF,QAAQ,CAAC1mB,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;MAErD,IAAMupB,OAAO,GAAG9C,QAAQ,CAAEzmB,CAAC,CAAE;MAE7B,IAAKokG,2BAA2B,CAAE76E,OAAO,EAAE86E,YAAa,CAAC,EAAG;QAE3D,IAAM1hG,MAAM,GAAG4lD,YAAY,CAACiC,uBAAuB,GAAGw4C,GAAG,CAAC5E,gBAAgB,GAAG4E,GAAG,CAAC7E,UAAU;QAC3F,IAAMyD,YAAY,GAAGlkC,UAAU,CAAC/mD,GAAG,CAAE4S,OAAQ,CAAC,CAACy9E,cAAc;QAE7DlpG,KAAK,CAAC0/F,WAAW,CAAE76F,MAAM,EAAEi/F,YAAa,CAAC;QACzC0C,cAAc,CAAE3hG,MAAO,CAAC;QACxB7E,KAAK,CAACgkG,aAAa,CAAC,CAAC;MAEtB;IAED;EAED;EAEA,SAASwL,6BAA6BA,CAAE/kD,YAAY,EAAG;IAEtD,IAAOoG,QAAQ,IAAIpG,YAAY,CAAC5+B,OAAO,GAAG,CAAC,IAAM8hF,kBAAkB,CAAEljD,YAAa,CAAC,KAAK,KAAK,EAAG;MAE/F,IAAM9hC,QAAQ,GAAG8hC,YAAY,CAAC18B,4BAA4B,GAAG08B,YAAY,CAACh/B,OAAO,GAAG,CAAEg/B,YAAY,CAACh/B,OAAO,CAAE;MAC5G,IAAMhH,KAAK,GAAGgmC,YAAY,CAAChmC,KAAK;MAChC,IAAMC,MAAM,GAAG+lC,YAAY,CAAC/lC,MAAM;MAClC,IAAI4f,IAAI,GAAG4gE,GAAG,CAACuK,gBAAgB;MAC/B,IAAMC,iBAAiB,GAAG,EAAE;MAC5B,IAAMC,UAAU,GAAGllD,YAAY,CAAC9+B,aAAa,GAAGu5E,GAAG,CAACwJ,wBAAwB,GAAGxJ,GAAG,CAACuJ,gBAAgB;MACnG,IAAMtF,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;MAC7D,IAAM2kD,uBAAuB,GAAK3kD,YAAY,CAAC18B,4BAA4B,KAAK,IAAM;;MAEtF;MACA,IAAKqhF,uBAAuB,EAAG;QAE9B,KAAM,IAAIltG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGymB,QAAQ,CAAC1mB,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE5ClC,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACM,8BAA+B,CAAC;UAC/FvE,GAAG,CAACsJ,uBAAuB,CAAEtJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,GAAG7+F,CAAC,EAAEgjG,GAAG,CAACkJ,YAAY,EAAE,IAAK,CAAC;UAEjGpuG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACC,kBAAmB,CAAC;UACnFlE,GAAG,CAAC6I,oBAAoB,CAAE7I,GAAG,CAACrE,gBAAgB,EAAEqE,GAAG,CAACnE,iBAAiB,GAAG7+F,CAAC,EAAEgjG,GAAG,CAAC7E,UAAU,EAAE,IAAI,EAAE,CAAE,CAAC;QAErG;MAED;MAEArgG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACF,gBAAgB,EAAEmE,sBAAsB,CAACM,8BAA+B,CAAC;MACpGzpG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACrE,gBAAgB,EAAEsI,sBAAsB,CAACC,kBAAmB,CAAC;MAExF,KAAM,IAAIlnG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGymB,QAAQ,CAAC1mB,MAAM,EAAEC,IAAC,EAAG,EAAG;QAE5CwtG,iBAAiB,CAAChuG,IAAI,CAAEwjG,GAAG,CAACnE,iBAAiB,GAAG7+F,IAAE,CAAC;QAEnD,IAAKuoD,YAAY,CAAC/+B,WAAW,EAAG;UAE/BgkF,iBAAiB,CAAChuG,IAAI,CAAEiuG,UAAW,CAAC;QAErC;QAEA,IAAMC,iBAAiB,GAAKzG,sBAAsB,CAAC0G,mBAAmB,KAAKlvG,SAAS,GAAKwoG,sBAAsB,CAAC0G,mBAAmB,GAAG,KAAK;QAE3I,IAAKD,iBAAiB,KAAK,KAAK,EAAG;UAElC,IAAKnlD,YAAY,CAAC/+B,WAAW,EAAG4Y,IAAI,IAAI4gE,GAAG,CAAC4K,gBAAgB;UAC5D,IAAKrlD,YAAY,CAAC9+B,aAAa,EAAG2Y,IAAI,IAAI4gE,GAAG,CAAC6K,kBAAkB;QAEjE;QAEA,IAAKX,uBAAuB,EAAG;UAE9BlK,GAAG,CAACsJ,uBAAuB,CAAEtJ,GAAG,CAACF,gBAAgB,EAAEE,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAACkJ,YAAY,EAAEjF,sBAAsB,CAACO,wBAAwB,CAAExnG,IAAC,CAAG,CAAC;QAEnJ;QAEA,IAAK0tG,iBAAiB,KAAK,IAAI,EAAG;UAEjC1K,GAAG,CAAC8K,qBAAqB,CAAE9K,GAAG,CAACF,gBAAgB,EAAE,CAAE2K,UAAU,CAAG,CAAC;UACjEzK,GAAG,CAAC8K,qBAAqB,CAAE9K,GAAG,CAACrE,gBAAgB,EAAE,CAAE8O,UAAU,CAAG,CAAC;QAElE;QAEA,IAAKP,uBAAuB,EAAG;UAE9B,IAAMtL,YAAY,GAAGlkC,UAAU,CAAC/mD,GAAG,CAAE8P,QAAQ,CAAEzmB,IAAC,CAAG,CAAC,CAACgnG,cAAc;UACnEhE,GAAG,CAAC6I,oBAAoB,CAAE7I,GAAG,CAACrE,gBAAgB,EAAEqE,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC7E,UAAU,EAAEyD,YAAY,EAAE,CAAE,CAAC;QAEzG;QAEAoB,GAAG,CAAC+K,eAAe,CAAE,CAAC,EAAE,CAAC,EAAExrF,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAED,KAAK,EAAEC,MAAM,EAAE4f,IAAI,EAAE4gE,GAAG,CAACrF,OAAQ,CAAC;QAElF,IAAK2F,6BAA6B,EAAG;UAEpCN,GAAG,CAAC8K,qBAAqB,CAAE9K,GAAG,CAACF,gBAAgB,EAAE0K,iBAAkB,CAAC;QAErE;MAGD;MAEA1vG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACF,gBAAgB,EAAE,IAAK,CAAC;MACnDhlG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACrE,gBAAgB,EAAE,IAAK,CAAC;;MAEnD;MACA,IAAKuO,uBAAuB,EAAG;QAE9B,KAAM,IAAIltG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGymB,QAAQ,CAAC1mB,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE5ClC,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACM,8BAA+B,CAAC;UAC/FvE,GAAG,CAACsJ,uBAAuB,CAAEtJ,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,GAAG7+F,IAAC,EAAEgjG,GAAG,CAACkJ,YAAY,EAAEjF,sBAAsB,CAACO,wBAAwB,CAAExnG,IAAC,CAAG,CAAC;UAEjJ,IAAM4hG,aAAY,GAAGlkC,UAAU,CAAC/mD,GAAG,CAAE8P,QAAQ,CAAEzmB,IAAC,CAAG,CAAC,CAACgnG,cAAc;UAEnElpG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEqI,sBAAsB,CAACC,kBAAmB,CAAC;UACnFlE,GAAG,CAAC6I,oBAAoB,CAAE7I,GAAG,CAACrE,gBAAgB,EAAEqE,GAAG,CAACnE,iBAAiB,GAAG7+F,IAAC,EAAEgjG,GAAG,CAAC7E,UAAU,EAAEyD,aAAY,EAAE,CAAE,CAAC;QAE7G;MAED;MAEA9jG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACrE,gBAAgB,EAAEsI,sBAAsB,CAACM,8BAA+B,CAAC;IAErG;EAED;EAEA,SAASoE,sBAAsBA,CAAEpjD,YAAY,EAAG;IAE/C,OAAOr3C,IAAI,CAACY,GAAG,CAAEu4D,UAAU,EAAE9hB,YAAY,CAAC5+B,OAAQ,CAAC;EAEpD;EAEA,SAAS8hF,kBAAkBA,CAAEljD,YAAY,EAAG;IAE3C,IAAM0+C,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;IAE7D,OAAOoG,QAAQ,IAAIpG,YAAY,CAAC5+B,OAAO,GAAG,CAAC,IAAI87B,UAAU,CAAC+iB,GAAG,CAAE,sCAAuC,CAAC,KAAK,IAAI,IAAIy+B,sBAAsB,CAAC+G,oBAAoB,KAAK,KAAK;EAE1K;EAEA,SAAShG,kBAAkBA,CAAEz+E,OAAO,EAAG;IAEtC,IAAM4kC,KAAK,GAAGvvD,IAAI,CAACkrD,MAAM,CAACqE,KAAK;;IAE/B;;IAEA,IAAKs1C,cAAc,CAAC9sF,GAAG,CAAE4S,OAAQ,CAAC,KAAK4kC,KAAK,EAAG;MAE9Cs1C,cAAc,CAAC/tF,GAAG,CAAE6T,OAAO,EAAE4kC,KAAM,CAAC;MACpC5kC,OAAO,CAACmD,MAAM,CAAC,CAAC;IAEjB;EAED;EAEA,SAAS29E,gBAAgBA,CAAE9gF,OAAO,EAAEpH,KAAK,EAAG;IAE3C,IAAMZ,UAAU,GAAGgI,OAAO,CAAChI,UAAU;IACrC,IAAMyD,MAAM,GAAGuE,OAAO,CAACvE,MAAM;IAC7B,IAAM/oB,IAAI,GAAGstB,OAAO,CAACttB,IAAI;IAEzB,IAAKstB,OAAO,CAAC88E,mBAAmB,KAAK,IAAI,IAAI98E,OAAO,CAACmlE,cAAc,KAAK,IAAI,IAAInlE,OAAO,CAACvE,MAAM,KAAKnV,YAAY,EAAG,OAAOsS,KAAK;IAE9H,IAAKZ,UAAU,KAAKhU,oBAAoB,IAAIgU,UAAU,KAAKlU,YAAY,EAAG;MAEzE;;MAEA,IAAKkU,UAAU,KAAKjU,cAAc,IAAIiU,UAAU,KAAK/T,mBAAmB,EAAG;QAE1E,IAAKmhD,QAAQ,KAAK,KAAK,EAAG;UAEzB;;UAEA,IAAKlJ,UAAU,CAAC+iB,GAAG,CAAE,UAAW,CAAC,KAAK,IAAI,IAAIxjD,MAAM,KAAKzb,UAAU,EAAG;YAErEggB,OAAO,CAACvE,MAAM,GAAGnV,YAAY;;YAE7B;;YAEA0Z,OAAO,CAACxE,SAAS,GAAGzc,YAAY;YAChCihB,OAAO,CAAC3D,eAAe,GAAG,KAAK;UAEhC,CAAC,MAAM;YAEN;;YAEAzD,KAAK,GAAGF,UAAU,CAACa,YAAY,CAAEX,KAAM,CAAC;UAEzC;QAED,CAAC,MAAM;UAEN;;UAEA,IAAK6C,MAAM,KAAKzb,UAAU,IAAItN,IAAI,KAAK0M,gBAAgB,EAAG;YAEzDgN,OAAO,CAACC,IAAI,CAAE,yFAA0F,CAAC;UAE1G;QAED;MAED,CAAC,MAAM;QAEND,OAAO,CAAChY,KAAK,CAAE,uDAAuD,EAAE4jB,UAAW,CAAC;MAErF;IAED;IAEA,OAAOY,KAAK;EAEb;;EAEA;;EAEA,IAAI,CAACw1D,mBAAmB,GAAGA,mBAAmB;EAC9C,IAAI,CAACiwB,iBAAiB,GAAGA,iBAAiB;EAE1C,IAAI,CAACttB,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACM,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACJ,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACE,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACqyB,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACE,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACI,wBAAwB,GAAGA,wBAAwB;EACxD,IAAI,CAACC,6BAA6B,GAAGA,6BAA6B;EAClE,IAAI,CAACV,sBAAsB,GAAGA,sBAAsB;EACpD,IAAI,CAACvB,uBAAuB,GAAGA,uBAAuB;EACtD,IAAI,CAACI,kBAAkB,GAAGA,kBAAkB;AAE7C;AAEA,IAAMwC,sBAAsB,GAAG,CAAC;AAChC,IAAMC,oBAAoB,GAAG,CAAC;AAE9B,SAASC,UAAUA,CAAE1/C,EAAE,EAAEhJ,UAAU,EAAEiJ,YAAY,EAAG;EAEnD,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,SAASntC,OAAOA,CAAE6f,CAAC,EAAE9f,UAAU,GAAGlU,YAAY,EAAG;IAEhD,IAAI02D,SAAS;IAEb,IAAMqqC,gBAAgB,GAAK7sF,UAAU,KAAKjU,cAAc,IAAIiU,UAAU,KAAK/T,mBAAmB,GAAK0gG,oBAAoB,GAAGD,sBAAsB;IAEhJ,IAAK5sE,CAAC,KAAK14B,gBAAgB,EAAG,OAAO8lD,EAAE,CAACgB,aAAa;IACrD,IAAKpuB,CAAC,KAAKl4B,qBAAqB,EAAG,OAAOslD,EAAE,CAACs3C,sBAAsB;IACnE,IAAK1kE,CAAC,KAAKj4B,qBAAqB,EAAG,OAAOqlD,EAAE,CAACw3C,sBAAsB;IAEnE,IAAK5kE,CAAC,KAAKz4B,QAAQ,EAAG,OAAO6lD,EAAE,CAACe,IAAI;IACpC,IAAKnuB,CAAC,KAAKx4B,SAAS,EAAG,OAAO4lD,EAAE,CAACY,KAAK;IACtC,IAAKhuB,CAAC,KAAKv4B,iBAAiB,EAAG,OAAO2lD,EAAE,CAACW,cAAc;IACvD,IAAK/tB,CAAC,KAAKt4B,OAAO,EAAG,OAAO0lD,EAAE,CAACc,GAAG;IAClC,IAAKluB,CAAC,KAAKr4B,eAAe,EAAG,OAAOylD,EAAE,CAACa,YAAY;IACnD,IAAKjuB,CAAC,KAAKp4B,SAAS,EAAG,OAAOwlD,EAAE,CAACS,KAAK;IAEtC,IAAK7tB,CAAC,KAAKn4B,aAAa,EAAG;MAE1B,IAAKylD,QAAQ,EAAG,OAAOF,EAAE,CAACU,UAAU;MAEpC4U,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,wBAAyB,CAAC;MAEtD,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACsqC,cAAc;MAEhC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;IAEA,IAAKhtE,CAAC,KAAK/3B,WAAW,EAAG,OAAOmlD,EAAE,CAAC6/C,KAAK;IACxC,IAAKjtE,CAAC,KAAK93B,UAAU,EAAG,OAAOklD,EAAE,CAACuvC,IAAI;IACtC,IAAK38D,CAAC,KAAK73B,eAAe,EAAG,OAAOilD,EAAE,CAAC8/C,SAAS;IAChD,IAAKltE,CAAC,KAAK53B,oBAAoB,EAAG,OAAOglD,EAAE,CAAC+/C,eAAe;IAC3D,IAAKntE,CAAC,KAAK33B,WAAW,EAAG,OAAO+kD,EAAE,CAACm8C,eAAe;IAClD,IAAKvpE,CAAC,KAAK13B,kBAAkB,EAAG,OAAO8kD,EAAE,CAACw8C,aAAa;;IAEvD;;IAEA,IAAK5pE,CAAC,KAAKxxB,YAAY,EAAG;MAEzBk0D,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,UAAW,CAAC;MAExC,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAAC0qC,cAAc;MAEhC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKptE,CAAC,KAAKz3B,SAAS,EAAG,OAAO6kD,EAAE,CAACm2C,GAAG;IACpC,IAAKvjE,CAAC,KAAKx3B,gBAAgB,EAAG,OAAO4kD,EAAE,CAACu2C,WAAW;IACnD,IAAK3jE,CAAC,KAAKv3B,QAAQ,EAAG,OAAO2kD,EAAE,CAAC82C,EAAE;IAClC,IAAKlkE,CAAC,KAAKt3B,eAAe,EAAG,OAAO0kD,EAAE,CAACigD,UAAU;IACjD,IAAKrtE,CAAC,KAAKr3B,iBAAiB,EAAG,OAAOykD,EAAE,CAACkgD,YAAY;;IAErD;;IAEA,IAAKttE,CAAC,KAAKp3B,oBAAoB,IAAIo3B,CAAC,KAAKn3B,qBAAqB,IAAIm3B,CAAC,KAAKl3B,qBAAqB,IAAIk3B,CAAC,KAAKj3B,qBAAqB,EAAG;MAE9H,IAAKgkG,gBAAgB,KAAKF,oBAAoB,EAAG;QAEhDnqC,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,oCAAqC,CAAC;QAElE,IAAKotD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAK1iC,CAAC,KAAKp3B,oBAAoB,EAAG,OAAO85D,SAAS,CAAC6qC,6BAA6B;UAChF,IAAKvtE,CAAC,KAAKn3B,qBAAqB,EAAG,OAAO65D,SAAS,CAAC8qC,mCAAmC;UACvF,IAAKxtE,CAAC,KAAKl3B,qBAAqB,EAAG,OAAO45D,SAAS,CAAC+qC,mCAAmC;UACvF,IAAKztE,CAAC,KAAKj3B,qBAAqB,EAAG,OAAO25D,SAAS,CAACgrC,mCAAmC;QAExF,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED,CAAC,MAAM;QAENhrC,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,+BAAgC,CAAC;QAE7D,IAAKotD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAK1iC,CAAC,KAAKp3B,oBAAoB,EAAG,OAAO85D,SAAS,CAACirC,4BAA4B;UAC/E,IAAK3tE,CAAC,KAAKn3B,qBAAqB,EAAG,OAAO65D,SAAS,CAACkrC,6BAA6B;UACjF,IAAK5tE,CAAC,KAAKl3B,qBAAqB,EAAG,OAAO45D,SAAS,CAACmrC,6BAA6B;UACjF,IAAK7tE,CAAC,KAAKj3B,qBAAqB,EAAG,OAAO25D,SAAS,CAACorC,6BAA6B;QAElF,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;IAED;;IAEA;;IAEA,IAAK9tE,CAAC,KAAKh3B,uBAAuB,IAAIg3B,CAAC,KAAK/2B,uBAAuB,IAAI+2B,CAAC,KAAK92B,wBAAwB,IAAI82B,CAAC,KAAK72B,wBAAwB,EAAG;MAEzIu5D,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,gCAAiC,CAAC;MAE9D,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAK1iC,CAAC,KAAKh3B,uBAAuB,EAAG,OAAO05D,SAAS,CAACqrC,+BAA+B;QACrF,IAAK/tE,CAAC,KAAK/2B,uBAAuB,EAAG,OAAOy5D,SAAS,CAACsrC,+BAA+B;QACrF,IAAKhuE,CAAC,KAAK92B,wBAAwB,EAAG,OAAOw5D,SAAS,CAACurC,gCAAgC;QACvF,IAAKjuE,CAAC,KAAK72B,wBAAwB,EAAG,OAAOu5D,SAAS,CAACwrC,gCAAgC;MAExF,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKluE,CAAC,KAAK52B,eAAe,EAAG;MAE5Bs5D,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,+BAAgC,CAAC;MAE7D,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACyrC,yBAAyB;MAE3C,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKnuE,CAAC,KAAK32B,eAAe,IAAI22B,CAAC,KAAK12B,oBAAoB,EAAG;MAE1Do5D,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,8BAA+B,CAAC;MAE5D,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAK1iC,CAAC,KAAK32B,eAAe,EAAG,OAAS0jG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAAC0rC,qBAAqB,GAAG1rC,SAAS,CAAC2rC,oBAAoB;QACpJ,IAAKruE,CAAC,KAAK12B,oBAAoB,EAAG,OAASyjG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAAC4rC,gCAAgC,GAAG5rC,SAAS,CAAC6rC,yBAAyB;MAE1K,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKvuE,CAAC,KAAKz2B,oBAAoB,IAAIy2B,CAAC,KAAKx2B,oBAAoB,IAAIw2B,CAAC,KAAKv2B,oBAAoB,IAC1Fu2B,CAAC,KAAKt2B,oBAAoB,IAAIs2B,CAAC,KAAKr2B,oBAAoB,IAAIq2B,CAAC,KAAKp2B,oBAAoB,IACtFo2B,CAAC,KAAKn2B,oBAAoB,IAAIm2B,CAAC,KAAKl2B,oBAAoB,IAAIk2B,CAAC,KAAKj2B,qBAAqB,IACvFi2B,CAAC,KAAKh2B,qBAAqB,IAAIg2B,CAAC,KAAK/1B,qBAAqB,IAAI+1B,CAAC,KAAK91B,sBAAsB,IAC1F81B,CAAC,KAAK71B,sBAAsB,IAAI61B,CAAC,KAAK51B,sBAAsB,EAAG;MAE/Ds4D,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,+BAAgC,CAAC;MAE7D,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAK1iC,CAAC,KAAKz2B,oBAAoB,EAAG,OAASwjG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAAC8rC,oCAAoC,GAAG9rC,SAAS,CAAC+rC,4BAA4B;QAChL,IAAKzuE,CAAC,KAAKx2B,oBAAoB,EAAG,OAASujG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACgsC,oCAAoC,GAAGhsC,SAAS,CAACisC,4BAA4B;QAChL,IAAK3uE,CAAC,KAAKv2B,oBAAoB,EAAG,OAASsjG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACksC,oCAAoC,GAAGlsC,SAAS,CAACmsC,4BAA4B;QAChL,IAAK7uE,CAAC,KAAKt2B,oBAAoB,EAAG,OAASqjG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACosC,oCAAoC,GAAGpsC,SAAS,CAACqsC,4BAA4B;QAChL,IAAK/uE,CAAC,KAAKr2B,oBAAoB,EAAG,OAASojG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACssC,oCAAoC,GAAGtsC,SAAS,CAACusC,4BAA4B;QAChL,IAAKjvE,CAAC,KAAKp2B,oBAAoB,EAAG,OAASmjG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACwsC,oCAAoC,GAAGxsC,SAAS,CAACysC,4BAA4B;QAChL,IAAKnvE,CAAC,KAAKn2B,oBAAoB,EAAG,OAASkjG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAAC0sC,oCAAoC,GAAG1sC,SAAS,CAAC2sC,4BAA4B;QAChL,IAAKrvE,CAAC,KAAKl2B,oBAAoB,EAAG,OAASijG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAAC4sC,oCAAoC,GAAG5sC,SAAS,CAAC6sC,4BAA4B;QAChL,IAAKvvE,CAAC,KAAKj2B,qBAAqB,EAAG,OAASgjG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAAC8sC,qCAAqC,GAAG9sC,SAAS,CAAC+sC,6BAA6B;QACnL,IAAKzvE,CAAC,KAAKh2B,qBAAqB,EAAG,OAAS+iG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACgtC,qCAAqC,GAAGhtC,SAAS,CAACitC,6BAA6B;QACnL,IAAK3vE,CAAC,KAAK/1B,qBAAqB,EAAG,OAAS8iG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACktC,qCAAqC,GAAGltC,SAAS,CAACmtC,6BAA6B;QACnL,IAAK7vE,CAAC,KAAK91B,sBAAsB,EAAG,OAAS6iG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACotC,sCAAsC,GAAGptC,SAAS,CAACqtC,8BAA8B;QACtL,IAAK/vE,CAAC,KAAK71B,sBAAsB,EAAG,OAAS4iG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACstC,sCAAsC,GAAGttC,SAAS,CAACutC,8BAA8B;QACtL,IAAKjwE,CAAC,KAAK51B,sBAAsB,EAAG,OAAS2iG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAACwtC,sCAAsC,GAAGxtC,SAAS,CAACytC,8BAA8B;MAEvL,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKnwE,CAAC,KAAK31B,gBAAgB,IAAI21B,CAAC,KAAK11B,sBAAsB,IAAI01B,CAAC,KAAKz1B,wBAAwB,EAAG;MAE/Fm4D,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,8BAA+B,CAAC;MAE5D,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAK1iC,CAAC,KAAK31B,gBAAgB,EAAG,OAAS0iG,gBAAgB,KAAKF,oBAAoB,GAAKnqC,SAAS,CAAC0tC,oCAAoC,GAAG1tC,SAAS,CAAC2tC,8BAA8B;QAC9K,IAAKrwE,CAAC,KAAK11B,sBAAsB,EAAG,OAAOo4D,SAAS,CAAC4tC,oCAAoC;QACzF,IAAKtwE,CAAC,KAAKz1B,wBAAwB,EAAG,OAAOm4D,SAAS,CAAC6tC,sCAAsC;MAE9F,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKvwE,CAAC,KAAKx1B,gBAAgB,IAAIw1B,CAAC,KAAKv1B,uBAAuB,IAAIu1B,CAAC,KAAKt1B,sBAAsB,IAAIs1B,CAAC,KAAKr1B,6BAA6B,EAAG;MAErI+3D,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,8BAA+B,CAAC;MAE5D,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAK1iC,CAAC,KAAK31B,gBAAgB,EAAG,OAAOq4D,SAAS,CAAC8tC,wBAAwB;QACvE,IAAKxwE,CAAC,KAAKv1B,uBAAuB,EAAG,OAAOi4D,SAAS,CAAC+tC,+BAA+B;QACrF,IAAKzwE,CAAC,KAAKt1B,sBAAsB,EAAG,OAAOg4D,SAAS,CAACguC,8BAA8B;QACnF,IAAK1wE,CAAC,KAAKr1B,6BAA6B,EAAG,OAAO+3D,SAAS,CAACiuC,qCAAqC;MAElG,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAK3wE,CAAC,KAAKh4B,kBAAkB,EAAG;MAE/B,IAAKslD,QAAQ,EAAG,OAAOF,EAAE,CAACwjD,iBAAiB;MAE3CluC,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,qBAAsB,CAAC;MAEnD,IAAKotD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACmuC,uBAAuB;MAEzC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,OAASzjD,EAAE,CAAEptB,CAAC,CAAE,KAAK5iC,SAAS,GAAKgwD,EAAE,CAAEptB,CAAC,CAAE,GAAG,IAAI;EAElD;EAEA,OAAO;IAAE7f,OAAO,EAAEA;EAAQ,CAAC;AAE5B;AAAC,IAEK2wF,WAAW,0BAAAC,kBAAA;EAAA9tF,SAAA,CAAA6tF,WAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAA7tF,YAAA,CAAA2tF,WAAA;EAEhB,SAAAA,YAAathG,KAAK,GAAG,EAAE,EAAG;IAAA,IAAAyhG,OAAA;IAAA/vG,eAAA,OAAA4vG,WAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAAn2G,IAAA;IAEAo2G,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAKtpD,OAAO,GAAGn4C,KAAK;IAAC,OAAAyhG,OAAA;EAEtB;EAAC,OAAAvvG,YAAA,CAAAovG,WAAA;AAAA,EAVwB5rD,iBAAiB;AAAA7sD,OAAA,CAAAy4G,WAAA,GAAAA,WAAA;AAAA,IAcrCK,KAAK,0BAAAC,UAAA;EAAAnuF,SAAA,CAAAkuF,KAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAluF,YAAA,CAAAguF,KAAA;EAEV,SAAAA,MAAA,EAAc;IAAA,IAAAG,OAAA;IAAApwG,eAAA,OAAAiwG,KAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAx2G,IAAA;IAEAy2G,OAAA,CAAKC,OAAO,GAAG,IAAI;IAEnBD,OAAA,CAAK12G,IAAI,GAAG,OAAO;IAAC,OAAA02G,OAAA;EAErB;EAAC,OAAA5vG,YAAA,CAAAyvG,KAAA;AAAA,EAVkB/uE,QAAQ;AAAA/pC,OAAA,CAAA84G,KAAA,GAAAA,KAAA;AAc5B,IAAMK,UAAU,GAAG;EAAE52G,IAAI,EAAE;AAAO,CAAC;AAAC,IAE9B62G,eAAe;EAEpB,SAAAA,gBAAA,EAAc;IAAAvwG,eAAA,OAAAuwG,eAAA;IAEb,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,KAAK,GAAG,IAAI;EAElB;EAAClwG,YAAA,CAAA+vG,eAAA;IAAA54G,GAAA;IAAAE,KAAA,EAED,SAAA84G,aAAA,EAAe;MAEd,IAAK,IAAI,CAACD,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,GAAG,IAAIT,KAAK,CAAC,CAAC;QACxB,IAAI,CAACS,KAAK,CAACttF,gBAAgB,GAAG,KAAK;QACnC,IAAI,CAACstF,KAAK,CAACxuE,OAAO,GAAG,KAAK;QAE1B,IAAI,CAACwuE,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;QACtB,IAAI,CAACF,KAAK,CAACG,UAAU,GAAG;UAAEC,QAAQ,EAAE;QAAM,CAAC;MAE5C;MAEA,OAAO,IAAI,CAACJ,KAAK;IAElB;EAAC;IAAA/4G,GAAA;IAAAE,KAAA,EAED,SAAAk5G,kBAAA,EAAoB;MAEnB,IAAK,IAAI,CAACP,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,GAAG,IAAIP,KAAK,CAAC,CAAC;QAC7B,IAAI,CAACO,UAAU,CAACptF,gBAAgB,GAAG,KAAK;QACxC,IAAI,CAACotF,UAAU,CAACtuE,OAAO,GAAG,KAAK;QAC/B,IAAI,CAACsuE,UAAU,CAACQ,iBAAiB,GAAG,KAAK;QACzC,IAAI,CAACR,UAAU,CAACS,cAAc,GAAG,IAAI7iF,OAAO,CAAC,CAAC;QAC9C,IAAI,CAACoiF,UAAU,CAACU,kBAAkB,GAAG,KAAK;QAC1C,IAAI,CAACV,UAAU,CAACW,eAAe,GAAG,IAAI/iF,OAAO,CAAC,CAAC;MAEhD;MAEA,OAAO,IAAI,CAACoiF,UAAU;IAEvB;EAAC;IAAA74G,GAAA;IAAAE,KAAA,EAED,SAAAu5G,aAAA,EAAe;MAEd,IAAK,IAAI,CAACX,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,GAAG,IAAIR,KAAK,CAAC,CAAC;QACxB,IAAI,CAACQ,KAAK,CAACrtF,gBAAgB,GAAG,KAAK;QACnC,IAAI,CAACqtF,KAAK,CAACvuE,OAAO,GAAG,KAAK;QAC1B,IAAI,CAACuuE,KAAK,CAACO,iBAAiB,GAAG,KAAK;QACpC,IAAI,CAACP,KAAK,CAACQ,cAAc,GAAG,IAAI7iF,OAAO,CAAC,CAAC;QACzC,IAAI,CAACqiF,KAAK,CAACS,kBAAkB,GAAG,KAAK;QACrC,IAAI,CAACT,KAAK,CAACU,eAAe,GAAG,IAAI/iF,OAAO,CAAC,CAAC;MAE3C;MAEA,OAAO,IAAI,CAACqiF,KAAK;IAElB;EAAC;IAAA94G,GAAA;IAAAE,KAAA,EAED,SAAAuW,cAAeC,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACmiG,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,CAACpiG,aAAa,CAAEC,KAAM,CAAC;MAEvC;MAEA,IAAK,IAAI,CAACoiG,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAACriG,aAAa,CAAEC,KAAM,CAAC;MAElC;MAEA,IAAK,IAAI,CAACqiG,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAACtiG,aAAa,CAAEC,KAAM,CAAC;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA1W,GAAA;IAAAE,KAAA,EAED,SAAAw5G,QAASC,WAAW,EAAG;MAEtB,IAAKA,WAAW,IAAIA,WAAW,CAACC,IAAI,EAAG;QAEtC,IAAMA,IAAI,GAAG,IAAI,CAACb,KAAK;QAEvB,IAAKa,IAAI,EAAG;UAAA,IAAAC,UAAA,GAAA3qD,0BAAA,CAEeyqD,WAAW,CAACC,IAAI,CAACp3G,MAAM,CAAC,CAAC;YAAAs3G,MAAA;UAAA;YAAnD,KAAAD,UAAA,CAAAlgG,CAAA,MAAAmgG,MAAA,GAAAD,UAAA,CAAA9hG,CAAA,IAAAjU,IAAA,GAAsD;cAAA,IAA1Ci2G,UAAU,GAAAD,MAAA,CAAA55G,KAAA;cAErB;cACA,IAAI,CAAC85G,aAAa,CAAEJ,IAAI,EAAEG,UAAW,CAAC;YAEvC;UAAC,SAAAh5G,GAAA;YAAA84G,UAAA,CAAA97F,CAAA,CAAAhd,GAAA;UAAA;YAAA84G,UAAA,CAAAx2F,CAAA;UAAA;QAEF;MAED;MAEA,IAAI,CAAC5M,aAAa,CAAE;QAAE1U,IAAI,EAAE,WAAW;QAAEknB,IAAI,EAAE0wF;MAAY,CAAE,CAAC;MAE9D,OAAO,IAAI;IAEZ;EAAC;IAAA35G,GAAA;IAAAE,KAAA,EAED,SAAA+5G,WAAYN,WAAW,EAAG;MAEzB,IAAI,CAACljG,aAAa,CAAE;QAAE1U,IAAI,EAAE,cAAc;QAAEknB,IAAI,EAAE0wF;MAAY,CAAE,CAAC;MAEjE,IAAK,IAAI,CAACd,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,CAACtuE,OAAO,GAAG,KAAK;MAEhC;MAEA,IAAK,IAAI,CAACuuE,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAACvuE,OAAO,GAAG,KAAK;MAE3B;MAEA,IAAK,IAAI,CAACwuE,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAACxuE,OAAO,GAAG,KAAK;MAE3B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAvqC,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAQmnF,WAAW,EAAE1lD,KAAK,EAAEimD,cAAc,EAAG;MAE5C,IAAIC,SAAS,GAAG,IAAI;MACpB,IAAIC,QAAQ,GAAG,IAAI;MACnB,IAAIC,QAAQ,GAAG,IAAI;MAEnB,IAAMC,SAAS,GAAG,IAAI,CAACzB,UAAU;MACjC,IAAM0B,IAAI,GAAG,IAAI,CAACzB,KAAK;MACvB,IAAMc,IAAI,GAAG,IAAI,CAACb,KAAK;MAEvB,IAAKY,WAAW,IAAI1lD,KAAK,CAACumD,OAAO,CAACC,eAAe,KAAK,iBAAiB,EAAG;QAEzE,IAAKb,IAAI,IAAID,WAAW,CAACC,IAAI,EAAG;UAE/BS,QAAQ,GAAG,IAAI;UAAC,IAAAK,UAAA,GAAAxrD,0BAAA,CAEUyqD,WAAW,CAACC,IAAI,CAACp3G,MAAM,CAAC,CAAC;YAAAm4G,MAAA;UAAA;YAAnD,KAAAD,UAAA,CAAA/gG,CAAA,MAAAghG,MAAA,GAAAD,UAAA,CAAA3iG,CAAA,IAAAjU,IAAA,GAAsD;cAAA,IAA1Ci2G,UAAU,GAAAY,MAAA,CAAAz6G,KAAA;cAErB;cACA,IAAM06G,SAAS,GAAG3mD,KAAK,CAAC4mD,YAAY,CAAEd,UAAU,EAAEG,cAAe,CAAC;;cAElE;cACA,IAAMY,KAAK,GAAG,IAAI,CAACd,aAAa,CAAEJ,IAAI,EAAEG,UAAW,CAAC;cAEpD,IAAKa,SAAS,KAAK,IAAI,EAAG;gBAEzBE,KAAK,CAAC31F,MAAM,CAACrF,SAAS,CAAE86F,SAAS,CAACG,SAAS,CAAC51F,MAAO,CAAC;gBACpD21F,KAAK,CAAC31F,MAAM,CAACkhB,SAAS,CAAEy0E,KAAK,CAACh/E,QAAQ,EAAEg/E,KAAK,CAACr2F,QAAQ,EAAEq2F,KAAK,CAACl2F,KAAM,CAAC;gBACrEk2F,KAAK,CAAC1wE,sBAAsB,GAAG,IAAI;gBACnC0wE,KAAK,CAACE,WAAW,GAAGJ,SAAS,CAAC1hF,MAAM;cAErC;cAEA4hF,KAAK,CAACvwE,OAAO,GAAGqwE,SAAS,KAAK,IAAI;YAEnC;;YAEA;;YAEA;UAAA,SAAA75G,GAAA;YAAA25G,UAAA,CAAA38F,CAAA,CAAAhd,GAAA;UAAA;YAAA25G,UAAA,CAAAr3F,CAAA;UAAA;UACA,IAAM43F,QAAQ,GAAGrB,IAAI,CAACX,MAAM,CAAE,kBAAkB,CAAE;UAClD,IAAMiC,QAAQ,GAAGtB,IAAI,CAACX,MAAM,CAAE,WAAW,CAAE;UAC3C,IAAMxtE,QAAQ,GAAGwvE,QAAQ,CAACn/E,QAAQ,CAAC3c,UAAU,CAAE+7F,QAAQ,CAACp/E,QAAS,CAAC;UAElE,IAAMq/E,eAAe,GAAG,IAAI;UAC5B,IAAMC,SAAS,GAAG,KAAK;UAEvB,IAAKxB,IAAI,CAACV,UAAU,CAACC,QAAQ,IAAI1tE,QAAQ,GAAG0vE,eAAe,GAAGC,SAAS,EAAG;YAEzExB,IAAI,CAACV,UAAU,CAACC,QAAQ,GAAG,KAAK;YAChC,IAAI,CAAC1iG,aAAa,CAAE;cACnB1U,IAAI,EAAE,UAAU;cAChBs5G,UAAU,EAAE1B,WAAW,CAAC0B,UAAU;cAClC5yG,MAAM,EAAE;YACT,CAAE,CAAC;UAEJ,CAAC,MAAM,IAAK,CAAEmxG,IAAI,CAACV,UAAU,CAACC,QAAQ,IAAI1tE,QAAQ,IAAI0vE,eAAe,GAAGC,SAAS,EAAG;YAEnFxB,IAAI,CAACV,UAAU,CAACC,QAAQ,GAAG,IAAI;YAC/B,IAAI,CAAC1iG,aAAa,CAAE;cACnB1U,IAAI,EAAE,YAAY;cAClBs5G,UAAU,EAAE1B,WAAW,CAAC0B,UAAU;cAClC5yG,MAAM,EAAE;YACT,CAAE,CAAC;UAEJ;QAED,CAAC,MAAM;UAEN,IAAK8xG,IAAI,KAAK,IAAI,IAAIZ,WAAW,CAAC2B,SAAS,EAAG;YAE7ClB,QAAQ,GAAGnmD,KAAK,CAACsnD,OAAO,CAAE5B,WAAW,CAAC2B,SAAS,EAAEpB,cAAe,CAAC;YAEjE,IAAKE,QAAQ,KAAK,IAAI,EAAG;cAExBG,IAAI,CAACp1F,MAAM,CAACrF,SAAS,CAAEs6F,QAAQ,CAACW,SAAS,CAAC51F,MAAO,CAAC;cAClDo1F,IAAI,CAACp1F,MAAM,CAACkhB,SAAS,CAAEk0E,IAAI,CAACz+E,QAAQ,EAAEy+E,IAAI,CAAC91F,QAAQ,EAAE81F,IAAI,CAAC31F,KAAM,CAAC;cACjE21F,IAAI,CAACnwE,sBAAsB,GAAG,IAAI;cAElC,IAAKgwE,QAAQ,CAACd,cAAc,EAAG;gBAE9BiB,IAAI,CAAClB,iBAAiB,GAAG,IAAI;gBAC7BkB,IAAI,CAACjB,cAAc,CAACr8F,IAAI,CAAEm9F,QAAQ,CAACd,cAAe,CAAC;cAEpD,CAAC,MAAM;gBAENiB,IAAI,CAAClB,iBAAiB,GAAG,KAAK;cAE/B;cAEA,IAAKe,QAAQ,CAACZ,eAAe,EAAG;gBAE/Be,IAAI,CAAChB,kBAAkB,GAAG,IAAI;gBAC9BgB,IAAI,CAACf,eAAe,CAACv8F,IAAI,CAAEm9F,QAAQ,CAACZ,eAAgB,CAAC;cAEtD,CAAC,MAAM;gBAENe,IAAI,CAAChB,kBAAkB,GAAG,KAAK;cAEhC;YAED;UAED;QAED;QAEA,IAAKe,SAAS,KAAK,IAAI,EAAG;UAEzBH,SAAS,GAAGlmD,KAAK,CAACsnD,OAAO,CAAE5B,WAAW,CAAC6B,cAAc,EAAEtB,cAAe,CAAC;;UAEvE;UACA,IAAKC,SAAS,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,EAAG;YAE9CD,SAAS,GAAGC,QAAQ;UAErB;UAEA,IAAKD,SAAS,KAAK,IAAI,EAAG;YAEzBG,SAAS,CAACn1F,MAAM,CAACrF,SAAS,CAAEq6F,SAAS,CAACY,SAAS,CAAC51F,MAAO,CAAC;YACxDm1F,SAAS,CAACn1F,MAAM,CAACkhB,SAAS,CAAEi0E,SAAS,CAACx+E,QAAQ,EAAEw+E,SAAS,CAAC71F,QAAQ,EAAE61F,SAAS,CAAC11F,KAAM,CAAC;YACrF01F,SAAS,CAAClwE,sBAAsB,GAAG,IAAI;YAEvC,IAAK+vE,SAAS,CAACb,cAAc,EAAG;cAE/BgB,SAAS,CAACjB,iBAAiB,GAAG,IAAI;cAClCiB,SAAS,CAAChB,cAAc,CAACr8F,IAAI,CAAEk9F,SAAS,CAACb,cAAe,CAAC;YAE1D,CAAC,MAAM;cAENgB,SAAS,CAACjB,iBAAiB,GAAG,KAAK;YAEpC;YAEA,IAAKc,SAAS,CAACX,eAAe,EAAG;cAEhCc,SAAS,CAACf,kBAAkB,GAAG,IAAI;cACnCe,SAAS,CAACd,eAAe,CAACv8F,IAAI,CAAEk9F,SAAS,CAACX,eAAgB,CAAC;YAE5D,CAAC,MAAM;cAENc,SAAS,CAACf,kBAAkB,GAAG,KAAK;YAErC;YAEA,IAAI,CAAC9iG,aAAa,CAAEkiG,UAAW,CAAC;UAEjC;QAED;MAGD;MAEA,IAAK2B,SAAS,KAAK,IAAI,EAAG;QAEzBA,SAAS,CAAC/vE,OAAO,GAAK4vE,SAAS,KAAK,IAAM;MAE3C;MAEA,IAAKI,IAAI,KAAK,IAAI,EAAG;QAEpBA,IAAI,CAAChwE,OAAO,GAAK6vE,QAAQ,KAAK,IAAM;MAErC;MAEA,IAAKR,IAAI,KAAK,IAAI,EAAG;QAEpBA,IAAI,CAACrvE,OAAO,GAAK8vE,QAAQ,KAAK,IAAM;MAErC;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAr6G,GAAA;IAAAE,KAAA,EAEA,SAAA85G,cAAeJ,IAAI,EAAEG,UAAU,EAAG;MAEjC,IAAKH,IAAI,CAACX,MAAM,CAAEc,UAAU,CAAC0B,SAAS,CAAE,KAAKl3G,SAAS,EAAG;QAExD,IAAMu2G,KAAK,GAAG,IAAIxC,KAAK,CAAC,CAAC;QACzBwC,KAAK,CAACrvF,gBAAgB,GAAG,KAAK;QAC9BqvF,KAAK,CAACvwE,OAAO,GAAG,KAAK;QACrBqvE,IAAI,CAACX,MAAM,CAAEc,UAAU,CAAC0B,SAAS,CAAE,GAAGX,KAAK;QAE3ClB,IAAI,CAACz8F,GAAG,CAAE29F,KAAM,CAAC;MAElB;MAEA,OAAOlB,IAAI,CAACX,MAAM,CAAEc,UAAU,CAAC0B,SAAS,CAAE;IAE3C;EAAC;EAAA,OAAA7C,eAAA;AAAA;AAAA,IAII8C,YAAY,0BAAAC,SAAA;EAAAvxF,SAAA,CAAAsxF,YAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAtxF,YAAA,CAAAoxF,YAAA;EAEjB,SAAAA,aAAarzF,KAAK,EAAEC,MAAM,EAAEvmB,IAAI,EAAEyoB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEE,UAAU,EAAED,MAAM,EAAG;IAAA,IAAA+wF,OAAA;IAAAxzG,eAAA,OAAAqzG,YAAA;IAEnG5wF,MAAM,GAAGA,MAAM,KAAKvmB,SAAS,GAAGumB,MAAM,GAAGtb,WAAW;IAEpD,IAAKsb,MAAM,KAAKtb,WAAW,IAAIsb,MAAM,KAAKrb,kBAAkB,EAAG;MAE9D,MAAM,IAAI5L,KAAK,CAAE,kFAAmF,CAAC;IAEtG;IAEA,IAAK9B,IAAI,KAAKwC,SAAS,IAAIumB,MAAM,KAAKtb,WAAW,EAAGzN,IAAI,GAAG+M,eAAe;IAC1E,IAAK/M,IAAI,KAAKwC,SAAS,IAAIumB,MAAM,KAAKrb,kBAAkB,EAAG1N,IAAI,GAAGoN,kBAAkB;IAEpF0sG,OAAA,GAAAD,QAAA,CAAA55G,IAAA,OAAO,IAAI,EAAEwoB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU;IAElF8wF,OAAA,CAAKpL,cAAc,GAAG,IAAI;IAE1BoL,OAAA,CAAK5zF,KAAK,GAAG;MAAEI,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAE7CuzF,OAAA,CAAKjxF,SAAS,GAAGA,SAAS,KAAKrmB,SAAS,GAAGqmB,SAAS,GAAG7c,aAAa;IACpE8tG,OAAA,CAAKhxF,SAAS,GAAGA,SAAS,KAAKtmB,SAAS,GAAGsmB,SAAS,GAAG9c,aAAa;IAEpE8tG,OAAA,CAAKjwF,KAAK,GAAG,KAAK;IAClBiwF,OAAA,CAAKnwF,eAAe,GAAG,KAAK;IAE5BmwF,OAAA,CAAK5M,eAAe,GAAG,IAAI;IAAC,OAAA4M,OAAA;EAE7B;EAAChzG,YAAA,CAAA6yG,YAAA;IAAA17G,GAAA;IAAAE,KAAA,EAGD,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA++D,YAAA,CAAA/7G,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC6jF,eAAe,GAAG7jF,MAAM,CAAC6jF,eAAe;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAAjvG,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA++D,YAAA,CAAA/7G,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjC,IAAK,IAAI,CAAC0lF,eAAe,KAAK,IAAI,EAAGhmF,IAAI,CAACgmF,eAAe,GAAG,IAAI,CAACA,eAAe;MAEhF,OAAOhmF,IAAI;IAEZ;EAAC;EAAA,OAAAyyF,YAAA;AAAA,EAlDyBxxF,OAAO;AAAA1qB,OAAA,CAAAk8G,YAAA,GAAAA,YAAA;AAAA,IAsD5BI,YAAY,0BAAAC,iBAAA;EAAA3xF,SAAA,CAAA0xF,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA1xF,YAAA,CAAAwxF,YAAA;EAEjB,SAAAA,aAAazxD,QAAQ,EAAEkK,EAAE,EAAG;IAAA,IAAA0nD,OAAA;IAAA5zG,eAAA,OAAAyzG,YAAA;IAE3BG,OAAA,GAAAD,QAAA,CAAAh6G,IAAA;IAEA,IAAM2mD,KAAK,GAAAx9B,sBAAA,CAAA8wF,OAAA,CAAO;IAElB,IAAIzB,OAAO,GAAG,IAAI;IAElB,IAAI0B,sBAAsB,GAAG,GAAG;IAEhC,IAAIhC,cAAc,GAAG,IAAI;IACzB,IAAIiC,kBAAkB,GAAG,aAAa;IACtC;IACA,IAAIC,SAAS,GAAG,GAAG;IACnB,IAAIC,oBAAoB,GAAG,IAAI;IAE/B,IAAIC,IAAI,GAAG,IAAI;IACf,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,OAAO,GAAG,IAAI;IAClB,IAAM7gF,UAAU,GAAG04B,EAAE,CAACooD,oBAAoB,CAAC,CAAC;IAC5C,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,eAAe,GAAG,IAAI;IAE1B,IAAMC,WAAW,GAAG,EAAE;IACtB,IAAMC,sBAAsB,GAAG,EAAE;;IAEjC;;IAEA,IAAMC,OAAO,GAAG,IAAI3wD,iBAAiB,CAAC,CAAC;IACvC2wD,OAAO,CAACx0E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC1B60E,OAAO,CAAC5tF,QAAQ,GAAG,IAAIvC,OAAO,CAAC,CAAC;IAEhC,IAAMowF,OAAO,GAAG,IAAI5wD,iBAAiB,CAAC,CAAC;IACvC4wD,OAAO,CAACz0E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC1B80E,OAAO,CAAC7tF,QAAQ,GAAG,IAAIvC,OAAO,CAAC,CAAC;IAEhC,IAAMiiC,OAAO,GAAG,CAAEkuD,OAAO,EAAEC,OAAO,CAAE;IAEpC,IAAMC,QAAQ,GAAG,IAAIjF,WAAW,CAAC,CAAC;IAClCiF,QAAQ,CAAC10E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC3B+0E,QAAQ,CAAC10E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAE3B,IAAIg1E,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,gBAAgB,GAAG,IAAI;;IAE3B;;IAEAnB,OAAA,CAAKoB,gBAAgB,GAAG,IAAI;IAC5BpB,OAAA,CAAK/0F,OAAO,GAAG,KAAK;IAEpB+0F,OAAA,CAAKqB,YAAY,GAAG,KAAK;IAEzBrB,OAAA,CAAKsB,aAAa,GAAG,UAAWhnG,KAAK,EAAG;MAEvC,IAAIinG,UAAU,GAAGV,WAAW,CAAEvmG,KAAK,CAAE;MAErC,IAAKinG,UAAU,KAAKj5G,SAAS,EAAG;QAE/Bi5G,UAAU,GAAG,IAAI5E,eAAe,CAAC,CAAC;QAClCkE,WAAW,CAAEvmG,KAAK,CAAE,GAAGinG,UAAU;MAElC;MAEA,OAAOA,UAAU,CAACpE,iBAAiB,CAAC,CAAC;IAEtC,CAAC;IAED6C,OAAA,CAAKwB,iBAAiB,GAAG,UAAWlnG,KAAK,EAAG;MAE3C,IAAIinG,UAAU,GAAGV,WAAW,CAAEvmG,KAAK,CAAE;MAErC,IAAKinG,UAAU,KAAKj5G,SAAS,EAAG;QAE/Bi5G,UAAU,GAAG,IAAI5E,eAAe,CAAC,CAAC;QAClCkE,WAAW,CAAEvmG,KAAK,CAAE,GAAGinG,UAAU;MAElC;MAEA,OAAOA,UAAU,CAAC/D,YAAY,CAAC,CAAC;IAEjC,CAAC;IAEDwC,OAAA,CAAKyB,OAAO,GAAG,UAAWnnG,KAAK,EAAG;MAEjC,IAAIinG,UAAU,GAAGV,WAAW,CAAEvmG,KAAK,CAAE;MAErC,IAAKinG,UAAU,KAAKj5G,SAAS,EAAG;QAE/Bi5G,UAAU,GAAG,IAAI5E,eAAe,CAAC,CAAC;QAClCkE,WAAW,CAAEvmG,KAAK,CAAE,GAAGinG,UAAU;MAElC;MAEA,OAAOA,UAAU,CAACxE,YAAY,CAAC,CAAC;IAEjC,CAAC;;IAED;;IAEA,SAAS2E,cAAcA,CAAEjnG,KAAK,EAAG;MAEhC,IAAMknG,eAAe,GAAGb,sBAAsB,CAAC5mG,OAAO,CAAEO,KAAK,CAACijG,WAAY,CAAC;MAE3E,IAAKiE,eAAe,KAAK,CAAE,CAAC,EAAG;QAE9B;MAED;MAEA,IAAMJ,UAAU,GAAGV,WAAW,CAAEc,eAAe,CAAE;MAEjD,IAAKJ,UAAU,KAAKj5G,SAAS,EAAG;QAE/Bi5G,UAAU,CAAChrF,MAAM,CAAE9b,KAAK,CAACijG,WAAW,EAAEjjG,KAAK,CAACu9C,KAAK,EAAEooD,oBAAoB,IAAInC,cAAe,CAAC;QAC3FsD,UAAU,CAAC/mG,aAAa,CAAE;UAAE1U,IAAI,EAAE2U,KAAK,CAAC3U,IAAI;UAAEknB,IAAI,EAAEvS,KAAK,CAACijG;QAAY,CAAE,CAAC;MAE1E;IAED;IAEA,SAASkE,YAAYA,CAAA,EAAG;MAEvBrD,OAAO,CAACnkG,mBAAmB,CAAE,QAAQ,EAAEsnG,cAAe,CAAC;MACvDnD,OAAO,CAACnkG,mBAAmB,CAAE,aAAa,EAAEsnG,cAAe,CAAC;MAC5DnD,OAAO,CAACnkG,mBAAmB,CAAE,WAAW,EAAEsnG,cAAe,CAAC;MAC1DnD,OAAO,CAACnkG,mBAAmB,CAAE,SAAS,EAAEsnG,cAAe,CAAC;MACxDnD,OAAO,CAACnkG,mBAAmB,CAAE,cAAc,EAAEsnG,cAAe,CAAC;MAC7DnD,OAAO,CAACnkG,mBAAmB,CAAE,YAAY,EAAEsnG,cAAe,CAAC;MAC3DnD,OAAO,CAACnkG,mBAAmB,CAAE,KAAK,EAAEwnG,YAAa,CAAC;MAClDrD,OAAO,CAACnkG,mBAAmB,CAAE,oBAAoB,EAAEynG,oBAAqB,CAAC;MAEzE,KAAM,IAAIh4G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGg3G,WAAW,CAACj3G,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/C,IAAM6zG,WAAW,GAAGoD,sBAAsB,CAAEj3G,CAAC,CAAE;QAE/C,IAAK6zG,WAAW,KAAK,IAAI,EAAG;QAE5BoD,sBAAsB,CAAEj3G,CAAC,CAAE,GAAG,IAAI;QAElCg3G,WAAW,CAAEh3G,CAAC,CAAE,CAACm0G,UAAU,CAAEN,WAAY,CAAC;MAE3C;MAEAwD,iBAAiB,GAAG,IAAI;MACxBC,gBAAgB,GAAG,IAAI;;MAEvB;;MAEA/yD,QAAQ,CAACsF,eAAe,CAAEitD,mBAAoB,CAAC;MAE/CH,WAAW,GAAG,IAAI;MAClBD,WAAW,GAAG,IAAI;MAClBD,SAAS,GAAG,IAAI;MAChB/B,OAAO,GAAG,IAAI;MACdqC,eAAe,GAAG,IAAI;;MAEtB;;MAEAxtE,SAAS,CAAChoC,IAAI,CAAC,CAAC;MAEhBshD,KAAK,CAAC20D,YAAY,GAAG,KAAK;MAE1B30D,KAAK,CAAClyC,aAAa,CAAE;QAAE1U,IAAI,EAAE;MAAa,CAAE,CAAC;IAE9C;IAEAk6G,OAAA,CAAK8B,yBAAyB,GAAG,UAAW79G,KAAK,EAAG;MAEnDg8G,sBAAsB,GAAGh8G,KAAK;MAE9B,IAAKyoD,KAAK,CAAC20D,YAAY,KAAK,IAAI,EAAG;QAElC7hG,OAAO,CAACC,IAAI,CAAE,uEAAwE,CAAC;MAExF;IAED,CAAC;IAEDugG,OAAA,CAAK+B,qBAAqB,GAAG,UAAW99G,KAAK,EAAG;MAE/Ci8G,kBAAkB,GAAGj8G,KAAK;MAE1B,IAAKyoD,KAAK,CAAC20D,YAAY,KAAK,IAAI,EAAG;QAElC7hG,OAAO,CAACC,IAAI,CAAE,0EAA2E,CAAC;MAE3F;IAED,CAAC;IAEDugG,OAAA,CAAKgC,iBAAiB,GAAG,YAAY;MAEpC,OAAO5B,oBAAoB,IAAInC,cAAc;IAE9C,CAAC;IAED+B,OAAA,CAAKiC,iBAAiB,GAAG,UAAWC,KAAK,EAAG;MAE3C9B,oBAAoB,GAAG8B,KAAK;IAE7B,CAAC;IAEDlC,OAAA,CAAKmC,YAAY,GAAG,YAAY;MAE/B,OAAO5B,WAAW,KAAK,IAAI,GAAGA,WAAW,GAAGC,WAAW;IAExD,CAAC;IAEDR,OAAA,CAAKoC,UAAU,GAAG,YAAY;MAE7B,OAAO9B,SAAS;IAEjB,CAAC;IAEDN,OAAA,CAAKqC,QAAQ,GAAG,YAAY;MAE3B,OAAO5B,OAAO;IAEf,CAAC;IAEDT,OAAA,CAAKsC,UAAU,GAAG,YAAY;MAE7B,OAAO/D,OAAO;IAEf,CAAC;IAEDyB,OAAA,CAAKuC,UAAU;MAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAn/G,mBAAA,GAAA8G,IAAA,CAAG,SAAAs4G,QAAiBz+G,KAAK;QAAA,IAAA0+G,SAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,aAAA,EAAAC,mBAAA,EAAAjS,sBAAA;QAAA,OAAAxtG,mBAAA,GAAAyB,IAAA,UAAAi+G,SAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAh4G,IAAA,GAAAg4G,SAAA,CAAAt6G,IAAA;YAAA;cAEvC41G,OAAO,GAAGt6G,KAAK;cAAC,MAEXs6G,OAAO,KAAK,IAAI;gBAAA0E,SAAA,CAAAt6G,IAAA;gBAAA;cAAA;cAEpBg4G,mBAAmB,GAAGvyD,QAAQ,CAACC,eAAe,CAAC,CAAC;cAEhDkwD,OAAO,CAACzkG,gBAAgB,CAAE,QAAQ,EAAE4nG,cAAe,CAAC;cACpDnD,OAAO,CAACzkG,gBAAgB,CAAE,aAAa,EAAE4nG,cAAe,CAAC;cACzDnD,OAAO,CAACzkG,gBAAgB,CAAE,WAAW,EAAE4nG,cAAe,CAAC;cACvDnD,OAAO,CAACzkG,gBAAgB,CAAE,SAAS,EAAE4nG,cAAe,CAAC;cACrDnD,OAAO,CAACzkG,gBAAgB,CAAE,cAAc,EAAE4nG,cAAe,CAAC;cAC1DnD,OAAO,CAACzkG,gBAAgB,CAAE,YAAY,EAAE4nG,cAAe,CAAC;cACxDnD,OAAO,CAACzkG,gBAAgB,CAAE,KAAK,EAAE8nG,YAAa,CAAC;cAC/CrD,OAAO,CAACzkG,gBAAgB,CAAE,oBAAoB,EAAE+nG,oBAAqB,CAAC;cAAC,MAElEjiF,UAAU,CAACsjF,YAAY,KAAK,IAAI;gBAAAD,SAAA,CAAAt6G,IAAA;gBAAA;cAAA;cAAAs6G,SAAA,CAAAt6G,IAAA;cAAA,OAE9B2vD,EAAE,CAAC6qD,gBAAgB,CAAC,CAAC;YAAA;cAI5B,IAAO5E,OAAO,CAACrgB,WAAW,CAAC3xD,MAAM,KAAKjkC,SAAS,IAAQ8lD,QAAQ,CAACmK,YAAY,CAACC,QAAQ,KAAK,KAAO,EAAG;gBAE7FmqD,SAAS,GAAG;kBACjBS,SAAS,EAAI7E,OAAO,CAACrgB,WAAW,CAAC3xD,MAAM,KAAKjkC,SAAS,GAAKs3B,UAAU,CAACwjF,SAAS,GAAG,IAAI;kBACrF5/F,KAAK,EAAE,IAAI;kBACXwP,KAAK,EAAE4M,UAAU,CAAC5M,KAAK;kBACvB2hC,OAAO,EAAE/0B,UAAU,CAAC+0B,OAAO;kBAC3BsrD,sBAAsB,EAAEA;gBACzB,CAAC;gBAEDO,WAAW,GAAG,IAAI6C,YAAY,CAAE9E,OAAO,EAAEjmD,EAAE,EAAEqqD,SAAU,CAAC;gBAExDpE,OAAO,CAAC+E,iBAAiB,CAAE;kBAAEC,SAAS,EAAE/C;gBAAY,CAAE,CAAC;gBAEvDI,eAAe,GAAG,IAAIjtF,iBAAiB,CACtC6sF,WAAW,CAACgD,gBAAgB,EAC5BhD,WAAW,CAACiD,iBAAiB,EAC7B;kBACC50F,MAAM,EAAEzb,UAAU;kBAClBtN,IAAI,EAAE0M,gBAAgB;kBACtB4Y,UAAU,EAAEgjC,QAAQ,CAACE,gBAAgB;kBACrCh7B,aAAa,EAAEsM,UAAU,CAAC+0B;gBAC3B,CACD,CAAC;cAEF,CAAC,MAAM;gBAEFiuD,WAAW,GAAG,IAAI;gBAClBC,SAAS,GAAG,IAAI;gBAChBC,aAAa,GAAG,IAAI;gBAExB,IAAKljF,UAAU,CAAC5M,KAAK,EAAG;kBAEvB8vF,aAAa,GAAGljF,UAAU,CAAC+0B,OAAO,GAAG2D,EAAE,CAACs8C,gBAAgB,GAAGt8C,EAAE,CAACq8C,iBAAiB;kBAC/EiO,WAAW,GAAGhjF,UAAU,CAAC+0B,OAAO,GAAGnhD,kBAAkB,GAAGD,WAAW;kBACnEsvG,SAAS,GAAGjjF,UAAU,CAAC+0B,OAAO,GAAGzhD,kBAAkB,GAAGL,eAAe;gBAEtE;gBAEMkwG,mBAAmB,GAAG;kBAC3BW,WAAW,EAAEprD,EAAE,CAACq3C,KAAK;kBACrBiT,WAAW,EAAEE,aAAa;kBAC1B7mB,WAAW,EAAEgkB;gBACd,CAAC;gBAEDK,SAAS,GAAG,IAAIqD,cAAc,CAAEpF,OAAO,EAAEjmD,EAAG,CAAC;gBAE7CioD,WAAW,GAAGD,SAAS,CAACsD,qBAAqB,CAAEb,mBAAoB,CAAC;gBAEpExE,OAAO,CAAC+E,iBAAiB,CAAE;kBAAE/2E,MAAM,EAAE,CAAEg0E,WAAW;gBAAG,CAAE,CAAC;gBAExDK,eAAe,GAAG,IAAIjtF,iBAAiB,CACtC4sF,WAAW,CAACsD,YAAY,EACxBtD,WAAW,CAACuD,aAAa,EACzB;kBACCj1F,MAAM,EAAEzb,UAAU;kBAClBtN,IAAI,EAAE0M,gBAAgB;kBACtB+gB,YAAY,EAAE,IAAIksF,YAAY,CAAEc,WAAW,CAACsD,YAAY,EAAEtD,WAAW,CAACuD,aAAa,EAAEjB,SAAS,EAAEv6G,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEs6G,WAAY,CAAC;kBAC/KtvF,aAAa,EAAEsM,UAAU,CAAC+0B,OAAO;kBACjCvpC,UAAU,EAAEgjC,QAAQ,CAACE,gBAAgB;kBACrC96B,OAAO,EAAEoM,UAAU,CAACwjF,SAAS,GAAG,CAAC,GAAG;gBACrC,CAAE,CAAC;gBAEEtS,sBAAsB,GAAG1iD,QAAQ,CAACmZ,UAAU,CAAC/mD,GAAG,CAAEogG,eAAgB,CAAC;gBACzE9P,sBAAsB,CAAC0G,mBAAmB,GAAG+I,WAAW,CAAChJ,iBAAiB;cAE3E;cAEAqJ,eAAe,CAAC9oB,gBAAgB,GAAG,IAAI,CAAC,CAAC;;cAEzC,IAAI,CAACisB,YAAY,CAAE5D,SAAU,CAAC;cAE9BC,oBAAoB,GAAG,IAAI;cAAC6C,SAAA,CAAAt6G,IAAA;cAAA,OACL41G,OAAO,CAACyF,qBAAqB,CAAE9D,kBAAmB,CAAC;YAAA;cAA1EjC,cAAc,GAAAgF,SAAA,CAAAh7G,IAAA;cAEdmrC,SAAS,CAACglB,UAAU,CAAEmmD,OAAQ,CAAC;cAC/BnrE,SAAS,CAACyS,KAAK,CAAC,CAAC;cAEjB6G,KAAK,CAAC20D,YAAY,GAAG,IAAI;cAEzB30D,KAAK,CAAClyC,aAAa,CAAE;gBAAE1U,IAAI,EAAE;cAAe,CAAE,CAAC;YAAC;YAAA;cAAA,OAAAm9G,SAAA,CAAA73G,IAAA;UAAA;QAAA,GAAAs3G,OAAA;MAAA,CAIjD;MAAA,iBAAAuB,GAAA;QAAA,OAAAzB,IAAA,CAAApyE,KAAA,OAAAJ,SAAA;MAAA;IAAA;IAEDgwE,OAAA,CAAKlzC,uBAAuB,GAAG,YAAY;MAE1C,IAAKyxC,OAAO,KAAK,IAAI,EAAG;QAEvB,OAAOA,OAAO,CAAC1xC,oBAAoB;MAEpC;IAED,CAAC;IAED,SAASg1C,oBAAoBA,CAAEpnG,KAAK,EAAG;MAEtC;;MAEA,KAAM,IAAI5Q,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4Q,KAAK,CAACypG,OAAO,CAACt6G,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEjD,IAAM6zG,WAAW,GAAGjjG,KAAK,CAACypG,OAAO,CAAEr6G,CAAC,CAAE;QACtC,IAAMyQ,KAAK,GAAGwmG,sBAAsB,CAAC5mG,OAAO,CAAEwjG,WAAY,CAAC;QAE3D,IAAKpjG,KAAK,IAAI,CAAC,EAAG;UAEjBwmG,sBAAsB,CAAExmG,KAAK,CAAE,GAAG,IAAI;UACtCumG,WAAW,CAAEvmG,KAAK,CAAE,CAAC0jG,UAAU,CAAEN,WAAY,CAAC;QAE/C;MAED;;MAEA;;MAEA,KAAM,IAAI7zG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG4Q,KAAK,CAAC0pG,KAAK,CAACv6G,MAAM,EAAEC,IAAC,EAAG,EAAG;QAE/C,IAAM6zG,YAAW,GAAGjjG,KAAK,CAAC0pG,KAAK,CAAEt6G,IAAC,CAAE;QAEpC,IAAI83G,eAAe,GAAGb,sBAAsB,CAAC5mG,OAAO,CAAEwjG,YAAY,CAAC;QAEnE,IAAKiE,eAAe,KAAK,CAAE,CAAC,EAAG;UAE9B;;UAEA,KAAM,IAAI93G,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGg3G,WAAW,CAACj3G,MAAM,EAAEC,IAAC,EAAG,EAAG;YAE/C,IAAKA,IAAC,IAAIi3G,sBAAsB,CAACl3G,MAAM,EAAG;cAEzCk3G,sBAAsB,CAACz3G,IAAI,CAAEq0G,YAAY,CAAC;cAC1CiE,eAAe,GAAG93G,IAAC;cACnB;YAED,CAAC,MAAM,IAAKi3G,sBAAsB,CAAEj3G,IAAC,CAAE,KAAK,IAAI,EAAG;cAElDi3G,sBAAsB,CAAEj3G,IAAC,CAAE,GAAG6zG,YAAW;cACzCiE,eAAe,GAAG93G,IAAC;cACnB;YAED;UAED;;UAEA;;UAEA,IAAK83G,eAAe,KAAK,CAAE,CAAC,EAAG;QAEhC;QAEA,IAAMJ,UAAU,GAAGV,WAAW,CAAEc,eAAe,CAAE;QAEjD,IAAKJ,UAAU,EAAG;UAEjBA,UAAU,CAAC9D,OAAO,CAAEC,YAAY,CAAC;QAElC;MAED;IAED;;IAEA;;IAEA,IAAM0G,UAAU,GAAG,IAAI5pF,OAAO,CAAC,CAAC;IAChC,IAAM6pF,UAAU,GAAG,IAAI7pF,OAAO,CAAC,CAAC;;IAEhC;AACF;AACA;AACA;AACA;AACA;IACE,SAAS8pF,sBAAsBA,CAAE5oF,MAAM,EAAEqlF,OAAO,EAAEC,OAAO,EAAG;MAE3DoD,UAAU,CAAC9mF,qBAAqB,CAAEyjF,OAAO,CAAChlF,WAAY,CAAC;MACvDsoF,UAAU,CAAC/mF,qBAAqB,CAAE0jF,OAAO,CAACjlF,WAAY,CAAC;MAEvD,IAAMwoF,GAAG,GAAGH,UAAU,CAAClhG,UAAU,CAAEmhG,UAAW,CAAC;MAE/C,IAAMG,KAAK,GAAGzD,OAAO,CAACnlF,gBAAgB,CAAC7Z,QAAQ;MAC/C,IAAM0iG,KAAK,GAAGzD,OAAO,CAACplF,gBAAgB,CAAC7Z,QAAQ;;MAE/C;MACA;MACA;MACA,IAAM+oB,IAAI,GAAG05E,KAAK,CAAE,EAAE,CAAE,IAAKA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAE;MAC9C,IAAMz5E,GAAG,GAAGy5E,KAAK,CAAE,EAAE,CAAE,IAAKA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAE;MAC7C,IAAME,MAAM,GAAG,CAAEF,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAC9C,IAAMG,SAAS,GAAG,CAAEH,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAEjD,IAAMI,OAAO,GAAG,CAAEJ,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAC/C,IAAMK,QAAQ,GAAG,CAAEJ,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAChD,IAAM/5E,IAAI,GAAGI,IAAI,GAAG85E,OAAO;MAC3B,IAAMj6E,KAAK,GAAGG,IAAI,GAAG+5E,QAAQ;;MAE7B;MACA;MACA,IAAMC,OAAO,GAAGP,GAAG,IAAK,CAAEK,OAAO,GAAGC,QAAQ,CAAE;MAC9C,IAAME,OAAO,GAAGD,OAAO,GAAG,CAAEF,OAAO;;MAEnC;MACA7D,OAAO,CAAChlF,WAAW,CAACqO,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAAC/S,KAAM,CAAC;MACjF+S,MAAM,CAAC+T,UAAU,CAAEs1E,OAAQ,CAAC;MAC5BrpF,MAAM,CAACiU,UAAU,CAAEm1E,OAAQ,CAAC;MAC5BppF,MAAM,CAACK,WAAW,CAAC+L,OAAO,CAAEpM,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAAC/S,KAAM,CAAC;MAC9E+S,MAAM,CAACC,kBAAkB,CAAC3a,IAAI,CAAE0a,MAAM,CAACK,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;;MAE7D;MACA;MACA;MACA,IAAMy9F,KAAK,GAAGl6E,IAAI,GAAGg6E,OAAO;MAC5B,IAAMG,IAAI,GAAGl6E,GAAG,GAAG+5E,OAAO;MAC1B,IAAMI,KAAK,GAAGx6E,IAAI,GAAGq6E,OAAO;MAC5B,IAAMI,MAAM,GAAGx6E,KAAK,IAAK45E,GAAG,GAAGQ,OAAO,CAAE;MACxC,IAAMK,IAAI,GAAGV,MAAM,GAAG35E,GAAG,GAAGk6E,IAAI,GAAGD,KAAK;MACxC,IAAMK,OAAO,GAAGV,SAAS,GAAG55E,GAAG,GAAGk6E,IAAI,GAAGD,KAAK;MAE9CtpF,MAAM,CAACE,gBAAgB,CAAC6O,eAAe,CAAEy6E,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEL,KAAK,EAAEC,IAAK,CAAC;MACpFvpF,MAAM,CAACI,uBAAuB,CAAC9a,IAAI,CAAE0a,MAAM,CAACE,gBAAiB,CAAC,CAACrU,MAAM,CAAC,CAAC;IAExE;IAEA,SAAS+9F,YAAYA,CAAE5pF,MAAM,EAAEiS,MAAM,EAAG;MAEvC,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBjS,MAAM,CAACK,WAAW,CAAC/a,IAAI,CAAE0a,MAAM,CAACxS,MAAO,CAAC;MAEzC,CAAC,MAAM;QAENwS,MAAM,CAACK,WAAW,CAACnW,gBAAgB,CAAE+nB,MAAM,CAAC5R,WAAW,EAAEL,MAAM,CAACxS,MAAO,CAAC;MAEzE;MAEAwS,MAAM,CAACC,kBAAkB,CAAC3a,IAAI,CAAE0a,MAAM,CAACK,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;IAE9D;IAEAy4F,OAAA,CAAKsF,YAAY,GAAG,UAAW5pF,MAAM,EAAG;MAEvC,IAAK6iF,OAAO,KAAK,IAAI,EAAG;MAExB0C,QAAQ,CAACn2E,IAAI,GAAGk2E,OAAO,CAACl2E,IAAI,GAAGi2E,OAAO,CAACj2E,IAAI,GAAGpP,MAAM,CAACoP,IAAI;MACzDm2E,QAAQ,CAACl2E,GAAG,GAAGi2E,OAAO,CAACj2E,GAAG,GAAGg2E,OAAO,CAACh2E,GAAG,GAAGrP,MAAM,CAACqP,GAAG;MAErD,IAAKm2E,iBAAiB,KAAKD,QAAQ,CAACn2E,IAAI,IAAIq2E,gBAAgB,KAAKF,QAAQ,CAACl2E,GAAG,EAAG;QAE/E;;QAEAwzE,OAAO,CAAC+E,iBAAiB,CAAE;UAC1BiC,SAAS,EAAEtE,QAAQ,CAACn2E,IAAI;UACxB06E,QAAQ,EAAEvE,QAAQ,CAACl2E;QACpB,CAAE,CAAC;QAEHm2E,iBAAiB,GAAGD,QAAQ,CAACn2E,IAAI;QACjCq2E,gBAAgB,GAAGF,QAAQ,CAACl2E,GAAG;MAEhC;MAEA,IAAM4C,MAAM,GAAGjS,MAAM,CAACiS,MAAM;MAC5B,IAAMklB,OAAO,GAAGouD,QAAQ,CAACpuD,OAAO;MAEhCyyD,YAAY,CAAErE,QAAQ,EAAEtzE,MAAO,CAAC;MAEhC,KAAM,IAAI9jC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgpD,OAAO,CAACjpD,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE3Cy7G,YAAY,CAAEzyD,OAAO,CAAEhpD,CAAC,CAAE,EAAE8jC,MAAO,CAAC;MAErC;;MAEA;;MAEA,IAAKklB,OAAO,CAACjpD,MAAM,KAAK,CAAC,EAAG;QAE3B06G,sBAAsB,CAAErD,QAAQ,EAAEF,OAAO,EAAEC,OAAQ,CAAC;MAErD,CAAC,MAAM;QAEN;;QAEAC,QAAQ,CAACrlF,gBAAgB,CAAC5a,IAAI,CAAE+/F,OAAO,CAACnlF,gBAAiB,CAAC;MAE3D;;MAEA;;MAEA6pF,gBAAgB,CAAE/pF,MAAM,EAAEulF,QAAQ,EAAEtzE,MAAO,CAAC;IAE7C,CAAC;IAED,SAAS83E,gBAAgBA,CAAE/pF,MAAM,EAAEulF,QAAQ,EAAEtzE,MAAM,EAAG;MAErD,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBjS,MAAM,CAACxS,MAAM,CAAClI,IAAI,CAAEigG,QAAQ,CAACllF,WAAY,CAAC;MAE3C,CAAC,MAAM;QAENL,MAAM,CAACxS,MAAM,CAAClI,IAAI,CAAE2sB,MAAM,CAAC5R,WAAY,CAAC;QACxCL,MAAM,CAACxS,MAAM,CAAC3B,MAAM,CAAC,CAAC;QACtBmU,MAAM,CAACxS,MAAM,CAACzH,QAAQ,CAAEw/F,QAAQ,CAACllF,WAAY,CAAC;MAE/C;MAEAL,MAAM,CAACxS,MAAM,CAACkhB,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAAC/S,KAAM,CAAC;MAC3E+S,MAAM,CAAC4V,iBAAiB,CAAE,IAAK,CAAC;MAEhC5V,MAAM,CAACE,gBAAgB,CAAC5a,IAAI,CAAEigG,QAAQ,CAACrlF,gBAAiB,CAAC;MACzDF,MAAM,CAACI,uBAAuB,CAAC9a,IAAI,CAAEigG,QAAQ,CAACnlF,uBAAwB,CAAC;MAEvE,IAAKJ,MAAM,CAACg1B,mBAAmB,EAAG;QAEjCh1B,MAAM,CAAC60B,GAAG,GAAGt1C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACs2C,IAAI,CAAE,CAAC,GAAG31B,MAAM,CAACE,gBAAgB,CAAC7Z,QAAQ,CAAE,CAAC,CAAG,CAAC;QACjF2Z,MAAM,CAACi1B,IAAI,GAAG,CAAC;MAEhB;IAED;IAEAqvD,OAAA,CAAK0F,SAAS,GAAG,YAAY;MAE5B,OAAOzE,QAAQ;IAEhB,CAAC;IAEDjB,OAAA,CAAK2F,YAAY,GAAG,YAAY;MAE/B,IAAKpF,WAAW,KAAK,IAAI,IAAIC,WAAW,KAAK,IAAI,EAAG;QAEnD,OAAOl4G,SAAS;MAEjB;MAEA,OAAO63G,SAAS;IAEjB,CAAC;IAEDH,OAAA,CAAK+D,YAAY,GAAG,UAAW9/G,KAAK,EAAG;MAEtC;MACA;;MAEAk8G,SAAS,GAAGl8G,KAAK;MAEjB,IAAKs8G,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,CAACqF,cAAc,GAAG3hH,KAAK;MAEnC;MAEA,IAAKu8G,WAAW,KAAK,IAAI,IAAIA,WAAW,CAACoF,cAAc,KAAKt9G,SAAS,EAAG;QAEvEk4G,WAAW,CAACoF,cAAc,GAAG3hH,KAAK;MAEnC;IAED,CAAC;;IAED;;IAEA,IAAI4hH,wBAAwB,GAAG,IAAI;IAEnC,SAAS/tD,gBAAgBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;MAExCqoD,IAAI,GAAGroD,KAAK,CAAC8tD,aAAa,CAAE1F,oBAAoB,IAAInC,cAAe,CAAC;MACpEwC,OAAO,GAAGzoD,KAAK;MAEf,IAAKqoD,IAAI,KAAK,IAAI,EAAG;QAEpB,IAAM0F,KAAK,GAAG1F,IAAI,CAAC0F,KAAK;QAExB,IAAKvF,WAAW,KAAK,IAAI,EAAG;UAE3BpyD,QAAQ,CAAC43D,0BAA0B,CAAEpF,eAAe,EAAEJ,WAAW,CAACjY,WAAY,CAAC;UAC/En6C,QAAQ,CAACsF,eAAe,CAAEktD,eAAgB,CAAC;QAE5C;QAEA,IAAIqF,mBAAmB,GAAG,KAAK;;QAE/B;;QAEA,IAAKF,KAAK,CAACn8G,MAAM,KAAKq3G,QAAQ,CAACpuD,OAAO,CAACjpD,MAAM,EAAG;UAE/Cq3G,QAAQ,CAACpuD,OAAO,CAACjpD,MAAM,GAAG,CAAC;UAC3Bq8G,mBAAmB,GAAG,IAAI;QAE3B;QAEA,KAAM,IAAIp8G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk8G,KAAK,CAACn8G,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEzC,IAAMgnD,IAAI,GAAGk1D,KAAK,CAAEl8G,CAAC,CAAE;UAEvB,IAAIspB,QAAQ,GAAG,IAAI;UAEnB,IAAKqtF,WAAW,KAAK,IAAI,EAAG;YAE3BrtF,QAAQ,GAAGqtF,WAAW,CAACrf,WAAW,CAAEtwC,IAAK,CAAC;UAE3C,CAAC,MAAM;YAEN,IAAMq1D,UAAU,GAAG5F,SAAS,CAAC6F,eAAe,CAAE5F,WAAW,EAAE1vD,IAAK,CAAC;YACjE19B,QAAQ,GAAG+yF,UAAU,CAAC/yF,QAAQ;;YAE9B;YACA,IAAKtpB,CAAC,KAAK,CAAC,EAAG;cAEdukD,QAAQ,CAACg4D,uBAAuB,CAC/BxF,eAAe,EACfsF,UAAU,CAACrP,YAAY,EACvB0J,WAAW,CAAChJ,iBAAiB,GAAGjvG,SAAS,GAAG49G,UAAU,CAACG,mBAAoB,CAAC;cAE7Ej4D,QAAQ,CAACsF,eAAe,CAAEktD,eAAgB,CAAC;YAE5C;UAED;UAEA,IAAIllF,MAAM,GAAGm3B,OAAO,CAAEhpD,CAAC,CAAE;UAEzB,IAAK6xB,MAAM,KAAKpzB,SAAS,EAAG;YAE3BozB,MAAM,GAAG,IAAI00B,iBAAiB,CAAC,CAAC;YAChC10B,MAAM,CAAC6Q,MAAM,CAACL,MAAM,CAAEriC,CAAE,CAAC;YACzB6xB,MAAM,CAACvI,QAAQ,GAAG,IAAIvC,OAAO,CAAC,CAAC;YAC/BiiC,OAAO,CAAEhpD,CAAC,CAAE,GAAG6xB,MAAM;UAEtB;UAEAA,MAAM,CAACxS,MAAM,CAACrF,SAAS,CAAEgtC,IAAI,CAACiuD,SAAS,CAAC51F,MAAO,CAAC;UAChDwS,MAAM,CAACxS,MAAM,CAACkhB,SAAS,CAAE1O,MAAM,CAACmE,QAAQ,EAAEnE,MAAM,CAACtF,UAAU,EAAEsF,MAAM,CAAC/S,KAAM,CAAC;UAC3E+S,MAAM,CAACE,gBAAgB,CAAC/X,SAAS,CAAEgtC,IAAI,CAACj1B,gBAAiB,CAAC;UAC1DF,MAAM,CAACI,uBAAuB,CAAC9a,IAAI,CAAE0a,MAAM,CAACE,gBAAiB,CAAC,CAACrU,MAAM,CAAC,CAAC;UACvEmU,MAAM,CAACvI,QAAQ,CAAC5T,GAAG,CAAE4T,QAAQ,CAAClX,CAAC,EAAEkX,QAAQ,CAAC5W,CAAC,EAAE4W,QAAQ,CAAC/G,KAAK,EAAE+G,QAAQ,CAAC9G,MAAO,CAAC;UAE9E,IAAKxiB,CAAC,KAAK,CAAC,EAAG;YAEdo3G,QAAQ,CAAC/3F,MAAM,CAAClI,IAAI,CAAE0a,MAAM,CAACxS,MAAO,CAAC;YACrC+3F,QAAQ,CAAC/3F,MAAM,CAACkhB,SAAS,CAAE62E,QAAQ,CAACphF,QAAQ,EAAEohF,QAAQ,CAAC7qF,UAAU,EAAE6qF,QAAQ,CAACt4F,KAAM,CAAC;UAEpF;UAEA,IAAKs9F,mBAAmB,KAAK,IAAI,EAAG;YAEnChF,QAAQ,CAACpuD,OAAO,CAACxpD,IAAI,CAAEqyB,MAAO,CAAC;UAEhC;QAED;MAED;;MAEA;;MAEA,KAAM,IAAI7xB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGg3G,WAAW,CAACj3G,MAAM,EAAEC,IAAC,EAAG,EAAG;QAE/C,IAAM6zG,WAAW,GAAGoD,sBAAsB,CAAEj3G,IAAC,CAAE;QAC/C,IAAM03G,UAAU,GAAGV,WAAW,CAAEh3G,IAAC,CAAE;QAEnC,IAAK6zG,WAAW,KAAK,IAAI,IAAI6D,UAAU,KAAKj5G,SAAS,EAAG;UAEvDi5G,UAAU,CAAChrF,MAAM,CAAEmnF,WAAW,EAAE1lD,KAAK,EAAEooD,oBAAoB,IAAInC,cAAe,CAAC;QAEhF;MAED;MAEA,IAAK4H,wBAAwB,EAAGA,wBAAwB,CAAE9tD,IAAI,EAAEC,KAAM,CAAC;MAEvE,IAAKA,KAAK,CAACsuD,cAAc,EAAG;QAE3B55D,KAAK,CAAClyC,aAAa,CAAE;UAAE1U,IAAI,EAAE,gBAAgB;UAAEknB,IAAI,EAAEgrC;QAAM,CAAE,CAAC;MAE/D;MAEAyoD,OAAO,GAAG,IAAI;IAEf;IAEA,IAAMrtE,SAAS,GAAG,IAAIskB,cAAc,CAAC,CAAC;IAEtCtkB,SAAS,CAAC+kB,gBAAgB,CAAEL,gBAAiB,CAAC;IAE9CkoD,OAAA,CAAK7nD,gBAAgB,GAAG,UAAWj/B,QAAQ,EAAG;MAE7C2sF,wBAAwB,GAAG3sF,QAAQ;IAEpC,CAAC;IAED8mF,OAAA,CAAKxvF,OAAO,GAAG,YAAY,CAAC,CAAC;IAAC,OAAAwvF,OAAA;EAE/B;EAAC,OAAApzG,YAAA,CAAAizG,YAAA;AAAA,EAzuByBhmG,eAAe;AA6uB1C,SAAS0sG,cAAcA,CAAEn4D,QAAQ,EAAEmZ,UAAU,EAAG;EAE/C,SAASi/C,uBAAuBA,CAAEvrE,GAAG,EAAE8U,OAAO,EAAG;IAEhD,IAAK9U,GAAG,CAACzrB,gBAAgB,KAAK,IAAI,EAAG;MAEpCyrB,GAAG,CAAChrB,YAAY,CAAC,CAAC;IAEnB;IAEA8/B,OAAO,CAAC9rD,KAAK,CAAC+c,IAAI,CAAEi6B,GAAG,CAAC/xB,MAAO,CAAC;EAEjC;EAEA,SAASu9F,kBAAkBA,CAAEz4D,QAAQ,EAAEpQ,GAAG,EAAG;IAE5CA,GAAG,CAACrzB,KAAK,CAACk1B,MAAM,CAAEuO,QAAQ,CAACmZ,QAAQ,CAACljE,KAAK,EAAEkqD,yBAAyB,CAAEC,QAAS,CAAE,CAAC;IAElF,IAAKxQ,GAAG,CAAC8oE,KAAK,EAAG;MAEhB14D,QAAQ,CAACiZ,OAAO,CAAChjE,KAAK,GAAG25C,GAAG,CAAC9S,IAAI;MACjCkjB,QAAQ,CAACkZ,MAAM,CAACjjE,KAAK,GAAG25C,GAAG,CAAC7S,GAAG;IAEhC,CAAC,MAAM,IAAK6S,GAAG,CAACo6C,SAAS,EAAG;MAE3BhqC,QAAQ,CAACgZ,UAAU,CAAC/iE,KAAK,GAAG25C,GAAG,CAAC+oE,OAAO;IAExC;EAED;EAEA,SAASC,uBAAuBA,CAAE54D,QAAQ,EAAE9a,QAAQ,EAAE2zE,UAAU,EAAEx6F,MAAM,EAAEy6F,wBAAwB,EAAG;IAEpG,IAAK5zE,QAAQ,CAACsN,mBAAmB,EAAG;MAEnCumE,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAAC8zE,qBAAqB,EAAG;MAE5CD,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAAC+zE,kBAAkB,EAAG;MAEzCF,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;MAC3Cg0E,mBAAmB,CAAEl5D,QAAQ,EAAE9a,QAAS,CAAC;IAE1C,CAAC,MAAM,IAAKA,QAAQ,CAACi0E,mBAAmB,EAAG;MAE1CJ,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;MAC3Ck0E,oBAAoB,CAAEp5D,QAAQ,EAAE9a,QAAS,CAAC;IAE3C,CAAC,MAAM,IAAKA,QAAQ,CAACmiD,sBAAsB,EAAG;MAE7C0xB,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;MAC3Cm0E,uBAAuB,CAAEr5D,QAAQ,EAAE9a,QAAS,CAAC;MAE7C,IAAKA,QAAQ,CAACo0E,sBAAsB,EAAG;QAEtCC,uBAAuB,CAAEv5D,QAAQ,EAAE9a,QAAQ,EAAE4zE,wBAAyB,CAAC;MAExE;IAED,CAAC,MAAM,IAAK5zE,QAAQ,CAACs0E,oBAAoB,EAAG;MAE3CT,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;MAC3Cu0E,qBAAqB,CAAEz5D,QAAQ,EAAE9a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACorD,mBAAmB,EAAG;MAE1CyoB,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACwrD,sBAAsB,EAAG;MAE7CqoB,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;MAC3Cw0E,uBAAuB,CAAE15D,QAAQ,EAAE9a,QAAS,CAAC;IAE9C,CAAC,MAAM,IAAKA,QAAQ,CAACy0E,oBAAoB,EAAG;MAE3CZ,qBAAqB,CAAE/4D,QAAQ,EAAE9a,QAAS,CAAC;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAAC00E,mBAAmB,EAAG;MAE1CC,mBAAmB,CAAE75D,QAAQ,EAAE9a,QAAS,CAAC;MAEzC,IAAKA,QAAQ,CAAC40E,oBAAoB,EAAG;QAEpCC,mBAAmB,CAAE/5D,QAAQ,EAAE9a,QAAS,CAAC;MAE1C;IAED,CAAC,MAAM,IAAKA,QAAQ,CAAC80E,gBAAgB,EAAG;MAEvCC,qBAAqB,CAAEj6D,QAAQ,EAAE9a,QAAQ,EAAE2zE,UAAU,EAAEx6F,MAAO,CAAC;IAEhE,CAAC,MAAM,IAAK6mB,QAAQ,CAACg1E,gBAAgB,EAAG;MAEvCC,sBAAsB,CAAEn6D,QAAQ,EAAE9a,QAAS,CAAC;IAE7C,CAAC,MAAM,IAAKA,QAAQ,CAACk1E,gBAAgB,EAAG;MAEvCp6D,QAAQ,CAACzjC,KAAK,CAACtmB,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC3oB,KAAM,CAAC;MAC3CyjC,QAAQ,CAAClX,OAAO,CAAC7yC,KAAK,GAAGivC,QAAQ,CAAC4D,OAAO;IAE1C,CAAC,MAAM,IAAK5D,QAAQ,CAAC6b,gBAAgB,EAAG;MAEvC7b,QAAQ,CAAC2c,kBAAkB,GAAG,KAAK,CAAC,CAAC;IAEtC;EAED;;EAEA,SAASk3D,qBAAqBA,CAAE/4D,QAAQ,EAAE9a,QAAQ,EAAG;IAEpD8a,QAAQ,CAAClX,OAAO,CAAC7yC,KAAK,GAAGivC,QAAQ,CAAC4D,OAAO;IAEzC,IAAK5D,QAAQ,CAAC3oB,KAAK,EAAG;MAErByjC,QAAQ,CAACuX,OAAO,CAACthE,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC3oB,KAAM,CAAC;IAE9C;IAEA,IAAK2oB,QAAQ,CAAC4G,QAAQ,EAAG;MAExBkU,QAAQ,CAAClU,QAAQ,CAAC71C,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC4G,QAAS,CAAC,CAACp4B,cAAc,CAAEwxB,QAAQ,CAAC6G,iBAAkB,CAAC;IAE/F;IAEA,IAAK7G,QAAQ,CAAC+H,GAAG,EAAG;MAEnB+S,QAAQ,CAAC/S,GAAG,CAACh3C,KAAK,GAAGivC,QAAQ,CAAC+H,GAAG;MAEjCurE,uBAAuB,CAAEtzE,QAAQ,CAAC+H,GAAG,EAAE+S,QAAQ,CAACwX,YAAa,CAAC;IAE/D;IAEA,IAAKtyB,QAAQ,CAACiI,QAAQ,EAAG;MAExB6S,QAAQ,CAAC7S,QAAQ,CAACl3C,KAAK,GAAGivC,QAAQ,CAACiI,QAAQ;MAE3CqrE,uBAAuB,CAAEtzE,QAAQ,CAACiI,QAAQ,EAAE6S,QAAQ,CAACyX,iBAAkB,CAAC;IAEzE;IAEA,IAAKvyB,QAAQ,CAACsI,OAAO,EAAG;MAEvBwS,QAAQ,CAACxS,OAAO,CAACv3C,KAAK,GAAGivC,QAAQ,CAACsI,OAAO;MAEzCgrE,uBAAuB,CAAEtzE,QAAQ,CAACsI,OAAO,EAAEwS,QAAQ,CAACoY,gBAAiB,CAAC;MAEtEpY,QAAQ,CAACvS,SAAS,CAACx3C,KAAK,GAAGivC,QAAQ,CAACuI,SAAS;MAE7C,IAAKvI,QAAQ,CAAC0D,IAAI,KAAKjoC,QAAQ,EAAG;QAEjCq/C,QAAQ,CAACvS,SAAS,CAACx3C,KAAK,IAAI,CAAE,CAAC;MAEhC;IAED;IAEA,IAAKivC,QAAQ,CAACwI,SAAS,EAAG;MAEzBsS,QAAQ,CAACtS,SAAS,CAACz3C,KAAK,GAAGivC,QAAQ,CAACwI,SAAS;MAE7C8qE,uBAAuB,CAAEtzE,QAAQ,CAACwI,SAAS,EAAEsS,QAAQ,CAACsY,kBAAmB,CAAC;MAE1EtY,QAAQ,CAACpS,WAAW,CAAC33C,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC0I,WAAY,CAAC;MAEvD,IAAK1I,QAAQ,CAAC0D,IAAI,KAAKjoC,QAAQ,EAAG;QAEjCq/C,QAAQ,CAACpS,WAAW,CAAC33C,KAAK,CAACqe,MAAM,CAAC,CAAC;MAEpC;IAED;IAEA,IAAK4wB,QAAQ,CAAC2I,eAAe,EAAG;MAE/BmS,QAAQ,CAACnS,eAAe,CAAC53C,KAAK,GAAGivC,QAAQ,CAAC2I,eAAe;MAEzD2qE,uBAAuB,CAAEtzE,QAAQ,CAAC2I,eAAe,EAAEmS,QAAQ,CAACwY,wBAAyB,CAAC;MAEtFxY,QAAQ,CAAClS,iBAAiB,CAAC73C,KAAK,GAAGivC,QAAQ,CAAC4I,iBAAiB;MAC7DkS,QAAQ,CAACjS,gBAAgB,CAAC93C,KAAK,GAAGivC,QAAQ,CAAC6I,gBAAgB;IAE5D;IAEA,IAAK7I,QAAQ,CAACgJ,WAAW,EAAG;MAE3B8R,QAAQ,CAAC9R,WAAW,CAACj4C,KAAK,GAAGivC,QAAQ,CAACgJ,WAAW;MAEjDsqE,uBAAuB,CAAEtzE,QAAQ,CAACgJ,WAAW,EAAE8R,QAAQ,CAAC0Y,oBAAqB,CAAC;IAE/E;IAEA,IAAKxzB,QAAQ,CAACiJ,WAAW,EAAG;MAE3B6R,QAAQ,CAAC7R,WAAW,CAACl4C,KAAK,GAAGivC,QAAQ,CAACiJ,WAAW;MAEjDqqE,uBAAuB,CAAEtzE,QAAQ,CAACiJ,WAAW,EAAE6R,QAAQ,CAAC2X,oBAAqB,CAAC;IAE/E;IAEA,IAAKzyB,QAAQ,CAACoK,SAAS,GAAG,CAAC,EAAG;MAE7B0Q,QAAQ,CAAC1Q,SAAS,CAACr5C,KAAK,GAAGivC,QAAQ,CAACoK,SAAS;IAE9C;IAEA,IAAMhB,MAAM,GAAGirB,UAAU,CAAC/mD,GAAG,CAAE0yB,QAAS,CAAC,CAACoJ,MAAM;IAEhD,IAAKA,MAAM,EAAG;MAEb0R,QAAQ,CAAC1R,MAAM,CAACr4C,KAAK,GAAGq4C,MAAM;MAE9B0R,QAAQ,CAAC6X,UAAU,CAAC5hE,KAAK,GAAKq4C,MAAM,CAAC0X,aAAa,IAAI1X,MAAM,CAACvsB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAExGi+B,QAAQ,CAACvR,YAAY,CAACx4C,KAAK,GAAGivC,QAAQ,CAACuJ,YAAY;MACnDuR,QAAQ,CAAC8X,GAAG,CAAC7hE,KAAK,GAAGivC,QAAQ,CAAC4yB,GAAG;MACjC9X,QAAQ,CAACtR,eAAe,CAACz4C,KAAK,GAAGivC,QAAQ,CAACwJ,eAAe;IAE1D;IAEA,IAAKxJ,QAAQ,CAACkI,QAAQ,EAAG;MAExB4S,QAAQ,CAAC5S,QAAQ,CAACn3C,KAAK,GAAGivC,QAAQ,CAACkI,QAAQ;;MAE3C;MACA,IAAM6gD,WAAW,GAAK7tC,QAAQ,CAACkqC,gBAAgB,KAAK,IAAI,GAAKv9E,IAAI,CAACC,EAAE,GAAG,CAAC;MAExEgzC,QAAQ,CAAC3S,iBAAiB,CAACp3C,KAAK,GAAGivC,QAAQ,CAACmI,iBAAiB,GAAG4gD,WAAW;MAE3EuqB,uBAAuB,CAAEtzE,QAAQ,CAACkI,QAAQ,EAAE4S,QAAQ,CAACkY,iBAAkB,CAAC;IAEzE;IAEA,IAAKhzB,QAAQ,CAACoI,KAAK,EAAG;MAErB0S,QAAQ,CAAC1S,KAAK,CAACr3C,KAAK,GAAGivC,QAAQ,CAACoI,KAAK;MACrC0S,QAAQ,CAACzS,cAAc,CAACt3C,KAAK,GAAGivC,QAAQ,CAACqI,cAAc;MAEvDirE,uBAAuB,CAAEtzE,QAAQ,CAACoI,KAAK,EAAE0S,QAAQ,CAACgY,cAAe,CAAC;IAEnE;EAED;EAEA,SAAS6hD,mBAAmBA,CAAE75D,QAAQ,EAAE9a,QAAQ,EAAG;IAElD8a,QAAQ,CAACuX,OAAO,CAACthE,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC3oB,KAAM,CAAC;IAC7CyjC,QAAQ,CAAClX,OAAO,CAAC7yC,KAAK,GAAGivC,QAAQ,CAAC4D,OAAO;IAEzC,IAAK5D,QAAQ,CAAC+H,GAAG,EAAG;MAEnB+S,QAAQ,CAAC/S,GAAG,CAACh3C,KAAK,GAAGivC,QAAQ,CAAC+H,GAAG;MAEjCurE,uBAAuB,CAAEtzE,QAAQ,CAAC+H,GAAG,EAAE+S,QAAQ,CAACwX,YAAa,CAAC;IAE/D;EAED;EAEA,SAASuiD,mBAAmBA,CAAE/5D,QAAQ,EAAE9a,QAAQ,EAAG;IAElD8a,QAAQ,CAAC5Q,QAAQ,CAACn5C,KAAK,GAAGivC,QAAQ,CAACkK,QAAQ;IAC3C4Q,QAAQ,CAAC2b,SAAS,CAAC1lE,KAAK,GAAGivC,QAAQ,CAACkK,QAAQ,GAAGlK,QAAQ,CAACmK,OAAO;IAC/D2Q,QAAQ,CAACrlC,KAAK,CAAC1kB,KAAK,GAAGivC,QAAQ,CAACvqB,KAAK;EAEtC;EAEA,SAASs/F,qBAAqBA,CAAEj6D,QAAQ,EAAE9a,QAAQ,EAAE2zE,UAAU,EAAEx6F,MAAM,EAAG;IAExE2hC,QAAQ,CAACuX,OAAO,CAACthE,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC3oB,KAAM,CAAC;IAC7CyjC,QAAQ,CAAClX,OAAO,CAAC7yC,KAAK,GAAGivC,QAAQ,CAAC4D,OAAO;IACzCkX,QAAQ,CAACvvB,IAAI,CAACx6B,KAAK,GAAGivC,QAAQ,CAACzU,IAAI,GAAGooF,UAAU;IAChD74D,QAAQ,CAACrlC,KAAK,CAAC1kB,KAAK,GAAGooB,MAAM,GAAG,GAAG;IAEnC,IAAK6mB,QAAQ,CAAC+H,GAAG,EAAG;MAEnB+S,QAAQ,CAAC/S,GAAG,CAACh3C,KAAK,GAAGivC,QAAQ,CAAC+H,GAAG;MAEjCurE,uBAAuB,CAAEtzE,QAAQ,CAAC+H,GAAG,EAAE+S,QAAQ,CAACmb,WAAY,CAAC;IAE9D;IAEA,IAAKj2B,QAAQ,CAACiI,QAAQ,EAAG;MAExB6S,QAAQ,CAAC7S,QAAQ,CAACl3C,KAAK,GAAGivC,QAAQ,CAACiI,QAAQ;MAE3CqrE,uBAAuB,CAAEtzE,QAAQ,CAACiI,QAAQ,EAAE6S,QAAQ,CAACyX,iBAAkB,CAAC;IAEzE;IAEA,IAAKvyB,QAAQ,CAACoK,SAAS,GAAG,CAAC,EAAG;MAE7B0Q,QAAQ,CAAC1Q,SAAS,CAACr5C,KAAK,GAAGivC,QAAQ,CAACoK,SAAS;IAE9C;EAED;EAEA,SAAS6qE,sBAAsBA,CAAEn6D,QAAQ,EAAE9a,QAAQ,EAAG;IAErD8a,QAAQ,CAACuX,OAAO,CAACthE,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC3oB,KAAM,CAAC;IAC7CyjC,QAAQ,CAAClX,OAAO,CAAC7yC,KAAK,GAAGivC,QAAQ,CAAC4D,OAAO;IACzCkX,QAAQ,CAACxlC,QAAQ,CAACvkB,KAAK,GAAGivC,QAAQ,CAAC1qB,QAAQ;IAE3C,IAAK0qB,QAAQ,CAAC+H,GAAG,EAAG;MAEnB+S,QAAQ,CAAC/S,GAAG,CAACh3C,KAAK,GAAGivC,QAAQ,CAAC+H,GAAG;MAEjCurE,uBAAuB,CAAEtzE,QAAQ,CAAC+H,GAAG,EAAE+S,QAAQ,CAACwX,YAAa,CAAC;IAE/D;IAEA,IAAKtyB,QAAQ,CAACiI,QAAQ,EAAG;MAExB6S,QAAQ,CAAC7S,QAAQ,CAACl3C,KAAK,GAAGivC,QAAQ,CAACiI,QAAQ;MAE3CqrE,uBAAuB,CAAEtzE,QAAQ,CAACiI,QAAQ,EAAE6S,QAAQ,CAACyX,iBAAkB,CAAC;IAEzE;IAEA,IAAKvyB,QAAQ,CAACoK,SAAS,GAAG,CAAC,EAAG;MAE7B0Q,QAAQ,CAAC1Q,SAAS,CAACr5C,KAAK,GAAGivC,QAAQ,CAACoK,SAAS;IAE9C;EAED;EAEA,SAAS8pE,oBAAoBA,CAAEp5D,QAAQ,EAAE9a,QAAQ,EAAG;IAEnD8a,QAAQ,CAAChU,QAAQ,CAAC/1C,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC8G,QAAS,CAAC;IACjDgU,QAAQ,CAAC7T,SAAS,CAACl2C,KAAK,GAAG8W,IAAI,CAACa,GAAG,CAAEs3B,QAAQ,CAACiH,SAAS,EAAE,IAAK,CAAC,CAAC,CAAC;EAElE;;EAEA,SAAS+sE,mBAAmBA,CAAEl5D,QAAQ,EAAE9a,QAAQ,EAAG;IAElD,IAAKA,QAAQ,CAACyJ,WAAW,EAAG;MAE3BqR,QAAQ,CAACrR,WAAW,CAAC14C,KAAK,GAAGivC,QAAQ,CAACyJ,WAAW;IAElD;EAED;EAEA,SAAS0qE,uBAAuBA,CAAEr5D,QAAQ,EAAE9a,QAAQ,EAAG;IAEtD8a,QAAQ,CAACtU,SAAS,CAACz1C,KAAK,GAAGivC,QAAQ,CAACwG,SAAS;IAE7C,IAAKxG,QAAQ,CAAC+I,YAAY,EAAG;MAE5B+R,QAAQ,CAAC/R,YAAY,CAACh4C,KAAK,GAAGivC,QAAQ,CAAC+I,YAAY;MAEnDuqE,uBAAuB,CAAEtzE,QAAQ,CAAC+I,YAAY,EAAE+R,QAAQ,CAAC4Y,qBAAsB,CAAC;IAEjF;IAEA5Y,QAAQ,CAACvU,SAAS,CAACx1C,KAAK,GAAGivC,QAAQ,CAACuG,SAAS;IAE7C,IAAKvG,QAAQ,CAAC8I,YAAY,EAAG;MAE5BgS,QAAQ,CAAChS,YAAY,CAAC/3C,KAAK,GAAGivC,QAAQ,CAAC8I,YAAY;MAEnDwqE,uBAAuB,CAAEtzE,QAAQ,CAAC8I,YAAY,EAAEgS,QAAQ,CAAC8Y,qBAAsB,CAAC;IAEjF;IAEA,IAAMxqB,MAAM,GAAGirB,UAAU,CAAC/mD,GAAG,CAAE0yB,QAAS,CAAC,CAACoJ,MAAM;IAEhD,IAAKA,MAAM,EAAG;MAEb;MACA0R,QAAQ,CAACxR,eAAe,CAACv4C,KAAK,GAAGivC,QAAQ,CAACsJ,eAAe;IAE1D;EAED;EAEA,SAAS+qE,uBAAuBA,CAAEv5D,QAAQ,EAAE9a,QAAQ,EAAE4zE,wBAAwB,EAAG;IAEhF94D,QAAQ,CAAC8X,GAAG,CAAC7hE,KAAK,GAAGivC,QAAQ,CAAC4yB,GAAG,CAAC,CAAC;;IAEnC,IAAK5yB,QAAQ,CAACyG,KAAK,GAAG,CAAC,EAAG;MAEzBqU,QAAQ,CAACpU,UAAU,CAAC31C,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC0G,UAAW,CAAC,CAACl4B,cAAc,CAAEwxB,QAAQ,CAACyG,KAAM,CAAC;MAEtFqU,QAAQ,CAACnU,cAAc,CAAC51C,KAAK,GAAGivC,QAAQ,CAAC2G,cAAc;MAEvD,IAAK3G,QAAQ,CAAC+3B,aAAa,EAAG;QAE7Bjd,QAAQ,CAACid,aAAa,CAAChnE,KAAK,GAAGivC,QAAQ,CAAC+3B,aAAa;QAErDu7C,uBAAuB,CAAEtzE,QAAQ,CAAC+3B,aAAa,EAAEjd,QAAQ,CAACkd,sBAAuB,CAAC;MAEnF;MAEA,IAAKh4B,QAAQ,CAACi4B,iBAAiB,EAAG;QAEjCnd,QAAQ,CAACmd,iBAAiB,CAAClnE,KAAK,GAAGivC,QAAQ,CAACi4B,iBAAiB;QAE7Dq7C,uBAAuB,CAAEtzE,QAAQ,CAACi4B,iBAAiB,EAAEnd,QAAQ,CAACod,0BAA2B,CAAC;MAE3F;IAED;IAEA,IAAKl4B,QAAQ,CAACkH,SAAS,GAAG,CAAC,EAAG;MAE7B4T,QAAQ,CAAC5T,SAAS,CAACn2C,KAAK,GAAGivC,QAAQ,CAACkH,SAAS;MAC7C4T,QAAQ,CAAC3T,kBAAkB,CAACp2C,KAAK,GAAGivC,QAAQ,CAACmH,kBAAkB;MAE/D,IAAKnH,QAAQ,CAACoH,YAAY,EAAG;QAE5B0T,QAAQ,CAAC1T,YAAY,CAACr2C,KAAK,GAAGivC,QAAQ,CAACoH,YAAY;QAEnDksE,uBAAuB,CAAEtzE,QAAQ,CAACoH,YAAY,EAAE0T,QAAQ,CAAC0c,qBAAsB,CAAC;MAEjF;MAEA,IAAKx3B,QAAQ,CAACqH,qBAAqB,EAAG;QAErCyT,QAAQ,CAACzT,qBAAqB,CAACt2C,KAAK,GAAGivC,QAAQ,CAACqH,qBAAqB;QAErEisE,uBAAuB,CAAEtzE,QAAQ,CAACqH,qBAAqB,EAAEyT,QAAQ,CAAC4c,8BAA+B,CAAC;MAEnG;MAEA,IAAK13B,QAAQ,CAACsH,kBAAkB,EAAG;QAElCwT,QAAQ,CAACxT,kBAAkB,CAACv2C,KAAK,GAAGivC,QAAQ,CAACsH,kBAAkB;QAE/DgsE,uBAAuB,CAAEtzE,QAAQ,CAACsH,kBAAkB,EAAEwT,QAAQ,CAAC2c,2BAA4B,CAAC;QAE5F3c,QAAQ,CAACvT,oBAAoB,CAACx2C,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAACuH,oBAAqB,CAAC;QAEzE,IAAKvH,QAAQ,CAAC0D,IAAI,KAAKjoC,QAAQ,EAAG;UAEjCq/C,QAAQ,CAACvT,oBAAoB,CAACx2C,KAAK,CAACqe,MAAM,CAAC,CAAC;QAE7C;MAED;IAED;IAEA,IAAK4wB,QAAQ,CAACwH,WAAW,GAAG,CAAC,EAAG;MAE/BsT,QAAQ,CAACtT,WAAW,CAACz2C,KAAK,GAAGivC,QAAQ,CAACwH,WAAW;MACjDsT,QAAQ,CAACrT,cAAc,CAAC12C,KAAK,GAAGivC,QAAQ,CAACyH,cAAc;MACvDqT,QAAQ,CAAC8c,2BAA2B,CAAC7mE,KAAK,GAAGivC,QAAQ,CAAC0H,yBAAyB,CAAE,CAAC,CAAE;MACpFoT,QAAQ,CAAC+c,2BAA2B,CAAC9mE,KAAK,GAAGivC,QAAQ,CAAC0H,yBAAyB,CAAE,CAAC,CAAE;MAEpF,IAAK1H,QAAQ,CAAC2H,cAAc,EAAG;QAE9BmT,QAAQ,CAACnT,cAAc,CAAC52C,KAAK,GAAGivC,QAAQ,CAAC2H,cAAc;QAEvD2rE,uBAAuB,CAAEtzE,QAAQ,CAAC2H,cAAc,EAAEmT,QAAQ,CAAC6c,uBAAwB,CAAC;MAErF;MAEA,IAAK33B,QAAQ,CAAC4H,uBAAuB,EAAG;QAEvCkT,QAAQ,CAAClT,uBAAuB,CAAC72C,KAAK,GAAGivC,QAAQ,CAAC4H,uBAAuB;QAEzE0rE,uBAAuB,CAAEtzE,QAAQ,CAAC4H,uBAAuB,EAAEkT,QAAQ,CAACgd,gCAAiC,CAAC;MAEvG;IAED;IAEA,IAAK93B,QAAQ,CAAC0J,YAAY,GAAG,CAAC,EAAG;MAEhCoR,QAAQ,CAACpR,YAAY,CAAC34C,KAAK,GAAGivC,QAAQ,CAAC0J,YAAY;MACnDoR,QAAQ,CAACud,sBAAsB,CAACtnE,KAAK,GAAG6iH,wBAAwB,CAAC1zF,OAAO;MACxE46B,QAAQ,CAACsd,uBAAuB,CAACrnE,KAAK,CAACsb,GAAG,CAAEunG,wBAAwB,CAAC16F,KAAK,EAAE06F,wBAAwB,CAACz6F,MAAO,CAAC;MAE7G,IAAK6mB,QAAQ,CAAC2J,eAAe,EAAG;QAE/BmR,QAAQ,CAACnR,eAAe,CAAC54C,KAAK,GAAGivC,QAAQ,CAAC2J,eAAe;QAEzD2pE,uBAAuB,CAAEtzE,QAAQ,CAAC2J,eAAe,EAAEmR,QAAQ,CAACqd,wBAAyB,CAAC;MAEvF;MAEArd,QAAQ,CAAClR,SAAS,CAAC74C,KAAK,GAAGivC,QAAQ,CAAC4J,SAAS;MAE7C,IAAK5J,QAAQ,CAAC6J,YAAY,EAAG;QAE5BiR,QAAQ,CAACjR,YAAY,CAAC94C,KAAK,GAAGivC,QAAQ,CAAC6J,YAAY;QAEnDypE,uBAAuB,CAAEtzE,QAAQ,CAAC6J,YAAY,EAAEiR,QAAQ,CAACwd,qBAAsB,CAAC;MAEjF;MAEAxd,QAAQ,CAAChR,mBAAmB,CAAC/4C,KAAK,GAAGivC,QAAQ,CAAC8J,mBAAmB;MACjEgR,QAAQ,CAAC/Q,gBAAgB,CAACh5C,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAAC+J,gBAAiB,CAAC;IAElE;IAEA,IAAK/J,QAAQ,CAACpkB,UAAU,GAAG,CAAC,EAAG;MAE9Bk/B,QAAQ,CAAC2d,gBAAgB,CAAC1nE,KAAK,CAACsb,GAAG,CAAE2zB,QAAQ,CAACpkB,UAAU,GAAG/T,IAAI,CAAC8D,GAAG,CAAEq0B,QAAQ,CAAC6H,kBAAmB,CAAC,EAAE7H,QAAQ,CAACpkB,UAAU,GAAG/T,IAAI,CAAC+D,GAAG,CAAEo0B,QAAQ,CAAC6H,kBAAmB,CAAE,CAAC;MAEnK,IAAK7H,QAAQ,CAAC8H,aAAa,EAAG;QAE7BgT,QAAQ,CAAChT,aAAa,CAAC/2C,KAAK,GAAGivC,QAAQ,CAAC8H,aAAa;QAErDwrE,uBAAuB,CAAEtzE,QAAQ,CAAC8H,aAAa,EAAEgT,QAAQ,CAAC4d,sBAAuB,CAAC;MAEnF;IAED;IAEA5d,QAAQ,CAAC/T,iBAAiB,CAACh2C,KAAK,GAAGivC,QAAQ,CAAC+G,iBAAiB;IAC7D+T,QAAQ,CAAC9T,aAAa,CAACj2C,KAAK,CAAC+c,IAAI,CAAEkyB,QAAQ,CAACgH,aAAc,CAAC;IAE3D,IAAKhH,QAAQ,CAACmJ,gBAAgB,EAAG;MAEhC2R,QAAQ,CAAC3R,gBAAgB,CAACp4C,KAAK,GAAGivC,QAAQ,CAACmJ,gBAAgB;MAE3DmqE,uBAAuB,CAAEtzE,QAAQ,CAACmJ,gBAAgB,EAAE2R,QAAQ,CAACyd,yBAA0B,CAAC;IAEzF;IAEA,IAAKv4B,QAAQ,CAACkJ,oBAAoB,EAAG;MAEpC4R,QAAQ,CAAC5R,oBAAoB,CAACn4C,KAAK,GAAGivC,QAAQ,CAACkJ,oBAAoB;MAEnEoqE,uBAAuB,CAAEtzE,QAAQ,CAACkJ,oBAAoB,EAAE4R,QAAQ,CAAC0d,6BAA8B,CAAC;IAEjG;EAED;EAEA,SAAS+7C,qBAAqBA,CAAEz5D,QAAQ,EAAE9a,QAAQ,EAAG;IAEpD,IAAKA,QAAQ,CAACgI,MAAM,EAAG;MAEtB8S,QAAQ,CAAC9S,MAAM,CAACj3C,KAAK,GAAGivC,QAAQ,CAACgI,MAAM;IAExC;EAED;EAEA,SAASwsE,uBAAuBA,CAAE15D,QAAQ,EAAE9a,QAAQ,EAAG;IAEtD,IAAMinD,KAAK,GAAG5yB,UAAU,CAAC/mD,GAAG,CAAE0yB,QAAS,CAAC,CAACinD,KAAK;IAE9CnsC,QAAQ,CAACqc,iBAAiB,CAACpmE,KAAK,CAACq5B,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;IAC3EiyB,QAAQ,CAACsc,YAAY,CAACrmE,KAAK,GAAGk2F,KAAK,CAAC3vB,MAAM,CAAC9uC,MAAM,CAACoP,IAAI;IACtDkjB,QAAQ,CAACuc,WAAW,CAACtmE,KAAK,GAAGk2F,KAAK,CAAC3vB,MAAM,CAAC9uC,MAAM,CAACqP,GAAG;EAErD;EAEA,OAAO;IACN07E,kBAAkB,EAAEA,kBAAkB;IACtCG,uBAAuB,EAAEA;EAC1B,CAAC;AAEF;AAEA,SAASyB,mBAAmBA,CAAE/vD,EAAE,EAAE7vD,IAAI,EAAE8vD,YAAY,EAAE5wD,KAAK,EAAG;EAE7D,IAAI8wD,OAAO,GAAG,CAAC,CAAC;EAChB,IAAI6vD,UAAU,GAAG,CAAC,CAAC;EACnB,IAAIC,sBAAsB,GAAG,EAAE;EAE/B,IAAMC,gBAAgB,GAAKjwD,YAAY,CAACC,QAAQ,GAAKF,EAAE,CAACr4B,YAAY,CAAEq4B,EAAE,CAACmwD,2BAA4B,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE5G,SAASC,IAAIA,CAAErc,aAAa,EAAEj+B,OAAO,EAAG;IAEvC,IAAMu6C,YAAY,GAAGv6C,OAAO,CAACA,OAAO;IACpCzmE,KAAK,CAAC6kG,mBAAmB,CAAEH,aAAa,EAAEsc,YAAa,CAAC;EAEzD;EAEA,SAASpyF,MAAMA,CAAE81E,aAAa,EAAEj+B,OAAO,EAAG;IAEzC,IAAI5kD,MAAM,GAAGivC,OAAO,CAAE4zC,aAAa,CAAC77D,EAAE,CAAE;IAExC,IAAKhnB,MAAM,KAAKlhB,SAAS,EAAG;MAE3BsgH,oBAAoB,CAAEvc,aAAc,CAAC;MAErC7iF,MAAM,GAAGmvC,YAAY,CAAE0zC,aAAc,CAAC;MACtC5zC,OAAO,CAAE4zC,aAAa,CAAC77D,EAAE,CAAE,GAAGhnB,MAAM;MAEpC6iF,aAAa,CAACvyF,gBAAgB,CAAE,SAAS,EAAE+uG,uBAAwB,CAAC;IAErE;;IAEA;;IAEA,IAAMF,YAAY,GAAGv6C,OAAO,CAACA,OAAO;IACpCzmE,KAAK,CAACykG,gBAAgB,CAAEC,aAAa,EAAEsc,YAAa,CAAC;;IAErD;;IAEA,IAAM3wD,KAAK,GAAGvvD,IAAI,CAACkrD,MAAM,CAACqE,KAAK;IAE/B,IAAKswD,UAAU,CAAEjc,aAAa,CAAC77D,EAAE,CAAE,KAAKwnB,KAAK,EAAG;MAE/C8wD,gBAAgB,CAAEzc,aAAc,CAAC;MAEjCic,UAAU,CAAEjc,aAAa,CAAC77D,EAAE,CAAE,GAAGwnB,KAAK;IAEvC;EAED;EAEA,SAASW,YAAYA,CAAE0zC,aAAa,EAAG;IAEtC;;IAEA,IAAM0c,iBAAiB,GAAGC,yBAAyB,CAAC,CAAC;IACrD3c,aAAa,CAACI,mBAAmB,GAAGsc,iBAAiB;IAErD,IAAMv/F,MAAM,GAAG8uC,EAAE,CAACK,YAAY,CAAC,CAAC;IAChC,IAAMl6B,IAAI,GAAG4tE,aAAa,CAAC4c,MAAM;IACjC,IAAMnnE,KAAK,GAAGuqD,aAAa,CAACvqD,KAAK;IAEjCwW,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC4wD,cAAc,EAAE1/F,MAAO,CAAC;IAC1C8uC,EAAE,CAACQ,UAAU,CAAER,EAAE,CAAC4wD,cAAc,EAAEzqF,IAAI,EAAEqjB,KAAM,CAAC;IAC/CwW,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC4wD,cAAc,EAAE,IAAK,CAAC;IACxC5wD,EAAE,CAAC6wD,cAAc,CAAE7wD,EAAE,CAAC4wD,cAAc,EAAEH,iBAAiB,EAAEv/F,MAAO,CAAC;IAEjE,OAAOA,MAAM;EAEd;EAEA,SAASw/F,yBAAyBA,CAAA,EAAG;IAEpC,KAAM,IAAIn/G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2+G,gBAAgB,EAAE3+G,CAAC,EAAG,EAAG;MAE7C,IAAK0+G,sBAAsB,CAACruG,OAAO,CAAErQ,CAAE,CAAC,KAAK,CAAE,CAAC,EAAG;QAElD0+G,sBAAsB,CAACl/G,IAAI,CAAEQ,CAAE,CAAC;QAChC,OAAOA,CAAC;MAET;IAED;IAEA2V,OAAO,CAAChY,KAAK,CAAE,uFAAwF,CAAC;IAExG,OAAO,CAAC;EAET;EAEA,SAASshH,gBAAgBA,CAAEzc,aAAa,EAAG;IAE1C,IAAM7iF,MAAM,GAAGivC,OAAO,CAAE4zC,aAAa,CAAC77D,EAAE,CAAE;IAC1C,IAAMwd,QAAQ,GAAGq+C,aAAa,CAACr+C,QAAQ;IACvC,IAAM1a,KAAK,GAAG+4D,aAAa,CAAC+c,OAAO;IAEnC9wD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC4wD,cAAc,EAAE1/F,MAAO,CAAC;IAE1C,KAAM,IAAI3f,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGq4B,QAAQ,CAACpkD,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;MAErD,IAAMkmD,OAAO,GAAG/B,QAAQ,CAAEnkD,CAAC,CAAE;;MAE7B;;MAEA,IAAKw/G,iBAAiB,CAAEt5D,OAAO,EAAElmD,CAAC,EAAEypC,KAAM,CAAC,KAAK,IAAI,EAAG;QAEtD,IAAMxvB,MAAM,GAAGisC,OAAO,CAACu5D,QAAQ;QAE/B,IAAM/iH,MAAM,GAAGonB,KAAK,CAACC,OAAO,CAAEmiC,OAAO,CAAC9rD,KAAM,CAAC,GAAG8rD,OAAO,CAAC9rD,KAAK,GAAG,CAAE8rD,OAAO,CAAC9rD,KAAK,CAAE;QAEjF,IAAIslH,WAAW,GAAG,CAAC;QAEnB,KAAM,IAAI1/G,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGtD,MAAM,CAACqD,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE1C,IAAM5F,OAAK,GAAGsC,MAAM,CAAEsD,IAAC,CAAE;UAEzB,IAAMpB,KAAI,GAAG+gH,cAAc,CAAEvlH,OAAM,CAAC;UAEpC,IAAK,OAAOA,OAAK,KAAK,QAAQ,EAAG;YAEhC8rD,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK;YAC3Bq0D,EAAE,CAACoB,aAAa,CAAEpB,EAAE,CAAC4wD,cAAc,EAAEplG,MAAM,GAAGylG,WAAW,EAAEx5D,OAAO,CAAC05D,MAAO,CAAC;UAE5E,CAAC,MAAM,IAAKxlH,OAAK,CAACihB,SAAS,EAAG;YAE7B;;YAEA6qC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,CAAC,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YACzCguC,OAAO,CAAC05D,MAAM,CAAE,EAAE,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;YAC1CguC,OAAO,CAAC05D,MAAM,CAAE,EAAE,CAAE,GAAGxlH,OAAK,CAAC8d,QAAQ,CAAE,CAAC,CAAE;UAE3C,CAAC,MAAM;YAEN9d,OAAK,CAAC8f,OAAO,CAAEgsC,OAAO,CAAC05D,MAAM,EAAEF,WAAY,CAAC;YAE5CA,WAAW,IAAI9gH,KAAI,CAACihH,OAAO,GAAG/pG,YAAY,CAAC65C,iBAAiB;UAE7D;QAED;QAEAlB,EAAE,CAACoB,aAAa,CAAEpB,EAAE,CAAC4wD,cAAc,EAAEplG,MAAM,EAAEisC,OAAO,CAAC05D,MAAO,CAAC;MAE9D;IAED;IAEAnxD,EAAE,CAACO,UAAU,CAAEP,EAAE,CAAC4wD,cAAc,EAAE,IAAK,CAAC;EAEzC;EAEA,SAASG,iBAAiBA,CAAEt5D,OAAO,EAAEz1C,KAAK,EAAEg5B,KAAK,EAAG;IAEnD,IAAMrvC,KAAK,GAAG8rD,OAAO,CAAC9rD,KAAK;IAE3B,IAAKqvC,KAAK,CAAEh5B,KAAK,CAAE,KAAKhS,SAAS,EAAG;MAEnC;;MAEA,IAAK,OAAOrE,KAAK,KAAK,QAAQ,EAAG;QAEhCqvC,KAAK,CAAEh5B,KAAK,CAAE,GAAGrW,KAAK;MAEvB,CAAC,MAAM;QAEN,IAAMsC,MAAM,GAAGonB,KAAK,CAACC,OAAO,CAAE3pB,KAAM,CAAC,GAAGA,KAAK,GAAG,CAAEA,KAAK,CAAE;QAEzD,IAAM0lH,UAAU,GAAG,EAAE;QAErB,KAAM,IAAI9/G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtD,MAAM,CAACqD,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE1C8/G,UAAU,CAACtgH,IAAI,CAAE9C,MAAM,CAAEsD,CAAC,CAAE,CAACkX,KAAK,CAAC,CAAE,CAAC;QAEvC;QAEAuyB,KAAK,CAAEh5B,KAAK,CAAE,GAAGqvG,UAAU;MAE5B;MAEA,OAAO,IAAI;IAEZ,CAAC,MAAM;MAEN;;MAEA,IAAK,OAAO1lH,KAAK,KAAK,QAAQ,EAAG;QAEhC,IAAKqvC,KAAK,CAAEh5B,KAAK,CAAE,KAAKrW,KAAK,EAAG;UAE/BqvC,KAAK,CAAEh5B,KAAK,CAAE,GAAGrW,KAAK;UACtB,OAAO,IAAI;QAEZ;MAED,CAAC,MAAM;QAEN,IAAM2lH,aAAa,GAAGj8F,KAAK,CAACC,OAAO,CAAE0lB,KAAK,CAAEh5B,KAAK,CAAG,CAAC,GAAGg5B,KAAK,CAAEh5B,KAAK,CAAE,GAAG,CAAEg5B,KAAK,CAAEh5B,KAAK,CAAE,CAAE;QAC3F,IAAM/T,OAAM,GAAGonB,KAAK,CAACC,OAAO,CAAE3pB,KAAM,CAAC,GAAGA,KAAK,GAAG,CAAEA,KAAK,CAAE;QAEzD,KAAM,IAAI4F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+/G,aAAa,CAAChgH,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEjD,IAAMggH,YAAY,GAAGD,aAAa,CAAE//G,IAAC,CAAE;UAEvC,IAAKggH,YAAY,CAACjmG,MAAM,CAAErd,OAAM,CAAEsD,IAAC,CAAG,CAAC,KAAK,KAAK,EAAG;YAEnDggH,YAAY,CAAC7oG,IAAI,CAAEza,OAAM,CAAEsD,IAAC,CAAG,CAAC;YAChC,OAAO,IAAI;UAEZ;QAED;MAED;IAED;IAEA,OAAO,KAAK;EAEb;EAEA,SAAS++G,oBAAoBA,CAAEvc,aAAa,EAAG;IAE9C;IACA;;IAEA,IAAMr+C,QAAQ,GAAGq+C,aAAa,CAACr+C,QAAQ;IAEvC,IAAIlqC,MAAM,GAAG,CAAC,CAAC,CAAC;IAChB,IAAMgmG,SAAS,GAAG,EAAE,CAAC,CAAC;IACtB,IAAIC,WAAW,GAAG,CAAC,CAAC,CAAC;;IAErB,KAAM,IAAIlgH,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGqzC,QAAQ,CAACpkD,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;MAEnD,IAAMkmD,OAAO,GAAG/B,QAAQ,CAAEnkD,CAAC,CAAE;MAE7B,IAAMmgH,KAAK,GAAG;QACbC,QAAQ,EAAE,CAAC;QAAE;QACbP,OAAO,EAAE,CAAC,CAAC;MACZ,CAAC;;MAED,IAAMnjH,MAAM,GAAGonB,KAAK,CAACC,OAAO,CAAEmiC,OAAO,CAAC9rD,KAAM,CAAC,GAAG8rD,OAAO,CAAC9rD,KAAK,GAAG,CAAE8rD,OAAO,CAAC9rD,KAAK,CAAE;MAEjF,KAAM,IAAI49B,CAAC,GAAG,CAAC,EAAEglB,EAAE,GAAGtgD,MAAM,CAACqD,MAAM,EAAEi4B,CAAC,GAAGglB,EAAE,EAAEhlB,CAAC,EAAG,EAAG;QAEnD,IAAM59B,OAAK,GAAGsC,MAAM,CAAEs7B,CAAC,CAAE;QAEzB,IAAMp5B,MAAI,GAAG+gH,cAAc,CAAEvlH,OAAM,CAAC;QAEpC+lH,KAAK,CAACC,QAAQ,IAAIxhH,MAAI,CAACwhH,QAAQ;QAC/BD,KAAK,CAACN,OAAO,IAAIjhH,MAAI,CAACihH,OAAO;MAE9B;;MAEA;;MAEA35D,OAAO,CAAC05D,MAAM,GAAG,IAAI9pG,YAAY,CAAEqqG,KAAK,CAACN,OAAO,GAAG/pG,YAAY,CAAC65C,iBAAkB,CAAC;MACnFzJ,OAAO,CAACu5D,QAAQ,GAAGxlG,MAAM;;MAEzB;;MAEA,IAAKja,CAAC,GAAG,CAAC,EAAG;QAEZkgH,WAAW,GAAGjmG,MAAM,GAAGgmG,SAAS;QAEhC,IAAMI,oBAAoB,GAAGJ,SAAS,GAAGC,WAAW;;QAEpD;;QAEA,IAAKA,WAAW,KAAK,CAAC,IAAMG,oBAAoB,GAAGF,KAAK,CAACC,QAAQ,GAAK,CAAC,EAAG;UAEzE;;UAEAnmG,MAAM,IAAMgmG,SAAS,GAAGC,WAAa;UACrCh6D,OAAO,CAACu5D,QAAQ,GAAGxlG,MAAM;QAE1B;MAED;MAEAA,MAAM,IAAIkmG,KAAK,CAACN,OAAO;IAExB;;IAEA;;IAEAK,WAAW,GAAGjmG,MAAM,GAAGgmG,SAAS;IAEhC,IAAKC,WAAW,GAAG,CAAC,EAAGjmG,MAAM,IAAMgmG,SAAS,GAAGC,WAAa;;IAE5D;;IAEA1d,aAAa,CAAC4c,MAAM,GAAGnlG,MAAM;IAC7BuoF,aAAa,CAAC+c,OAAO,GAAG,CAAC,CAAC;IAE1B,OAAO,IAAI;EAEZ;EAEA,SAASI,cAAcA,CAAEvlH,KAAK,EAAG;IAEhC,IAAMwE,IAAI,GAAG;MACZwhH,QAAQ,EAAE,CAAC;MAAE;MACbP,OAAO,EAAE,CAAC,CAAC;IACZ,CAAC;;IAED;;IAEA,IAAK,OAAOzlH,KAAK,KAAK,QAAQ,EAAG;MAEhC;;MAEAwE,IAAI,CAACwhH,QAAQ,GAAG,CAAC;MACjBxhH,IAAI,CAACihH,OAAO,GAAG,CAAC;IAEjB,CAAC,MAAM,IAAKzlH,KAAK,CAACsc,SAAS,EAAG;MAE7B;;MAEA9X,IAAI,CAACwhH,QAAQ,GAAG,CAAC;MACjBxhH,IAAI,CAACihH,OAAO,GAAG,CAAC;IAEjB,CAAC,MAAM,IAAKzlH,KAAK,CAACy2B,SAAS,IAAIz2B,KAAK,CAACsuC,OAAO,EAAG;MAE9C;;MAEA9pC,IAAI,CAACwhH,QAAQ,GAAG,EAAE;MAClBxhH,IAAI,CAACihH,OAAO,GAAG,EAAE,CAAC,CAAC;IAEpB,CAAC,MAAM,IAAKzlH,KAAK,CAAC+sB,SAAS,EAAG;MAE7B;;MAEAvoB,IAAI,CAACwhH,QAAQ,GAAG,EAAE;MAClBxhH,IAAI,CAACihH,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKzlH,KAAK,CAACihB,SAAS,EAAG;MAE7B;;MAEAzc,IAAI,CAACwhH,QAAQ,GAAG,EAAE;MAClBxhH,IAAI,CAACihH,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKzlH,KAAK,CAACwiC,SAAS,EAAG;MAE7B;;MAEAh+B,IAAI,CAACwhH,QAAQ,GAAG,EAAE;MAClBxhH,IAAI,CAACihH,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKzlH,KAAK,CAACgrB,SAAS,EAAG;MAE7BzP,OAAO,CAACC,IAAI,CAAE,6EAA8E,CAAC;IAE9F,CAAC,MAAM;MAEND,OAAO,CAACC,IAAI,CAAE,sDAAsD,EAAExb,KAAM,CAAC;IAE9E;IAEA,OAAOwE,IAAI;EAEZ;EAEA,SAASogH,uBAAuBA,CAAEpuG,KAAK,EAAG;IAEzC,IAAM4xF,aAAa,GAAG5xF,KAAK,CAACjO,MAAM;IAElC6/F,aAAa,CAACjyF,mBAAmB,CAAE,SAAS,EAAEyuG,uBAAwB,CAAC;IAEvE,IAAMvuG,KAAK,GAAGiuG,sBAAsB,CAACruG,OAAO,CAAEmyF,aAAa,CAACI,mBAAoB,CAAC;IACjF8b,sBAAsB,CAAChuG,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;IAEzCg+C,EAAE,CAACsB,YAAY,CAAEnB,OAAO,CAAE4zC,aAAa,CAAC77D,EAAE,CAAG,CAAC;IAE9C,OAAOioB,OAAO,CAAE4zC,aAAa,CAAC77D,EAAE,CAAE;IAClC,OAAO83E,UAAU,CAAEjc,aAAa,CAAC77D,EAAE,CAAE;EAEtC;EAEA,SAAShgB,OAAOA,CAAA,EAAG;IAElB,KAAM,IAAMggB,EAAE,IAAIioB,OAAO,EAAG;MAE3BH,EAAE,CAACsB,YAAY,CAAEnB,OAAO,CAAEjoB,EAAE,CAAG,CAAC;IAEjC;IAEA+3E,sBAAsB,GAAG,EAAE;IAC3B9vD,OAAO,GAAG,CAAC,CAAC;IACZ6vD,UAAU,GAAG,CAAC,CAAC;EAEhB;EAEA,OAAO;IAENI,IAAI,EAAEA,IAAI;IACVnyF,MAAM,EAAEA,MAAM;IAEd/F,OAAO,EAAEA;EAEV,CAAC;AAEF;AAAC,IAEK25F,aAAa;EAElB,SAAAA,cAAav3E,UAAU,GAAG,CAAC,CAAC,EAAG;IAAAxmC,eAAA,OAAA+9G,aAAA;IAE9B,IAAAC,kBAAA,GAWIx3E,UAAU,CAVbhpB,MAAM;MAANA,MAAM,GAAAwgG,kBAAA,cAAGzgG,mBAAmB,CAAC,CAAC,GAAAygG,kBAAA;MAAAC,mBAAA,GAU3Bz3E,UAAU,CATbptC,OAAO;MAAPA,OAAO,GAAA6kH,mBAAA,cAAG,IAAI,GAAAA,mBAAA;MAAAC,iBAAA,GASX13E,UAAU,CARb5f,KAAK;MAALA,KAAK,GAAAs3F,iBAAA,cAAG,IAAI,GAAAA,iBAAA;MAAAC,mBAAA,GAQT33E,UAAU,CAPb+hB,OAAO;MAAPA,OAAO,GAAA41D,mBAAA,cAAG,IAAI,GAAAA,mBAAA;MAAAC,iBAAA,GAOX53E,UAAU,CANbpvB,KAAK;MAALA,KAAK,GAAAgnG,iBAAA,cAAG,KAAK,GAAAA,iBAAA;MAAAC,qBAAA,GAMV73E,UAAU,CALbwwE,SAAS;MAATA,SAAS,GAAAqH,qBAAA,cAAG,KAAK,GAAAA,qBAAA;MAAAC,qBAAA,GAKd93E,UAAU,CAJbiG,kBAAkB;MAAlBA,kBAAkB,GAAA6xE,qBAAA,cAAG,IAAI,GAAAA,qBAAA;MAAAC,qBAAA,GAItB/3E,UAAU,CAHbg4E,qBAAqB;MAArBA,qBAAqB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;MAAAE,qBAAA,GAG1Bj4E,UAAU,CAFbk4E,eAAe;MAAfA,eAAe,GAAAD,qBAAA,cAAG,SAAS,GAAAA,qBAAA;MAAAE,qBAAA,GAExBn4E,UAAU,CADbo4E,4BAA4B;MAA5BA,4BAA4B,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAGrC,IAAI,CAACE,eAAe,GAAG,IAAI;IAE3B,IAAIC,MAAM;IAEV,IAAK1lH,OAAO,KAAK,IAAI,EAAG;MAEvB0lH,MAAM,GAAG1lH,OAAO,CAACk7G,oBAAoB,CAAC,CAAC,CAACl9F,KAAK;IAE9C,CAAC,MAAM;MAEN0nG,MAAM,GAAG1nG,KAAK;IAEf;IAEA,IAAM2nG,cAAc,GAAG,IAAIvrG,WAAW,CAAE,CAAE,CAAC;IAC3C,IAAMwrG,aAAa,GAAG,IAAIrrG,UAAU,CAAE,CAAE,CAAC;IAEzC,IAAIsrG,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,kBAAkB,GAAG,IAAI;;IAE7B;IACA;;IAEA,IAAMC,eAAe,GAAG,EAAE;IAC1B,IAAMC,gBAAgB,GAAG,EAAE;;IAE3B;;IAEA,IAAI,CAACC,UAAU,GAAG7hG,MAAM;;IAExB;IACA,IAAI,CAAC2nE,KAAK,GAAG;MAEZ;AACH;AACA;AACA;MACGC,iBAAiB,EAAE,IAAI;MACvB;AACH;AACA;AACA;MACGQ,aAAa,EAAE;IAChB,CAAC;;IAED;;IAEA,IAAI,CAACjlB,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,gBAAgB,GAAG,IAAI;;IAE5B;;IAEA,IAAI,CAACw+C,WAAW,GAAG,IAAI;;IAEvB;;IAEA,IAAI,CAACxzE,cAAc,GAAG,EAAE;IACxB,IAAI,CAACq8B,oBAAoB,GAAG,KAAK;;IAEjC;;IAEA,IAAI,CAACjmB,gBAAgB,GAAGn3C,cAAc;;IAEtC;;IAEA,IAAI,CAACmhF,gBAAgB,GAAG,KAAK;;IAE7B;;IAEA,IAAI,CAACnrB,WAAW,GAAGp8D,aAAa;IAChC,IAAI,CAAC46G,mBAAmB,GAAG,GAAG;;IAE9B;;IAEA,IAAMC,KAAK,GAAG,IAAI;IAElB,IAAIC,cAAc,GAAG,KAAK;;IAE1B;;IAEA,IAAIC,sBAAsB,GAAG,CAAC;IAC9B,IAAIC,yBAAyB,GAAG,CAAC;IACjC,IAAIC,oBAAoB,GAAG,IAAI;IAC/B,IAAIC,kBAAkB,GAAG,CAAE,CAAC;IAE5B,IAAIC,cAAc,GAAG,IAAI;IAEzB,IAAMC,gBAAgB,GAAG,IAAIv7F,OAAO,CAAC,CAAC;IACtC,IAAMw7F,eAAe,GAAG,IAAIx7F,OAAO,CAAC,CAAC;IACrC,IAAIy7F,mBAAmB,GAAG,IAAI;IAE9B,IAAMC,kBAAkB,GAAG,IAAInuE,KAAK,CAAE,QAAS,CAAC;IAChD,IAAIouE,kBAAkB,GAAG,CAAC;;IAE1B;;IAEA,IAAIC,MAAM,GAAG5iG,MAAM,CAACwC,KAAK;IACzB,IAAIqgG,OAAO,GAAG7iG,MAAM,CAACyC,MAAM;IAE3B,IAAIqgG,WAAW,GAAG,CAAC;IACnB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,gBAAgB,GAAG,IAAI;IAE3B,IAAMxtB,SAAS,GAAG,IAAIxuE,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE47F,MAAM,EAAEC,OAAQ,CAAC;IACtD,IAAMI,QAAQ,GAAG,IAAIj8F,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE47F,MAAM,EAAEC,OAAQ,CAAC;IACrD,IAAIK,YAAY,GAAG,KAAK;;IAExB;;IAEA,IAAM7tB,QAAQ,GAAG,IAAIjpC,OAAO,CAAC,CAAC;;IAE9B;;IAEA,IAAI+2D,gBAAgB,GAAG,KAAK;IAC5B,IAAIC,qBAAqB,GAAG,KAAK;;IAEjC;;IAEA,IAAIC,yBAAyB,GAAG,IAAI;;IAEpC;;IAEA,IAAMC,iBAAiB,GAAG,IAAIjnF,OAAO,CAAC,CAAC;IAEvC,IAAM4uB,QAAQ,GAAG,IAAIx0C,OAAO,CAAC,CAAC;IAC9B,IAAM8sG,QAAQ,GAAG,IAAI3yF,OAAO,CAAC,CAAC;IAE9B,IAAM4yF,WAAW,GAAG;MAAE96E,UAAU,EAAE,IAAI;MAAEsL,GAAG,EAAE,IAAI;MAAEpL,WAAW,EAAE,IAAI;MAAE66E,gBAAgB,EAAE,IAAI;MAAEh7E,OAAO,EAAE;IAAK,CAAC;IAE7G,SAASi7E,mBAAmBA,CAAA,EAAG;MAE9B,OAAOtB,oBAAoB,KAAK,IAAI,GAAGU,WAAW,GAAG,CAAC;IAEvD;;IAEA;;IAEA,IAAI7f,GAAG,GAAGrnG,OAAO;IAEjB,SAAS8mB,UAAUA,CAAEihG,YAAY,EAAEC,iBAAiB,EAAG;MAEtD,KAAM,IAAI3jH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0jH,YAAY,CAAC3jH,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEhD,IAAM4jH,WAAW,GAAGF,YAAY,CAAE1jH,CAAC,CAAE;QACrC,IAAMrE,SAAO,GAAGokB,MAAM,CAAC0C,UAAU,CAAEmhG,WAAW,EAAED,iBAAkB,CAAC;QACnE,IAAKhoH,SAAO,KAAK,IAAI,EAAG,OAAOA,SAAO;MAEvC;MAEA,OAAO,IAAI;IAEZ;IAEA,IAAI;MAEH,IAAMgoH,iBAAiB,GAAG;QACzBhqG,KAAK,EAAE,IAAI;QACXwP,KAAK,EAALA,KAAK;QACL2hC,OAAO,EAAPA,OAAO;QACPyuD,SAAS,EAATA,SAAS;QACTvqE,kBAAkB,EAAlBA,kBAAkB;QAClB+xE,qBAAqB,EAArBA,qBAAqB;QACrBE,eAAe,EAAfA,eAAe;QACfE,4BAA4B,EAA5BA;MACD,CAAC;;MAED;MACA,IAAK,cAAc,IAAIphG,MAAM,EAAGA,MAAM,CAACq8B,YAAY,CAAE,aAAa,eAAAv6B,MAAA,CAAene,QAAQ,CAAG,CAAC;;MAE7F;MACAqc,MAAM,CAAC9P,gBAAgB,CAAE,kBAAkB,EAAE4zG,aAAa,EAAE,KAAM,CAAC;MACnE9jG,MAAM,CAAC9P,gBAAgB,CAAE,sBAAsB,EAAE6zG,gBAAgB,EAAE,KAAM,CAAC;MAC1E/jG,MAAM,CAAC9P,gBAAgB,CAAE,2BAA2B,EAAE8zG,sBAAsB,EAAE,KAAM,CAAC;MAErF,IAAK/gB,GAAG,KAAK,IAAI,EAAG;QAEnB,IAAM0gB,YAAY,GAAG,CAAE,QAAQ,EAAE,OAAO,EAAE,oBAAoB,CAAE;QAEhE,IAAK3B,KAAK,CAACiC,gBAAgB,KAAK,IAAI,EAAG;UAEtCN,YAAY,CAACO,KAAK,CAAC,CAAC;QAErB;QAEAjhB,GAAG,GAAGvgF,UAAU,CAAEihG,YAAY,EAAEC,iBAAkB,CAAC;QAEnD,IAAK3gB,GAAG,KAAK,IAAI,EAAG;UAEnB,IAAKvgF,UAAU,CAAEihG,YAAa,CAAC,EAAG;YAEjC,MAAM,IAAI3lH,KAAK,CAAE,6DAA8D,CAAC;UAEjF,CAAC,MAAM;YAEN,MAAM,IAAIA,KAAK,CAAE,+BAAgC,CAAC;UAEnD;QAED;MAED;MAEA,IAAK,OAAOmmH,qBAAqB,KAAK,WAAW,IAAIlhB,GAAG,YAAYkhB,qBAAqB,EAAG;QAAE;;QAE7FvuG,OAAO,CAACC,IAAI,CAAE,0FAA2F,CAAC;MAE3G;;MAEA;;MAEA,IAAKotF,GAAG,CAACr6B,wBAAwB,KAAKlqE,SAAS,EAAG;QAEjDukG,GAAG,CAACr6B,wBAAwB,GAAG,YAAY;UAE1C,OAAO;YAAE,UAAU,EAAE,CAAC;YAAE,UAAU,EAAE,CAAC;YAAE,WAAW,EAAE;UAAE,CAAC;QAExD,CAAC;MAEF;IAED,CAAC,CAAC,OAAQhrE,KAAK,EAAG;MAEjBgY,OAAO,CAAChY,KAAK,CAAE,uBAAuB,GAAGA,KAAK,CAACyiB,OAAQ,CAAC;MACxD,MAAMziB,KAAK;IAEZ;IAEA,IAAI8nD,UAAU,EAAEiJ,YAAY,EAAE5wD,KAAK,EAAEc,IAAI;IACzC,IAAI8+D,UAAU,EAAEj3C,QAAQ,EAAEy7C,QAAQ,EAAEC,UAAU,EAAEpsC,UAAU,EAAE8R,UAAU,EAAEu6B,OAAO;IAC/E,IAAI+hD,YAAY,EAAEr8E,SAAS,EAAEs8E,WAAW,EAAEjwB,YAAY,EAAE3uC,QAAQ,EAAEgpC,SAAS;IAE3E,IAAI/lD,UAAU,EAAE47E,YAAY,EAAEC,cAAc,EAAEC,qBAAqB;IAEnE,IAAIthB,KAAK,EAAEh/B,aAAa,EAAE7e,cAAc;IAExC,SAASo/D,aAAaA,CAAA,EAAG;MAExB/+D,UAAU,GAAG,IAAIwtB,eAAe,CAAE+vB,GAAI,CAAC;MAEvCt0C,YAAY,GAAG,IAAI2Z,iBAAiB,CAAE26B,GAAG,EAAEv9C,UAAU,EAAE1c,UAAW,CAAC;MAEnE0c,UAAU,CAACslB,IAAI,CAAErc,YAAa,CAAC;MAE/Bu0C,KAAK,GAAG,IAAIkL,UAAU,CAAEnL,GAAG,EAAEv9C,UAAU,EAAEiJ,YAAa,CAAC;MAEvD5wD,KAAK,GAAG,IAAI46F,UAAU,CAAEsK,GAAG,EAAEv9C,UAAU,EAAEiJ,YAAa,CAAC;MAEvD9vD,IAAI,GAAG,IAAIm1E,SAAS,CAAEivB,GAAI,CAAC;MAC3BtlC,UAAU,GAAG,IAAI0xB,eAAe,CAAC,CAAC;MAClC3oE,QAAQ,GAAG,IAAIs8E,aAAa,CAAEC,GAAG,EAAEv9C,UAAU,EAAE3nD,KAAK,EAAE4/D,UAAU,EAAEhP,YAAY,EAAEu0C,KAAK,EAAErkG,IAAK,CAAC;MAC7FsjE,QAAQ,GAAG,IAAIgK,aAAa,CAAE61C,KAAM,CAAC;MACrC5/C,UAAU,GAAG,IAAIuQ,eAAe,CAAEqvC,KAAM,CAAC;MACzChsF,UAAU,GAAG,IAAIy4B,eAAe,CAAEw0C,GAAG,EAAEt0C,YAAa,CAAC;MACrDuV,aAAa,GAAG,IAAIL,kBAAkB,CAAEo/B,GAAG,EAAEv9C,UAAU,EAAE1vB,UAAU,EAAE24B,YAAa,CAAC;MACnF7mB,UAAU,GAAG,IAAIsrC,eAAe,CAAE6vB,GAAG,EAAEjtE,UAAU,EAAEn3B,IAAI,EAAEqlE,aAAc,CAAC;MACxE7B,OAAO,GAAG,IAAImU,YAAY,CAAEysB,GAAG,EAAEn7D,UAAU,EAAE9R,UAAU,EAAEn3B,IAAK,CAAC;MAC/DylH,YAAY,GAAG,IAAIxvC,iBAAiB,CAAEmuB,GAAG,EAAEt0C,YAAY,EAAEjoC,QAAS,CAAC;MACnE++B,QAAQ,GAAG,IAAI+kB,aAAa,CAAE7M,UAAW,CAAC;MAC1CymD,YAAY,GAAG,IAAIl6B,aAAa,CAAE83B,KAAK,EAAE7/C,QAAQ,EAAEC,UAAU,EAAE1c,UAAU,EAAEiJ,YAAY,EAAEuV,aAAa,EAAEze,QAAS,CAAC;MAClH1d,SAAS,GAAG,IAAI40E,cAAc,CAAEqF,KAAK,EAAErkD,UAAW,CAAC;MACnD0mD,WAAW,GAAG,IAAIp0B,gBAAgB,CAAC,CAAC;MACpCmE,YAAY,GAAG,IAAID,iBAAiB,CAAEzuC,UAAU,EAAEiJ,YAAa,CAAC;MAChEjmB,UAAU,GAAG,IAAIw5B,eAAe,CAAE8/C,KAAK,EAAE7/C,QAAQ,EAAEC,UAAU,EAAErkE,KAAK,EAAEskE,OAAO,EAAEi/C,MAAM,EAAEryE,kBAAmB,CAAC;MAC3Gw/C,SAAS,GAAG,IAAIwG,cAAc,CAAE+sB,KAAK,EAAE3/C,OAAO,EAAE1T,YAAa,CAAC;MAC9DtJ,cAAc,GAAG,IAAIo5D,mBAAmB,CAAExb,GAAG,EAAEpkG,IAAI,EAAE8vD,YAAY,EAAE5wD,KAAM,CAAC;MAE1EwmH,cAAc,GAAG,IAAIv8C,mBAAmB,CAAEi7B,GAAG,EAAEv9C,UAAU,EAAE7mD,IAAI,EAAE8vD,YAAa,CAAC;MAC/E61D,qBAAqB,GAAG,IAAI1wC,0BAA0B,CAAEmvB,GAAG,EAAEv9C,UAAU,EAAE7mD,IAAI,EAAE8vD,YAAa,CAAC;MAE7F9vD,IAAI,CAAC61E,QAAQ,GAAG0vC,YAAY,CAAC1vC,QAAQ;MAErCstC,KAAK,CAACrzD,YAAY,GAAGA,YAAY;MACjCqzD,KAAK,CAACt8D,UAAU,GAAGA,UAAU;MAC7Bs8D,KAAK,CAACrkD,UAAU,GAAGA,UAAU;MAC7BqkD,KAAK,CAACqC,WAAW,GAAGA,WAAW;MAC/BrC,KAAK,CAACvzB,SAAS,GAAGA,SAAS;MAC3BuzB,KAAK,CAACjkH,KAAK,GAAGA,KAAK;MACnBikH,KAAK,CAACnjH,IAAI,GAAGA,IAAI;IAElB;IAEA4lH,aAAa,CAAC,CAAC;;IAEf;;IAEA,IAAM56D,EAAE,GAAG,IAAIosD,YAAY,CAAE+L,KAAK,EAAE/e,GAAI,CAAC;IAEzC,IAAI,CAACp5C,EAAE,GAAGA,EAAE;;IAEZ;;IAEA,IAAI,CAACnnC,UAAU,GAAG,YAAY;MAE7B,OAAOugF,GAAG;IAEX,CAAC;IAED,IAAI,CAAC6T,oBAAoB,GAAG,YAAY;MAEvC,OAAO7T,GAAG,CAAC6T,oBAAoB,CAAC,CAAC;IAElC,CAAC;IAED,IAAI,CAAC4N,gBAAgB,GAAG,YAAY;MAEnC,IAAM1gD,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,oBAAqB,CAAC;MACxD,IAAKotD,SAAS,EAAGA,SAAS,CAAC2gD,WAAW,CAAC,CAAC;IAEzC,CAAC;IAED,IAAI,CAACC,mBAAmB,GAAG,YAAY;MAEtC,IAAM5gD,SAAS,GAAGte,UAAU,CAAC9uC,GAAG,CAAE,oBAAqB,CAAC;MACxD,IAAKotD,SAAS,EAAGA,SAAS,CAAC6gD,cAAc,CAAC,CAAC;IAE5C,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,YAAY;MAEhC,OAAOhC,WAAW;IAEnB,CAAC;IAED,IAAI,CAACiC,aAAa,GAAG,UAAW1qH,KAAK,EAAG;MAEvC,IAAKA,KAAK,KAAKqE,SAAS,EAAG;MAE3BokH,WAAW,GAAGzoH,KAAK;MAEnB,IAAI,CAACwvB,OAAO,CAAE+4F,MAAM,EAAEC,OAAO,EAAE,KAAM,CAAC;IAEvC,CAAC;IAED,IAAI,CAACxtF,OAAO,GAAG,UAAWzyB,MAAM,EAAG;MAElC,OAAOA,MAAM,CAAC+S,GAAG,CAAEitG,MAAM,EAAEC,OAAQ,CAAC;IAErC,CAAC;IAED,IAAI,CAACh5F,OAAO,GAAG,UAAWrH,KAAK,EAAEC,MAAM,EAAEuiG,WAAW,GAAG,IAAI,EAAG;MAE7D,IAAKn7D,EAAE,CAAC4tD,YAAY,EAAG;QAEtB7hG,OAAO,CAACC,IAAI,CAAE,wEAAyE,CAAC;QACxF;MAED;MAEA+sG,MAAM,GAAGpgG,KAAK;MACdqgG,OAAO,GAAGpgG,MAAM;MAEhBzC,MAAM,CAACwC,KAAK,GAAGrR,IAAI,CAACsC,KAAK,CAAE+O,KAAK,GAAGsgG,WAAY,CAAC;MAChD9iG,MAAM,CAACyC,MAAM,GAAGtR,IAAI,CAACsC,KAAK,CAAEgP,MAAM,GAAGqgG,WAAY,CAAC;MAElD,IAAKkC,WAAW,KAAK,IAAI,EAAG;QAE3BhlG,MAAM,CAACC,KAAK,CAACuC,KAAK,GAAGA,KAAK,GAAG,IAAI;QACjCxC,MAAM,CAACC,KAAK,CAACwC,MAAM,GAAGA,MAAM,GAAG,IAAI;MAEpC;MAEA,IAAI,CAACwiG,WAAW,CAAE,CAAC,EAAE,CAAC,EAAEziG,KAAK,EAAEC,MAAO,CAAC;IAExC,CAAC;IAED,IAAI,CAACyiG,oBAAoB,GAAG,UAAWtiH,MAAM,EAAG;MAE/C,OAAOA,MAAM,CAAC+S,GAAG,CAAEitG,MAAM,GAAGE,WAAW,EAAED,OAAO,GAAGC,WAAY,CAAC,CAACrvG,KAAK,CAAC,CAAC;IAEzE,CAAC;IAED,IAAI,CAAC0xG,oBAAoB,GAAG,UAAW3iG,KAAK,EAAEC,MAAM,EAAEw6F,UAAU,EAAG;MAElE2F,MAAM,GAAGpgG,KAAK;MACdqgG,OAAO,GAAGpgG,MAAM;MAEhBqgG,WAAW,GAAG7F,UAAU;MAExBj9F,MAAM,CAACwC,KAAK,GAAGrR,IAAI,CAACsC,KAAK,CAAE+O,KAAK,GAAGy6F,UAAW,CAAC;MAC/Cj9F,MAAM,CAACyC,MAAM,GAAGtR,IAAI,CAACsC,KAAK,CAAEgP,MAAM,GAAGw6F,UAAW,CAAC;MAEjD,IAAI,CAACgI,WAAW,CAAE,CAAC,EAAE,CAAC,EAAEziG,KAAK,EAAEC,MAAO,CAAC;IAExC,CAAC;IAED,IAAI,CAAC2iG,kBAAkB,GAAG,UAAWxiH,MAAM,EAAG;MAE7C,OAAOA,MAAM,CAACwU,IAAI,CAAEmrG,gBAAiB,CAAC;IAEvC,CAAC;IAED,IAAI,CAAChrB,WAAW,GAAG,UAAW30F,MAAM,EAAG;MAEtC,OAAOA,MAAM,CAACwU,IAAI,CAAEo+E,SAAU,CAAC;IAEhC,CAAC;IAED,IAAI,CAACyvB,WAAW,GAAG,UAAW5yG,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAM,EAAG;MAEnD,IAAKpQ,CAAC,CAAC+U,SAAS,EAAG;QAElBouE,SAAS,CAAC7/E,GAAG,CAAEtD,CAAC,CAACA,CAAC,EAAEA,CAAC,CAACM,CAAC,EAAEN,CAAC,CAAC6U,CAAC,EAAE7U,CAAC,CAAC8U,CAAE,CAAC;MAEpC,CAAC,MAAM;QAENquE,SAAS,CAAC7/E,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAO,CAAC;MAErC;MAEA1kB,KAAK,CAACwrB,QAAQ,CAAEg5F,gBAAgB,CAACnrG,IAAI,CAAEo+E,SAAU,CAAC,CAAC19E,cAAc,CAAEgrG,WAAY,CAAC,CAACrvG,KAAK,CAAC,CAAE,CAAC;IAE3F,CAAC;IAED,IAAI,CAAC4xG,UAAU,GAAG,UAAWziH,MAAM,EAAG;MAErC,OAAOA,MAAM,CAACwU,IAAI,CAAE6rG,QAAS,CAAC;IAE/B,CAAC;IAED,IAAI,CAACqC,UAAU,GAAG,UAAWjzG,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAM,EAAG;MAElD,IAAKpQ,CAAC,CAAC+U,SAAS,EAAG;QAElB67F,QAAQ,CAACttG,GAAG,CAAEtD,CAAC,CAACA,CAAC,EAAEA,CAAC,CAACM,CAAC,EAAEN,CAAC,CAAC6U,CAAC,EAAE7U,CAAC,CAAC8U,CAAE,CAAC;MAEnC,CAAC,MAAM;QAEN87F,QAAQ,CAACttG,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAO,CAAC;MAEpC;MAEA1kB,KAAK,CAACsrB,OAAO,CAAEm5F,eAAe,CAACprG,IAAI,CAAE6rG,QAAS,CAAC,CAACnrG,cAAc,CAAEgrG,WAAY,CAAC,CAACrvG,KAAK,CAAC,CAAE,CAAC;IAExF,CAAC;IAED,IAAI,CAAC8xG,cAAc,GAAG,YAAY;MAEjC,OAAOrC,YAAY;IAEpB,CAAC;IAED,IAAI,CAACpsB,cAAc,GAAG,UAAW0uB,OAAO,EAAG;MAE1CznH,KAAK,CAAC+4F,cAAc,CAAEosB,YAAY,GAAGsC,OAAQ,CAAC;IAE/C,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,UAAW1oH,MAAM,EAAG;MAExCgmH,WAAW,GAAGhmH,MAAM;IAErB,CAAC;IAED,IAAI,CAAC2oH,kBAAkB,GAAG,UAAW3oH,MAAM,EAAG;MAE7CimH,gBAAgB,GAAGjmH,MAAM;IAE1B,CAAC;;IAED;;IAEA,IAAI,CAAC0mE,aAAa,GAAG,UAAW7gE,MAAM,EAAG;MAExC,OAAOA,MAAM,CAACwU,IAAI,CAAEsxB,UAAU,CAAC+6B,aAAa,CAAC,CAAE,CAAC;IAEjD,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,YAAY;MAEhCh7B,UAAU,CAACg7B,aAAa,CAACl9B,KAAK,CAAEkC,UAAU,EAAEtC,SAAU,CAAC;IAExD,CAAC;IAED,IAAI,CAACu9B,aAAa,GAAG,YAAY;MAEhC,OAAOj7B,UAAU,CAACi7B,aAAa,CAAC,CAAC;IAElC,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,YAAY;MAEhCl7B,UAAU,CAACk7B,aAAa,CAACp9B,KAAK,CAAEkC,UAAU,EAAEtC,SAAU,CAAC;IAExD,CAAC;IAED,IAAI,CAACG,KAAK,GAAG,UAAW5lB,KAAK,GAAG,IAAI,EAAEyI,KAAK,GAAG,IAAI,EAAE2hC,OAAO,GAAG,IAAI,EAAG;MAEpE,IAAI46D,IAAI,GAAG,CAAC;MAEZ,IAAKhlG,KAAK,EAAG;QAEZ;QACA,IAAIilG,eAAe,GAAG,KAAK;QAC3B,IAAKxD,oBAAoB,KAAK,IAAI,EAAG;UAEpC,IAAMyD,YAAY,GAAGzD,oBAAoB,CAAC54F,OAAO,CAACvE,MAAM;UACxD2gG,eAAe,GAAGC,YAAY,KAAK57G,iBAAiB,IACnD47G,YAAY,KAAK77G,eAAe,IAChC67G,YAAY,KAAK/7G,gBAAgB;QAEnC;;QAEA;QACA;QACA,IAAK87G,eAAe,EAAG;UAEtB,IAAME,UAAU,GAAG1D,oBAAoB,CAAC54F,OAAO,CAACttB,IAAI;UACpD,IAAM6pH,cAAc,GAAGD,UAAU,KAAKl9G,gBAAgB,IACrDk9G,UAAU,KAAK78G,eAAe,IAC9B68G,UAAU,KAAK/8G,iBAAiB,IAChC+8G,UAAU,KAAKx8G,kBAAkB,IACjCw8G,UAAU,KAAK18G,qBAAqB,IACpC08G,UAAU,KAAKz8G,qBAAqB;UAErC,IAAMi5D,UAAU,GAAG55B,UAAU,CAAC+6B,aAAa,CAAC,CAAC;UAC7C,IAAM5uD,CAAC,GAAG6zB,UAAU,CAACi7B,aAAa,CAAC,CAAC;UACpC,IAAMrlD,CAAC,GAAGgkD,UAAU,CAAChkD,CAAC;UACtB,IAAMb,CAAC,GAAG6kD,UAAU,CAAC7kD,CAAC;UACtB,IAAM3I,CAAC,GAAGwtD,UAAU,CAACxtD,CAAC;UAEtB,IAAKixG,cAAc,EAAG;YAErBxE,cAAc,CAAE,CAAC,CAAE,GAAGjjG,CAAC;YACvBijG,cAAc,CAAE,CAAC,CAAE,GAAG9jG,CAAC;YACvB8jG,cAAc,CAAE,CAAC,CAAE,GAAGzsG,CAAC;YACvBysG,cAAc,CAAE,CAAC,CAAE,GAAG1sG,CAAC;YACvBouF,GAAG,CAAC+iB,cAAc,CAAE/iB,GAAG,CAACgjB,KAAK,EAAE,CAAC,EAAE1E,cAAe,CAAC;UAEnD,CAAC,MAAM;YAENC,aAAa,CAAE,CAAC,CAAE,GAAGljG,CAAC;YACtBkjG,aAAa,CAAE,CAAC,CAAE,GAAG/jG,CAAC;YACtB+jG,aAAa,CAAE,CAAC,CAAE,GAAG1sG,CAAC;YACtB0sG,aAAa,CAAE,CAAC,CAAE,GAAG3sG,CAAC;YACtBouF,GAAG,CAACijB,aAAa,CAAEjjB,GAAG,CAACgjB,KAAK,EAAE,CAAC,EAAEzE,aAAc,CAAC;UAEjD;QAED,CAAC,MAAM;UAENmE,IAAI,IAAI1iB,GAAG,CAACuK,gBAAgB;QAE7B;MAED;MAEA,IAAKpkF,KAAK,EAAGu8F,IAAI,IAAI1iB,GAAG,CAAC4K,gBAAgB;MACzC,IAAK9iD,OAAO,EAAG46D,IAAI,IAAI1iB,GAAG,CAAC6K,kBAAkB;MAE7C7K,GAAG,CAAC18D,KAAK,CAAEo/E,IAAK,CAAC;IAElB,CAAC;IAED,IAAI,CAACrjD,UAAU,GAAG,YAAY;MAE7B,IAAI,CAAC/7B,KAAK,CAAE,IAAI,EAAE,KAAK,EAAE,KAAM,CAAC;IAEjC,CAAC;IAED,IAAI,CAAC8zD,UAAU,GAAG,YAAY;MAE7B,IAAI,CAAC9zD,KAAK,CAAE,KAAK,EAAE,IAAI,EAAE,KAAM,CAAC;IAEjC,CAAC;IAED,IAAI,CAAC60D,YAAY,GAAG,YAAY;MAE/B,IAAI,CAAC70D,KAAK,CAAE,KAAK,EAAE,KAAK,EAAE,IAAK,CAAC;IAEjC,CAAC;;IAED;;IAEA,IAAI,CAAC3f,OAAO,GAAG,YAAY;MAE1B5G,MAAM,CAACxP,mBAAmB,CAAE,kBAAkB,EAAEszG,aAAa,EAAE,KAAM,CAAC;MACtE9jG,MAAM,CAACxP,mBAAmB,CAAE,sBAAsB,EAAEuzG,gBAAgB,EAAE,KAAM,CAAC;MAC7E/jG,MAAM,CAACxP,mBAAmB,CAAE,2BAA2B,EAAEwzG,sBAAsB,EAAE,KAAM,CAAC;MAExFK,WAAW,CAACz9F,OAAO,CAAC,CAAC;MACrBwtE,YAAY,CAACxtE,OAAO,CAAC,CAAC;MACtB+2C,UAAU,CAAC/2C,OAAO,CAAC,CAAC;MACpBu7C,QAAQ,CAACv7C,OAAO,CAAC,CAAC;MAClBw7C,UAAU,CAACx7C,OAAO,CAAC,CAAC;MACpBy7C,OAAO,CAACz7C,OAAO,CAAC,CAAC;MACjBs9C,aAAa,CAACt9C,OAAO,CAAC,CAAC;MACvBy+B,cAAc,CAACz+B,OAAO,CAAC,CAAC;MACxBw9F,YAAY,CAACx9F,OAAO,CAAC,CAAC;MAEtBijC,EAAE,CAACjjC,OAAO,CAAC,CAAC;MAEZijC,EAAE,CAACr5C,mBAAmB,CAAE,cAAc,EAAE21G,gBAAiB,CAAC;MAC1Dt8D,EAAE,CAACr5C,mBAAmB,CAAE,YAAY,EAAE41G,cAAe,CAAC;MAEtD,IAAK/C,yBAAyB,EAAG;QAEhCA,yBAAyB,CAACz8F,OAAO,CAAC,CAAC;QACnCy8F,yBAAyB,GAAG,IAAI;MAEjC;MAEA75E,SAAS,CAAChoC,IAAI,CAAC,CAAC;IAEjB,CAAC;;IAED;;IAEA,SAASsiH,aAAaA,CAAEjzG,KAAK,EAAG;MAE/BA,KAAK,CAACw1G,cAAc,CAAC,CAAC;MAEtBzwG,OAAO,CAACpB,GAAG,CAAE,oCAAqC,CAAC;MAEnDytG,cAAc,GAAG,IAAI;IAEtB;IAEA,SAAS8B,gBAAgBA,CAAA,CAAE;IAAA,EAAc;MAExCnuG,OAAO,CAACpB,GAAG,CAAE,wCAAyC,CAAC;MAEvDytG,cAAc,GAAG,KAAK;MAEtB,IAAMqE,aAAa,GAAGznH,IAAI,CAAC81E,SAAS;MACpC,IAAMmS,gBAAgB,GAAG2H,SAAS,CAACptE,OAAO;MAC1C,IAAMklG,mBAAmB,GAAG93B,SAAS,CAAC4H,UAAU;MAChD,IAAMmwB,oBAAoB,GAAG/3B,SAAS,CAAChoE,WAAW;MAClD,IAAMs8D,aAAa,GAAG0L,SAAS,CAACvyF,IAAI;MAEpCuoH,aAAa,CAAC,CAAC;MAEf5lH,IAAI,CAAC81E,SAAS,GAAG2xC,aAAa;MAC9B73B,SAAS,CAACptE,OAAO,GAAGylE,gBAAgB;MACpC2H,SAAS,CAAC4H,UAAU,GAAGkwB,mBAAmB;MAC1C93B,SAAS,CAAChoE,WAAW,GAAG+/F,oBAAoB;MAC5C/3B,SAAS,CAACvyF,IAAI,GAAG6mF,aAAa;IAE/B;IAEA,SAASihC,sBAAsBA,CAAEnzG,KAAK,EAAG;MAExC+E,OAAO,CAAChY,KAAK,CAAE,qEAAqE,EAAEiT,KAAK,CAAC41G,aAAc,CAAC;IAE5G;IAEA,SAASC,iBAAiBA,CAAE71G,KAAK,EAAG;MAEnC,IAAMy4B,QAAQ,GAAGz4B,KAAK,CAACjO,MAAM;MAE7B0mC,QAAQ,CAAC94B,mBAAmB,CAAE,SAAS,EAAEk2G,iBAAkB,CAAC;MAE5DC,kBAAkB,CAAEr9E,QAAS,CAAC;IAE/B;;IAEA;;IAEA,SAASq9E,kBAAkBA,CAAEr9E,QAAQ,EAAG;MAEvCs9E,gCAAgC,CAAEt9E,QAAS,CAAC;MAE5Cq0B,UAAU,CAACt3B,MAAM,CAAEiD,QAAS,CAAC;IAE9B;IAGA,SAASs9E,gCAAgCA,CAAEt9E,QAAQ,EAAG;MAErD,IAAMorC,QAAQ,GAAG/W,UAAU,CAAC/mD,GAAG,CAAE0yB,QAAS,CAAC,CAACorC,QAAQ;MAEpD,IAAKA,QAAQ,KAAKh2E,SAAS,EAAG;QAE7Bg2E,QAAQ,CAAC53E,OAAO,CAAE,UAAW0nE,OAAO,EAAG;UAEtC4/C,YAAY,CAACj1B,cAAc,CAAE3qB,OAAQ,CAAC;QAEvC,CAAE,CAAC;QAEH,IAAKl7B,QAAQ,CAAC6b,gBAAgB,EAAG;UAEhCi/D,YAAY,CAACh1B,kBAAkB,CAAE9lD,QAAS,CAAC;QAE5C;MAED;IAED;;IAEA;;IAEA,IAAI,CAACwuD,kBAAkB,GAAG,UAAWhmE,MAAM,EAAE23B,KAAK,EAAE1zB,QAAQ,EAAEuT,QAAQ,EAAEroC,MAAM,EAAEo9C,KAAK,EAAG;MAEvF,IAAKoL,KAAK,KAAK,IAAI,EAAGA,KAAK,GAAG+5D,WAAW,CAAC,CAAC;;MAE3C,IAAM7iB,WAAW,GAAK1/F,MAAM,CAAC4nC,MAAM,IAAI5nC,MAAM,CAACkxB,WAAW,CAAC7U,WAAW,CAAC,CAAC,GAAG,CAAG;MAE7E,IAAMknD,OAAO,GAAGqiD,UAAU,CAAE/0F,MAAM,EAAE23B,KAAK,EAAE1zB,QAAQ,EAAEuT,QAAQ,EAAEroC,MAAO,CAAC;MAEvElD,KAAK,CAAC2iG,WAAW,CAAEp3D,QAAQ,EAAEq3D,WAAY,CAAC;;MAE1C;;MAEA,IAAIjwF,KAAK,GAAGqlB,QAAQ,CAACrlB,KAAK;MAC1B,IAAIo2G,WAAW,GAAG,CAAC;MAEnB,IAAKx9E,QAAQ,CAACqK,SAAS,KAAK,IAAI,EAAG;QAElCjjC,KAAK,GAAGo3B,UAAU,CAAC8rC,qBAAqB,CAAE79C,QAAS,CAAC;QAEpD,IAAKrlB,KAAK,KAAKhS,SAAS,EAAG;QAE3BooH,WAAW,GAAG,CAAC;MAEhB;;MAEA;;MAEA,IAAM9qE,SAAS,GAAGjmB,QAAQ,CAACimB,SAAS;MACpC,IAAM/lB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAE7C,IAAI8wF,SAAS,GAAG/qE,SAAS,CAACC,KAAK,GAAG6qE,WAAW;MAC7C,IAAIE,OAAO,GAAG,CAAEhrE,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAK,IAAKk7F,WAAW;MAEjE,IAAKzoE,KAAK,KAAK,IAAI,EAAG;QAErB0oE,SAAS,GAAG51G,IAAI,CAACa,GAAG,CAAE+0G,SAAS,EAAE1oE,KAAK,CAACpC,KAAK,GAAG6qE,WAAY,CAAC;QAC5DE,OAAO,GAAG71G,IAAI,CAACY,GAAG,CAAEi1G,OAAO,EAAE,CAAE3oE,KAAK,CAACpC,KAAK,GAAGoC,KAAK,CAACzyB,KAAK,IAAKk7F,WAAY,CAAC;MAE3E;MAEA,IAAKp2G,KAAK,KAAK,IAAI,EAAG;QAErBq2G,SAAS,GAAG51G,IAAI,CAACa,GAAG,CAAE+0G,SAAS,EAAE,CAAE,CAAC;QACpCC,OAAO,GAAG71G,IAAI,CAACY,GAAG,CAAEi1G,OAAO,EAAEt2G,KAAK,CAACkb,KAAM,CAAC;MAE3C,CAAC,MAAM,IAAKqK,QAAQ,KAAKv3B,SAAS,IAAIu3B,QAAQ,KAAK,IAAI,EAAG;QAEzD8wF,SAAS,GAAG51G,IAAI,CAACa,GAAG,CAAE+0G,SAAS,EAAE,CAAE,CAAC;QACpCC,OAAO,GAAG71G,IAAI,CAACY,GAAG,CAAEi1G,OAAO,EAAE/wF,QAAQ,CAACrK,KAAM,CAAC;MAE9C;MAEA,IAAMq7F,SAAS,GAAGD,OAAO,GAAGD,SAAS;MAErC,IAAKE,SAAS,GAAG,CAAC,IAAIA,SAAS,KAAK9yF,QAAQ,EAAG;;MAE/C;;MAEA+vC,aAAa,CAACK,KAAK,CAAEtjE,MAAM,EAAEqoC,QAAQ,EAAEk7B,OAAO,EAAEzuC,QAAQ,EAAErlB,KAAM,CAAC;MAEjE,IAAI2J,SAAS;MACb,IAAImqC,QAAQ,GAAG+/D,cAAc;MAE7B,IAAK7zG,KAAK,KAAK,IAAI,EAAG;QAErB2J,SAAS,GAAG2b,UAAU,CAACpf,GAAG,CAAElG,KAAM,CAAC;QAEnC8zC,QAAQ,GAAGggE,qBAAqB;QAChChgE,QAAQ,CAACrI,QAAQ,CAAE9hC,SAAU,CAAC;MAE/B;;MAEA;;MAEA,IAAKpZ,MAAM,CAAC4nC,MAAM,EAAG;QAEpB,IAAKS,QAAQ,CAACqK,SAAS,KAAK,IAAI,EAAG;UAElC51C,KAAK,CAACqjG,YAAY,CAAE93D,QAAQ,CAACsK,kBAAkB,GAAG8vE,mBAAmB,CAAC,CAAE,CAAC;UACzEl/D,QAAQ,CAAC0jB,OAAO,CAAE+6B,GAAG,CAAC3uB,KAAM,CAAC;QAE9B,CAAC,MAAM;UAEN9vB,QAAQ,CAAC0jB,OAAO,CAAE+6B,GAAG,CAAC5uB,SAAU,CAAC;QAElC;MAED,CAAC,MAAM,IAAKpzE,MAAM,CAAC6nC,MAAM,EAAG;QAE3B,IAAIu4D,SAAS,GAAG/3D,QAAQ,CAACiK,SAAS;QAElC,IAAK8tD,SAAS,KAAK3iG,SAAS,EAAG2iG,SAAS,GAAG,CAAC,CAAC,CAAC;;QAE9CtjG,KAAK,CAACqjG,YAAY,CAAEC,SAAS,GAAGqiB,mBAAmB,CAAC,CAAE,CAAC;QAEvD,IAAKziH,MAAM,CAACimH,cAAc,EAAG;UAE5B1iE,QAAQ,CAAC0jB,OAAO,CAAE+6B,GAAG,CAAC3uB,KAAM,CAAC;QAE9B,CAAC,MAAM,IAAKrzE,MAAM,CAACkmH,UAAU,EAAG;UAE/B3iE,QAAQ,CAAC0jB,OAAO,CAAE+6B,GAAG,CAACzuB,SAAU,CAAC;QAElC,CAAC,MAAM;UAENhwB,QAAQ,CAAC0jB,OAAO,CAAE+6B,GAAG,CAAC1uB,UAAW,CAAC;QAEnC;MAED,CAAC,MAAM,IAAKtzE,MAAM,CAAC8nC,QAAQ,EAAG;QAE7Byb,QAAQ,CAAC0jB,OAAO,CAAE+6B,GAAG,CAACxuB,MAAO,CAAC;MAE/B,CAAC,MAAM,IAAKxzE,MAAM,CAACmmH,QAAQ,EAAG;QAE7B5iE,QAAQ,CAAC0jB,OAAO,CAAE+6B,GAAG,CAAC5uB,SAAU,CAAC;MAElC;MAEA,IAAKpzE,MAAM,CAACknC,eAAe,EAAG;QAE7Bqc,QAAQ,CAAC4jB,eAAe,CAAE2+C,SAAS,EAAEE,SAAS,EAAEhmH,MAAM,CAAC2qB,KAAM,CAAC;MAE/D,CAAC,MAAM,IAAKmK,QAAQ,CAACixC,yBAAyB,EAAG;QAEhD,IAAMqgD,gBAAgB,GAAGtxF,QAAQ,CAACqxC,iBAAiB,KAAK1oE,SAAS,GAAGq3B,QAAQ,CAACqxC,iBAAiB,GAAGjzC,QAAQ;QACzG,IAAMigD,aAAa,GAAGjjE,IAAI,CAACY,GAAG,CAAEgkB,QAAQ,CAACq+C,aAAa,EAAEizC,gBAAiB,CAAC;QAE1E7iE,QAAQ,CAAC4jB,eAAe,CAAE2+C,SAAS,EAAEE,SAAS,EAAE7yC,aAAc,CAAC;MAEhE,CAAC,MAAM;QAEN5vB,QAAQ,CAACuF,MAAM,CAAEg9D,SAAS,EAAEE,SAAU,CAAC;MAExC;IAED,CAAC;;IAED;;IAEA,IAAI,CAAC/2C,OAAO,GAAG,UAAWzmB,KAAK,EAAE33B,MAAM,EAAG;MAEzC,SAASw1F,OAAOA,CAAEh+E,QAAQ,EAAEmgB,KAAK,EAAExoD,MAAM,EAAG;QAE3C,IAAKqoC,QAAQ,CAAC6D,WAAW,KAAK,IAAI,IAAI7D,QAAQ,CAAC0D,IAAI,KAAKhoC,UAAU,IAAIskC,QAAQ,CAAC4F,eAAe,KAAK,KAAK,EAAG;UAE1G5F,QAAQ,CAAC0D,IAAI,GAAGjoC,QAAQ;UACxBukC,QAAQ,CAAC7iB,WAAW,GAAG,IAAI;UAC3B8gG,UAAU,CAAEj+E,QAAQ,EAAEmgB,KAAK,EAAExoD,MAAO,CAAC;UAErCqoC,QAAQ,CAAC0D,IAAI,GAAGloC,SAAS;UACzBwkC,QAAQ,CAAC7iB,WAAW,GAAG,IAAI;UAC3B8gG,UAAU,CAAEj+E,QAAQ,EAAEmgB,KAAK,EAAExoD,MAAO,CAAC;UAErCqoC,QAAQ,CAAC0D,IAAI,GAAGhoC,UAAU;QAE3B,CAAC,MAAM;UAENuiH,UAAU,CAAEj+E,QAAQ,EAAEmgB,KAAK,EAAExoD,MAAO,CAAC;QAEtC;MAED;MAEAygH,kBAAkB,GAAGttB,YAAY,CAACx9E,GAAG,CAAE6yC,KAAM,CAAC;MAC9Ci4D,kBAAkB,CAAC12C,IAAI,CAAC,CAAC;MAEzB42C,gBAAgB,CAACniH,IAAI,CAAEiiH,kBAAmB,CAAC;MAE3Cj4D,KAAK,CAACjiB,eAAe,CAAE,UAAWvmC,MAAM,EAAG;QAE1C,IAAKA,MAAM,CAACklC,OAAO,IAAIllC,MAAM,CAAC0hC,MAAM,CAACtgB,IAAI,CAAEyP,MAAM,CAAC6Q,MAAO,CAAC,EAAG;UAE5D++E,kBAAkB,CAAC5tB,SAAS,CAAE7yF,MAAO,CAAC;UAEtC,IAAKA,MAAM,CAAC0jC,UAAU,EAAG;YAExB+8E,kBAAkB,CAAC3tB,UAAU,CAAE9yF,MAAO,CAAC;UAExC;QAED;MAED,CAAE,CAAC;MAEHygH,kBAAkB,CAACztB,WAAW,CAAE+tB,KAAK,CAACtzB,gBAAiB,CAAC;MAExDjlC,KAAK,CAACliB,QAAQ,CAAE,UAAWtmC,MAAM,EAAG;QAEnC,IAAMqoC,QAAQ,GAAGroC,MAAM,CAACqoC,QAAQ;QAEhC,IAAKA,QAAQ,EAAG;UAEf,IAAKvlB,KAAK,CAACC,OAAO,CAAEslB,QAAS,CAAC,EAAG;YAEhC,KAAM,IAAIrpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqpC,QAAQ,CAACtpC,MAAM,EAAEC,CAAC,EAAG,EAAG;cAE5C,IAAMunH,SAAS,GAAGl+E,QAAQ,CAAErpC,CAAC,CAAE;cAE/BqnH,OAAO,CAAEE,SAAS,EAAE/9D,KAAK,EAAExoD,MAAO,CAAC;YAEpC;UAED,CAAC,MAAM;YAENqmH,OAAO,CAAEh+E,QAAQ,EAAEmgB,KAAK,EAAExoD,MAAO,CAAC;UAEnC;QAED;MAED,CAAE,CAAC;MAEH2gH,gBAAgB,CAACzgH,GAAG,CAAC,CAAC;MACtBugH,kBAAkB,GAAG,IAAI;IAE1B,CAAC;;IAED;;IAEA,IAAIzF,wBAAwB,GAAG,IAAI;IAEnC,SAAS/tD,gBAAgBA,CAAEC,IAAI,EAAG;MAEjC,IAAK8tD,wBAAwB,EAAGA,wBAAwB,CAAE9tD,IAAK,CAAC;IAEjE;IAEA,SAASg4D,gBAAgBA,CAAA,EAAG;MAE3B38E,SAAS,CAAChoC,IAAI,CAAC,CAAC;IAEjB;IAEA,SAAS4kH,cAAcA,CAAA,EAAG;MAEzB58E,SAAS,CAACyS,KAAK,CAAC,CAAC;IAElB;IAEA,IAAMzS,SAAS,GAAG,IAAIskB,cAAc,CAAC,CAAC;IACtCtkB,SAAS,CAAC+kB,gBAAgB,CAAEL,gBAAiB,CAAC;IAE9C,IAAK,OAAO5yD,IAAI,KAAK,WAAW,EAAGkuC,SAAS,CAACglB,UAAU,CAAElzD,IAAK,CAAC;IAE/D,IAAI,CAACizD,gBAAgB,GAAG,UAAWj/B,QAAQ,EAAG;MAE7C2sF,wBAAwB,GAAG3sF,QAAQ;MACnCu6B,EAAE,CAAC0E,gBAAgB,CAAEj/B,QAAS,CAAC;MAE7BA,QAAQ,KAAK,IAAI,GAAKka,SAAS,CAAChoC,IAAI,CAAC,CAAC,GAAGgoC,SAAS,CAACyS,KAAK,CAAC,CAAC;IAE7D,CAAC;IAED4N,EAAE,CAAC35C,gBAAgB,CAAE,cAAc,EAAEi2G,gBAAiB,CAAC;IACvDt8D,EAAE,CAAC35C,gBAAgB,CAAE,YAAY,EAAEk2G,cAAe,CAAC;;IAEnD;;IAEA,IAAI,CAACr8D,MAAM,GAAG,UAAWN,KAAK,EAAE33B,MAAM,EAAG;MAExC,IAAKA,MAAM,KAAKpzB,SAAS,IAAIozB,MAAM,CAACoU,QAAQ,KAAK,IAAI,EAAG;QAEvDtwB,OAAO,CAAChY,KAAK,CAAE,wEAAyE,CAAC;QACzF;MAED;MAEA,IAAKqkH,cAAc,KAAK,IAAI,EAAG;;MAE/B;;MAEA,IAAKx4D,KAAK,CAACjlB,qBAAqB,KAAK,IAAI,EAAGilB,KAAK,CAAC/hB,iBAAiB,CAAC,CAAC;;MAErE;;MAEA,IAAK5V,MAAM,CAACiS,MAAM,KAAK,IAAI,IAAIjS,MAAM,CAAC0S,qBAAqB,KAAK,IAAI,EAAG1S,MAAM,CAAC4V,iBAAiB,CAAC,CAAC;MAEjG,IAAKmiB,EAAE,CAACxoC,OAAO,KAAK,IAAI,IAAIwoC,EAAE,CAAC4tD,YAAY,KAAK,IAAI,EAAG;QAEtD,IAAK5tD,EAAE,CAAC2tD,gBAAgB,KAAK,IAAI,EAAG3tD,EAAE,CAAC6xD,YAAY,CAAE5pF,MAAO,CAAC;QAE7DA,MAAM,GAAG+3B,EAAE,CAACiyD,SAAS,CAAC,CAAC,CAAC,CAAC;MAE1B;;MAEA;MACA,IAAKryD,KAAK,CAAChhB,OAAO,KAAK,IAAI,EAAGghB,KAAK,CAACzkB,cAAc,CAAEg9E,KAAK,EAAEv4D,KAAK,EAAE33B,MAAM,EAAEswF,oBAAqB,CAAC;MAEhGV,kBAAkB,GAAGttB,YAAY,CAACx9E,GAAG,CAAE6yC,KAAK,EAAEm4D,gBAAgB,CAAC5hH,MAAO,CAAC;MACvE0hH,kBAAkB,CAAC12C,IAAI,CAAC,CAAC;MAEzB42C,gBAAgB,CAACniH,IAAI,CAAEiiH,kBAAmB,CAAC;MAE3C4B,iBAAiB,CAACtnG,gBAAgB,CAAE8V,MAAM,CAACE,gBAAgB,EAAEF,MAAM,CAACC,kBAAmB,CAAC;MACxFsjE,QAAQ,CAAC5oC,uBAAuB,CAAE62D,iBAAkB,CAAC;MAErDF,qBAAqB,GAAG,IAAI,CAACz4C,oBAAoB;MACjDw4C,gBAAgB,GAAG19D,QAAQ,CAACulB,IAAI,CAAE,IAAI,CAAC18B,cAAc,EAAE80E,qBAAsB,CAAC;MAE9E3B,iBAAiB,GAAG4C,WAAW,CAACztG,GAAG,CAAE6yC,KAAK,EAAEk4D,eAAe,CAAC3hH,MAAO,CAAC;MACpEyhH,iBAAiB,CAACz2C,IAAI,CAAC,CAAC;MAExB22C,eAAe,CAACliH,IAAI,CAAEgiH,iBAAkB,CAAC;MAEzCgG,aAAa,CAAEh+D,KAAK,EAAE33B,MAAM,EAAE,CAAC,EAAEkwF,KAAK,CAACF,WAAY,CAAC;MAEpDL,iBAAiB,CAACt/G,MAAM,CAAC,CAAC;MAE1B,IAAK6/G,KAAK,CAACF,WAAW,KAAK,IAAI,EAAG;QAEjCL,iBAAiB,CAACnrC,IAAI,CAAEysC,WAAW,EAAEC,gBAAiB,CAAC;MAExD;;MAEA;;MAEA,IAAI,CAACnkH,IAAI,CAACkrD,MAAM,CAACqE,KAAK,EAAG;MAEzB,IAAK+0D,gBAAgB,KAAK,IAAI,EAAG19D,QAAQ,CAACylB,YAAY,CAAC,CAAC;MAExD,IAAM2oB,YAAY,GAAG6tB,kBAAkB,CAAC3jH,KAAK,CAAC81F,YAAY;MAE1DpF,SAAS,CAAC1kC,MAAM,CAAE8pC,YAAY,EAAEpqC,KAAK,EAAE33B,MAAO,CAAC;MAE/C,IAAKqxF,gBAAgB,KAAK,IAAI,EAAG19D,QAAQ,CAAC2lB,UAAU,CAAC,CAAC;;MAEtD;;MAEA,IAAK,IAAI,CAACvsE,IAAI,CAAC81E,SAAS,KAAK,IAAI,EAAG,IAAI,CAAC91E,IAAI,CAACe,KAAK,CAAC,CAAC;;MAGrD;;MAEA8oC,UAAU,CAACqhB,MAAM,CAAE03D,iBAAiB,EAAEh4D,KAAM,CAAC;;MAE7C;;MAEAi4D,kBAAkB,CAACztB,WAAW,CAAE+tB,KAAK,CAACtzB,gBAAiB,CAAC;MAExD,IAAK58D,MAAM,CAAC0gF,aAAa,EAAG;QAE3B,IAAMvpD,OAAO,GAAGn3B,MAAM,CAACm3B,OAAO;QAE9B,KAAM,IAAIhpD,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGk4C,OAAO,CAACjpD,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAElD,IAAMynH,OAAO,GAAGz+D,OAAO,CAAEhpD,CAAC,CAAE;UAE5B0nH,WAAW,CAAElG,iBAAiB,EAAEh4D,KAAK,EAAEi+D,OAAO,EAAEA,OAAO,CAACn+F,QAAS,CAAC;QAEnE;MAED,CAAC,MAAM;QAENo+F,WAAW,CAAElG,iBAAiB,EAAEh4D,KAAK,EAAE33B,MAAO,CAAC;MAEhD;;MAEA;;MAEA,IAAKswF,oBAAoB,KAAK,IAAI,EAAG;QAEpC;;QAEA17F,QAAQ,CAAC6mF,6BAA6B,CAAE6U,oBAAqB,CAAC;;QAE9D;;QAEA17F,QAAQ,CAAC4mF,wBAAwB,CAAE8U,oBAAqB,CAAC;MAE1D;;MAEA;;MAEA,IAAK34D,KAAK,CAAChhB,OAAO,KAAK,IAAI,EAAGghB,KAAK,CAACxkB,aAAa,CAAE+8E,KAAK,EAAEv4D,KAAK,EAAE33B,MAAO,CAAC;;MAEzE;;MAEAoyC,aAAa,CAAC6D,iBAAiB,CAAC,CAAC;MACjCs6C,kBAAkB,GAAG,CAAE,CAAC;MACxBC,cAAc,GAAG,IAAI;MAErBV,gBAAgB,CAACzgH,GAAG,CAAC,CAAC;MAEtB,IAAKygH,gBAAgB,CAAC5hH,MAAM,GAAG,CAAC,EAAG;QAElC0hH,kBAAkB,GAAGE,gBAAgB,CAAEA,gBAAgB,CAAC5hH,MAAM,GAAG,CAAC,CAAE;MAErE,CAAC,MAAM;QAEN0hH,kBAAkB,GAAG,IAAI;MAE1B;MAEAC,eAAe,CAACxgH,GAAG,CAAC,CAAC;MAErB,IAAKwgH,eAAe,CAAC3hH,MAAM,GAAG,CAAC,EAAG;QAEjCyhH,iBAAiB,GAAGE,eAAe,CAAEA,eAAe,CAAC3hH,MAAM,GAAG,CAAC,CAAE;MAElE,CAAC,MAAM;QAENyhH,iBAAiB,GAAG,IAAI;MAEzB;IAED,CAAC;IAED,SAASgG,aAAaA,CAAExmH,MAAM,EAAE6wB,MAAM,EAAEy9D,UAAU,EAAEuyB,WAAW,EAAG;MAEjE,IAAK7gH,MAAM,CAACyjC,OAAO,KAAK,KAAK,EAAG;MAEhC,IAAMA,OAAO,GAAGzjC,MAAM,CAAC0hC,MAAM,CAACtgB,IAAI,CAAEyP,MAAM,CAAC6Q,MAAO,CAAC;MAEnD,IAAK+B,OAAO,EAAG;QAEd,IAAKzjC,MAAM,CAAC4xG,OAAO,EAAG;UAErBtjB,UAAU,GAAGtuF,MAAM,CAAC6jC,WAAW;QAEhC,CAAC,MAAM,IAAK7jC,MAAM,CAAC2mH,KAAK,EAAG;UAE1B,IAAK3mH,MAAM,CAACo1F,UAAU,KAAK,IAAI,EAAGp1F,MAAM,CAAC0rB,MAAM,CAAEmF,MAAO,CAAC;QAE1D,CAAC,MAAM,IAAK7wB,MAAM,CAACklC,OAAO,EAAG;UAE5Bu7E,kBAAkB,CAAC5tB,SAAS,CAAE7yF,MAAO,CAAC;UAEtC,IAAKA,MAAM,CAAC0jC,UAAU,EAAG;YAExB+8E,kBAAkB,CAAC3tB,UAAU,CAAE9yF,MAAO,CAAC;UAExC;QAED,CAAC,MAAM,IAAKA,MAAM,CAACmmH,QAAQ,EAAG;UAE7B,IAAK,CAAEnmH,MAAM,CAAC4jC,aAAa,IAAIwwD,QAAQ,CAAC1nC,gBAAgB,CAAE1sD,MAAO,CAAC,EAAG;YAEpE,IAAK6gH,WAAW,EAAG;cAElByB,QAAQ,CAAC7vF,qBAAqB,CAAEzyB,MAAM,CAACkxB,WAAY,CAAC,CAClD5K,YAAY,CAAE+7F,iBAAkB,CAAC;YAEpC;YAEA,IAAMvtF,QAAQ,GAAGssC,OAAO,CAAC11C,MAAM,CAAE1rB,MAAO,CAAC;YACzC,IAAMqoC,QAAQ,GAAGroC,MAAM,CAACqoC,QAAQ;YAEhC,IAAKA,QAAQ,CAAC5E,OAAO,EAAG;cAEvB+8E,iBAAiB,CAAChiH,IAAI,CAAEwB,MAAM,EAAE80B,QAAQ,EAAEuT,QAAQ,EAAEimD,UAAU,EAAEg0B,QAAQ,CAACr8F,CAAC,EAAE,IAAK,CAAC;YAEnF;UAED;QAED,CAAC,MAAM,IAAKjmB,MAAM,CAAC4nC,MAAM,IAAI5nC,MAAM,CAAC6nC,MAAM,IAAI7nC,MAAM,CAAC8nC,QAAQ,EAAG;UAE/D,IAAK,CAAE9nC,MAAM,CAAC4jC,aAAa,IAAIwwD,QAAQ,CAAC3nC,gBAAgB,CAAEzsD,MAAO,CAAC,EAAG;YAEpE,IAAM80B,UAAQ,GAAGssC,OAAO,CAAC11C,MAAM,CAAE1rB,MAAO,CAAC;YACzC,IAAMqoC,SAAQ,GAAGroC,MAAM,CAACqoC,QAAQ;YAEhC,IAAKw4E,WAAW,EAAG;cAElB,IAAK7gH,MAAM,CAAC86C,cAAc,KAAKr9C,SAAS,EAAG;gBAE1C,IAAKuC,MAAM,CAAC86C,cAAc,KAAK,IAAI,EAAG96C,MAAM,CAAC47C,qBAAqB,CAAC,CAAC;gBACpE0mE,QAAQ,CAACnsG,IAAI,CAAEnW,MAAM,CAAC86C,cAAc,CAACthC,MAAO,CAAC;cAE9C,CAAC,MAAM;gBAEN,IAAKsb,UAAQ,CAACgmB,cAAc,KAAK,IAAI,EAAGhmB,UAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;gBACxE0mE,QAAQ,CAACnsG,IAAI,CAAE2e,UAAQ,CAACgmB,cAAc,CAACthC,MAAO,CAAC;cAEhD;cAEA8oG,QAAQ,CACNh8F,YAAY,CAAEtmB,MAAM,CAACkxB,WAAY,CAAC,CAClC5K,YAAY,CAAE+7F,iBAAkB,CAAC;YAEpC;YAEA,IAAKv/F,KAAK,CAACC,OAAO,CAAEslB,SAAS,CAAC,EAAG;cAEhC,IAAMwS,MAAM,GAAG/lB,UAAQ,CAAC+lB,MAAM;cAE9B,KAAM,IAAI77C,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG+qC,MAAM,CAAC97C,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;gBAEjD,IAAMo+C,KAAK,GAAGvC,MAAM,CAAE77C,CAAC,CAAE;gBACzB,IAAMgiD,aAAa,GAAG3Y,SAAQ,CAAE+U,KAAK,CAAC5B,aAAa,CAAE;gBAErD,IAAKwF,aAAa,IAAIA,aAAa,CAACvd,OAAO,EAAG;kBAE7C+8E,iBAAiB,CAAChiH,IAAI,CAAEwB,MAAM,EAAE80B,UAAQ,EAAEksB,aAAa,EAAEstC,UAAU,EAAEg0B,QAAQ,CAACr8F,CAAC,EAAEm3B,KAAM,CAAC;gBAEzF;cAED;YAED,CAAC,MAAM,IAAK/U,SAAQ,CAAC5E,OAAO,EAAG;cAE9B+8E,iBAAiB,CAAChiH,IAAI,CAAEwB,MAAM,EAAE80B,UAAQ,EAAEuT,SAAQ,EAAEimD,UAAU,EAAEg0B,QAAQ,CAACr8F,CAAC,EAAE,IAAK,CAAC;YAEnF;UAED;QAED;MAED;MAEA,IAAMgP,QAAQ,GAAGj1B,MAAM,CAACi1B,QAAQ;MAEhC,KAAM,IAAIj2B,IAAC,GAAG,CAAC,EAAE8Q,GAAC,GAAGmlB,QAAQ,CAACl2B,MAAM,EAAEC,IAAC,GAAG8Q,GAAC,EAAE9Q,IAAC,EAAG,EAAG;QAEnDwnH,aAAa,CAAEvxF,QAAQ,CAAEj2B,IAAC,CAAE,EAAE6xB,MAAM,EAAEy9D,UAAU,EAAEuyB,WAAY,CAAC;MAEhE;IAED;IAEA,SAAS6F,WAAWA,CAAElG,iBAAiB,EAAEh4D,KAAK,EAAE33B,MAAM,EAAEvI,QAAQ,EAAG;MAElE,IAAMs+F,aAAa,GAAGpG,iBAAiB,CAACx6B,MAAM;MAC9C,IAAM6gC,mBAAmB,GAAGrG,iBAAiB,CAAC7xB,YAAY;MAC1D,IAAMm4B,kBAAkB,GAAGtG,iBAAiB,CAACt0E,WAAW;MAExDu0E,kBAAkB,CAACxtB,eAAe,CAAEpiE,MAAO,CAAC;MAE5C,IAAKqxF,gBAAgB,KAAK,IAAI,EAAG19D,QAAQ,CAAC4lB,cAAc,CAAE22C,KAAK,CAAC1zE,cAAc,EAAExc,MAAO,CAAC;MAExF,IAAKg2F,mBAAmB,CAAC9nH,MAAM,GAAG,CAAC,EAAGgoH,sBAAsB,CAAEH,aAAa,EAAEC,mBAAmB,EAAEr+D,KAAK,EAAE33B,MAAO,CAAC;MAEjH,IAAKvI,QAAQ,EAAGxrB,KAAK,CAACwrB,QAAQ,CAAEg5F,gBAAgB,CAACnrG,IAAI,CAAEmS,QAAS,CAAE,CAAC;MAEnE,IAAKs+F,aAAa,CAAC7nH,MAAM,GAAG,CAAC,EAAGioH,aAAa,CAAEJ,aAAa,EAAEp+D,KAAK,EAAE33B,MAAO,CAAC;MAC7E,IAAKg2F,mBAAmB,CAAC9nH,MAAM,GAAG,CAAC,EAAGioH,aAAa,CAAEH,mBAAmB,EAAEr+D,KAAK,EAAE33B,MAAO,CAAC;MACzF,IAAKi2F,kBAAkB,CAAC/nH,MAAM,GAAG,CAAC,EAAGioH,aAAa,CAAEF,kBAAkB,EAAEt+D,KAAK,EAAE33B,MAAO,CAAC;;MAEvF;;MAEA/zB,KAAK,CAAC8wD,OAAO,CAACzlC,KAAK,CAACytE,OAAO,CAAE,IAAK,CAAC;MACnC94F,KAAK,CAAC8wD,OAAO,CAACzlC,KAAK,CAAC8vE,OAAO,CAAE,IAAK,CAAC;MACnCn7F,KAAK,CAAC8wD,OAAO,CAACluC,KAAK,CAACu4E,OAAO,CAAE,IAAK,CAAC;MAEnCn7F,KAAK,CAAC6iG,gBAAgB,CAAE,KAAM,CAAC;IAEhC;IAEA,SAASonB,sBAAsBA,CAAEH,aAAa,EAAEC,mBAAmB,EAAEr+D,KAAK,EAAE33B,MAAM,EAAG;MAEpF,IAAM88B,QAAQ,GAAGD,YAAY,CAACC,QAAQ;MAEtC,IAAKy0D,yBAAyB,KAAK,IAAI,EAAG;QAEzCA,yBAAyB,GAAG,IAAIt5F,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAE;UACxDlE,eAAe,EAAE,IAAI;UACrB3pB,IAAI,EAAEwpD,UAAU,CAAC+iB,GAAG,CAAE,6BAA8B,CAAC,GAAGt/D,aAAa,GAAGP,gBAAgB;UACxFoc,SAAS,EAAEtc,wBAAwB;UACnCkhB,OAAO,EAAIglC,QAAQ,GAAK,CAAC,GAAG;QAC7B,CAAE,CAAC;;QAEH;;QAEA;AACJ;AACA;AACA;AACA;AACA;MAGG;;MAEAozD,KAAK,CAACkD,oBAAoB,CAAEj6D,QAAS,CAAC;MAEtC,IAAK2D,QAAQ,EAAG;QAEfy0D,yBAAyB,CAACx5F,OAAO,CAAEohC,QAAQ,CAAC54C,CAAC,EAAE44C,QAAQ,CAACt4C,CAAE,CAAC;MAE5D,CAAC,MAAM;QAEN0wG,yBAAyB,CAACx5F,OAAO,CAAEnV,eAAe,CAAEu2C,QAAQ,CAAC54C,CAAE,CAAC,EAAEqC,eAAe,CAAEu2C,QAAQ,CAACt4C,CAAE,CAAE,CAAC;MAElG;;MAEA;;MAEA,IAAMg3C,mBAAmB,GAAGq4D,KAAK,CAACv9D,eAAe,CAAC,CAAC;MACnDu9D,KAAK,CAACl4D,eAAe,CAAEu5D,yBAA0B,CAAC;MAElDrB,KAAK,CAACv+C,aAAa,CAAEi/C,kBAAmB,CAAC;MACzCC,kBAAkB,GAAGX,KAAK,CAACr+C,aAAa,CAAC,CAAC;MAC1C,IAAKg/C,kBAAkB,GAAG,CAAC,EAAGX,KAAK,CAACt+C,aAAa,CAAE,QAAQ,EAAE,GAAI,CAAC;MAElEs+C,KAAK,CAACz7E,KAAK,CAAC,CAAC;;MAEb;MACA;MACA,IAAM2hF,kBAAkB,GAAGlG,KAAK,CAACz+C,WAAW;MAC5Cy+C,KAAK,CAACz+C,WAAW,GAAGp8D,aAAa;MAEjC8gH,aAAa,CAAEJ,aAAa,EAAEp+D,KAAK,EAAE33B,MAAO,CAAC;MAE7CpL,QAAQ,CAAC6mF,6BAA6B,CAAE8V,yBAA0B,CAAC;MACnE38F,QAAQ,CAAC4mF,wBAAwB,CAAE+V,yBAA0B,CAAC;MAE9D,IAAI8E,uBAAuB,GAAG,KAAK;MAEnC,KAAM,IAAIloH,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG+2G,mBAAmB,CAAC9nH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAE9D,IAAM6vF,UAAU,GAAGg4B,mBAAmB,CAAE7nH,CAAC,CAAE;QAE3C,IAAMgB,MAAM,GAAG6uF,UAAU,CAAC7uF,MAAM;QAChC,IAAM80B,QAAQ,GAAG+5D,UAAU,CAAC/5D,QAAQ;QACpC,IAAMuT,QAAQ,GAAGwmD,UAAU,CAACxmD,QAAQ;QACpC,IAAM+U,KAAK,GAAGyxC,UAAU,CAACzxC,KAAK;QAE9B,IAAK/U,QAAQ,CAAC0D,IAAI,KAAKhoC,UAAU,IAAI/D,MAAM,CAAC0hC,MAAM,CAACtgB,IAAI,CAAEyP,MAAM,CAAC6Q,MAAO,CAAC,EAAG;UAE1E,IAAMylF,WAAW,GAAG9+E,QAAQ,CAAC0D,IAAI;UAEjC1D,QAAQ,CAAC0D,IAAI,GAAGjoC,QAAQ;UACxBukC,QAAQ,CAAC7iB,WAAW,GAAG,IAAI;UAE3BgxE,YAAY,CAAEx2F,MAAM,EAAEwoD,KAAK,EAAE33B,MAAM,EAAEiE,QAAQ,EAAEuT,QAAQ,EAAE+U,KAAM,CAAC;UAEhE/U,QAAQ,CAAC0D,IAAI,GAAGo7E,WAAW;UAC3B9+E,QAAQ,CAAC7iB,WAAW,GAAG,IAAI;UAE3B0hG,uBAAuB,GAAG,IAAI;QAE/B;MAED;MAEA,IAAKA,uBAAuB,KAAK,IAAI,EAAG;QAEvCzhG,QAAQ,CAAC6mF,6BAA6B,CAAE8V,yBAA0B,CAAC;QACnE38F,QAAQ,CAAC4mF,wBAAwB,CAAE+V,yBAA0B,CAAC;MAE/D;MAEArB,KAAK,CAACl4D,eAAe,CAAEH,mBAAoB,CAAC;MAE5Cq4D,KAAK,CAACt+C,aAAa,CAAEg/C,kBAAkB,EAAEC,kBAAmB,CAAC;MAE7DX,KAAK,CAACz+C,WAAW,GAAG2kD,kBAAkB;IAEvC;IAEA,SAASD,aAAaA,CAAEplD,UAAU,EAAEpZ,KAAK,EAAE33B,MAAM,EAAG;MAEnD,IAAM2xF,gBAAgB,GAAGh6D,KAAK,CAAChhB,OAAO,KAAK,IAAI,GAAGghB,KAAK,CAACg6D,gBAAgB,GAAG,IAAI;MAE/E,KAAM,IAAIxjH,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG8xD,UAAU,CAAC7iE,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAErD,IAAM6vF,UAAU,GAAGjtB,UAAU,CAAE5iE,CAAC,CAAE;QAElC,IAAMgB,MAAM,GAAG6uF,UAAU,CAAC7uF,MAAM;QAChC,IAAM80B,QAAQ,GAAG+5D,UAAU,CAAC/5D,QAAQ;QACpC,IAAMuT,QAAQ,GAAGm6E,gBAAgB,KAAK,IAAI,GAAG3zB,UAAU,CAACxmD,QAAQ,GAAGm6E,gBAAgB;QACnF,IAAMplE,KAAK,GAAGyxC,UAAU,CAACzxC,KAAK;QAE9B,IAAKp9C,MAAM,CAAC0hC,MAAM,CAACtgB,IAAI,CAAEyP,MAAM,CAAC6Q,MAAO,CAAC,EAAG;UAE1C80D,YAAY,CAAEx2F,MAAM,EAAEwoD,KAAK,EAAE33B,MAAM,EAAEiE,QAAQ,EAAEuT,QAAQ,EAAE+U,KAAM,CAAC;QAEjE;MAED;IAED;IAEA,SAASo5C,YAAYA,CAAEx2F,MAAM,EAAEwoD,KAAK,EAAE33B,MAAM,EAAEiE,QAAQ,EAAEuT,QAAQ,EAAE+U,KAAK,EAAG;MAEzEp9C,MAAM,CAAC+jC,cAAc,CAAEg9E,KAAK,EAAEv4D,KAAK,EAAE33B,MAAM,EAAEiE,QAAQ,EAAEuT,QAAQ,EAAE+U,KAAM,CAAC;MAExEp9C,MAAM,CAACmjC,eAAe,CAACpoB,gBAAgB,CAAE8V,MAAM,CAACC,kBAAkB,EAAE9wB,MAAM,CAACkxB,WAAY,CAAC;MACxFlxB,MAAM,CAACojC,YAAY,CAAClmB,eAAe,CAAEld,MAAM,CAACmjC,eAAgB,CAAC;MAE7DkF,QAAQ,CAACtE,cAAc,CAAEg9E,KAAK,EAAEv4D,KAAK,EAAE33B,MAAM,EAAEiE,QAAQ,EAAE90B,MAAM,EAAEo9C,KAAM,CAAC;MAExE,IAAK/U,QAAQ,CAAC6D,WAAW,KAAK,IAAI,IAAI7D,QAAQ,CAAC0D,IAAI,KAAKhoC,UAAU,IAAIskC,QAAQ,CAAC4F,eAAe,KAAK,KAAK,EAAG;QAE1G5F,QAAQ,CAAC0D,IAAI,GAAGjoC,QAAQ;QACxBukC,QAAQ,CAAC7iB,WAAW,GAAG,IAAI;QAC3Bu7F,KAAK,CAAClqB,kBAAkB,CAAEhmE,MAAM,EAAE23B,KAAK,EAAE1zB,QAAQ,EAAEuT,QAAQ,EAAEroC,MAAM,EAAEo9C,KAAM,CAAC;QAE5E/U,QAAQ,CAAC0D,IAAI,GAAGloC,SAAS;QACzBwkC,QAAQ,CAAC7iB,WAAW,GAAG,IAAI;QAC3Bu7F,KAAK,CAAClqB,kBAAkB,CAAEhmE,MAAM,EAAE23B,KAAK,EAAE1zB,QAAQ,EAAEuT,QAAQ,EAAEroC,MAAM,EAAEo9C,KAAM,CAAC;QAE5E/U,QAAQ,CAAC0D,IAAI,GAAGhoC,UAAU;MAE3B,CAAC,MAAM;QAENg9G,KAAK,CAAClqB,kBAAkB,CAAEhmE,MAAM,EAAE23B,KAAK,EAAE1zB,QAAQ,EAAEuT,QAAQ,EAAEroC,MAAM,EAAEo9C,KAAM,CAAC;MAE7E;MAEAp9C,MAAM,CAACgkC,aAAa,CAAE+8E,KAAK,EAAEv4D,KAAK,EAAE33B,MAAM,EAAEiE,QAAQ,EAAEuT,QAAQ,EAAE+U,KAAM,CAAC;IAExE;IAEA,SAASkpE,UAAUA,CAAEj+E,QAAQ,EAAEmgB,KAAK,EAAExoD,MAAM,EAAG;MAE9C,IAAKwoD,KAAK,CAAChhB,OAAO,KAAK,IAAI,EAAGghB,KAAK,GAAG+5D,WAAW,CAAC,CAAC;;MAEnD,IAAMh4C,kBAAkB,GAAG7N,UAAU,CAAC/mD,GAAG,CAAE0yB,QAAS,CAAC;MAErD,IAAMkc,MAAM,GAAGk8D,kBAAkB,CAAC3jH,KAAK,CAACynD,MAAM;MAC9C,IAAMquC,YAAY,GAAG6tB,kBAAkB,CAAC3jH,KAAK,CAAC81F,YAAY;MAE1D,IAAMw0B,kBAAkB,GAAG7iE,MAAM,CAACznD,KAAK,CAACylB,OAAO;MAE/C,IAAMwlB,UAAU,GAAGo7E,YAAY,CAAC74B,aAAa,CAAEjiD,QAAQ,EAAEkc,MAAM,CAACznD,KAAK,EAAE81F,YAAY,EAAEpqC,KAAK,EAAExoD,MAAO,CAAC;MACpG,IAAMqnH,eAAe,GAAGlE,YAAY,CAACx1B,kBAAkB,CAAE5lD,UAAW,CAAC;MAErE,IAAI0rC,QAAQ,GAAGlJ,kBAAkB,CAACkJ,QAAQ;;MAE1C;;MAEAlJ,kBAAkB,CAAC5iC,WAAW,GAAGU,QAAQ,CAACmiD,sBAAsB,GAAGhiC,KAAK,CAAC7gB,WAAW,GAAG,IAAI;MAC3F4iC,kBAAkB,CAACx3B,GAAG,GAAGyV,KAAK,CAACzV,GAAG;MAClCw3B,kBAAkB,CAAC94B,MAAM,GAAG,CAAEpJ,QAAQ,CAACmiD,sBAAsB,GAAGrpB,UAAU,GAAGD,QAAQ,EAAGvrD,GAAG,CAAE0yB,QAAQ,CAACoJ,MAAM,IAAI84B,kBAAkB,CAAC5iC,WAAY,CAAC;MAEhJ,IAAK8rC,QAAQ,KAAKh2E,SAAS,EAAG;QAE7B;;QAEA4qC,QAAQ,CAACp5B,gBAAgB,CAAE,SAAS,EAAEw2G,iBAAkB,CAAC;QAEzDhyC,QAAQ,GAAG,IAAI0N,GAAG,CAAC,CAAC;QACpB5W,kBAAkB,CAACkJ,QAAQ,GAAGA,QAAQ;MAEvC;MAEA,IAAIlQ,OAAO,GAAGkQ,QAAQ,CAAC99D,GAAG,CAAE0xG,eAAgB,CAAC;MAE7C,IAAK9jD,OAAO,KAAK9lE,SAAS,EAAG;QAE5B;;QAEA,IAAK8sE,kBAAkB,CAACowB,cAAc,KAAKp3B,OAAO,IAAIgH,kBAAkB,CAAC68C,kBAAkB,KAAKA,kBAAkB,EAAG;UAEpHE,8BAA8B,CAAEj/E,QAAQ,EAAEN,UAAW,CAAC;UAEtD,OAAOw7B,OAAO;QAEf;MAED,CAAC,MAAM;QAENx7B,UAAU,CAACob,QAAQ,GAAGggE,YAAY,CAACjuC,WAAW,CAAE7sC,QAAS,CAAC;QAE1DA,QAAQ,CAAC+F,OAAO,CAAEpuC,MAAM,EAAE+nC,UAAU,EAAEg5E,KAAM,CAAC;QAE7C14E,QAAQ,CAACgG,eAAe,CAAEtG,UAAU,EAAEg5E,KAAM,CAAC;QAE7Cx9C,OAAO,GAAG4/C,YAAY,CAACp1B,cAAc,CAAEhmD,UAAU,EAAEs/E,eAAgB,CAAC;QACpE5zC,QAAQ,CAAC/+D,GAAG,CAAE2yG,eAAe,EAAE9jD,OAAQ,CAAC;QAExCgH,kBAAkB,CAACpnB,QAAQ,GAAGpb,UAAU,CAACob,QAAQ;MAElD;MAEA,IAAMA,QAAQ,GAAGonB,kBAAkB,CAACpnB,QAAQ;MAE5C,IAAO,CAAE9a,QAAQ,CAAC6b,gBAAgB,IAAI,CAAE7b,QAAQ,CAAC+6C,mBAAmB,IAAM/6C,QAAQ,CAACmc,QAAQ,KAAK,IAAI,EAAG;QAEtGrB,QAAQ,CAAC9V,cAAc,GAAGmX,QAAQ,CAACU,OAAO;MAE3C;MAEAoiE,8BAA8B,CAAEj/E,QAAQ,EAAEN,UAAW,CAAC;;MAEtD;;MAEAwiC,kBAAkB,CAACg9C,WAAW,GAAGC,mBAAmB,CAAEn/E,QAAS,CAAC;MAChEkiC,kBAAkB,CAAC68C,kBAAkB,GAAGA,kBAAkB;MAE1D,IAAK78C,kBAAkB,CAACg9C,WAAW,EAAG;QAErC;;QAEApkE,QAAQ,CAACoZ,iBAAiB,CAACnjE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAAC4zF,OAAO;QACvDvtC,QAAQ,CAACqZ,UAAU,CAACpjE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAAC6zF,KAAK;QAC9CxtC,QAAQ,CAACsZ,iBAAiB,CAACrjE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACswF,WAAW;QAC3DjqC,QAAQ,CAACwZ,uBAAuB,CAACvjE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAAC8zF,iBAAiB;QACvEztC,QAAQ,CAAC+Z,UAAU,CAAC9jE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACuwF,IAAI;QAC7ClqC,QAAQ,CAACma,gBAAgB,CAAClkE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAAC+zF,UAAU;QACzD1tC,QAAQ,CAACgb,cAAc,CAAC/kE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACwwF,QAAQ;QACrDnqC,QAAQ,CAACib,KAAK,CAAChlE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACg0F,YAAY;QAChD3tC,QAAQ,CAACkb,KAAK,CAACjlE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACi0F,YAAY;QAChD5tC,QAAQ,CAACua,WAAW,CAACtkE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACu3B,KAAK;QAC/C8uB,QAAQ,CAACwa,iBAAiB,CAACvkE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACk0F,WAAW;QAC3D7tC,QAAQ,CAAC6a,gBAAgB,CAAC5kE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACywF,IAAI;QAEnDpqC,QAAQ,CAAC6Z,oBAAoB,CAAC5jE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACkgE,oBAAoB;QACvE7Z,QAAQ,CAAC8Z,uBAAuB,CAAC7jE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACmgE,uBAAuB;QAC7E9Z,QAAQ,CAACqa,aAAa,CAACpkE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAAC0gE,aAAa;QACzDra,QAAQ,CAACsa,eAAe,CAACrkE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAAC2gE,eAAe;QAC7Dta,QAAQ,CAACoa,YAAY,CAACnkE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACygE,YAAY;QACvDpa,QAAQ,CAAC2a,cAAc,CAAC1kE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACghE,cAAc;QAC3D3a,QAAQ,CAAC4a,iBAAiB,CAAC3kE,KAAK,GAAGmrD,MAAM,CAACznD,KAAK,CAACihE,iBAAiB;QACjE;MAED;;MAEA,IAAM0pD,YAAY,GAAGlkD,OAAO,CAAC2R,WAAW,CAAC,CAAC;MAC1C,IAAMwyC,YAAY,GAAGnrC,aAAa,CAACO,YAAY,CAAE2qC,YAAY,CAAC/rC,GAAG,EAAEv4B,QAAS,CAAC;MAE7EonB,kBAAkB,CAACowB,cAAc,GAAGp3B,OAAO;MAC3CgH,kBAAkB,CAACm9C,YAAY,GAAGA,YAAY;MAE9C,OAAOnkD,OAAO;IAEf;IAEA,SAAS+jD,8BAA8BA,CAAEj/E,QAAQ,EAAEN,UAAU,EAAG;MAE/D,IAAMwiC,kBAAkB,GAAG7N,UAAU,CAAC/mD,GAAG,CAAE0yB,QAAS,CAAC;MAErDkiC,kBAAkB,CAAC9mB,gBAAgB,GAAG1b,UAAU,CAAC0b,gBAAgB;MACjE8mB,kBAAkB,CAACgZ,UAAU,GAAGx7C,UAAU,CAACw7C,UAAU;MACrDhZ,kBAAkB,CAACiZ,eAAe,GAAGz7C,UAAU,CAACy7C,eAAe;MAC/DjZ,kBAAkB,CAACkb,QAAQ,GAAG19C,UAAU,CAAC09C,QAAQ;MACjDlb,kBAAkB,CAACgK,YAAY,GAAGxsC,UAAU,CAACwsC,YAAY;MACzDhK,kBAAkB,CAACiK,YAAY,GAAGzsC,UAAU,CAACysC,YAAY;MACzDjK,kBAAkB,CAACkK,WAAW,GAAG1sC,UAAU,CAAC0sC,WAAW;MACvDlK,kBAAkB,CAAC4J,iBAAiB,GAAGpsC,UAAU,CAACosC,iBAAiB;MACnE5J,kBAAkB,CAACsW,iBAAiB,GAAG94C,UAAU,CAAC84C,iBAAiB;MACnEtW,kBAAkB,CAACT,eAAe,GAAG/hC,UAAU,CAAC+4C,mBAAmB;MACnEvW,kBAAkB,CAAC6a,YAAY,GAAGr9C,UAAU,CAACq9C,YAAY;MACzD7a,kBAAkB,CAAC4a,cAAc,GAAGp9C,UAAU,CAACo9C,cAAc;MAC7D5a,kBAAkB,CAACjI,WAAW,GAAGv6B,UAAU,CAACu6B,WAAW;IAExD;IAEA,SAASsjD,UAAUA,CAAE/0F,MAAM,EAAE23B,KAAK,EAAE1zB,QAAQ,EAAEuT,QAAQ,EAAEroC,MAAM,EAAG;MAEhE,IAAKwoD,KAAK,CAAChhB,OAAO,KAAK,IAAI,EAAGghB,KAAK,GAAG+5D,WAAW,CAAC,CAAC;;MAEnD98F,QAAQ,CAACmhF,iBAAiB,CAAC,CAAC;MAE5B,IAAM7zD,GAAG,GAAGyV,KAAK,CAACzV,GAAG;MACrB,IAAMpL,WAAW,GAAGU,QAAQ,CAACmiD,sBAAsB,GAAGhiC,KAAK,CAAC7gB,WAAW,GAAG,IAAI;MAC9E,IAAMpnB,UAAU,GAAK4gG,oBAAoB,KAAK,IAAI,GAAKJ,KAAK,CAACt9D,gBAAgB,GAAK09D,oBAAoB,CAACl0B,gBAAgB,KAAK,IAAI,GAAGk0B,oBAAoB,CAAC54F,OAAO,CAAChI,UAAU,GAAGhU,oBAAsB;MACnM,IAAMklC,MAAM,GAAG,CAAEpJ,QAAQ,CAACmiD,sBAAsB,GAAGrpB,UAAU,GAAGD,QAAQ,EAAGvrD,GAAG,CAAE0yB,QAAQ,CAACoJ,MAAM,IAAI9J,WAAY,CAAC;MAChH,IAAMy9C,YAAY,GAAG/8C,QAAQ,CAAC2D,YAAY,KAAK,IAAI,IAAI,CAAC,CAAElX,QAAQ,CAACC,UAAU,CAACrV,KAAK,IAAIoV,QAAQ,CAACC,UAAU,CAACrV,KAAK,CAACo3B,QAAQ,KAAK,CAAC;MAC/H,IAAMquC,cAAc,GAAG,CAAC,CAAErwD,QAAQ,CAACC,UAAU,CAAC4mB,OAAO,KAAM,CAAC,CAAEtT,QAAQ,CAACwI,SAAS,IAAIxI,QAAQ,CAACpkB,UAAU,GAAG,CAAC,CAAE;MAC7G,IAAMswD,YAAY,GAAG,CAAC,CAAEz/C,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ;MACzD,IAAMw/C,YAAY,GAAG,CAAC,CAAE1/C,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM;MACvD,IAAMyiD,WAAW,GAAG,CAAC,CAAE3/C,QAAQ,CAAC6lB,eAAe,CAACj7B,KAAK;MAErD,IAAI4iD,WAAW,GAAGp8D,aAAa;MAE/B,IAAKmiC,QAAQ,CAAC6F,UAAU,EAAG;QAE1B,IAAKizE,oBAAoB,KAAK,IAAI,IAAIA,oBAAoB,CAACl0B,gBAAgB,KAAK,IAAI,EAAG;UAEtF3qB,WAAW,GAAGy+C,KAAK,CAACz+C,WAAW;QAEhC;MAED;MAEA,IAAMvmB,cAAc,GAAGjnB,QAAQ,CAAC6lB,eAAe,CAAC3lB,QAAQ,IAAIF,QAAQ,CAAC6lB,eAAe,CAAC3oB,MAAM,IAAI8C,QAAQ,CAAC6lB,eAAe,CAACj7B,KAAK;MAC7H,IAAMy0D,iBAAiB,GAAKp4B,cAAc,KAAKt+C,SAAS,GAAKs+C,cAAc,CAACh9C,MAAM,GAAG,CAAC;MAEtF,IAAMwrE,kBAAkB,GAAG7N,UAAU,CAAC/mD,GAAG,CAAE0yB,QAAS,CAAC;MACrD,IAAMkc,MAAM,GAAGk8D,kBAAkB,CAAC3jH,KAAK,CAACynD,MAAM;MAE9C,IAAK29D,gBAAgB,KAAK,IAAI,EAAG;QAEhC,IAAKC,qBAAqB,KAAK,IAAI,IAAItxF,MAAM,KAAKwwF,cAAc,EAAG;UAElE,IAAM/2C,QAAQ,GACbz5C,MAAM,KAAKwwF,cAAc,IACzBh5E,QAAQ,CAAC1C,EAAE,KAAKy7E,kBAAkB;;UAEnC;UACA;UACA;UACA58D,QAAQ,CAAC6lB,QAAQ,CAAEhiC,QAAQ,EAAExX,MAAM,EAAEy5C,QAAS,CAAC;QAEhD;MAED;;MAEA;;MAEA,IAAIq9C,kBAAkB,GAAG,KAAK;MAE9B,IAAKt/E,QAAQ,CAAC9lB,OAAO,KAAKgoD,kBAAkB,CAAC08B,SAAS,EAAG;QAExD,IAAK18B,kBAAkB,CAACg9C,WAAW,IAAMh9C,kBAAkB,CAAC68C,kBAAkB,KAAK7iE,MAAM,CAACznD,KAAK,CAACylB,OAAS,EAAG;UAE3GolG,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAAC9mB,gBAAgB,KAAKljC,UAAU,EAAG;UAEhEonG,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK3nH,MAAM,CAACknC,eAAe,IAAIqjC,kBAAkB,CAACgZ,UAAU,KAAK,KAAK,EAAG;UAE/EokC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK,CAAE3nH,MAAM,CAACknC,eAAe,IAAIqjC,kBAAkB,CAACgZ,UAAU,KAAK,IAAI,EAAG;UAEhFokC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK3nH,MAAM,CAACioC,aAAa,IAAIsiC,kBAAkB,CAACkb,QAAQ,KAAK,KAAK,EAAG;UAE3EkiC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK,CAAE3nH,MAAM,CAACioC,aAAa,IAAIsiC,kBAAkB,CAACkb,QAAQ,KAAK,IAAI,EAAG;UAE5EkiC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK3nH,MAAM,CAACknC,eAAe,IAAIqjC,kBAAkB,CAACiZ,eAAe,KAAK,IAAI,IAAIxjF,MAAM,CAAConC,aAAa,KAAK,IAAI,EAAG;UAEpHugF,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAK3nH,MAAM,CAACknC,eAAe,IAAIqjC,kBAAkB,CAACiZ,eAAe,KAAK,KAAK,IAAIxjF,MAAM,CAAConC,aAAa,KAAK,IAAI,EAAG;UAErHugF,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAAC94B,MAAM,KAAKA,MAAM,EAAG;UAElDk2E,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKt/E,QAAQ,CAAC0K,GAAG,KAAK,IAAI,IAAIw3B,kBAAkB,CAACx3B,GAAG,KAAKA,GAAG,EAAG;UAErE40E,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAACsW,iBAAiB,KAAKpjF,SAAS,KAC3D8sE,kBAAkB,CAACsW,iBAAiB,KAAKr8B,QAAQ,CAACqlB,SAAS,IAC7DU,kBAAkB,CAACT,eAAe,KAAKtlB,QAAQ,CAACslB,eAAe,CAAE,EAAG;UAEpE69C,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAAC6a,YAAY,KAAKA,YAAY,EAAG;UAE9DuiC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAAC4a,cAAc,KAAKA,cAAc,EAAG;UAElEwiC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAACgK,YAAY,KAAKA,YAAY,EAAG;UAE9DozC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAACiK,YAAY,KAAKA,YAAY,EAAG;UAE9DmzC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAACkK,WAAW,KAAKA,WAAW,EAAG;UAE5DkzC,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKp9C,kBAAkB,CAACjI,WAAW,KAAKA,WAAW,EAAG;UAE5DqlD,kBAAkB,GAAG,IAAI;QAE1B,CAAC,MAAM,IAAKj6D,YAAY,CAACC,QAAQ,KAAK,IAAI,IAAI4c,kBAAkB,CAAC4J,iBAAiB,KAAKA,iBAAiB,EAAG;UAE1GwzC,kBAAkB,GAAG,IAAI;QAE1B;MAED,CAAC,MAAM;QAENA,kBAAkB,GAAG,IAAI;QACzBp9C,kBAAkB,CAAC08B,SAAS,GAAG5+D,QAAQ,CAAC9lB,OAAO;MAEhD;;MAEA;;MAEA,IAAIghD,OAAO,GAAGgH,kBAAkB,CAACowB,cAAc;MAE/C,IAAKgtB,kBAAkB,KAAK,IAAI,EAAG;QAElCpkD,OAAO,GAAG+iD,UAAU,CAAEj+E,QAAQ,EAAEmgB,KAAK,EAAExoD,MAAO,CAAC;MAEhD;MAEA,IAAI4nH,cAAc,GAAG,KAAK;MAC1B,IAAIC,eAAe,GAAG,KAAK;MAC3B,IAAIC,aAAa,GAAG,KAAK;MAEzB,IAAMC,UAAU,GAAGxkD,OAAO,CAAC2R,WAAW,CAAC,CAAC;QACvC8yC,UAAU,GAAGz9C,kBAAkB,CAACpnB,QAAQ;MAEzC,IAAKrmD,KAAK,CAACkhG,UAAU,CAAEz6B,OAAO,CAACA,OAAQ,CAAC,EAAG;QAE1CqkD,cAAc,GAAG,IAAI;QACrBC,eAAe,GAAG,IAAI;QACtBC,aAAa,GAAG,IAAI;MAErB;MAEA,IAAKz/E,QAAQ,CAAC1C,EAAE,KAAKy7E,kBAAkB,EAAG;QAEzCA,kBAAkB,GAAG/4E,QAAQ,CAAC1C,EAAE;QAEhCkiF,eAAe,GAAG,IAAI;MAEvB;MAEA,IAAKD,cAAc,IAAIvG,cAAc,KAAKxwF,MAAM,EAAG;QAElD;;QAEAk3F,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,kBAAkB,EAAEnxE,MAAM,CAACE,gBAAiB,CAAC;QACvEg3F,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,YAAY,EAAEnxE,MAAM,CAACC,kBAAmB,CAAC;QAEnE,IAAMm3F,OAAO,GAAGF,UAAU,CAAC33E,GAAG,CAAC83E,cAAc;QAE7C,IAAKD,OAAO,KAAKxqH,SAAS,EAAG;UAE5BwqH,OAAO,CAAC9yC,QAAQ,CAAE6sB,GAAG,EAAEsgB,QAAQ,CAAC7vF,qBAAqB,CAAE5B,MAAM,CAACK,WAAY,CAAE,CAAC;QAE9E;QAEA,IAAKw8B,YAAY,CAACwa,sBAAsB,EAAG;UAE1C6/C,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,eAAe,EACxC,GAAG,IAAK9xF,IAAI,CAACqD,GAAG,CAAEsd,MAAM,CAACqP,GAAG,GAAG,GAAI,CAAC,GAAGhwB,IAAI,CAACsD,GAAG,CAAG,CAAC;QAErD;;QAEA;;QAEA,IAAK60B,QAAQ,CAACi0E,mBAAmB,IAChCj0E,QAAQ,CAAC+zE,kBAAkB,IAC3B/zE,QAAQ,CAAC8zE,qBAAqB,IAC9B9zE,QAAQ,CAACsN,mBAAmB,IAC5BtN,QAAQ,CAACmiD,sBAAsB,IAC/BniD,QAAQ,CAAC6b,gBAAgB,EAAG;UAE5B6jE,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,gBAAgB,EAAEnxE,MAAM,CAAC66C,oBAAoB,KAAK,IAAK,CAAC;QAEnF;QAEA,IAAK21C,cAAc,KAAKxwF,MAAM,EAAG;UAEhCwwF,cAAc,GAAGxwF,MAAM;;UAEvB;UACA;UACA;;UAEAg3F,eAAe,GAAG,IAAI,CAAC,CAAE;UACzBC,aAAa,GAAG,IAAI,CAAC,CAAE;QAExB;MAED;;MAEA;MACA;MACA;;MAEA,IAAK9nH,MAAM,CAACioC,aAAa,EAAG;QAE3B8/E,UAAU,CAACnrC,WAAW,CAAEolB,GAAG,EAAEhiG,MAAM,EAAE,YAAa,CAAC;QACnD+nH,UAAU,CAACnrC,WAAW,CAAEolB,GAAG,EAAEhiG,MAAM,EAAE,mBAAoB,CAAC;QAE1D,IAAMooC,QAAQ,GAAGpoC,MAAM,CAACooC,QAAQ;QAEhC,IAAKA,QAAQ,EAAG;UAEf,IAAKslB,YAAY,CAAC0b,mBAAmB,EAAG;YAEvC,IAAKhhC,QAAQ,CAAC+/E,WAAW,KAAK,IAAI,EAAG//E,QAAQ,CAACggF,kBAAkB,CAAC,CAAC;YAElEL,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,aAAa,EAAE55D,QAAQ,CAAC+/E,WAAW,EAAE1iG,QAAS,CAAC;YACzEsiG,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,iBAAiB,EAAE55D,QAAQ,CAACigF,eAAgB,CAAC;UAExE,CAAC,MAAM;YAEN1zG,OAAO,CAACC,IAAI,CAAE,yIAA0I,CAAC;UAE1J;QAED;MAED;MAEA,IAAM+lC,eAAe,GAAG7lB,QAAQ,CAAC6lB,eAAe;MAEhD,IAAKA,eAAe,CAAC3lB,QAAQ,KAAKv3B,SAAS,IAAIk9C,eAAe,CAAC3oB,MAAM,KAAKv0B,SAAS,IAAMk9C,eAAe,CAACj7B,KAAK,KAAKjiB,SAAS,IAAIiwD,YAAY,CAACC,QAAQ,KAAK,IAAM,EAAG;QAElK01D,YAAY,CAAC33F,MAAM,CAAE1rB,MAAM,EAAE80B,QAAQ,EAAEyuC,OAAQ,CAAC;MAEjD;MAEA,IAAKskD,eAAe,IAAIt9C,kBAAkB,CAAC5mC,aAAa,KAAK3jC,MAAM,CAAC2jC,aAAa,EAAG;QAEnF4mC,kBAAkB,CAAC5mC,aAAa,GAAG3jC,MAAM,CAAC2jC,aAAa;QACvDokF,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,eAAe,EAAEhiG,MAAM,CAAC2jC,aAAc,CAAC;MAElE;;MAEA;;MAEA,IAAK0E,QAAQ,CAACigF,qBAAqB,IAAIjgF,QAAQ,CAACoJ,MAAM,KAAK,IAAI,EAAG;QAEjEu2E,UAAU,CAACv2E,MAAM,CAACr4C,KAAK,GAAGq4C,MAAM;QAEhCu2E,UAAU,CAAChtD,UAAU,CAAC5hE,KAAK,GAAKq4C,MAAM,CAAC0X,aAAa,IAAI1X,MAAM,CAACvsB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAE3G;MAEA,IAAK2iG,eAAe,EAAG;QAEtBE,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,qBAAqB,EAAE+e,KAAK,CAACD,mBAAoB,CAAC;QAE5E,IAAKv2C,kBAAkB,CAACg9C,WAAW,EAAG;UAErC;;UAEA;UACA;UACA;UACA;UACA;UACA;;UAEAgB,6BAA6B,CAAEP,UAAU,EAAEF,aAAc,CAAC;QAE3D;;QAEA;;QAEA,IAAK/0E,GAAG,IAAI1K,QAAQ,CAAC0K,GAAG,KAAK,IAAI,EAAG;UAEnCjM,SAAS,CAAC80E,kBAAkB,CAAEoM,UAAU,EAAEj1E,GAAI,CAAC;QAEhD;QAEAjM,SAAS,CAACi1E,uBAAuB,CAAEiM,UAAU,EAAE3/E,QAAQ,EAAEw5E,WAAW,EAAED,OAAO,EAAEQ,yBAA0B,CAAC;QAE1G7lC,aAAa,CAACM,MAAM,CAAEmlB,GAAG,EAAEz3B,kBAAkB,CAACm9C,YAAY,EAAEM,UAAU,EAAEviG,QAAS,CAAC;MAEnF;MAEA,IAAK4iB,QAAQ,CAAC6b,gBAAgB,IAAI7b,QAAQ,CAAC2c,kBAAkB,KAAK,IAAI,EAAG;QAExEu3B,aAAa,CAACM,MAAM,CAAEmlB,GAAG,EAAEz3B,kBAAkB,CAACm9C,YAAY,EAAEM,UAAU,EAAEviG,QAAS,CAAC;QAClF4iB,QAAQ,CAAC2c,kBAAkB,GAAG,KAAK;MAEpC;MAEA,IAAK3c,QAAQ,CAACg1E,gBAAgB,EAAG;QAEhC0K,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,QAAQ,EAAEhiG,MAAM,CAACwZ,MAAO,CAAC;MAEpD;;MAEA;;MAEAuuG,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,iBAAiB,EAAEhiG,MAAM,CAACmjC,eAAgB,CAAC;MACrE4kF,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,cAAc,EAAEhiG,MAAM,CAACojC,YAAa,CAAC;MAC/D2kF,UAAU,CAAC5yC,QAAQ,CAAE6sB,GAAG,EAAE,aAAa,EAAEhiG,MAAM,CAACkxB,WAAY,CAAC;;MAE7D;;MAEA,IAAKmX,QAAQ,CAAC6b,gBAAgB,IAAI7b,QAAQ,CAAC+6C,mBAAmB,EAAG;QAEhE,IAAMvoC,MAAM,GAAGxS,QAAQ,CAAC+b,cAAc;QAEtC,KAAM,IAAIplD,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG+qC,MAAM,CAAC97C,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAEjD,IAAK0uD,YAAY,CAACC,QAAQ,EAAG;YAE5B,IAAMvQ,KAAK,GAAGvC,MAAM,CAAE77C,CAAC,CAAE;YAEzBolD,cAAc,CAAC14B,MAAM,CAAE0xB,KAAK,EAAEmmB,OAAQ,CAAC;YACvCnf,cAAc,CAACy5D,IAAI,CAAEzgE,KAAK,EAAEmmB,OAAQ,CAAC;UAEtC,CAAC,MAAM;YAEN5uD,OAAO,CAACC,IAAI,CAAE,4EAA6E,CAAC;UAE7F;QAED;MAED;MAEA,OAAO2uD,OAAO;IAEf;;IAEA;;IAEA,SAASglD,6BAA6BA,CAAEplE,QAAQ,EAAE/pD,KAAK,EAAG;MAEzD+pD,QAAQ,CAACoZ,iBAAiB,CAAC/2C,WAAW,GAAGpsB,KAAK;MAC9C+pD,QAAQ,CAACqZ,UAAU,CAACh3C,WAAW,GAAGpsB,KAAK;MAEvC+pD,QAAQ,CAACsZ,iBAAiB,CAACj3C,WAAW,GAAGpsB,KAAK;MAC9C+pD,QAAQ,CAACwZ,uBAAuB,CAACn3C,WAAW,GAAGpsB,KAAK;MACpD+pD,QAAQ,CAACua,WAAW,CAACl4C,WAAW,GAAGpsB,KAAK;MACxC+pD,QAAQ,CAACwa,iBAAiB,CAACn4C,WAAW,GAAGpsB,KAAK;MAC9C+pD,QAAQ,CAAC+Z,UAAU,CAAC13C,WAAW,GAAGpsB,KAAK;MACvC+pD,QAAQ,CAACma,gBAAgB,CAAC93C,WAAW,GAAGpsB,KAAK;MAC7C+pD,QAAQ,CAACgb,cAAc,CAAC34C,WAAW,GAAGpsB,KAAK;MAC3C+pD,QAAQ,CAAC6a,gBAAgB,CAACx4C,WAAW,GAAGpsB,KAAK;IAE9C;IAEA,SAASouH,mBAAmBA,CAAEn/E,QAAQ,EAAG;MAExC,OAAOA,QAAQ,CAAC8zE,qBAAqB,IAAI9zE,QAAQ,CAAC+zE,kBAAkB,IAAI/zE,QAAQ,CAACi0E,mBAAmB,IACnGj0E,QAAQ,CAACmiD,sBAAsB,IAAIniD,QAAQ,CAACk1E,gBAAgB,IAC1Dl1E,QAAQ,CAAC6b,gBAAgB,IAAI7b,QAAQ,CAACkc,MAAM,KAAK,IAAM;IAE3D;IAEA,IAAI,CAACgxC,iBAAiB,GAAG,YAAY;MAEpC,OAAO0rB,sBAAsB;IAE9B,CAAC;IAED,IAAI,CAACxrB,oBAAoB,GAAG,YAAY;MAEvC,OAAOyrB,yBAAyB;IAEjC,CAAC;IAED,IAAI,CAAC19D,eAAe,GAAG,YAAY;MAElC,OAAO29D,oBAAoB;IAE5B,CAAC;IAED,IAAI,CAAC5F,uBAAuB,GAAG,UAAWh0D,YAAY,EAAEykD,YAAY,EAAEtjF,YAAY,EAAG;MAEpFg0C,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAY,CAACh/B,OAAQ,CAAC,CAACy9E,cAAc,GAAGgG,YAAY;MACpEtvC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAY,CAAC7+B,YAAa,CAAC,CAACs9E,cAAc,GAAGt9E,YAAY;MAEzE,IAAMu9E,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;MAC7D0+C,sBAAsB,CAACuE,qBAAqB,GAAG,IAAI;MAEnD,IAAKvE,sBAAsB,CAACuE,qBAAqB,EAAG;QAEnDvE,sBAAsB,CAAC4F,yBAAyB,GAAGnjF,YAAY,KAAKjrB,SAAS;QAE7E,IAAK,CAAEwoG,sBAAsB,CAAC4F,yBAAyB,EAAG;UAEzD;UACA;UACA,IAAKpnD,UAAU,CAAC+iB,GAAG,CAAE,sCAAuC,CAAC,KAAK,IAAI,EAAG;YAExE7yD,OAAO,CAACC,IAAI,CAAE,wGAAyG,CAAC;YACxHqxF,sBAAsB,CAAC+G,oBAAoB,GAAG,KAAK;UAEpD;QAED;MAED;IAED,CAAC;IAED,IAAI,CAACmO,0BAA0B,GAAG,UAAW5zD,YAAY,EAAEihE,kBAAkB,EAAG;MAE/E,IAAMviB,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;MAC7D0+C,sBAAsB,CAACC,kBAAkB,GAAGsiB,kBAAkB;MAC9DviB,sBAAsB,CAACwiB,uBAAuB,GAAGD,kBAAkB,KAAK/qH,SAAS;IAElF,CAAC;IAED,IAAI,CAACorD,eAAe,GAAG,UAAWtB,YAAY,EAAE+tC,cAAc,GAAG,CAAC,EAAEE,iBAAiB,GAAG,CAAC,EAAG;MAE3F2rB,oBAAoB,GAAG55D,YAAY;MACnC05D,sBAAsB,GAAG3rB,cAAc;MACvC4rB,yBAAyB,GAAG1rB,iBAAiB;MAE7C,IAAIkzB,qBAAqB,GAAG,IAAI;MAChC,IAAIhrB,WAAW,GAAG,IAAI;MACtB,IAAIgO,MAAM,GAAG,KAAK;MAClB,IAAIid,gBAAgB,GAAG,KAAK;MAE5B,IAAKphE,YAAY,EAAG;QAEnB,IAAM0+C,sBAAsB,GAAGvpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC;QAE7D,IAAK0+C,sBAAsB,CAACwiB,uBAAuB,KAAKhrH,SAAS,EAAG;UAEnE;UACAX,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAE,IAAK,CAAC;UAC9C8qB,qBAAqB,GAAG,KAAK;QAE9B,CAAC,MAAM,IAAKziB,sBAAsB,CAACC,kBAAkB,KAAKzoG,SAAS,EAAG;UAErEgoB,QAAQ,CAACwmF,iBAAiB,CAAE1kD,YAAa,CAAC;QAE3C,CAAC,MAAM,IAAK0+C,sBAAsB,CAACuE,qBAAqB,EAAG;UAE1D;UACA/kF,QAAQ,CAACsmF,cAAc,CAAExkD,YAAY,EAAEmV,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAY,CAACh/B,OAAQ,CAAC,CAACy9E,cAAc,EAAEtpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAY,CAAC7+B,YAAa,CAAC,CAACs9E,cAAe,CAAC;QAE3J;QAEA,IAAMz9E,OAAO,GAAGg/B,YAAY,CAACh/B,OAAO;QAEpC,IAAKA,OAAO,CAAC2B,eAAe,IAAI3B,OAAO,CAACgB,kBAAkB,IAAIhB,OAAO,CAACsgF,wBAAwB,EAAG;UAEhG8f,gBAAgB,GAAG,IAAI;QAExB;QAEA,IAAMziB,kBAAkB,GAAGxpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC,CAAC2+C,kBAAkB;QAE5E,IAAK3+C,YAAY,CAACiC,uBAAuB,EAAG;UAE3C,IAAK1mC,KAAK,CAACC,OAAO,CAAEmjF,kBAAkB,CAAE5Q,cAAc,CAAG,CAAC,EAAG;YAE5DoI,WAAW,GAAGwI,kBAAkB,CAAE5Q,cAAc,CAAE,CAAEE,iBAAiB,CAAE;UAExE,CAAC,MAAM;YAENkI,WAAW,GAAGwI,kBAAkB,CAAE5Q,cAAc,CAAE;UAEnD;UAEAoW,MAAM,GAAG,IAAI;QAEd,CAAC,MAAM,IAAOh+C,YAAY,CAACC,QAAQ,IAAIpG,YAAY,CAAC5+B,OAAO,GAAG,CAAC,IAAMlD,QAAQ,CAACglF,kBAAkB,CAAEljD,YAAa,CAAC,KAAK,KAAK,EAAG;UAE5Hm2C,WAAW,GAAGhhC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC,CAACg/C,8BAA8B;QAE5E,CAAC,MAAM;UAEN,IAAKzjF,KAAK,CAACC,OAAO,CAAEmjF,kBAAmB,CAAC,EAAG;YAE1CxI,WAAW,GAAGwI,kBAAkB,CAAE1Q,iBAAiB,CAAE;UAEtD,CAAC,MAAM;YAENkI,WAAW,GAAGwI,kBAAkB;UAEjC;QAED;QAEAob,gBAAgB,CAACnrG,IAAI,CAAEoxC,YAAY,CAACj/B,QAAS,CAAC;QAC9Ci5F,eAAe,CAACprG,IAAI,CAAEoxC,YAAY,CAACn/B,OAAQ,CAAC;QAC5Co5F,mBAAmB,GAAGj6D,YAAY,CAACl/B,WAAW;MAE/C,CAAC,MAAM;QAENi5F,gBAAgB,CAACnrG,IAAI,CAAEo+E,SAAU,CAAC,CAAC19E,cAAc,CAAEgrG,WAAY,CAAC,CAACrvG,KAAK,CAAC,CAAC;QACxE+uG,eAAe,CAACprG,IAAI,CAAE6rG,QAAS,CAAC,CAACnrG,cAAc,CAAEgrG,WAAY,CAAC,CAACrvG,KAAK,CAAC,CAAC;QACtEgvG,mBAAmB,GAAGS,YAAY;MAEnC;MAEA,IAAM2G,gBAAgB,GAAG9rH,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,WAAY,CAAC;MAE9E,IAAKkrB,gBAAgB,IAAIl7D,YAAY,CAAC9I,WAAW,IAAI8jE,qBAAqB,EAAG;QAE5E5rH,KAAK,CAAC8nD,WAAW,CAAE2C,YAAY,EAAEm2C,WAAY,CAAC;MAE/C;MAEA5gG,KAAK,CAACwrB,QAAQ,CAAEg5F,gBAAiB,CAAC;MAClCxkH,KAAK,CAACsrB,OAAO,CAAEm5F,eAAgB,CAAC;MAChCzkH,KAAK,CAAC+4F,cAAc,CAAE2rB,mBAAoB,CAAC;MAE3C,IAAK9V,MAAM,EAAG;QAEb,IAAM/F,iBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAY,CAACh/B,OAAQ,CAAC;QAChEy5E,GAAG,CAAC6I,oBAAoB,CAAE7I,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC3E,2BAA2B,GAAG/H,cAAc,EAAEqQ,iBAAiB,CAACK,cAAc,EAAExQ,iBAAkB,CAAC;MAE1K,CAAC,MAAM,IAAKmzB,gBAAgB,EAAG;QAE9B,IAAMhjB,kBAAiB,GAAGjpC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAY,CAACh/B,OAAQ,CAAC;QAChE,IAAMsgG,KAAK,GAAGvzB,cAAc,IAAI,CAAC;QACjC0M,GAAG,CAAC8mB,uBAAuB,CAAE9mB,GAAG,CAACpE,WAAW,EAAEoE,GAAG,CAACnE,iBAAiB,EAAE8H,kBAAiB,CAACK,cAAc,EAAExQ,iBAAiB,IAAI,CAAC,EAAEqzB,KAAM,CAAC;MAEvI;MAEAzH,kBAAkB,GAAG,CAAE,CAAC,CAAC,CAAC;IAE3B,CAAC;;IAED,IAAI,CAAC2H,sBAAsB,GAAG,UAAWxhE,YAAY,EAAEn2C,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAM,EAAE7C,MAAM,EAAEqqG,mBAAmB,EAAG;MAEzG,IAAK,EAAIzhE,YAAY,IAAIA,YAAY,CAACr+B,mBAAmB,CAAE,EAAG;QAE7DvU,OAAO,CAAChY,KAAK,CAAE,0FAA2F,CAAC;QAC3G;MAED;MAEA,IAAI+gG,WAAW,GAAGhhC,UAAU,CAAC/mD,GAAG,CAAE4xC,YAAa,CAAC,CAAC2+C,kBAAkB;MAEnE,IAAK3+C,YAAY,CAACiC,uBAAuB,IAAIw/D,mBAAmB,KAAKvrH,SAAS,EAAG;QAEhFigG,WAAW,GAAGA,WAAW,CAAEsrB,mBAAmB,CAAE;MAEjD;MAEA,IAAKtrB,WAAW,EAAG;QAElB5gG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,WAAY,CAAC;QAErD,IAAI;UAEH,IAAMn1E,OAAO,GAAGg/B,YAAY,CAACh/B,OAAO;UACpC,IAAM0gG,aAAa,GAAG1gG,OAAO,CAACvE,MAAM;UACpC,IAAM+jF,WAAW,GAAGx/E,OAAO,CAACttB,IAAI;UAEhC,IAAKguH,aAAa,KAAK1gH,UAAU,IAAI05F,KAAK,CAACzhF,OAAO,CAAEyoG,aAAc,CAAC,KAAKjnB,GAAG,CAAC5sE,YAAY,CAAE4sE,GAAG,CAACknB,gCAAiC,CAAC,EAAG;YAElIv0G,OAAO,CAAChY,KAAK,CAAE,2GAA4G,CAAC;YAC5H;UAED;UAEA,IAAMwsH,uBAAuB,GAAKphB,WAAW,KAAK7/F,aAAa,KAAQu8C,UAAU,CAAC+iB,GAAG,CAAE,6BAA8B,CAAC,IAAM9Z,YAAY,CAACC,QAAQ,IAAIlJ,UAAU,CAAC+iB,GAAG,CAAE,wBAAyB,CAAG,CAAE;UAEnM,IAAKugC,WAAW,KAAKpgG,gBAAgB,IAAIs6F,KAAK,CAACzhF,OAAO,CAAEunF,WAAY,CAAC,KAAK/F,GAAG,CAAC5sE,YAAY,CAAE4sE,GAAG,CAAConB,8BAA+B,CAAC;UAAI;UACnI,EAAIrhB,WAAW,KAAK9/F,SAAS,KAAMylD,YAAY,CAACC,QAAQ,IAAIlJ,UAAU,CAAC+iB,GAAG,CAAE,mBAAoB,CAAC,IAAI/iB,UAAU,CAAC+iB,GAAG,CAAE,0BAA2B,CAAC,CAAE,CAAE;UAAI;UACzJ,CAAE2hD,uBAAuB,EAAG;YAE5Bx0G,OAAO,CAAChY,KAAK,CAAE,qHAAsH,CAAC;YACtI;UAED;;UAEA;;UAEA,IAAOyU,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAMm2C,YAAY,CAAChmC,KAAK,GAAGA,KAAO,IAAQ7P,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAM61C,YAAY,CAAC/lC,MAAM,GAAGA,MAAU,EAAG;YAE/GwgF,GAAG,CAACqnB,UAAU,CAAEj4G,CAAC,EAAEM,CAAC,EAAE6P,KAAK,EAAEC,MAAM,EAAEygF,KAAK,CAACzhF,OAAO,CAAEyoG,aAAc,CAAC,EAAEhnB,KAAK,CAACzhF,OAAO,CAAEunF,WAAY,CAAC,EAAEppF,MAAO,CAAC;UAE5G;QAED,CAAC,SAAS;UAET;;UAEA,IAAM++E,YAAW,GAAKyjB,oBAAoB,KAAK,IAAI,GAAKzkD,UAAU,CAAC/mD,GAAG,CAAEwrG,oBAAqB,CAAC,CAACjb,kBAAkB,GAAG,IAAI;UACxHppG,KAAK,CAAC2gG,eAAe,CAAEuE,GAAG,CAACpE,WAAW,EAAEF,YAAY,CAAC;QAEtD;MAED;IAED,CAAC;IAED,IAAI,CAAC4rB,wBAAwB,GAAG,UAAWt0F,QAAQ,EAAEzM,OAAO,EAAE49E,KAAK,GAAG,CAAC,EAAG;MAEzE,IAAMojB,UAAU,GAAGr5G,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAE,CAAE8yF,KAAM,CAAC;MACzC,IAAM5kF,KAAK,GAAGrR,IAAI,CAACsC,KAAK,CAAE+V,OAAO,CAACpH,KAAK,CAACI,KAAK,GAAGgoG,UAAW,CAAC;MAC5D,IAAM/nG,MAAM,GAAGtR,IAAI,CAACsC,KAAK,CAAE+V,OAAO,CAACpH,KAAK,CAACK,MAAM,GAAG+nG,UAAW,CAAC;MAE9D9jG,QAAQ,CAAC6zD,YAAY,CAAE/wD,OAAO,EAAE,CAAE,CAAC;MAEnCy5E,GAAG,CAACwnB,iBAAiB,CAAExnB,GAAG,CAAC7E,UAAU,EAAEgJ,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEnxE,QAAQ,CAAC5jB,CAAC,EAAE4jB,QAAQ,CAACtjB,CAAC,EAAE6P,KAAK,EAAEC,MAAO,CAAC;MAE3F1kB,KAAK,CAACgkG,aAAa,CAAC,CAAC;IAEtB,CAAC;IAED,IAAI,CAAC2oB,oBAAoB,GAAG,UAAWz0F,QAAQ,EAAE00F,UAAU,EAAEC,UAAU,EAAExjB,KAAK,GAAG,CAAC,EAAG;MAEpF,IAAM5kF,KAAK,GAAGmoG,UAAU,CAACvoG,KAAK,CAACI,KAAK;MACpC,IAAMC,MAAM,GAAGkoG,UAAU,CAACvoG,KAAK,CAACK,MAAM;MACtC,IAAMiiF,QAAQ,GAAGxB,KAAK,CAACzhF,OAAO,CAAEmpG,UAAU,CAAC3lG,MAAO,CAAC;MACnD,IAAM0/E,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAEmpG,UAAU,CAAC1uH,IAAK,CAAC;MAE/CwqB,QAAQ,CAAC6zD,YAAY,CAAEqwC,UAAU,EAAE,CAAE,CAAC;;MAEtC;MACA;MACA3nB,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACgH,mBAAmB,EAAE2gB,UAAU,CAAC7kG,KAAM,CAAC;MAC5Dk9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACiH,8BAA8B,EAAE0gB,UAAU,CAAC9kG,gBAAiB,CAAC;MAClFm9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACkH,gBAAgB,EAAEygB,UAAU,CAAC5kG,eAAgB,CAAC;MAEnE,IAAK2kG,UAAU,CAAC1mG,aAAa,EAAG;QAE/Bg/E,GAAG,CAACf,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEgJ,KAAK,EAAEnxE,QAAQ,CAAC5jB,CAAC,EAAE4jB,QAAQ,CAACtjB,CAAC,EAAE6P,KAAK,EAAEC,MAAM,EAAEiiF,QAAQ,EAAEC,MAAM,EAAEgmB,UAAU,CAACvoG,KAAK,CAACgB,IAAK,CAAC;MAE3H,CAAC,MAAM;QAEN,IAAKunG,UAAU,CAACrkB,mBAAmB,EAAG;UAErCrD,GAAG,CAACb,uBAAuB,CAAEa,GAAG,CAAC7E,UAAU,EAAEgJ,KAAK,EAAEnxE,QAAQ,CAAC5jB,CAAC,EAAE4jB,QAAQ,CAACtjB,CAAC,EAAEg4G,UAAU,CAACnlG,OAAO,CAAE,CAAC,CAAE,CAAChD,KAAK,EAAEmoG,UAAU,CAACnlG,OAAO,CAAE,CAAC,CAAE,CAAC/C,MAAM,EAAEiiF,QAAQ,EAAEimB,UAAU,CAACnlG,OAAO,CAAE,CAAC,CAAE,CAACpC,IAAK,CAAC;QAEpL,CAAC,MAAM;UAEN6/E,GAAG,CAACf,aAAa,CAAEe,GAAG,CAAC7E,UAAU,EAAEgJ,KAAK,EAAEnxE,QAAQ,CAAC5jB,CAAC,EAAE4jB,QAAQ,CAACtjB,CAAC,EAAE+xF,QAAQ,EAAEC,MAAM,EAAEgmB,UAAU,CAACvoG,KAAM,CAAC;QAEvG;MAED;;MAEA;MACA,IAAKglF,KAAK,KAAK,CAAC,IAAIwjB,UAAU,CAAC/kG,eAAe,EAAGo9E,GAAG,CAACsB,cAAc,CAAEtB,GAAG,CAAC7E,UAAW,CAAC;MAErFrgG,KAAK,CAACgkG,aAAa,CAAC,CAAC;IAEtB,CAAC;IAED,IAAI,CAAC8oB,sBAAsB,GAAG,UAAWC,SAAS,EAAE70F,QAAQ,EAAE00F,UAAU,EAAEC,UAAU,EAAExjB,KAAK,GAAG,CAAC,EAAG;MAEjG,IAAK4a,KAAK,CAACiC,gBAAgB,EAAG;QAE7BruG,OAAO,CAACC,IAAI,CAAE,2EAA4E,CAAC;QAC3F;MAED;MAEA,IAAM2M,KAAK,GAAGsoG,SAAS,CAAC94G,GAAG,CAACK,CAAC,GAAGy4G,SAAS,CAAC/4G,GAAG,CAACM,CAAC,GAAG,CAAC;MACnD,IAAMoQ,MAAM,GAAGqoG,SAAS,CAAC94G,GAAG,CAACW,CAAC,GAAGm4G,SAAS,CAAC/4G,GAAG,CAACY,CAAC,GAAG,CAAC;MACpD,IAAMyW,KAAK,GAAG0hG,SAAS,CAAC94G,GAAG,CAACkV,CAAC,GAAG4jG,SAAS,CAAC/4G,GAAG,CAACmV,CAAC,GAAG,CAAC;MACnD,IAAMw9E,QAAQ,GAAGxB,KAAK,CAACzhF,OAAO,CAAEmpG,UAAU,CAAC3lG,MAAO,CAAC;MACnD,IAAM0/E,MAAM,GAAGzB,KAAK,CAACzhF,OAAO,CAAEmpG,UAAU,CAAC1uH,IAAK,CAAC;MAC/C,IAAI6uH,QAAQ;MAEZ,IAAKH,UAAU,CAACz/F,eAAe,EAAG;QAEjCzE,QAAQ,CAAC+zD,YAAY,CAAEmwC,UAAU,EAAE,CAAE,CAAC;QACtCG,QAAQ,GAAG9nB,GAAG,CAACnF,UAAU;MAE1B,CAAC,MAAM,IAAK8sB,UAAU,CAACpgG,kBAAkB,EAAG;QAE3C9D,QAAQ,CAACm0D,iBAAiB,CAAE+vC,UAAU,EAAE,CAAE,CAAC;QAC3CG,QAAQ,GAAG9nB,GAAG,CAAClF,gBAAgB;MAEhC,CAAC,MAAM;QAENnoF,OAAO,CAACC,IAAI,CAAE,6GAA8G,CAAC;QAC7H;MAED;MAEAotF,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACgH,mBAAmB,EAAE2gB,UAAU,CAAC7kG,KAAM,CAAC;MAC5Dk9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACiH,8BAA8B,EAAE0gB,UAAU,CAAC9kG,gBAAiB,CAAC;MAClFm9E,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACkH,gBAAgB,EAAEygB,UAAU,CAAC5kG,eAAgB,CAAC;MAEnE,IAAMglG,YAAY,GAAG/nB,GAAG,CAAC5sE,YAAY,CAAE4sE,GAAG,CAACgoB,iBAAkB,CAAC;MAC9D,IAAMC,iBAAiB,GAAGjoB,GAAG,CAAC5sE,YAAY,CAAE4sE,GAAG,CAACkoB,mBAAoB,CAAC;MACrE,IAAMC,gBAAgB,GAAGnoB,GAAG,CAAC5sE,YAAY,CAAE4sE,GAAG,CAACooB,kBAAmB,CAAC;MACnE,IAAMC,cAAc,GAAGroB,GAAG,CAAC5sE,YAAY,CAAE4sE,GAAG,CAACsoB,gBAAiB,CAAC;MAC/D,IAAMC,gBAAgB,GAAGvoB,GAAG,CAAC5sE,YAAY,CAAE4sE,GAAG,CAACwoB,kBAAmB,CAAC;MAEnE,IAAMrpG,KAAK,GAAGuoG,UAAU,CAACrkB,mBAAmB,GAAGqkB,UAAU,CAACnlG,OAAO,CAAE,CAAC,CAAE,GAAGmlG,UAAU,CAACvoG,KAAK;MAEzF6gF,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACgoB,iBAAiB,EAAE7oG,KAAK,CAACI,KAAM,CAAC;MACrDygF,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACkoB,mBAAmB,EAAE/oG,KAAK,CAACK,MAAO,CAAC;MACxDwgF,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACooB,kBAAkB,EAAEP,SAAS,CAAC/4G,GAAG,CAACM,CAAE,CAAC;MAC1D4wF,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACsoB,gBAAgB,EAAET,SAAS,CAAC/4G,GAAG,CAACY,CAAE,CAAC;MACxDswF,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACwoB,kBAAkB,EAAEX,SAAS,CAAC/4G,GAAG,CAACmV,CAAE,CAAC;MAE1D,IAAKyjG,UAAU,CAAC1mG,aAAa,IAAI0mG,UAAU,CAACx/F,eAAe,EAAG;QAE7D83E,GAAG,CAACd,aAAa,CAAE4oB,QAAQ,EAAE3jB,KAAK,EAAEnxE,QAAQ,CAAC5jB,CAAC,EAAE4jB,QAAQ,CAACtjB,CAAC,EAAEsjB,QAAQ,CAAC/O,CAAC,EAAE1E,KAAK,EAAEC,MAAM,EAAE2G,KAAK,EAAEs7E,QAAQ,EAAEC,MAAM,EAAEviF,KAAK,CAACgB,IAAK,CAAC;MAE7H,CAAC,MAAM;QAEN,IAAKunG,UAAU,CAAC7gB,wBAAwB,EAAG;UAE1Cl0F,OAAO,CAACC,IAAI,CAAE,yFAA0F,CAAC;UACzGotF,GAAG,CAACZ,uBAAuB,CAAE0oB,QAAQ,EAAE3jB,KAAK,EAAEnxE,QAAQ,CAAC5jB,CAAC,EAAE4jB,QAAQ,CAACtjB,CAAC,EAAEsjB,QAAQ,CAAC/O,CAAC,EAAE1E,KAAK,EAAEC,MAAM,EAAE2G,KAAK,EAAEs7E,QAAQ,EAAEtiF,KAAK,CAACgB,IAAK,CAAC;QAE/H,CAAC,MAAM;UAEN6/E,GAAG,CAACd,aAAa,CAAE4oB,QAAQ,EAAE3jB,KAAK,EAAEnxE,QAAQ,CAAC5jB,CAAC,EAAE4jB,QAAQ,CAACtjB,CAAC,EAAEsjB,QAAQ,CAAC/O,CAAC,EAAE1E,KAAK,EAAEC,MAAM,EAAE2G,KAAK,EAAEs7E,QAAQ,EAAEC,MAAM,EAAEviF,KAAM,CAAC;QAExH;MAED;MAEA6gF,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACgoB,iBAAiB,EAAED,YAAa,CAAC;MACtD/nB,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACkoB,mBAAmB,EAAED,iBAAkB,CAAC;MAC7DjoB,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACooB,kBAAkB,EAAED,gBAAiB,CAAC;MAC3DnoB,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACsoB,gBAAgB,EAAED,cAAe,CAAC;MACvDroB,GAAG,CAAC+G,WAAW,CAAE/G,GAAG,CAACwoB,kBAAkB,EAAED,gBAAiB,CAAC;;MAE3D;MACA,IAAKpkB,KAAK,KAAK,CAAC,IAAIwjB,UAAU,CAAC/kG,eAAe,EAAGo9E,GAAG,CAACsB,cAAc,CAAEwmB,QAAS,CAAC;MAE/EhtH,KAAK,CAACgkG,aAAa,CAAC,CAAC;IAEtB,CAAC;IAED,IAAI,CAAC4H,WAAW,GAAG,UAAWngF,OAAO,EAAG;MAEvC,IAAKA,OAAO,CAAC4gC,aAAa,EAAG;QAE5B1jC,QAAQ,CAACi0D,cAAc,CAAEnxD,OAAO,EAAE,CAAE,CAAC;MAEtC,CAAC,MAAM,IAAKA,OAAO,CAAC2B,eAAe,EAAG;QAErCzE,QAAQ,CAAC+zD,YAAY,CAAEjxD,OAAO,EAAE,CAAE,CAAC;MAEpC,CAAC,MAAM,IAAKA,OAAO,CAACgB,kBAAkB,IAAIhB,OAAO,CAACsgF,wBAAwB,EAAG;QAE5EpjF,QAAQ,CAACm0D,iBAAiB,CAAErxD,OAAO,EAAE,CAAE,CAAC;MAEzC,CAAC,MAAM;QAEN9C,QAAQ,CAAC6zD,YAAY,CAAE/wD,OAAO,EAAE,CAAE,CAAC;MAEpC;MAEAzrB,KAAK,CAACgkG,aAAa,CAAC,CAAC;IAEtB,CAAC;IAED,IAAI,CAAC2pB,UAAU,GAAG,YAAY;MAE7BxJ,sBAAsB,GAAG,CAAC;MAC1BC,yBAAyB,GAAG,CAAC;MAC7BC,oBAAoB,GAAG,IAAI;MAE3BrkH,KAAK,CAAC6B,KAAK,CAAC,CAAC;MACbskE,aAAa,CAACtkE,KAAK,CAAC,CAAC;IAEtB,CAAC;IAED,IAAK,OAAO+rH,kBAAkB,KAAK,WAAW,EAAG;MAEhDA,kBAAkB,CAAC/6G,aAAa,CAAE,IAAIg7G,WAAW,CAAE,SAAS,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAE,CAAE,CAAC;IAEnF;EAED;EAAC7oH,YAAA,CAAAu9G,aAAA;IAAApmH,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAuB;MAEtB,OAAO7G,qBAAqB;IAE7B;EAAC;IAAA5V,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAA8B;MAAE;;MAE/BhB,OAAO,CAACC,IAAI,CAAE,oHAAqH,CAAC;MACpI,OAAO,CAAE,IAAI,CAACkxE,eAAe;IAE9B,CAAC;IAAApxE,GAAA,EAED,SAAAA,IAA6Btb,KAAK,EAAG;MAAE;;MAEtCub,OAAO,CAACC,IAAI,CAAE,oHAAqH,CAAC;MACpI,IAAI,CAACkxE,eAAe,GAAG,CAAE1sF,KAAK;IAE/B;EAAC;IAAAF,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAqB;MAAE;;MAEtBhB,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;MAChH,OAAO,IAAI,CAAC6uC,gBAAgB,KAAKn3C,cAAc,GAAGN,YAAY,GAAGD,cAAc;IAEhF,CAAC;IAAA2I,GAAA,EAED,SAAAA,IAAoBoR,QAAQ,EAAG;MAAE;;MAEhCnR,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;MAChH,IAAI,CAAC6uC,gBAAgB,GAAG39B,QAAQ,KAAK9Z,YAAY,GAAGM,cAAc,GAAGC,oBAAoB;IAE1F;EAAC;IAAArT,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAsB;MAAE;;MAEvBhB,OAAO,CAACC,IAAI,CAAE,6MAA8M,CAAC;MAC7N,OAAO,IAAI,CAAC64E,gBAAgB;IAE7B,CAAC;IAAA/4E,GAAA,EAED,SAAAA,IAAqBtb,KAAK,EAAG;MAAE;;MAE9Bub,OAAO,CAACC,IAAI,CAAE,6MAA8M,CAAC;MAC7N,IAAI,CAAC64E,gBAAgB,GAAGr0F,KAAK;IAE9B;EAAC;EAAA,OAAAkmH,aAAA;AAAA;AAAA5mH,OAAA,CAAA4mH,aAAA,GAAAA,aAAA;AAAA,IAIIuL,cAAc,0BAAAC,cAAA;EAAAxnG,SAAA,CAAAunG,cAAA,EAAAC,cAAA;EAAA,IAAAC,QAAA,GAAAvnG,YAAA,CAAAqnG,cAAA;EAAA,SAAAA,eAAA;IAAAtpH,eAAA,OAAAspH,cAAA;IAAA,OAAAE,QAAA,CAAAxlF,KAAA,OAAAJ,SAAA;EAAA;EAAA,OAAApjC,YAAA,CAAA8oH,cAAA;AAAA,EAASvL,aAAa;AAAA5mH,OAAA,CAAAmyH,cAAA,GAAAA,cAAA;AAE1CA,cAAc,CAAChyH,SAAS,CAACmqH,gBAAgB,GAAG,IAAI;AAAC,IAE3CgI,OAAO;EAEZ,SAAAA,QAAatrG,KAAK,EAAEo8F,OAAO,GAAG,OAAO,EAAG;IAAAv6G,eAAA,OAAAypH,OAAA;IAEvC,IAAI,CAAC79B,SAAS,GAAG,IAAI;IAErB,IAAI,CAAC7tF,IAAI,GAAG,EAAE;IAEd,IAAI,CAACogB,KAAK,GAAG,IAAI4zB,KAAK,CAAE5zB,KAAM,CAAC;IAC/B,IAAI,CAACo8F,OAAO,GAAGA,OAAO;EAEvB;EAAC/5G,YAAA,CAAAipH,OAAA;IAAA9xH,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI80G,OAAO,CAAE,IAAI,CAACtrG,KAAK,EAAE,IAAI,CAACo8F,OAAQ,CAAC;IAE/C;EAAC;IAAA5iH,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,CAAQ;IAAA,EAAa;MAEpB,OAAO;QACNvnB,IAAI,EAAE,SAAS;QACfykB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACivB,MAAM,CAAC,CAAC;QAC1BmtE,OAAO,EAAE,IAAI,CAACA;MACf,CAAC;IAEF;EAAC;EAAA,OAAAkP,OAAA;AAAA;AAAAtyH,OAAA,CAAAsyH,OAAA,GAAAA,OAAA;AAAA,IAIIC,GAAG;EAER,SAAAA,IAAavrG,KAAK,EAAEugB,IAAI,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAA3+B,eAAA,OAAA0pH,GAAA;IAE1C,IAAI,CAACpP,KAAK,GAAG,IAAI;IAEjB,IAAI,CAACv8G,IAAI,GAAG,EAAE;IAEd,IAAI,CAACogB,KAAK,GAAG,IAAI4zB,KAAK,CAAE5zB,KAAM,CAAC;IAE/B,IAAI,CAACugB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAACn+B,YAAA,CAAAkpH,GAAA;IAAA/xH,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI+0G,GAAG,CAAE,IAAI,CAACvrG,KAAK,EAAE,IAAI,CAACugB,IAAI,EAAE,IAAI,CAACC,GAAI,CAAC;IAElD;EAAC;IAAAhnC,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,CAAQ;IAAA,EAAa;MAEpB,OAAO;QACNvnB,IAAI,EAAE,KAAK;QACXykB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACivB,MAAM,CAAC,CAAC;QAC1B1O,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,GAAG,EAAE,IAAI,CAACA;MACX,CAAC;IAEF;EAAC;EAAA,OAAA+qF,GAAA;AAAA;AAAAvyH,OAAA,CAAAuyH,GAAA,GAAAA,GAAA;AAAA,IAIIC,KAAK,0BAAAC,UAAA;EAAA7nG,SAAA,CAAA4nG,KAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA5nG,YAAA,CAAA0nG,KAAA;EAEV,SAAAA,MAAA,EAAc;IAAA,IAAAG,OAAA;IAAA9pH,eAAA,OAAA2pH,KAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAlwH,IAAA;IAEAmwH,OAAA,CAAK7jF,OAAO,GAAG,IAAI;IAEnB6jF,OAAA,CAAKpwH,IAAI,GAAG,OAAO;IAEnBowH,OAAA,CAAK5jF,UAAU,GAAG,IAAI;IACtB4jF,OAAA,CAAK1jF,WAAW,GAAG,IAAI;IACvB0jF,OAAA,CAAKt4E,GAAG,GAAG,IAAI;IAEfs4E,OAAA,CAAKnsD,oBAAoB,GAAG,CAAC;IAC7BmsD,OAAA,CAAKrsD,mBAAmB,GAAG,CAAC;IAE5BqsD,OAAA,CAAK7I,gBAAgB,GAAG,IAAI;IAE5B,IAAK,OAAOkI,kBAAkB,KAAK,WAAW,EAAG;MAEhDA,kBAAkB,CAAC/6G,aAAa,CAAE,IAAIg7G,WAAW,CAAE,SAAS,EAAE;QAAEC,MAAM,EAAAvmG,sBAAA,CAAAgnG,OAAA;MAAO,CAAE,CAAE,CAAC;IAEnF;IAAC,OAAAA,OAAA;EAEF;EAACtpH,YAAA,CAAAmpH,KAAA;IAAAhyH,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAq1E,KAAA,CAAAryH,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAKpkB,MAAM,CAACmjB,UAAU,KAAK,IAAI,EAAG,IAAI,CAACA,UAAU,GAAGnjB,MAAM,CAACmjB,UAAU,CAACvxB,KAAK,CAAC,CAAC;MAC7E,IAAKoO,MAAM,CAACqjB,WAAW,KAAK,IAAI,EAAG,IAAI,CAACA,WAAW,GAAGrjB,MAAM,CAACqjB,WAAW,CAACzxB,KAAK,CAAC,CAAC;MAChF,IAAKoO,MAAM,CAACyuB,GAAG,KAAK,IAAI,EAAG,IAAI,CAACA,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG,CAAC78B,KAAK,CAAC,CAAC;MAExD,IAAI,CAACgpD,oBAAoB,GAAG56C,MAAM,CAAC46C,oBAAoB;MACvD,IAAI,CAACF,mBAAmB,GAAG16C,MAAM,CAAC06C,mBAAmB;MAErD,IAAK16C,MAAM,CAACk+F,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,GAAGl+F,MAAM,CAACk+F,gBAAgB,CAACtsG,KAAK,CAAC,CAAC;MAE/F,IAAI,CAACyO,gBAAgB,GAAGL,MAAM,CAACK,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAzrB,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAq1E,KAAA,CAAAryH,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjC,IAAK,IAAI,CAACswB,GAAG,KAAK,IAAI,EAAG5wB,IAAI,CAACniB,MAAM,CAAC+yC,GAAG,GAAG,IAAI,CAACA,GAAG,CAACvwB,MAAM,CAAC,CAAC;MAC5D,IAAK,IAAI,CAAC08C,oBAAoB,GAAG,CAAC,EAAG/8C,IAAI,CAACniB,MAAM,CAACk/D,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;MACjG,IAAK,IAAI,CAACF,mBAAmB,KAAK,CAAC,EAAG78C,IAAI,CAACniB,MAAM,CAACg/D,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MAEhG,OAAO78C,IAAI;IAEZ;EAAC;EAAA,OAAA+oG,KAAA;AAAA,EAxDkBzoF,QAAQ;AAAA/pC,OAAA,CAAAwyH,KAAA,GAAAA,KAAA;AAAA,IA4DtBI,iBAAiB;EAEtB,SAAAA,kBAAaz7G,KAAK,EAAE2uC,MAAM,EAAG;IAAAj9C,eAAA,OAAA+pH,iBAAA;IAE5B,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAE/B,IAAI,CAAC17G,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC2uC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC7zB,KAAK,GAAG9a,KAAK,KAAKpS,SAAS,GAAGoS,KAAK,CAAC9Q,MAAM,GAAGy/C,MAAM,GAAG,CAAC;IAE5D,IAAI,CAACvH,KAAK,GAAG/oC,eAAe;IAC5B,IAAI,CAACgpC,WAAW,GAAG;MAAEj+B,MAAM,EAAE,CAAC;MAAE0R,KAAK,EAAE,CAAE;IAAE,CAAC;IAE5C,IAAI,CAACpI,OAAO,GAAG,CAAC;IAEhB,IAAI,CAAC5R,IAAI,GAAGN,YAAY,CAAC,CAAC;EAE3B;EAACtO,YAAA,CAAAupH,iBAAA;IAAApyH,GAAA;IAAAE,KAAA,EAED,SAAAg+C,iBAAA,EAAmB,CAAC;EAAC;IAAAl+C,GAAA;IAAAwb,GAAA,EAErB,SAAAA,IAAiBtb,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACmpB,OAAO,EAAG;IAEtC;EAAC;IAAArpB,GAAA;IAAAE,KAAA,EAED,SAAAi+C,SAAUj+C,KAAK,EAAG;MAEjB,IAAI,CAAC69C,KAAK,GAAG79C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACzU,KAAK,GAAG,IAAIyU,MAAM,CAACzU,KAAK,CAACxQ,WAAW,CAAEilB,MAAM,CAACzU,KAAM,CAAC;MACzD,IAAI,CAAC8a,KAAK,GAAGrG,MAAM,CAACqG,KAAK;MACzB,IAAI,CAAC6zB,MAAM,GAAGl6B,MAAM,CAACk6B,MAAM;MAC3B,IAAI,CAACvH,KAAK,GAAG3yB,MAAM,CAAC2yB,KAAK;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA/9C,GAAA;IAAAE,KAAA,EAED,SAAAk+C,OAAQC,MAAM,EAAEn+B,SAAS,EAAEo+B,MAAM,EAAG;MAEnCD,MAAM,IAAI,IAAI,CAACiH,MAAM;MACrBhH,MAAM,IAAIp+B,SAAS,CAAColC,MAAM;MAE1B,KAAM,IAAIx/C,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC0uC,MAAM,EAAEx/C,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAE/C,IAAI,CAAC6Q,KAAK,CAAE0nC,MAAM,GAAGv4C,CAAC,CAAE,GAAGoa,SAAS,CAACvJ,KAAK,CAAE2nC,MAAM,GAAGx4C,CAAC,CAAE;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKtb,KAAK,EAAE6f,MAAM,GAAG,CAAC,EAAG;MAExB,IAAI,CAACpJ,KAAK,CAAC6E,GAAG,CAAEtb,KAAK,EAAE6f,MAAO,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAOiM,IAAI,EAAG;MAEb,IAAKA,IAAI,CAACqpG,YAAY,KAAK/tH,SAAS,EAAG;QAEtC0kB,IAAI,CAACqpG,YAAY,GAAG,CAAC,CAAC;MAEvB;MAEA,IAAK,IAAI,CAAC37G,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,KAAKhuH,SAAS,EAAG;QAE5C,IAAI,CAACoS,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,GAAGp7G,YAAY,CAAC,CAAC;MAEzC;MAEA,IAAK8R,IAAI,CAACqpG,YAAY,CAAE,IAAI,CAAC37G,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,CAAE,KAAKhuH,SAAS,EAAG;QAEjE0kB,IAAI,CAACqpG,YAAY,CAAE,IAAI,CAAC37G,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,CAAE,GAAG,IAAI,CAAC57G,KAAK,CAACvP,KAAK,CAAE,CAAE,CAAC,CAACqe,MAAM;MAE5E;MAEA,IAAM9O,KAAK,GAAG,IAAI,IAAI,CAACA,KAAK,CAACxQ,WAAW,CAAE8iB,IAAI,CAACqpG,YAAY,CAAE,IAAI,CAAC37G,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,CAAG,CAAC;MAExF,IAAMC,EAAE,GAAG,IAAI,IAAI,CAACrsH,WAAW,CAAEwQ,KAAK,EAAE,IAAI,CAAC2uC,MAAO,CAAC;MACrDktE,EAAE,CAACr0E,QAAQ,CAAE,IAAI,CAACJ,KAAM,CAAC;MAEzB,OAAOy0E,EAAE;IAEV;EAAC;IAAAxyH,GAAA;IAAAE,KAAA,EAED,SAAA0+C,SAAUzpB,QAAQ,EAAG;MAEpB,IAAI,CAAC+oB,gBAAgB,GAAG/oB,QAAQ;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAn1B,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQL,IAAI,EAAG;MAEd,IAAKA,IAAI,CAACqpG,YAAY,KAAK/tH,SAAS,EAAG;QAEtC0kB,IAAI,CAACqpG,YAAY,GAAG,CAAC,CAAC;MAEvB;;MAEA;;MAEA,IAAK,IAAI,CAAC37G,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,KAAKhuH,SAAS,EAAG;QAE5C,IAAI,CAACoS,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,GAAGp7G,YAAY,CAAC,CAAC;MAEzC;MAEA,IAAK8R,IAAI,CAACqpG,YAAY,CAAE,IAAI,CAAC37G,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,CAAE,KAAKhuH,SAAS,EAAG;QAEjE0kB,IAAI,CAACqpG,YAAY,CAAE,IAAI,CAAC37G,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK,CAAE,GAAG3oG,KAAK,CAACI,IAAI,CAAE,IAAInO,WAAW,CAAE,IAAI,CAAClF,KAAK,CAAC8O,MAAO,CAAE,CAAC;MAElG;;MAEA;;MAEA,OAAO;QACNhO,IAAI,EAAE,IAAI,CAACA,IAAI;QACfgO,MAAM,EAAE,IAAI,CAAC9O,KAAK,CAAC8O,MAAM,CAAC8sG,KAAK;QAC/BxwH,IAAI,EAAE,IAAI,CAAC4U,KAAK,CAACxQ,WAAW,CAACC,IAAI;QACjCk/C,MAAM,EAAE,IAAI,CAACA;MACd,CAAC;IAEF;EAAC;EAAA,OAAA8sE,iBAAA;AAAA;AAAA5yH,OAAA,CAAA4yH,iBAAA,GAAAA,iBAAA;AAIF,IAAMK,SAAS,GAAG,aAAc,IAAIh8F,OAAO,CAAC,CAAC;AAAC,IAExCi8F,0BAA0B;EAE/B,SAAAA,2BAAaC,iBAAiB,EAAE/0E,QAAQ,EAAE79B,MAAM,EAAE89B,UAAU,GAAG,KAAK,EAAG;IAAAx1C,eAAA,OAAAqqH,0BAAA;IAEtE,IAAI,CAACrtE,4BAA4B,GAAG,IAAI;IAExC,IAAI,CAACj/C,IAAI,GAAG,EAAE;IAEd,IAAI,CAAC6iB,IAAI,GAAG0pG,iBAAiB;IAC7B,IAAI,CAAC/0E,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC79B,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAAC89B,UAAU,GAAGA,UAAU;EAE7B;EAACh1C,YAAA,CAAA6pH,0BAAA;IAAA1yH,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACwM,IAAI,CAACwI,KAAK;IAEvB;EAAC;IAAAzxB,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACwM,IAAI,CAACtS,KAAK;IAEvB;EAAC;IAAA3W,GAAA;IAAAwb,GAAA,EAED,SAAAA,IAAiBtb,KAAK,EAAG;MAExB,IAAI,CAAC+oB,IAAI,CAACqD,WAAW,GAAGpsB,KAAK;IAE9B;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcpV,CAAC,EAAG;MAEjB,KAAM,IAAIlS,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAACqS,IAAI,CAACwI,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEnD2sH,SAAS,CAACxyG,mBAAmB,CAAE,IAAI,EAAEna,CAAE,CAAC;QAExC2sH,SAAS,CAACrlG,YAAY,CAAEpV,CAAE,CAAC;QAE3B,IAAI,CAACymC,MAAM,CAAE34C,CAAC,EAAE2sH,SAAS,CAACv6G,CAAC,EAAEu6G,SAAS,CAACj6G,CAAC,EAAEi6G,SAAS,CAAC1lG,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+2B,kBAAmBjf,CAAC,EAAG;MAEtB,KAAM,IAAIlS,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC6a,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAE9C2sH,SAAS,CAACxyG,mBAAmB,CAAE,IAAI,EAAEna,CAAE,CAAC;QAExC2sH,SAAS,CAACx7F,iBAAiB,CAAEjf,CAAE,CAAC;QAEhC,IAAI,CAACymC,MAAM,CAAE34C,CAAC,EAAE2sH,SAAS,CAACv6G,CAAC,EAAEu6G,SAAS,CAACj6G,CAAC,EAAEi6G,SAAS,CAAC1lG,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+3B,mBAAoBjgB,CAAC,EAAG;MAEvB,KAAM,IAAIlS,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC6a,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAE9C2sH,SAAS,CAACxyG,mBAAmB,CAAE,IAAI,EAAEna,CAAE,CAAC;QAExC2sH,SAAS,CAACx6F,kBAAkB,CAAEjgB,CAAE,CAAC;QAEjC,IAAI,CAACymC,MAAM,CAAE34C,CAAC,EAAE2sH,SAAS,CAACv6G,CAAC,EAAEu6G,SAAS,CAACj6G,CAAC,EAAEi6G,SAAS,CAAC1lG,CAAE,CAAC;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA0c,KAAMrG,KAAK,EAAE2B,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC2lC,UAAU,EAAG3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;MAErD,IAAI,CAACsS,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM,CAAE,GAAG7H,CAAC;MAE7D,OAAO,IAAI;IAEZ;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAA2c,KAAMtG,KAAK,EAAEiC,CAAC,EAAG;MAEhB,IAAK,IAAI,CAACqlC,UAAU,EAAGrlC,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAErD,IAAI,CAACsS,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM,GAAG,CAAC,CAAE,GAAGvH,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAgtB,KAAM3W,KAAK,EAAEwW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC8wB,UAAU,EAAG9wB,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAErD,IAAI,CAACsS,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM,GAAG,CAAC,CAAE,GAAGgN,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAitB,KAAM5W,KAAK,EAAEyW,CAAC,EAAG;MAEhB,IAAK,IAAI,CAAC6wB,UAAU,EAAG7wB,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAErD,IAAI,CAACsS,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM,GAAG,CAAC,CAAE,GAAGiN,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAigB,KAAM5J,KAAK,EAAG;MAEb,IAAI2B,CAAC,GAAG,IAAI,CAAC+Q,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM,CAAE;MAEjE,IAAK,IAAI,CAAC89B,UAAU,EAAG3lC,CAAC,GAAGyD,WAAW,CAAEzD,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;MAEvD,OAAOuB,CAAC;IAET;EAAC;IAAAlY,GAAA;IAAAE,KAAA,EAED,SAAAkgB,KAAM7J,KAAK,EAAG;MAEb,IAAIiC,CAAC,GAAG,IAAI,CAACyQ,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM,GAAG,CAAC,CAAE;MAErE,IAAK,IAAI,CAAC89B,UAAU,EAAGrlC,CAAC,GAAGmD,WAAW,CAAEnD,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAEvD,OAAO6B,CAAC;IAET;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAsuB,KAAMjY,KAAK,EAAG;MAEb,IAAIwW,CAAC,GAAG,IAAI,CAAC9D,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM,GAAG,CAAC,CAAE;MAErE,IAAK,IAAI,CAAC89B,UAAU,EAAG9wB,CAAC,GAAGpR,WAAW,CAAEoR,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAEvD,OAAOoW,CAAC;IAET;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAuuB,KAAMlY,KAAK,EAAG;MAEb,IAAIyW,CAAC,GAAG,IAAI,CAAC/D,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM,GAAG,CAAC,CAAE;MAErE,IAAK,IAAI,CAAC89B,UAAU,EAAG7wB,CAAC,GAAGrR,WAAW,CAAEqR,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAEvD,OAAOqW,CAAC;IAET;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAs+C,MAAOjoC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAG;MAEpBjC,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM;MAE9C,IAAK,IAAI,CAAC89B,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACsS,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAChC,IAAI,CAAC+Q,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAu+C,OAAQloC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAExBxW,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM;MAE9C,IAAK,IAAI,CAAC89B,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;QAC9BoW,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACsS,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAChC,IAAI,CAAC+Q,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAChC,IAAI,CAACyQ,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwW,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAy+C,QAASpoC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAEC,CAAC,EAAG;MAE5BzW,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAC0S,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM;MAE9C,IAAK,IAAI,CAAC89B,UAAU,EAAG;QAEtB3lC,CAAC,GAAGiE,SAAS,CAAEjE,CAAC,EAAE,IAAI,CAACvB,KAAM,CAAC;QAC9B6B,CAAC,GAAG2D,SAAS,CAAE3D,CAAC,EAAE,IAAI,CAAC7B,KAAM,CAAC;QAC9BoW,CAAC,GAAG5Q,SAAS,CAAE4Q,CAAC,EAAE,IAAI,CAACpW,KAAM,CAAC;QAC9BqW,CAAC,GAAG7Q,SAAS,CAAE6Q,CAAC,EAAE,IAAI,CAACrW,KAAM,CAAC;MAE/B;MAEA,IAAI,CAACsS,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAChC,IAAI,CAAC+Q,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAChC,IAAI,CAACyQ,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGwW,CAAC;MAChC,IAAI,CAAC9D,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGyW,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAOiM,IAAI,EAAG;MAEb,IAAKA,IAAI,KAAK1kB,SAAS,EAAG;QAEzBkX,OAAO,CAACpB,GAAG,CAAE,mHAAoH,CAAC;QAElI,IAAM1D,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI7Q,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2rB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;UAEvC,IAAMyQ,KAAK,GAAGzQ,CAAC,GAAG,IAAI,CAACmjB,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM;UAEhD,KAAM,IAAI+d,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8f,QAAQ,EAAE9f,CAAC,EAAG,EAAG;YAE1CnnB,KAAK,CAACrR,IAAI,CAAE,IAAI,CAAC2jB,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAGunB,CAAC,CAAG,CAAC;UAE3C;QAED;QAEA,OAAO,IAAI6f,eAAe,CAAE,IAAI,IAAI,CAAChnC,KAAK,CAACxQ,WAAW,CAAEwQ,KAAM,CAAC,EAAE,IAAI,CAACinC,QAAQ,EAAE,IAAI,CAACC,UAAW,CAAC;MAElG,CAAC,MAAM;QAEN,IAAK50B,IAAI,CAAC2pG,kBAAkB,KAAKruH,SAAS,EAAG;UAE5C0kB,IAAI,CAAC2pG,kBAAkB,GAAG,CAAC,CAAC;QAE7B;QAEA,IAAK3pG,IAAI,CAAC2pG,kBAAkB,CAAE,IAAI,CAAC3pG,IAAI,CAACxR,IAAI,CAAE,KAAKlT,SAAS,EAAG;UAE9D0kB,IAAI,CAAC2pG,kBAAkB,CAAE,IAAI,CAAC3pG,IAAI,CAACxR,IAAI,CAAE,GAAG,IAAI,CAACwR,IAAI,CAACjM,KAAK,CAAEiM,IAAK,CAAC;QAEpE;QAEA,OAAO,IAAIypG,0BAA0B,CAAEzpG,IAAI,CAAC2pG,kBAAkB,CAAE,IAAI,CAAC3pG,IAAI,CAACxR,IAAI,CAAE,EAAE,IAAI,CAACmmC,QAAQ,EAAE,IAAI,CAAC79B,MAAM,EAAE,IAAI,CAAC89B,UAAW,CAAC;MAEhI;IAED;EAAC;IAAA79C,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQL,IAAI,EAAG;MAEd,IAAKA,IAAI,KAAK1kB,SAAS,EAAG;QAEzBkX,OAAO,CAACpB,GAAG,CAAE,wHAAyH,CAAC;QAEvI,IAAM1D,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI7Q,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2rB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;UAEvC,IAAMyQ,KAAK,GAAGzQ,CAAC,GAAG,IAAI,CAACmjB,IAAI,CAACq8B,MAAM,GAAG,IAAI,CAACvlC,MAAM;UAEhD,KAAM,IAAI+d,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8f,QAAQ,EAAE9f,CAAC,EAAG,EAAG;YAE1CnnB,KAAK,CAACrR,IAAI,CAAE,IAAI,CAAC2jB,IAAI,CAACtS,KAAK,CAAEJ,KAAK,GAAGunB,CAAC,CAAG,CAAC;UAE3C;QAED;;QAEA;;QAEA,OAAO;UACN8f,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvB77C,IAAI,EAAE,IAAI,CAAC4U,KAAK,CAACxQ,WAAW,CAACC,IAAI;UACjCuQ,KAAK,EAAEA,KAAK;UACZknC,UAAU,EAAE,IAAI,CAACA;QAClB,CAAC;MAEF,CAAC,MAAM;QAEN;;QAEA,IAAK50B,IAAI,CAAC2pG,kBAAkB,KAAKruH,SAAS,EAAG;UAE5C0kB,IAAI,CAAC2pG,kBAAkB,GAAG,CAAC,CAAC;QAE7B;QAEA,IAAK3pG,IAAI,CAAC2pG,kBAAkB,CAAE,IAAI,CAAC3pG,IAAI,CAACxR,IAAI,CAAE,KAAKlT,SAAS,EAAG;UAE9D0kB,IAAI,CAAC2pG,kBAAkB,CAAE,IAAI,CAAC3pG,IAAI,CAACxR,IAAI,CAAE,GAAG,IAAI,CAACwR,IAAI,CAACK,MAAM,CAAEL,IAAK,CAAC;QAErE;QAEA,OAAO;UACNo8B,4BAA4B,EAAE,IAAI;UAClCzH,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvB30B,IAAI,EAAE,IAAI,CAACA,IAAI,CAACxR,IAAI;UACpBsI,MAAM,EAAE,IAAI,CAACA,MAAM;UACnB89B,UAAU,EAAE,IAAI,CAACA;QAClB,CAAC;MAEF;IAED;EAAC;EAAA,OAAA60E,0BAAA;AAAA;AAAAlzH,OAAA,CAAAkzH,0BAAA,GAAAA,0BAAA;AAAA,IAIIxhC,cAAc,0BAAA2hC,UAAA;EAAAzoG,SAAA,CAAA8mE,cAAA,EAAA2hC,UAAA;EAAA,IAAAC,QAAA,GAAAxoG,YAAA,CAAA4mE,cAAA;EAEnB,SAAAA,eAAariD,UAAU,EAAG;IAAA,IAAAkkF,OAAA;IAAA1qH,eAAA,OAAA6oF,cAAA;IAEzB6hC,OAAA,GAAAD,QAAA,CAAA9wH,IAAA;IAEA+wH,OAAA,CAAK5O,gBAAgB,GAAG,IAAI;IAE5B4O,OAAA,CAAKhxH,IAAI,GAAG,gBAAgB;IAE5BgxH,OAAA,CAAKvsG,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC;IAElC24E,OAAA,CAAK77E,GAAG,GAAG,IAAI;IAEf67E,OAAA,CAAK37E,QAAQ,GAAG,IAAI;IAEpB27E,OAAA,CAAKtuG,QAAQ,GAAG,CAAC;IAEjBsuG,OAAA,CAAK55E,eAAe,GAAG,IAAI;IAE3B45E,OAAA,CAAK//E,WAAW,GAAG,IAAI;IAEvB+/E,OAAA,CAAKl5E,GAAG,GAAG,IAAI;IAEfk5E,OAAA,CAAKz9E,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAkkF,OAAA;EAE9B;EAAClqH,YAAA,CAAAqoF,cAAA;IAAAlxF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAu0C,cAAA,CAAAvxF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC5E,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAE/B,IAAI,CAAC0wB,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAAC3yB,QAAQ,GAAG2G,MAAM,CAAC3G,QAAQ;MAE/B,IAAI,CAAC00B,eAAe,GAAG/tB,MAAM,CAAC+tB,eAAe;MAE7C,IAAI,CAACU,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAq3C,cAAA;AAAA,EA9C2B3+C,QAAQ;AAAA/yC,OAAA,CAAA0xF,cAAA,GAAAA,cAAA;AAkDrC,IAAI8hC,SAAS;AAEb,IAAMC,eAAe,GAAG,aAAc,IAAIx8F,OAAO,CAAC,CAAC;AACnD,IAAMy8F,WAAW,GAAG,aAAc,IAAIz8F,OAAO,CAAC,CAAC;AAC/C,IAAM08F,WAAW,GAAG,aAAc,IAAI18F,OAAO,CAAC,CAAC;AAE/C,IAAM28F,gBAAgB,GAAG,aAAc,IAAI92G,OAAO,CAAC,CAAC;AACpD,IAAM+2G,gBAAgB,GAAG,aAAc,IAAI/2G,OAAO,CAAC,CAAC;AACpD,IAAMg3G,gBAAgB,GAAG,aAAc,IAAIpxF,OAAO,CAAC,CAAC;AAEpD,IAAMqxF,GAAG,GAAG,aAAc,IAAI98F,OAAO,CAAC,CAAC;AACvC,IAAM+8F,GAAG,GAAG,aAAc,IAAI/8F,OAAO,CAAC,CAAC;AACvC,IAAMg9F,GAAG,GAAG,aAAc,IAAIh9F,OAAO,CAAC,CAAC;AAEvC,IAAMi9F,IAAI,GAAG,aAAc,IAAIp3G,OAAO,CAAC,CAAC;AACxC,IAAMq3G,IAAI,GAAG,aAAc,IAAIr3G,OAAO,CAAC,CAAC;AACxC,IAAMs3G,IAAI,GAAG,aAAc,IAAIt3G,OAAO,CAAC,CAAC;AAAC,IAEnCu3G,MAAM,0BAAAC,UAAA;EAAA1pG,SAAA,CAAAypG,MAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAzpG,YAAA,CAAAupG,MAAA;EAEX,SAAAA,OAAa1kF,QAAQ,EAAG;IAAA,IAAA6kF,OAAA;IAAA3rH,eAAA,OAAAwrH,MAAA;IAEvBG,OAAA,GAAAD,QAAA,CAAA/xH,IAAA;IAEAgyH,OAAA,CAAK/G,QAAQ,GAAG,IAAI;IAEpB+G,OAAA,CAAKjyH,IAAI,GAAG,QAAQ;IAEpB,IAAKixH,SAAS,KAAKzuH,SAAS,EAAG;MAE9ByuH,SAAS,GAAG,IAAI5xE,cAAc,CAAC,CAAC;MAEhC,IAAM6yE,YAAY,GAAG,IAAIr4G,YAAY,CAAE,CACtC,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACrB,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACnB,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAClB,CAAC;MAEH,IAAM+2G,iBAAiB,GAAG,IAAIP,iBAAiB,CAAE6B,YAAY,EAAE,CAAE,CAAC;MAElEjB,SAAS,CAAChxE,QAAQ,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;MAC1CgxE,SAAS,CAAC9wE,YAAY,CAAE,UAAU,EAAE,IAAIwwE,0BAA0B,CAAEC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAM,CAAE,CAAC;MACtGK,SAAS,CAAC9wE,YAAY,CAAE,IAAI,EAAE,IAAIwwE,0BAA0B,CAAEC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAM,CAAE,CAAC;IAEjG;IAEAqB,OAAA,CAAKp4F,QAAQ,GAAGo3F,SAAS;IACzBgB,OAAA,CAAK7kF,QAAQ,GAAKA,QAAQ,KAAK5qC,SAAS,GAAK4qC,QAAQ,GAAG,IAAI+hD,cAAc,CAAC,CAAC;IAE5E8iC,OAAA,CAAK1zG,MAAM,GAAG,IAAIhE,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;IAAC,OAAA03G,OAAA;EAEvC;EAACnrH,YAAA,CAAAgrH,MAAA;IAAA7zH,GAAA;IAAAE,KAAA,EAED,SAAAitC,QAASsa,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAKD,SAAS,CAAC9vB,MAAM,KAAK,IAAI,EAAG;QAEhClc,OAAO,CAAChY,KAAK,CAAE,uFAAwF,CAAC;MAEzG;MAEAyvH,WAAW,CAAC15F,kBAAkB,CAAE,IAAI,CAACxB,WAAY,CAAC;MAElDs7F,gBAAgB,CAACr2G,IAAI,CAAEwqC,SAAS,CAAC9vB,MAAM,CAACK,WAAY,CAAC;MACrD,IAAI,CAACiS,eAAe,CAACpoB,gBAAgB,CAAE4lC,SAAS,CAAC9vB,MAAM,CAACC,kBAAkB,EAAE,IAAI,CAACI,WAAY,CAAC;MAE9Fm7F,WAAW,CAAC55F,qBAAqB,CAAE,IAAI,CAAC0Q,eAAgB,CAAC;MAEzD,IAAKwd,SAAS,CAAC9vB,MAAM,CAACg1B,mBAAmB,IAAI,IAAI,CAACxd,QAAQ,CAACgK,eAAe,KAAK,KAAK,EAAG;QAEtF+5E,WAAW,CAACv1G,cAAc,CAAE,CAAEw1G,WAAW,CAACpmG,CAAE,CAAC;MAE9C;MAEA,IAAMtI,QAAQ,GAAG,IAAI,CAAC0qB,QAAQ,CAAC1qB,QAAQ;MACvC,IAAI1J,GAAG,EAAED,GAAG;MAEZ,IAAK2J,QAAQ,KAAK,CAAC,EAAG;QAErB3J,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAE2J,QAAS,CAAC;QAC1B1J,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAE0J,QAAS,CAAC;MAE3B;MAEA,IAAMnE,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B4zG,eAAe,CAAEX,GAAG,CAAC/3G,GAAG,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,CAAC,EAAE23G,WAAW,EAAE7yG,MAAM,EAAE4yG,WAAW,EAAEn4G,GAAG,EAAED,GAAI,CAAC;MACzFo5G,eAAe,CAAEV,GAAG,CAACh4G,GAAG,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,CAAC,EAAE23G,WAAW,EAAE7yG,MAAM,EAAE4yG,WAAW,EAAEn4G,GAAG,EAAED,GAAI,CAAC;MACvFo5G,eAAe,CAAET,GAAG,CAACj4G,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE23G,WAAW,EAAE7yG,MAAM,EAAE4yG,WAAW,EAAEn4G,GAAG,EAAED,GAAI,CAAC;MAErF44G,IAAI,CAACl4G,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;MAChBm4G,IAAI,CAACn4G,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;MAChBo4G,IAAI,CAACp4G,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;;MAEhB;MACA,IAAIiiB,SAAS,GAAGgqB,SAAS,CAACloB,GAAG,CAACoC,iBAAiB,CAAE4xF,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE,KAAK,EAAER,eAAgB,CAAC;MAExF,IAAKx1F,SAAS,KAAK,IAAI,EAAG;QAEzB;QACAy2F,eAAe,CAAEV,GAAG,CAACh4G,GAAG,CAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE23G,WAAW,EAAE7yG,MAAM,EAAE4yG,WAAW,EAAEn4G,GAAG,EAAED,GAAI,CAAC;QACvF64G,IAAI,CAACn4G,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;QAEhBiiB,SAAS,GAAGgqB,SAAS,CAACloB,GAAG,CAACoC,iBAAiB,CAAE4xF,GAAG,EAAEE,GAAG,EAAED,GAAG,EAAE,KAAK,EAAEP,eAAgB,CAAC;QACpF,IAAKx1F,SAAS,KAAK,IAAI,EAAG;UAEzB;QAED;MAED;MAEA,IAAMgO,QAAQ,GAAGgc,SAAS,CAACloB,GAAG,CAACF,MAAM,CAAClgB,UAAU,CAAE8zG,eAAgB,CAAC;MAEnE,IAAKxnF,QAAQ,GAAGgc,SAAS,CAAC1gB,IAAI,IAAI0E,QAAQ,GAAGgc,SAAS,CAACzgB,GAAG,EAAG;MAE7D0gB,UAAU,CAACpiD,IAAI,CAAE;QAEhBmmC,QAAQ,EAAEA,QAAQ;QAClBtQ,KAAK,EAAE83F,eAAe,CAACj2G,KAAK,CAAC,CAAC;QAC9B2P,EAAE,EAAEyjB,QAAQ,CAACgB,gBAAgB,CAAE6hF,eAAe,EAAEM,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE,IAAIt3G,OAAO,CAAC,CAAE,CAAC;QAChG4rC,IAAI,EAAE,IAAI;QACVphD,MAAM,EAAE;MAET,CAAE,CAAC;IAEJ;EAAC;IAAA9G,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAk3E,MAAA,CAAAl0H,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAKpkB,MAAM,CAAC9K,MAAM,KAAK/b,SAAS,EAAG,IAAI,CAAC+b,MAAM,CAACrD,IAAI,CAAEmO,MAAM,CAAC9K,MAAO,CAAC;MAEpE,IAAI,CAAC6uB,QAAQ,GAAG/jB,MAAM,CAAC+jB,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA0kF,MAAA;AAAA,EAzHmBtqF,QAAQ;AAAA/pC,OAAA,CAAAq0H,MAAA,GAAAA,MAAA;AA6H7B,SAASK,eAAeA,CAAEC,cAAc,EAAEC,UAAU,EAAE9zG,MAAM,EAAEsE,KAAK,EAAE7J,GAAG,EAAED,GAAG,EAAG;EAE/E;EACAs4G,gBAAgB,CAAC31G,UAAU,CAAE02G,cAAc,EAAE7zG,MAAO,CAAC,CAAClD,SAAS,CAAE,GAAI,CAAC,CAACM,QAAQ,CAAEkH,KAAM,CAAC;;EAExF;EACA,IAAK7J,GAAG,KAAKxW,SAAS,EAAG;IAExB8uH,gBAAgB,CAACn7G,CAAC,GAAK4C,GAAG,GAAGs4G,gBAAgB,CAACl7G,CAAC,GAAO6C,GAAG,GAAGq4G,gBAAgB,CAAC56G,CAAG;IAChF66G,gBAAgB,CAAC76G,CAAC,GAAKuC,GAAG,GAAGq4G,gBAAgB,CAACl7G,CAAC,GAAO4C,GAAG,GAAGs4G,gBAAgB,CAAC56G,CAAG;EAEjF,CAAC,MAAM;IAEN66G,gBAAgB,CAACp2G,IAAI,CAAEm2G,gBAAiB,CAAC;EAE1C;EAGAe,cAAc,CAACl3G,IAAI,CAAEm3G,UAAW,CAAC;EACjCD,cAAc,CAACj8G,CAAC,IAAIm7G,gBAAgB,CAACn7G,CAAC;EACtCi8G,cAAc,CAAC37G,CAAC,IAAI66G,gBAAgB,CAAC76G,CAAC;;EAEtC;EACA27G,cAAc,CAAC/mG,YAAY,CAAEkmG,gBAAiB,CAAC;AAEhD;AAEA,IAAMe,KAAK,GAAG,aAAc,IAAI59F,OAAO,CAAC,CAAC;AACzC,IAAM69F,KAAK,GAAG,aAAc,IAAI79F,OAAO,CAAC,CAAC;AAAC,IAEpC89F,GAAG,0BAAAC,UAAA;EAAApqG,SAAA,CAAAmqG,GAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAnqG,YAAA,CAAAiqG,GAAA;EAER,SAAAA,IAAA,EAAc;IAAA,IAAAG,OAAA;IAAArsH,eAAA,OAAAksH,GAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAzyH,IAAA;IAEA0yH,OAAA,CAAKC,aAAa,GAAG,CAAC;IAEtBD,OAAA,CAAK3yH,IAAI,GAAG,KAAK;IAEjBrC,MAAM,CAACsqC,gBAAgB,CAAA7e,sBAAA,CAAAupG,OAAA,GAAQ;MAC9BlkB,MAAM,EAAE;QACP5vG,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAE;MACR,CAAC;MACDutH,KAAK,EAAE;QACNvtH,KAAK,EAAE;MACR;IACD,CAAE,CAAC;IAEHw0H,OAAA,CAAKx4B,UAAU,GAAG,IAAI;IAAC,OAAAw4B,OAAA;EAExB;EAAC7rH,YAAA,CAAA0rH,GAAA;IAAAv0H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA43E,GAAA,CAAA50H,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAE,KAAK;MAEzB,IAAMolF,MAAM,GAAGplF,MAAM,CAAColF,MAAM;MAE5B,KAAM,IAAI1qG,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG45F,MAAM,CAAC3qG,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEjD,IAAMmnG,KAAK,GAAGuD,MAAM,CAAE1qG,CAAC,CAAE;QAEzB,IAAI,CAAC8uH,QAAQ,CAAE3nB,KAAK,CAACnmG,MAAM,CAACkW,KAAK,CAAC,CAAC,EAAEiwF,KAAK,CAACxhE,QAAQ,EAAEwhE,KAAK,CAAC4nB,UAAW,CAAC;MAExE;MAEA,IAAI,CAAC34B,UAAU,GAAG9wE,MAAM,CAAC8wE,UAAU;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAl8F,GAAA;IAAAE,KAAA,EAED,SAAA00H,SAAU9tH,MAAM,EAAE2kC,QAAQ,GAAG,CAAC,EAAEopF,UAAU,GAAG,CAAC,EAAG;MAEhDppF,QAAQ,GAAGz0B,IAAI,CAACgC,GAAG,CAAEyyB,QAAS,CAAC;MAE/B,IAAM+kE,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAI55F,CAAC;MAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG45F,MAAM,CAAC3qG,MAAM,EAAE+Q,CAAC,EAAG,EAAG;QAEtC,IAAK60B,QAAQ,GAAG+kE,MAAM,CAAE55F,CAAC,CAAE,CAAC60B,QAAQ,EAAG;UAEtC;QAED;MAED;MAEA+kE,MAAM,CAACh6F,MAAM,CAAEI,CAAC,EAAE,CAAC,EAAE;QAAE60B,QAAQ,EAAEA,QAAQ;QAAEopF,UAAU,EAAEA,UAAU;QAAE/tH,MAAM,EAAEA;MAAO,CAAE,CAAC;MAErF,IAAI,CAACqW,GAAG,CAAErW,MAAO,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA9G,GAAA;IAAAE,KAAA,EAED,SAAA40H,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAACH,aAAa;IAE1B;EAAC;IAAA30H,GAAA;IAAAE,KAAA,EAID,SAAA60H,qBAAsBtpF,QAAQ,EAAG;MAEhC,IAAM+kE,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC3qG,MAAM,GAAG,CAAC,EAAG;QAExB,IAAIC,CAAC,EAAE8Q,CAAC;QAER,KAAM9Q,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG45F,MAAM,CAAC3qG,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE7C,IAAIkvH,aAAa,GAAGxkB,MAAM,CAAE1qG,CAAC,CAAE,CAAC2lC,QAAQ;UAExC,IAAK+kE,MAAM,CAAE1qG,CAAC,CAAE,CAACgB,MAAM,CAACyjC,OAAO,EAAG;YAEjCyqF,aAAa,IAAIA,aAAa,GAAGxkB,MAAM,CAAE1qG,CAAC,CAAE,CAAC+uH,UAAU;UAExD;UAEA,IAAKppF,QAAQ,GAAGupF,aAAa,EAAG;YAE/B;UAED;QAED;QAEA,OAAOxkB,MAAM,CAAE1qG,CAAC,GAAG,CAAC,CAAE,CAACgB,MAAM;MAE9B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9G,GAAA;IAAAE,KAAA,EAED,SAAAitC,QAASsa,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAM8oD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC3qG,MAAM,GAAG,CAAC,EAAG;QAExBwuH,KAAK,CAAC96F,qBAAqB,CAAE,IAAI,CAACvB,WAAY,CAAC;QAE/C,IAAMyT,QAAQ,GAAGgc,SAAS,CAACloB,GAAG,CAACF,MAAM,CAAClgB,UAAU,CAAEk1G,KAAM,CAAC;QAEzD,IAAI,CAACU,oBAAoB,CAAEtpF,QAAS,CAAC,CAAC0B,OAAO,CAAEsa,SAAS,EAAEC,UAAW,CAAC;MAEvE;IAED;EAAC;IAAA1nD,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAQmF,MAAM,EAAG;MAEhB,IAAM64E,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC3qG,MAAM,GAAG,CAAC,EAAG;QAExBwuH,KAAK,CAAC96F,qBAAqB,CAAE5B,MAAM,CAACK,WAAY,CAAC;QACjDs8F,KAAK,CAAC/6F,qBAAqB,CAAE,IAAI,CAACvB,WAAY,CAAC;QAE/C,IAAMyT,QAAQ,GAAG4oF,KAAK,CAACl1G,UAAU,CAAEm1G,KAAM,CAAC,GAAG38F,MAAM,CAACi1B,IAAI;QAExD4jD,MAAM,CAAE,CAAC,CAAE,CAAC1pG,MAAM,CAACyjC,OAAO,GAAG,IAAI;QAEjC,IAAIzkC,CAAC,EAAE8Q,CAAC;QAER,KAAM9Q,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG45F,MAAM,CAAC3qG,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE7C,IAAIkvH,aAAa,GAAGxkB,MAAM,CAAE1qG,CAAC,CAAE,CAAC2lC,QAAQ;UAExC,IAAK+kE,MAAM,CAAE1qG,CAAC,CAAE,CAACgB,MAAM,CAACyjC,OAAO,EAAG;YAEjCyqF,aAAa,IAAIA,aAAa,GAAGxkB,MAAM,CAAE1qG,CAAC,CAAE,CAAC+uH,UAAU;UAExD;UAEA,IAAKppF,QAAQ,IAAIupF,aAAa,EAAG;YAEhCxkB,MAAM,CAAE1qG,CAAC,GAAG,CAAC,CAAE,CAACgB,MAAM,CAACyjC,OAAO,GAAG,KAAK;YACtCimE,MAAM,CAAE1qG,CAAC,CAAE,CAACgB,MAAM,CAACyjC,OAAO,GAAG,IAAI;UAElC,CAAC,MAAM;YAEN;UAED;QAED;QAEA,IAAI,CAACoqF,aAAa,GAAG7uH,CAAC,GAAG,CAAC;QAE1B,OAAQA,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAErB0qG,MAAM,CAAE1qG,CAAC,CAAE,CAACgB,MAAM,CAACyjC,OAAO,GAAG,KAAK;QAEnC;MAED;IAED;EAAC;IAAAvqC,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA43E,GAAA,CAAA50H,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjC,IAAK,IAAI,CAAC2yE,UAAU,KAAK,KAAK,EAAGjzE,IAAI,CAACniB,MAAM,CAACo1F,UAAU,GAAG,KAAK;MAE/DjzE,IAAI,CAACniB,MAAM,CAAC0pG,MAAM,GAAG,EAAE;MAEvB,IAAMA,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAI1qG,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG45F,MAAM,CAAC3qG,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEjD,IAAMmnG,KAAK,GAAGuD,MAAM,CAAE1qG,CAAC,CAAE;QAEzBmjB,IAAI,CAACniB,MAAM,CAAC0pG,MAAM,CAAClrG,IAAI,CAAE;UACxBwB,MAAM,EAAEmmG,KAAK,CAACnmG,MAAM,CAAC2Q,IAAI;UACzBg0B,QAAQ,EAAEwhE,KAAK,CAACxhE,QAAQ;UACxBopF,UAAU,EAAE5nB,KAAK,CAAC4nB;QACnB,CAAE,CAAC;MAEJ;MAEA,OAAO5rG,IAAI;IAEZ;EAAC;EAAA,OAAAsrG,GAAA;AAAA,EA1MgBhrF,QAAQ;AAAA/pC,OAAA,CAAA+0H,GAAA,GAAAA,GAAA;AA8M1B,IAAMU,aAAa,GAAG,aAAc,IAAIx+F,OAAO,CAAC,CAAC;AAEjD,IAAMy+F,UAAU,GAAG,aAAc,IAAIroG,OAAO,CAAC,CAAC;AAC9C,IAAMsoG,WAAW,GAAG,aAAc,IAAItoG,OAAO,CAAC,CAAC;AAE/C,IAAMu8F,QAAQ,GAAG,aAAc,IAAI3yF,OAAO,CAAC,CAAC;AAC5C,IAAM2+F,QAAQ,GAAG,aAAc,IAAIlzF,OAAO,CAAC,CAAC;AAC5C,IAAMmzF,OAAO,GAAG,aAAc,IAAI5+F,OAAO,CAAC,CAAC;AAE3C,IAAM6+F,SAAS,GAAG,aAAc,IAAIj3F,MAAM,CAAC,CAAC;AAC5C,IAAMk3F,gBAAgB,GAAG,aAAc,IAAIrzF,OAAO,CAAC,CAAC;AACpD,IAAMszF,MAAM,GAAG,aAAc,IAAIp2F,GAAG,CAAC,CAAC;AAAC,IAEjCq2F,WAAW,0BAAAC,KAAA;EAAAtrG,SAAA,CAAAqrG,WAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAArrG,YAAA,CAAAmrG,WAAA;EAEhB,SAAAA,YAAa75F,QAAQ,EAAEuT,QAAQ,EAAG;IAAA,IAAAymF,OAAA;IAAAvtH,eAAA,OAAAotH,WAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAA3zH,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzBymF,OAAA,CAAK7mF,aAAa,GAAG,IAAI;IAEzB6mF,OAAA,CAAK7zH,IAAI,GAAG,aAAa;IAEzB6zH,OAAA,CAAK5mF,QAAQ,GAAG,UAAU;IAC1B4mF,OAAA,CAAK3mF,UAAU,GAAG,IAAI/M,OAAO,CAAC,CAAC;IAC/B0zF,OAAA,CAAKC,iBAAiB,GAAG,IAAI3zF,OAAO,CAAC,CAAC;IAEtC0zF,OAAA,CAAKp6F,WAAW,GAAG,IAAI;IACvBo6F,OAAA,CAAKh0E,cAAc,GAAG,IAAI;IAAC,OAAAg0E,OAAA;EAE5B;EAAC/sH,YAAA,CAAA4sH,WAAA;IAAAz1H,GAAA;IAAAE,KAAA,EAED,SAAAu7B,mBAAA,EAAqB;MAEpB,IAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAK,IAAI,CAACJ,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,GAAG,IAAIzB,IAAI,CAAC,CAAC;MAE9B;MAEA,IAAI,CAACyB,WAAW,CAACrB,SAAS,CAAC,CAAC;MAE5B,IAAMoqB,iBAAiB,GAAG3oB,QAAQ,CAACqmB,YAAY,CAAE,UAAW,CAAC;MAE7D,KAAM,IAAIn8C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGy+C,iBAAiB,CAAC9yB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;QAEpDuvH,OAAO,CAACp1G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,CAAE,CAAC;QACnD,IAAI,CAACgwH,kBAAkB,CAAEhwH,CAAC,EAAEuvH,OAAQ,CAAC;QACrC,IAAI,CAAC75F,WAAW,CAACpB,aAAa,CAAEi7F,OAAQ,CAAC;MAE1C;IAED;EAAC;IAAAr1H,GAAA;IAAAE,KAAA,EAED,SAAAwiD,sBAAA,EAAwB;MAEvB,IAAM9mB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAK,IAAI,CAACgmB,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACA,cAAc,GAAG,IAAIvjB,MAAM,CAAC,CAAC;MAEnC;MAEA,IAAI,CAACujB,cAAc,CAACznB,SAAS,CAAC,CAAC;MAE/B,IAAMoqB,iBAAiB,GAAG3oB,QAAQ,CAACqmB,YAAY,CAAE,UAAW,CAAC;MAE7D,KAAM,IAAIn8C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGy+C,iBAAiB,CAAC9yB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;QAEpDuvH,OAAO,CAACp1G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,CAAE,CAAC;QACnD,IAAI,CAACgwH,kBAAkB,CAAEhwH,CAAC,EAAEuvH,OAAQ,CAAC;QACrC,IAAI,CAACzzE,cAAc,CAACxnB,aAAa,CAAEi7F,OAAQ,CAAC;MAE7C;IAED;EAAC;IAAAr1H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA84E,WAAA,CAAA91H,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAACR,QAAQ,GAAG5jB,MAAM,CAAC4jB,QAAQ;MAC/B,IAAI,CAACC,UAAU,CAAChyB,IAAI,CAAEmO,MAAM,CAAC6jB,UAAW,CAAC;MACzC,IAAI,CAAC4mF,iBAAiB,CAAC54G,IAAI,CAAEmO,MAAM,CAACyqG,iBAAkB,CAAC;MAEvD,IAAI,CAAC3mF,QAAQ,GAAG9jB,MAAM,CAAC8jB,QAAQ;MAE/B,IAAK9jB,MAAM,CAACoQ,WAAW,KAAK,IAAI,EAAG,IAAI,CAACA,WAAW,GAAGpQ,MAAM,CAACoQ,WAAW,CAACxe,KAAK,CAAC,CAAC;MAChF,IAAKoO,MAAM,CAACw2B,cAAc,KAAK,IAAI,EAAG,IAAI,CAACA,cAAc,GAAGx2B,MAAM,CAACw2B,cAAc,CAAC5kC,KAAK,CAAC,CAAC;MAEzF,OAAO,IAAI;IAEZ;EAAC;IAAAhd,GAAA;IAAAE,KAAA,EAED,SAAAitC,QAASsa,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMvY,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMnX,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpC,IAAKmX,QAAQ,KAAK5qC,SAAS,EAAG;;MAE9B;;MAEA,IAAK,IAAI,CAACq9C,cAAc,KAAK,IAAI,EAAG,IAAI,CAACc,qBAAqB,CAAC,CAAC;MAEhE4yE,SAAS,CAACr4G,IAAI,CAAE,IAAI,CAAC2kC,cAAe,CAAC;MACrC0zE,SAAS,CAACloG,YAAY,CAAE4K,WAAY,CAAC;MAErC,IAAKyvB,SAAS,CAACloB,GAAG,CAACnD,gBAAgB,CAAEk5F,SAAU,CAAC,KAAK,KAAK,EAAG;;MAE7D;;MAEAC,gBAAgB,CAACt4G,IAAI,CAAE+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;MAC7CgyG,MAAM,CAACv4G,IAAI,CAAEwqC,SAAS,CAACloB,GAAI,CAAC,CAACnS,YAAY,CAAEmoG,gBAAiB,CAAC;;MAE7D;;MAEA,IAAK,IAAI,CAAC/5F,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAKg6F,MAAM,CAACr5F,aAAa,CAAE,IAAI,CAACX,WAAY,CAAC,KAAK,KAAK,EAAG;MAE3D;;MAEA;;MAEA,IAAI,CAACmsB,qBAAqB,CAAEF,SAAS,EAAEC,UAAU,EAAE8tE,MAAO,CAAC;IAE5D;EAAC;IAAAx1H,GAAA;IAAAE,KAAA,EAED,SAAAmnD,kBAAmB9wC,KAAK,EAAE9N,MAAM,EAAG;MAElCi0C,IAAA,CAAAC,eAAA,CAAA84E,WAAA,CAAA91H,SAAA,8BAAAqC,IAAA,OAAyBuU,KAAK,EAAE9N,MAAM;MAEtC,IAAI,CAACqtH,kBAAkB,CAAEv/G,KAAK,EAAE9N,MAAO,CAAC;MAExC,OAAOA,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAykH,KAAMz1E,QAAQ,EAAED,UAAU,EAAG;MAE5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;MAExB,IAAKD,UAAU,KAAK1qC,SAAS,EAAG;QAE/B,IAAI,CAACgpC,iBAAiB,CAAE,IAAK,CAAC;QAE9B,IAAI,CAAC2B,QAAQ,CAAC6mF,iBAAiB,CAAC,CAAC;QAEjC9mF,UAAU,GAAG,IAAI,CAACjX,WAAW;MAE9B;MAEA,IAAI,CAACiX,UAAU,CAAChyB,IAAI,CAAEgyB,UAAW,CAAC;MAClC,IAAI,CAAC4mF,iBAAiB,CAAC54G,IAAI,CAAEgyB,UAAW,CAAC,CAACzrB,MAAM,CAAC,CAAC;IAEnD;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAAo8G,KAAA,EAAO;MAEN,IAAI,CAACptE,QAAQ,CAACotE,IAAI,CAAC,CAAC;IAErB;EAAC;IAAAt8G,GAAA;IAAAE,KAAA,EAED,SAAA81H,qBAAA,EAAuB;MAEtB,IAAM36F,MAAM,GAAG,IAAIxO,OAAO,CAAC,CAAC;MAE5B,IAAMopG,UAAU,GAAG,IAAI,CAACr6F,QAAQ,CAACC,UAAU,CAACo6F,UAAU;MAEtD,KAAM,IAAInwH,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGq/G,UAAU,CAACxkG,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEpDu1B,MAAM,CAACpb,mBAAmB,CAAEg2G,UAAU,EAAEnwH,CAAE,CAAC;QAE3C,IAAM8e,KAAK,GAAG,GAAG,GAAGyW,MAAM,CAACzc,eAAe,CAAC,CAAC;QAE5C,IAAKgG,KAAK,KAAKoV,QAAQ,EAAG;UAEzBqB,MAAM,CAAC1d,cAAc,CAAEiH,KAAM,CAAC;QAE/B,CAAC,MAAM;UAENyW,MAAM,CAAC7f,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;QAE3B;;QAEAy6G,UAAU,CAACt3E,OAAO,CAAE74C,CAAC,EAAEu1B,MAAM,CAACnjB,CAAC,EAAEmjB,MAAM,CAAC7iB,CAAC,EAAE6iB,MAAM,CAACtO,CAAC,EAAEsO,MAAM,CAACrO,CAAE,CAAC;MAEhE;IAED;EAAC;IAAAhtB,GAAA;IAAAE,KAAA,EAED,SAAAqtC,kBAAmBC,KAAK,EAAG;MAE1BkP,IAAA,CAAAC,eAAA,CAAA84E,WAAA,CAAA91H,SAAA,8BAAAqC,IAAA,OAAyBwrC,KAAK;MAE9B,IAAK,IAAI,CAACwB,QAAQ,KAAK,UAAU,EAAG;QAEnC,IAAI,CAAC6mF,iBAAiB,CAAC54G,IAAI,CAAE,IAAI,CAAC+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;MAEzD,CAAC,MAAM,IAAK,IAAI,CAACwrB,QAAQ,KAAK,UAAU,EAAG;QAE1C,IAAI,CAAC6mF,iBAAiB,CAAC54G,IAAI,CAAE,IAAI,CAACgyB,UAAW,CAAC,CAACzrB,MAAM,CAAC,CAAC;MAExD,CAAC,MAAM;QAEN/H,OAAO,CAACC,IAAI,CAAE,4CAA4C,GAAG,IAAI,CAACszB,QAAS,CAAC;MAE7E;IAED;EAAC;IAAAhvC,GAAA;IAAAE,KAAA,EAED,SAAA41H,mBAAoBv/G,KAAK,EAAE8kB,MAAM,EAAG;MAEnC,IAAM6T,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMtT,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9Bs5F,UAAU,CAACj1G,mBAAmB,CAAE2b,QAAQ,CAACC,UAAU,CAACq6F,SAAS,EAAE3/G,KAAM,CAAC;MACtE4+G,WAAW,CAACl1G,mBAAmB,CAAE2b,QAAQ,CAACC,UAAU,CAACo6F,UAAU,EAAE1/G,KAAM,CAAC;MAExE0+G,aAAa,CAACh4G,IAAI,CAAEoe,MAAO,CAAC,CAACjO,YAAY,CAAE,IAAI,CAAC6hB,UAAW,CAAC;MAE5D5T,MAAM,CAAC7f,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAErB,KAAM,IAAI1V,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAM2xE,MAAM,GAAG09C,WAAW,CAACp4G,YAAY,CAAEjX,CAAE,CAAC;QAE5C,IAAK2xE,MAAM,KAAK,CAAC,EAAG;UAEnB,IAAM0+C,SAAS,GAAGjB,UAAU,CAACn4G,YAAY,CAAEjX,CAAE,CAAC;UAE9CsvH,QAAQ,CAACvzG,gBAAgB,CAAEqtB,QAAQ,CAACknF,KAAK,CAAED,SAAS,CAAE,CAACn+F,WAAW,EAAEkX,QAAQ,CAACmnF,YAAY,CAAEF,SAAS,CAAG,CAAC;UAExG96F,MAAM,CAAC/d,eAAe,CAAE8rG,QAAQ,CAACnsG,IAAI,CAAEg4G,aAAc,CAAC,CAAC7nG,YAAY,CAAEgoG,QAAS,CAAC,EAAE39C,MAAO,CAAC;QAE1F;MAED;MAEA,OAAOp8C,MAAM,CAACjO,YAAY,CAAE,IAAI,CAACyoG,iBAAkB,CAAC;IAErD;EAAC;IAAA71H,GAAA;IAAAE,KAAA,EAED,SAAAo2H,cAAe//G,KAAK,EAAE8kB,MAAM,EAAG;MAAE;;MAEhC5f,OAAO,CAACC,IAAI,CAAE,mFAAoF,CAAC;MACnG,OAAO,IAAI,CAACo6G,kBAAkB,CAAEv/G,KAAK,EAAE8kB,MAAO,CAAC;IAEhD;EAAC;EAAA,OAAAo6F,WAAA;AAAA,EA/OwB5uE,IAAI;AAAArnD,OAAA,CAAAi2H,WAAA,GAAAA,WAAA;AAAA,IAoPxBc,IAAI,0BAAAC,UAAA;EAAApsG,SAAA,CAAAmsG,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAnsG,YAAA,CAAAisG,IAAA;EAET,SAAAA,KAAA,EAAc;IAAA,IAAAG,OAAA;IAAAruH,eAAA,OAAAkuH,IAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAz0H,IAAA;IAEA00H,OAAA,CAAKC,MAAM,GAAG,IAAI;IAElBD,OAAA,CAAK30H,IAAI,GAAG,MAAM;IAAC,OAAA20H,OAAA;EAEpB;EAAC,OAAA7tH,YAAA,CAAA0tH,IAAA;AAAA,EAViBhtF,QAAQ;AAAA/pC,OAAA,CAAA+2H,IAAA,GAAAA,IAAA;AAAA,IAcrBK,WAAW,0BAAAC,SAAA;EAAAzsG,SAAA,CAAAwsG,WAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAxsG,YAAA,CAAAssG,WAAA;EAEhB,SAAAA,YAAa3tG,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEwC,MAAM,EAAE/oB,IAAI,EAAEyoB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,GAAG7c,aAAa,EAAE8c,SAAS,GAAG9c,aAAa,EAAEgd,UAAU,EAAE1D,UAAU,EAAG;IAAA,IAAA0vG,OAAA;IAAA1uH,eAAA,OAAAuuH,WAAA;IAEpKG,OAAA,GAAAD,QAAA,CAAA90H,IAAA,OAAO,IAAI,EAAEwoB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU,EAAE1D,UAAU;IAE9F0vG,OAAA,CAAKjtG,aAAa,GAAG,IAAI;IAEzBitG,OAAA,CAAK9uG,KAAK,GAAG;MAAEgB,IAAI,EAAEA,IAAI;MAAEZ,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAEzDyuG,OAAA,CAAKrrG,eAAe,GAAG,KAAK;IAC5BqrG,OAAA,CAAKnrG,KAAK,GAAG,KAAK;IAClBmrG,OAAA,CAAKlrG,eAAe,GAAG,CAAC;IAAC,OAAAkrG,OAAA;EAE1B;EAAC,OAAAluH,YAAA,CAAA+tH,WAAA;AAAA,EAdwB1sG,OAAO;AAAA1qB,OAAA,CAAAo3H,WAAA,GAAAA,WAAA;AAkBjC,IAAMI,aAAa,GAAG,aAAc,IAAI90F,OAAO,CAAC,CAAC;AACjD,IAAM+0F,eAAe,GAAG,aAAc,IAAI/0F,OAAO,CAAC,CAAC;AAAC,IAE9Cg1F,QAAQ;EAEb,SAAAA,SAAad,KAAK,GAAG,EAAE,EAAEC,YAAY,GAAG,EAAE,EAAG;IAAAhuH,eAAA,OAAA6uH,QAAA;IAE5C,IAAI,CAACz/G,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1B,IAAI,CAACi/G,KAAK,GAAGA,KAAK,CAAChvH,KAAK,CAAE,CAAE,CAAC;IAC7B,IAAI,CAACivH,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACc,YAAY,GAAG,IAAI;IAExB,IAAI,CAAClI,WAAW,GAAG,IAAI;IACvB,IAAI,CAACE,eAAe,GAAG,CAAC;IAExB,IAAI,CAACt+C,IAAI,CAAC,CAAC;EAEZ;EAAChoE,YAAA,CAAAquH,QAAA;IAAAl3H,GAAA;IAAAE,KAAA,EAED,SAAA2wE,KAAA,EAAO;MAEN,IAAMulD,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,IAAI,CAACc,YAAY,GAAG,IAAIv7G,YAAY,CAAEw6G,KAAK,CAACvwH,MAAM,GAAG,EAAG,CAAC;;MAEzD;;MAEA,IAAKwwH,YAAY,CAACxwH,MAAM,KAAK,CAAC,EAAG;QAEhC,IAAI,CAACkwH,iBAAiB,CAAC,CAAC;MAEzB,CAAC,MAAM;QAEN;;QAEA,IAAKK,KAAK,CAACvwH,MAAM,KAAKwwH,YAAY,CAACxwH,MAAM,EAAG;UAE3C4V,OAAO,CAACC,IAAI,CAAE,iFAAkF,CAAC;UAEjG,IAAI,CAAC26G,YAAY,GAAG,EAAE;UAEtB,KAAM,IAAIvwH,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG,IAAI,CAACwkG,KAAK,CAACvwH,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;YAEvD,IAAI,CAACuwH,YAAY,CAAC/wH,IAAI,CAAE,IAAI48B,OAAO,CAAC,CAAE,CAAC;UAExC;QAED;MAED;IAED;EAAC;IAAAliC,GAAA;IAAAE,KAAA,EAED,SAAA61H,kBAAA,EAAoB;MAEnB,IAAI,CAACM,YAAY,CAACxwH,MAAM,GAAG,CAAC;MAE5B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG,IAAI,CAACwkG,KAAK,CAACvwH,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAEvD,IAAMsxH,OAAO,GAAG,IAAIl1F,OAAO,CAAC,CAAC;QAE7B,IAAK,IAAI,CAACk0F,KAAK,CAAEtwH,CAAC,CAAE,EAAG;UAEtBsxH,OAAO,CAACn6G,IAAI,CAAE,IAAI,CAACm5G,KAAK,CAAEtwH,CAAC,CAAE,CAACkyB,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;QAErD;QAEA,IAAI,CAAC6yG,YAAY,CAAC/wH,IAAI,CAAE8xH,OAAQ,CAAC;MAElC;IAED;EAAC;IAAAp3H,GAAA;IAAAE,KAAA,EAED,SAAAo8G,KAAA,EAAO;MAEN;;MAEA,KAAM,IAAIx2G,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG,IAAI,CAACwkG,KAAK,CAACvwH,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAEvD,IAAMuxH,IAAI,GAAG,IAAI,CAACjB,KAAK,CAAEtwH,CAAC,CAAE;QAE5B,IAAKuxH,IAAI,EAAG;UAEXA,IAAI,CAACr/F,WAAW,CAAC/a,IAAI,CAAE,IAAI,CAACo5G,YAAY,CAAEvwH,CAAC,CAAG,CAAC,CAAC0d,MAAM,CAAC,CAAC;QAEzD;MAED;;MAEA;;MAEA,KAAM,IAAI1d,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAG,IAAI,CAACwkG,KAAK,CAACvwH,MAAM,EAAEC,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAG;QAEvD,IAAMuxH,KAAI,GAAG,IAAI,CAACjB,KAAK,CAAEtwH,IAAC,CAAE;QAE5B,IAAKuxH,KAAI,EAAG;UAEX,IAAKA,KAAI,CAACztF,MAAM,IAAIytF,KAAI,CAACztF,MAAM,CAAC+sF,MAAM,EAAG;YAExCU,KAAI,CAAClyG,MAAM,CAAClI,IAAI,CAAEo6G,KAAI,CAACztF,MAAM,CAAC5R,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;YACpD6zG,KAAI,CAAClyG,MAAM,CAACzH,QAAQ,CAAE25G,KAAI,CAACr/F,WAAY,CAAC;UAEzC,CAAC,MAAM;YAENq/F,KAAI,CAAClyG,MAAM,CAAClI,IAAI,CAAEo6G,KAAI,CAACr/F,WAAY,CAAC;UAErC;UAEAq/F,KAAI,CAAClyG,MAAM,CAACkhB,SAAS,CAAEgxF,KAAI,CAACv7F,QAAQ,EAAEu7F,KAAI,CAAChlG,UAAU,EAAEglG,KAAI,CAACzyG,KAAM,CAAC;QAEpE;MAED;IAED;EAAC;IAAA5kB,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAA,EAAS;MAER,IAAM4jG,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MACtC,IAAMc,YAAY,GAAG,IAAI,CAACA,YAAY;MACtC,IAAMlI,WAAW,GAAG,IAAI,CAACA,WAAW;;MAEpC;;MAEA,KAAM,IAAInpH,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGwkG,KAAK,CAACvwH,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAElD;;QAEA,IAAMqf,MAAM,GAAGixG,KAAK,CAAEtwH,CAAC,CAAE,GAAGswH,KAAK,CAAEtwH,CAAC,CAAE,CAACkyB,WAAW,GAAGi/F,eAAe;QAEpED,aAAa,CAACn1G,gBAAgB,CAAEsD,MAAM,EAAEkxG,YAAY,CAAEvwH,CAAC,CAAG,CAAC;QAC3DkxH,aAAa,CAACh3G,OAAO,CAAEm3G,YAAY,EAAErxH,CAAC,GAAG,EAAG,CAAC;MAE9C;MAEA,IAAKmpH,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,CAAC3iG,WAAW,GAAG,IAAI;MAE/B;IAED;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAIk6G,QAAQ,CAAE,IAAI,CAACd,KAAK,EAAE,IAAI,CAACC,YAAa,CAAC;IAErD;EAAC;IAAAr2H,GAAA;IAAAE,KAAA,EAED,SAAAgvH,mBAAA,EAAqB;MAEpB;MACA;MACA;MACA;MACA;MACA;;MAEA,IAAIx0F,IAAI,GAAG1jB,IAAI,CAAC2H,IAAI,CAAE,IAAI,CAACy3G,KAAK,CAACvwH,MAAM,GAAG,CAAE,CAAC,CAAC,CAAC;MAC/C60B,IAAI,GAAGxgB,cAAc,CAAEwgB,IAAK,CAAC;MAC7BA,IAAI,GAAG1jB,IAAI,CAACa,GAAG,CAAE6iB,IAAI,EAAE,CAAE,CAAC;MAE1B,IAAMy8F,YAAY,GAAG,IAAIv7G,YAAY,CAAE8e,IAAI,GAAGA,IAAI,GAAG,CAAE,CAAC,CAAC,CAAC;MAC1Dy8F,YAAY,CAAC37G,GAAG,CAAE,IAAI,CAAC27G,YAAa,CAAC,CAAC,CAAC;;MAEvC,IAAMlI,WAAW,GAAG,IAAI2H,WAAW,CAAEO,YAAY,EAAEz8F,IAAI,EAAEA,IAAI,EAAErrB,UAAU,EAAEN,SAAU,CAAC;MACtFkgH,WAAW,CAAC3iG,WAAW,GAAG,IAAI;MAE9B,IAAI,CAAC6qG,YAAY,GAAGA,YAAY;MAChC,IAAI,CAAClI,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACE,eAAe,GAAGz0F,IAAI;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAA16B,GAAA;IAAAE,KAAA,EAED,SAAAo3H,cAAelxH,IAAI,EAAG;MAErB,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG,IAAI,CAACwkG,KAAK,CAACvwH,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAEvD,IAAMuxH,IAAI,GAAG,IAAI,CAACjB,KAAK,CAAEtwH,CAAC,CAAE;QAE5B,IAAKuxH,IAAI,CAACjxH,IAAI,KAAKA,IAAI,EAAG;UAEzB,OAAOixH,IAAI;QAEZ;MAED;MAEA,OAAO9yH,SAAS;IAEjB;EAAC;IAAAvE,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAW;MAEV,IAAK,IAAI,CAACwiG,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,CAACxiG,OAAO,CAAC,CAAC;QAE1B,IAAI,CAACwiG,WAAW,GAAG,IAAI;MAExB;IAED;EAAC;IAAAjvH,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAEnB,KAAK,EAAG;MAEvB,IAAI,CAAC3+G,IAAI,GAAG8/G,IAAI,CAAC9/G,IAAI;MAErB,KAAM,IAAI3R,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAACnB,KAAK,CAACvwH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAErD,IAAM2R,IAAI,GAAG8/G,IAAI,CAACnB,KAAK,CAAEtwH,CAAC,CAAE;QAC5B,IAAIuxH,IAAI,GAAGjB,KAAK,CAAE3+G,IAAI,CAAE;QAExB,IAAK4/G,IAAI,KAAK9yH,SAAS,EAAG;UAEzBkX,OAAO,CAACC,IAAI,CAAE,0CAA0C,EAAEjE,IAAK,CAAC;UAChE4/G,IAAI,GAAG,IAAId,IAAI,CAAC,CAAC;QAElB;QAEA,IAAI,CAACH,KAAK,CAAC9wH,IAAI,CAAE+xH,IAAK,CAAC;QACvB,IAAI,CAAChB,YAAY,CAAC/wH,IAAI,CAAE,IAAI48B,OAAO,CAAC,CAAC,CAACpiB,SAAS,CAAEy3G,IAAI,CAAClB,YAAY,CAAEvwH,CAAC,CAAG,CAAE,CAAC;MAE5E;MAEA,IAAI,CAAC+qE,IAAI,CAAC,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA7wE,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAG;QACZuD,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZtnB,IAAI,EAAE,UAAU;UAChBR,SAAS,EAAE;QACZ,CAAC;QACD60H,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE;MACf,CAAC;MAEDptG,IAAI,CAACxR,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,IAAM2+G,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAIvwH,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGw/G,KAAK,CAACvwH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEhD,IAAMuxH,IAAI,GAAGjB,KAAK,CAAEtwH,CAAC,CAAE;QACvBmjB,IAAI,CAACmtG,KAAK,CAAC9wH,IAAI,CAAE+xH,IAAI,CAAC5/G,IAAK,CAAC;QAE5B,IAAM+/G,WAAW,GAAGnB,YAAY,CAAEvwH,CAAC,CAAE;QACrCmjB,IAAI,CAACotG,YAAY,CAAC/wH,IAAI,CAAEkyH,WAAW,CAACx3G,OAAO,CAAC,CAAE,CAAC;MAEhD;MAEA,OAAOiJ,IAAI;IAEZ;EAAC;EAAA,OAAAiuG,QAAA;AAAA;AAAA13H,OAAA,CAAA03H,QAAA,GAAAA,QAAA;AAAA,IAIIO,wBAAwB,0BAAAC,kBAAA;EAAAttG,SAAA,CAAAqtG,wBAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAArtG,YAAA,CAAAmtG,wBAAA;EAE7B,SAAAA,yBAAa9gH,KAAK,EAAEinC,QAAQ,EAAEC,UAAU,EAAEyuB,gBAAgB,GAAG,CAAC,EAAG;IAAA,IAAAsrD,OAAA;IAAAvvH,eAAA,OAAAovH,wBAAA;IAEhEG,OAAA,GAAAD,QAAA,CAAA31H,IAAA,OAAO2U,KAAK,EAAEinC,QAAQ,EAAEC,UAAU;IAElC+5E,OAAA,CAAKzqD,0BAA0B,GAAG,IAAI;IAEtCyqD,OAAA,CAAKtrD,gBAAgB,GAAGA,gBAAgB;IAAC,OAAAsrD,OAAA;EAE1C;EAAC/uH,YAAA,CAAA4uH,wBAAA;IAAAz3H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA86E,wBAAA,CAAA93H,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACkhD,gBAAgB,GAAGlhD,MAAM,CAACkhD,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAtsE,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA86E,wBAAA,CAAA93H,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACqjD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE7CrjD,IAAI,CAACkkD,0BAA0B,GAAG,IAAI;MAEtC,OAAOlkD,IAAI;IAEZ;EAAC;EAAA,OAAAwuG,wBAAA;AAAA,EAhCqC95E,eAAe;AAAAn+C,OAAA,CAAAi4H,wBAAA,GAAAA,wBAAA;AAoCtD,IAAMI,oBAAoB,GAAG,aAAc,IAAI31F,OAAO,CAAC,CAAC;AACxD,IAAM41F,oBAAoB,GAAG,aAAc,IAAI51F,OAAO,CAAC,CAAC;AAExD,IAAM61F,mBAAmB,GAAG,EAAE;AAE9B,IAAMC,KAAK,GAAG,aAAc,IAAIj+F,IAAI,CAAC,CAAC;AACtC,IAAMk+F,SAAS,GAAG,aAAc,IAAI/1F,OAAO,CAAC,CAAC;AAC7C,IAAMg2F,KAAK,GAAG,aAAc,IAAIrxE,IAAI,CAAC,CAAC;AACtC,IAAMsxE,SAAS,GAAG,aAAc,IAAI95F,MAAM,CAAC,CAAC;AAAC,IAEvC+5F,aAAa,0BAAAC,MAAA;EAAAjuG,SAAA,CAAAguG,aAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAAhuG,YAAA,CAAA8tG,aAAA;EAElB,SAAAA,cAAax8F,QAAQ,EAAEuT,QAAQ,EAAE1d,KAAK,EAAG;IAAA,IAAA8mG,OAAA;IAAAlwH,eAAA,OAAA+vH,aAAA;IAExCG,OAAA,GAAAD,QAAA,CAAAt2H,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzBopF,OAAA,CAAKvqF,eAAe,GAAG,IAAI;IAE3BuqF,OAAA,CAAKtqF,cAAc,GAAG,IAAIwpF,wBAAwB,CAAE,IAAI77G,YAAY,CAAE6V,KAAK,GAAG,EAAG,CAAC,EAAE,EAAG,CAAC;IACxF8mG,OAAA,CAAKrqF,aAAa,GAAG,IAAI;IAEzBqqF,OAAA,CAAK9mG,KAAK,GAAGA,KAAK;IAElB8mG,OAAA,CAAK/8F,WAAW,GAAG,IAAI;IACvB+8F,OAAA,CAAK32E,cAAc,GAAG,IAAI;IAE1B,KAAM,IAAI97C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2rB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;MAElCyyH,OAAA,CAAKC,WAAW,CAAE1yH,CAAC,EAAEmyH,SAAU,CAAC;IAEjC;IAAC,OAAAM,OAAA;EAEF;EAAC1vH,YAAA,CAAAuvH,aAAA;IAAAp4H,GAAA;IAAAE,KAAA,EAED,SAAAu7B,mBAAA,EAAqB;MAEpB,IAAMG,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMnK,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAK,IAAI,CAAC+J,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,GAAG,IAAIzB,IAAI,CAAC,CAAC;MAE9B;MAEA,IAAK6B,QAAQ,CAACJ,WAAW,KAAK,IAAI,EAAG;QAEpCI,QAAQ,CAACH,kBAAkB,CAAC,CAAC;MAE9B;MAEA,IAAI,CAACD,WAAW,CAACrB,SAAS,CAAC,CAAC;MAE5B,KAAM,IAAIr0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2rB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;QAElC,IAAI,CAAC2yH,WAAW,CAAE3yH,CAAC,EAAE+xH,oBAAqB,CAAC;QAE3CG,KAAK,CAAC/6G,IAAI,CAAE2e,QAAQ,CAACJ,WAAY,CAAC,CAACpO,YAAY,CAAEyqG,oBAAqB,CAAC;QAEvE,IAAI,CAACr8F,WAAW,CAACG,KAAK,CAAEq8F,KAAM,CAAC;MAEhC;IAED;EAAC;IAAAh4H,GAAA;IAAAE,KAAA,EAED,SAAAwiD,sBAAA,EAAwB;MAEvB,IAAM9mB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMnK,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAK,IAAI,CAACmwB,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACA,cAAc,GAAG,IAAIvjB,MAAM,CAAC,CAAC;MAEnC;MAEA,IAAKzC,QAAQ,CAACgmB,cAAc,KAAK,IAAI,EAAG;QAEvChmB,QAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;MAEjC;MAEA,IAAI,CAACd,cAAc,CAACznB,SAAS,CAAC,CAAC;MAE/B,KAAM,IAAIr0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2rB,KAAK,EAAE3rB,CAAC,EAAG,EAAG;QAElC,IAAI,CAAC2yH,WAAW,CAAE3yH,CAAC,EAAE+xH,oBAAqB,CAAC;QAE3CM,SAAS,CAACl7G,IAAI,CAAE2e,QAAQ,CAACgmB,cAAe,CAAC,CAACx0B,YAAY,CAAEyqG,oBAAqB,CAAC;QAE9E,IAAI,CAACj2E,cAAc,CAACjmB,KAAK,CAAEw8F,SAAU,CAAC;MAEvC;IAED;EAAC;IAAAn4H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAy7E,aAAA,CAAAz4H,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAACvB,cAAc,CAAChxB,IAAI,CAAEmO,MAAM,CAAC6iB,cAAe,CAAC;MAEjD,IAAK7iB,MAAM,CAAC8iB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,GAAG9iB,MAAM,CAAC8iB,aAAa,CAAClxB,KAAK,CAAC,CAAC;MAEtF,IAAI,CAACyU,KAAK,GAAGrG,MAAM,CAACqG,KAAK;MAEzB,IAAKrG,MAAM,CAACoQ,WAAW,KAAK,IAAI,EAAG,IAAI,CAACA,WAAW,GAAGpQ,MAAM,CAACoQ,WAAW,CAACxe,KAAK,CAAC,CAAC;MAChF,IAAKoO,MAAM,CAACw2B,cAAc,KAAK,IAAI,EAAG,IAAI,CAACA,cAAc,GAAGx2B,MAAM,CAACw2B,cAAc,CAAC5kC,KAAK,CAAC,CAAC;MAEzF,OAAO,IAAI;IAEZ;EAAC;IAAAhd,GAAA;IAAAE,KAAA,EAED,SAAAw4H,WAAYniH,KAAK,EAAEiQ,KAAK,EAAG;MAE1BA,KAAK,CAAC1G,SAAS,CAAE,IAAI,CAACouB,aAAa,CAACv3B,KAAK,EAAEJ,KAAK,GAAG,CAAE,CAAC;IAEvD;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAu4H,YAAaliH,KAAK,EAAE4O,MAAM,EAAG;MAE5BA,MAAM,CAACrF,SAAS,CAAE,IAAI,CAACmuB,cAAc,CAACt3B,KAAK,EAAEJ,KAAK,GAAG,EAAG,CAAC;IAE1D;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAitC,QAASsa,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAM1vB,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAM2gG,YAAY,GAAG,IAAI,CAAClnG,KAAK;MAE/BymG,KAAK,CAACt8F,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9Bs8F,KAAK,CAAC/oF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAK+oF,KAAK,CAAC/oF,QAAQ,KAAK5qC,SAAS,EAAG;;MAEpC;;MAEA,IAAK,IAAI,CAACq9C,cAAc,KAAK,IAAI,EAAG,IAAI,CAACc,qBAAqB,CAAC,CAAC;MAEhEy1E,SAAS,CAACl7G,IAAI,CAAE,IAAI,CAAC2kC,cAAe,CAAC;MACrCu2E,SAAS,CAAC/qG,YAAY,CAAE4K,WAAY,CAAC;MAErC,IAAKyvB,SAAS,CAACloB,GAAG,CAACnD,gBAAgB,CAAE+7F,SAAU,CAAC,KAAK,KAAK,EAAG;;MAE7D;;MAEA,KAAM,IAAIS,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGD,YAAY,EAAEC,UAAU,EAAG,EAAG;QAEpE;;QAEA,IAAI,CAACH,WAAW,CAAEG,UAAU,EAAEf,oBAAqB,CAAC;QAEpDC,oBAAoB,CAACj2G,gBAAgB,CAAEmW,WAAW,EAAE6/F,oBAAqB,CAAC;;QAE1E;;QAEAK,KAAK,CAAClgG,WAAW,GAAG8/F,oBAAoB;QAExCI,KAAK,CAAC/qF,OAAO,CAAEsa,SAAS,EAAEswE,mBAAoB,CAAC;;QAE/C;;QAEA,KAAM,IAAIjyH,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGmhH,mBAAmB,CAAClyH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE9D,IAAM23B,SAAS,GAAGs6F,mBAAmB,CAAEjyH,CAAC,CAAE;UAC1C23B,SAAS,CAACm7F,UAAU,GAAGA,UAAU;UACjCn7F,SAAS,CAAC32B,MAAM,GAAG,IAAI;UACvB4gD,UAAU,CAACpiD,IAAI,CAAEm4B,SAAU,CAAC;QAE7B;QAEAs6F,mBAAmB,CAAClyH,MAAM,GAAG,CAAC;MAE/B;IAED;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAA24H,WAAYtiH,KAAK,EAAEiQ,KAAK,EAAG;MAE1B,IAAK,IAAI,CAAC0nB,aAAa,KAAK,IAAI,EAAG;QAElC,IAAI,CAACA,aAAa,GAAG,IAAIupF,wBAAwB,CAAE,IAAI77G,YAAY,CAAE,IAAI,CAACqyB,cAAc,CAACxc,KAAK,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;MAE1G;MAEAjL,KAAK,CAACxG,OAAO,CAAE,IAAI,CAACkuB,aAAa,CAACv3B,KAAK,EAAEJ,KAAK,GAAG,CAAE,CAAC;IAErD;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAs4H,YAAajiH,KAAK,EAAE4O,MAAM,EAAG;MAE5BA,MAAM,CAACnF,OAAO,CAAE,IAAI,CAACiuB,cAAc,CAACt3B,KAAK,EAAEJ,KAAK,GAAG,EAAG,CAAC;IAExD;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA+mD,mBAAA,EAAqB,CAErB;EAAC;IAAAjnD,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAAChW,aAAa,CAAE;QAAE1U,IAAI,EAAE;MAAU,CAAE,CAAC;IAE1C;EAAC;EAAA,OAAAq2H,aAAA;AAAA,EAjM0BvxE,IAAI;AAAArnD,OAAA,CAAA44H,aAAA,GAAAA,aAAA;AAAA,IAqM1BtnC,iBAAiB,0BAAAgoC,UAAA;EAAA1uG,SAAA,CAAA0mE,iBAAA,EAAAgoC,UAAA;EAAA,IAAAC,QAAA,GAAAzuG,YAAA,CAAAwmE,iBAAA;EAEtB,SAAAA,kBAAajiD,UAAU,EAAG;IAAA,IAAAmqF,OAAA;IAAA3wH,eAAA,OAAAyoF,iBAAA;IAEzBkoC,OAAA,GAAAD,QAAA,CAAA/2H,IAAA;IAEAg3H,OAAA,CAAKnV,mBAAmB,GAAG,IAAI;IAE/BmV,OAAA,CAAKj3H,IAAI,GAAG,mBAAmB;IAE/Bi3H,OAAA,CAAKxyG,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC;IAElC4+E,OAAA,CAAK9hF,GAAG,GAAG,IAAI;IAEf8hF,OAAA,CAAK5/E,SAAS,GAAG,CAAC;IAClB4/E,OAAA,CAAKC,OAAO,GAAG,OAAO;IACtBD,OAAA,CAAKE,QAAQ,GAAG,OAAO;IAEvBF,OAAA,CAAKn/E,GAAG,GAAG,IAAI;IAEfm/E,OAAA,CAAK1jF,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAmqF,OAAA;EAE9B;EAACnwH,YAAA,CAAAioF,iBAAA;IAAA9wF,GAAA;IAAAE,KAAA,EAGD,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAm0C,iBAAA,CAAAnxF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC5E,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAE/B,IAAI,CAAC0wB,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACkC,SAAS,GAAGhuB,MAAM,CAACguB,SAAS;MACjC,IAAI,CAAC6/E,OAAO,GAAG7tG,MAAM,CAAC6tG,OAAO;MAC7B,IAAI,CAACC,QAAQ,GAAG9tG,MAAM,CAAC8tG,QAAQ;MAE/B,IAAI,CAACr/E,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAi3C,iBAAA;AAAA,EAzC8Bv+C,QAAQ;AAAA/yC,OAAA,CAAAsxF,iBAAA,GAAAA,iBAAA;AA6CxC,IAAMqoC,QAAQ,GAAG,aAAc,IAAI1iG,OAAO,CAAC,CAAC;AAC5C,IAAM2iG,MAAM,GAAG,aAAc,IAAI3iG,OAAO,CAAC,CAAC;AAC1C,IAAM4iG,gBAAgB,GAAG,aAAc,IAAIn3F,OAAO,CAAC,CAAC;AACpD,IAAMo3F,MAAM,GAAG,aAAc,IAAIl6F,GAAG,CAAC,CAAC;AACtC,IAAMm6F,SAAS,GAAG,aAAc,IAAIl7F,MAAM,CAAC,CAAC;AAAC,IAEvCm7F,IAAI,0BAAAC,UAAA;EAAArvG,SAAA,CAAAovG,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAApvG,YAAA,CAAAkvG,IAAA;EAET,SAAAA,KAAa59F,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC,EAAEjS,QAAQ,GAAG,IAAI2hD,iBAAiB,CAAC,CAAC,EAAG;IAAA,IAAA6oC,OAAA;IAAAtxH,eAAA,OAAAmxH,IAAA;IAElFG,OAAA,GAAAD,QAAA,CAAA13H,IAAA;IAEA23H,OAAA,CAAKhrF,MAAM,GAAG,IAAI;IAElBgrF,OAAA,CAAK53H,IAAI,GAAG,MAAM;IAElB43H,OAAA,CAAK/9F,QAAQ,GAAGA,QAAQ;IACxB+9F,OAAA,CAAKxqF,QAAQ,GAAGA,QAAQ;IAExBwqF,OAAA,CAAK1yE,kBAAkB,CAAC,CAAC;IAAC,OAAA0yE,OAAA;EAE3B;EAAC9wH,YAAA,CAAA2wH,IAAA;IAAAx5H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA68E,IAAA,CAAA75H,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAACL,QAAQ,GAAGvlB,KAAK,CAACC,OAAO,CAAEuB,MAAM,CAAC+jB,QAAS,CAAC,GAAG/jB,MAAM,CAAC+jB,QAAQ,CAAC/nC,KAAK,CAAC,CAAC,GAAGgkB,MAAM,CAAC+jB,QAAQ;MAC5F,IAAI,CAACvT,QAAQ,GAAGxQ,MAAM,CAACwQ,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAA05H,qBAAA,EAAuB;MAEtB,IAAMh+F,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE9B;;MAEA,IAAKA,QAAQ,CAACrlB,KAAK,KAAK,IAAI,EAAG;QAE9B,IAAMguC,iBAAiB,GAAG3oB,QAAQ,CAACC,UAAU,CAACC,QAAQ;QACtD,IAAM+9F,aAAa,GAAG,CAAE,CAAC,CAAE;QAE3B,KAAM,IAAI/zH,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2tC,iBAAiB,CAAC9yB,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE3DqzH,QAAQ,CAACl5G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,CAAC,GAAG,CAAE,CAAC;UACxDszH,MAAM,CAACn5G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,CAAE,CAAC;UAElD+zH,aAAa,CAAE/zH,CAAC,CAAE,GAAG+zH,aAAa,CAAE/zH,CAAC,GAAG,CAAC,CAAE;UAC3C+zH,aAAa,CAAE/zH,CAAC,CAAE,IAAIqzH,QAAQ,CAACh6G,UAAU,CAAEi6G,MAAO,CAAC;QAEpD;QAEAx9F,QAAQ,CAACsmB,YAAY,CAAE,cAAc,EAAE,IAAI3B,sBAAsB,CAAEs5E,aAAa,EAAE,CAAE,CAAE,CAAC;MAExF,CAAC,MAAM;QAENp+G,OAAO,CAACC,IAAI,CAAE,+FAAgG,CAAC;MAEhH;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA1b,GAAA;IAAAE,KAAA,EAED,SAAAitC,QAASsa,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAM9rB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAM5D,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAMojF,SAAS,GAAG3zD,SAAS,CAAC6tB,MAAM,CAACkkD,IAAI,CAACpe,SAAS;MACjD,IAAMv5D,SAAS,GAAGjmB,QAAQ,CAACimB,SAAS;;MAEpC;;MAEA,IAAKjmB,QAAQ,CAACgmB,cAAc,KAAK,IAAI,EAAGhmB,QAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;MAExE62E,SAAS,CAACt8G,IAAI,CAAE2e,QAAQ,CAACgmB,cAAe,CAAC;MACzC23E,SAAS,CAACnsG,YAAY,CAAE4K,WAAY,CAAC;MACrCuhG,SAAS,CAACrgG,MAAM,IAAIkiF,SAAS;MAE7B,IAAK3zD,SAAS,CAACloB,GAAG,CAACnD,gBAAgB,CAAEm9F,SAAU,CAAC,KAAK,KAAK,EAAG;;MAE7D;;MAEAF,gBAAgB,CAACp8G,IAAI,CAAE+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;MAC7C81G,MAAM,CAACr8G,IAAI,CAAEwqC,SAAS,CAACloB,GAAI,CAAC,CAACnS,YAAY,CAAEisG,gBAAiB,CAAC;MAE7D,IAAMS,cAAc,GAAG1e,SAAS,IAAK,CAAE,IAAI,CAACx2F,KAAK,CAAC1M,CAAC,GAAG,IAAI,CAAC0M,KAAK,CAACpM,CAAC,GAAG,IAAI,CAACoM,KAAK,CAACmI,CAAC,IAAK,CAAC,CAAE;MACzF,IAAMgtG,gBAAgB,GAAGD,cAAc,GAAGA,cAAc;MAExD,IAAME,MAAM,GAAG,IAAIvjG,OAAO,CAAC,CAAC;MAC5B,IAAMwjG,IAAI,GAAG,IAAIxjG,OAAO,CAAC,CAAC;MAC1B,IAAMyjG,YAAY,GAAG,IAAIzjG,OAAO,CAAC,CAAC;MAClC,IAAM0jG,QAAQ,GAAG,IAAI1jG,OAAO,CAAC,CAAC;MAC9B,IAAMjD,IAAI,GAAG,IAAI,CAACu5F,cAAc,GAAG,CAAC,GAAG,CAAC;MAExC,IAAMx2G,KAAK,GAAGqlB,QAAQ,CAACrlB,KAAK;MAC5B,IAAMslB,UAAU,GAAGD,QAAQ,CAACC,UAAU;MACtC,IAAM0oB,iBAAiB,GAAG1oB,UAAU,CAACC,QAAQ;MAE7C,IAAKvlB,KAAK,KAAK,IAAI,EAAG;QAErB,IAAMurC,KAAK,GAAG9qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEgqC,SAAS,CAACC,KAAM,CAAC;QAC5C,IAAMiG,GAAG,GAAG/wC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACkb,KAAK,EAAIowB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAQ,CAAC;QAE1E,KAAM,IAAI3rB,CAAC,GAAGg8C,KAAK,EAAElrC,CAAC,GAAGmxC,GAAG,GAAG,CAAC,EAAEjiD,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,IAAI0tB,IAAI,EAAG;UAEpD,IAAM9Y,CAAC,GAAGnE,KAAK,CAAC4J,IAAI,CAAEra,CAAE,CAAC;UACzB,IAAM6U,CAAC,GAAGpE,KAAK,CAAC4J,IAAI,CAAEra,CAAC,GAAG,CAAE,CAAC;UAE7Bk0H,MAAM,CAAC/5G,mBAAmB,CAAEskC,iBAAiB,EAAE7pC,CAAE,CAAC;UAClDu/G,IAAI,CAACh6G,mBAAmB,CAAEskC,iBAAiB,EAAE5pC,CAAE,CAAC;UAEhD,IAAMy/G,MAAM,GAAGd,MAAM,CAACx5F,mBAAmB,CAAEk6F,MAAM,EAAEC,IAAI,EAAEE,QAAQ,EAAED,YAAa,CAAC;UAEjF,IAAKE,MAAM,GAAGL,gBAAgB,EAAG;UAEjCI,QAAQ,CAAC/sG,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC,CAAC,CAAC;;UAE3C,IAAMyT,QAAQ,GAAGgc,SAAS,CAACloB,GAAG,CAACF,MAAM,CAAClgB,UAAU,CAAEg7G,QAAS,CAAC;UAE5D,IAAK1uF,QAAQ,GAAGgc,SAAS,CAAC1gB,IAAI,IAAI0E,QAAQ,GAAGgc,SAAS,CAACzgB,GAAG,EAAG;UAE7D0gB,UAAU,CAACpiD,IAAI,CAAE;YAEhBmmC,QAAQ,EAAEA,QAAQ;YAClB;YACA;YACAtQ,KAAK,EAAE++F,YAAY,CAACl9G,KAAK,CAAC,CAAC,CAACoQ,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC;YAC5DzhB,KAAK,EAAEzQ,CAAC;YACRoiD,IAAI,EAAE,IAAI;YACVD,SAAS,EAAE,IAAI;YACfnhD,MAAM,EAAE;UAET,CAAE,CAAC;QAEJ;MAED,CAAC,MAAM;QAEN,IAAMg7C,OAAK,GAAG9qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEgqC,SAAS,CAACC,KAAM,CAAC;QAC5C,IAAMiG,KAAG,GAAG/wC,IAAI,CAACY,GAAG,CAAE2sC,iBAAiB,CAAC9yB,KAAK,EAAIowB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAQ,CAAC;QAEtF,KAAM,IAAI3rB,IAAC,GAAGg8C,OAAK,EAAElrC,GAAC,GAAGmxC,KAAG,GAAG,CAAC,EAAEjiD,IAAC,GAAG8Q,GAAC,EAAE9Q,IAAC,IAAI0tB,IAAI,EAAG;UAEpDwmG,MAAM,CAAC/5G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,IAAE,CAAC;UAClDm0H,IAAI,CAACh6G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,IAAC,GAAG,CAAE,CAAC;UAEpD,IAAMs0H,OAAM,GAAGd,MAAM,CAACx5F,mBAAmB,CAAEk6F,MAAM,EAAEC,IAAI,EAAEE,QAAQ,EAAED,YAAa,CAAC;UAEjF,IAAKE,OAAM,GAAGL,gBAAgB,EAAG;UAEjCI,QAAQ,CAAC/sG,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC,CAAC,CAAC;;UAE3C,IAAMyT,SAAQ,GAAGgc,SAAS,CAACloB,GAAG,CAACF,MAAM,CAAClgB,UAAU,CAAEg7G,QAAS,CAAC;UAE5D,IAAK1uF,SAAQ,GAAGgc,SAAS,CAAC1gB,IAAI,IAAI0E,SAAQ,GAAGgc,SAAS,CAACzgB,GAAG,EAAG;UAE7D0gB,UAAU,CAACpiD,IAAI,CAAE;YAEhBmmC,QAAQ,EAAEA,SAAQ;YAClB;YACA;YACAtQ,KAAK,EAAE++F,YAAY,CAACl9G,KAAK,CAAC,CAAC,CAACoQ,YAAY,CAAE,IAAI,CAAC4K,WAAY,CAAC;YAC5DzhB,KAAK,EAAEzQ,IAAC;YACRoiD,IAAI,EAAE,IAAI;YACVD,SAAS,EAAE,IAAI;YACfnhD,MAAM,EAAE;UAET,CAAE,CAAC;QAEJ;MAED;IAED;EAAC;IAAA9G,GAAA;IAAAE,KAAA,EAED,SAAA+mD,mBAAA,EAAqB;MAEpB,IAAMrrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM6lB,eAAe,GAAG7lB,QAAQ,CAAC6lB,eAAe;MAChD,IAAM76C,IAAI,GAAGlH,MAAM,CAACkH,IAAI,CAAE66C,eAAgB,CAAC;MAE3C,IAAK76C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAMg9C,cAAc,GAAGpB,eAAe,CAAE76C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAKi8C,cAAc,KAAKt+C,SAAS,EAAG;UAEnC,IAAI,CAAC2iD,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAInvC,CAAC,GAAG,CAAC,EAAEovC,EAAE,GAAGvE,cAAc,CAACh9C,MAAM,EAAEmS,CAAC,GAAGovC,EAAE,EAAEpvC,CAAC,EAAG,EAAG;YAE3D,IAAM5R,IAAI,GAAGy8C,cAAc,CAAE7qC,CAAC,CAAE,CAAC5R,IAAI,IAAI6C,MAAM,CAAE+O,CAAE,CAAC;YAEpD,IAAI,CAACkvC,qBAAqB,CAAC5hD,IAAI,CAAE,CAAE,CAAC;YACpC,IAAI,CAAC6hD,qBAAqB,CAAE/gD,IAAI,CAAE,GAAG4R,CAAC;UAEvC;QAED;MAED;IAED;EAAC;EAAA,OAAAwhH,IAAA;AAAA,EA1MiBjwF,QAAQ;AAAA/pC,OAAA,CAAAg6H,IAAA,GAAAA,IAAA;AA8M3B,IAAMa,MAAM,GAAG,aAAc,IAAI5jG,OAAO,CAAC,CAAC;AAC1C,IAAM6jG,IAAI,GAAG,aAAc,IAAI7jG,OAAO,CAAC,CAAC;AAAC,IAEnC8jG,YAAY,0BAAAC,KAAA;EAAApwG,SAAA,CAAAmwG,YAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAAnwG,YAAA,CAAAiwG,YAAA;EAEjB,SAAAA,aAAa3+F,QAAQ,EAAEuT,QAAQ,EAAG;IAAA,IAAAurF,OAAA;IAAAryH,eAAA,OAAAkyH,YAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAAz4H,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzBurF,OAAA,CAAK3N,cAAc,GAAG,IAAI;IAE1B2N,OAAA,CAAK34H,IAAI,GAAG,cAAc;IAAC,OAAA24H,OAAA;EAE5B;EAAC7xH,YAAA,CAAA0xH,YAAA;IAAAv6H,GAAA;IAAAE,KAAA,EAED,SAAA05H,qBAAA,EAAuB;MAEtB,IAAMh+F,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE9B;;MAEA,IAAKA,QAAQ,CAACrlB,KAAK,KAAK,IAAI,EAAG;QAE9B,IAAMguC,iBAAiB,GAAG3oB,QAAQ,CAACC,UAAU,CAACC,QAAQ;QACtD,IAAM+9F,aAAa,GAAG,EAAE;QAExB,KAAM,IAAI/zH,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2tC,iBAAiB,CAAC9yB,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,IAAI,CAAC,EAAG;UAE7Du0H,MAAM,CAACp6G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,CAAE,CAAC;UAClDw0H,IAAI,CAACr6G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,CAAC,GAAG,CAAE,CAAC;UAEpD+zH,aAAa,CAAE/zH,CAAC,CAAE,GAAKA,CAAC,KAAK,CAAC,GAAK,CAAC,GAAG+zH,aAAa,CAAE/zH,CAAC,GAAG,CAAC,CAAE;UAC7D+zH,aAAa,CAAE/zH,CAAC,GAAG,CAAC,CAAE,GAAG+zH,aAAa,CAAE/zH,CAAC,CAAE,GAAGu0H,MAAM,CAACl7G,UAAU,CAAEm7G,IAAK,CAAC;QAExE;QAEA1+F,QAAQ,CAACsmB,YAAY,CAAE,cAAc,EAAE,IAAI3B,sBAAsB,CAAEs5E,aAAa,EAAE,CAAE,CAAE,CAAC;MAExF,CAAC,MAAM;QAENp+G,OAAO,CAACC,IAAI,CAAE,uGAAwG,CAAC;MAExH;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA6+G,YAAA;AAAA,EA3CyBf,IAAI;AAAAh6H,OAAA,CAAA+6H,YAAA,GAAAA,YAAA;AAAA,IA+CzBI,QAAQ,0BAAAC,MAAA;EAAAxwG,SAAA,CAAAuwG,QAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAAvwG,YAAA,CAAAqwG,QAAA;EAEb,SAAAA,SAAa/+F,QAAQ,EAAEuT,QAAQ,EAAG;IAAA,IAAA2rF,OAAA;IAAAzyH,eAAA,OAAAsyH,QAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAA74H,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzB2rF,OAAA,CAAK9N,UAAU,GAAG,IAAI;IAEtB8N,OAAA,CAAK/4H,IAAI,GAAG,UAAU;IAAC,OAAA+4H,OAAA;EAExB;EAAC,OAAAjyH,YAAA,CAAA8xH,QAAA;AAAA,EAVqBnB,IAAI;AAAAh6H,OAAA,CAAAm7H,QAAA,GAAAA,QAAA;AAAA,IAcrB3pC,cAAc,0BAAA+pC,UAAA;EAAA3wG,SAAA,CAAA4mE,cAAA,EAAA+pC,UAAA;EAAA,IAAAC,QAAA,GAAA1wG,YAAA,CAAA0mE,cAAA;EAEnB,SAAAA,eAAaniD,UAAU,EAAG;IAAA,IAAAosF,OAAA;IAAA5yH,eAAA,OAAA2oF,cAAA;IAEzBiqC,OAAA,GAAAD,QAAA,CAAAh5H,IAAA;IAEAi5H,OAAA,CAAKhX,gBAAgB,GAAG,IAAI;IAE5BgX,OAAA,CAAKl5H,IAAI,GAAG,gBAAgB;IAE5Bk5H,OAAA,CAAKz0G,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC;IAElC6gF,OAAA,CAAK/jF,GAAG,GAAG,IAAI;IAEf+jF,OAAA,CAAK7jF,QAAQ,GAAG,IAAI;IAEpB6jF,OAAA,CAAKvgG,IAAI,GAAG,CAAC;IACbugG,OAAA,CAAK9hF,eAAe,GAAG,IAAI;IAE3B8hF,OAAA,CAAKphF,GAAG,GAAG,IAAI;IAEfohF,OAAA,CAAK3lF,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAosF,OAAA;EAE9B;EAACpyH,YAAA,CAAAmoF,cAAA;IAAAhxF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAq0C,cAAA,CAAArxF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC5E,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAE/B,IAAI,CAAC0wB,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAAC1c,IAAI,GAAGtP,MAAM,CAACsP,IAAI;MACvB,IAAI,CAACye,eAAe,GAAG/tB,MAAM,CAAC+tB,eAAe;MAE7C,IAAI,CAACU,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAm3C,cAAA;AAAA,EA1C2Bz+C,QAAQ;AAAA/yC,OAAA,CAAAwxF,cAAA,GAAAA,cAAA;AA8CrC,IAAMkqC,cAAc,GAAG,aAAc,IAAIh5F,OAAO,CAAC,CAAC;AAClD,IAAMi5F,IAAI,GAAG,aAAc,IAAI/7F,GAAG,CAAC,CAAC;AACpC,IAAMg8F,OAAO,GAAG,aAAc,IAAI/8F,MAAM,CAAC,CAAC;AAC1C,IAAMg9F,WAAW,GAAG,aAAc,IAAI5kG,OAAO,CAAC,CAAC;AAAC,IAE1C6kG,MAAM,0BAAAC,WAAA;EAAAnxG,SAAA,CAAAkxG,MAAA,EAAAC,WAAA;EAAA,IAAAC,QAAA,GAAAlxG,YAAA,CAAAgxG,MAAA;EAEX,SAAAA,OAAa1/F,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC,EAAEjS,QAAQ,GAAG,IAAI6hD,cAAc,CAAC,CAAC,EAAG;IAAA,IAAAyqC,OAAA;IAAApzH,eAAA,OAAAizH,MAAA;IAE/EG,OAAA,GAAAD,QAAA,CAAAx5H,IAAA;IAEAy5H,OAAA,CAAK7sF,QAAQ,GAAG,IAAI;IAEpB6sF,OAAA,CAAK15H,IAAI,GAAG,QAAQ;IAEpB05H,OAAA,CAAK7/F,QAAQ,GAAGA,QAAQ;IACxB6/F,OAAA,CAAKtsF,QAAQ,GAAGA,QAAQ;IAExBssF,OAAA,CAAKx0E,kBAAkB,CAAC,CAAC;IAAC,OAAAw0E,OAAA;EAE3B;EAAC5yH,YAAA,CAAAyyH,MAAA;IAAAt7H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA2+E,MAAA,CAAA37H,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAACL,QAAQ,GAAGvlB,KAAK,CAACC,OAAO,CAAEuB,MAAM,CAAC+jB,QAAS,CAAC,GAAG/jB,MAAM,CAAC+jB,QAAQ,CAAC/nC,KAAK,CAAC,CAAC,GAAGgkB,MAAM,CAAC+jB,QAAQ;MAC5F,IAAI,CAACvT,QAAQ,GAAGxQ,MAAM,CAACwQ,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAitC,QAASsa,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAM9rB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAM5D,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAMojF,SAAS,GAAG3zD,SAAS,CAAC6tB,MAAM,CAACgmD,MAAM,CAAClgB,SAAS;MACnD,IAAMv5D,SAAS,GAAGjmB,QAAQ,CAACimB,SAAS;;MAEpC;;MAEA,IAAKjmB,QAAQ,CAACgmB,cAAc,KAAK,IAAI,EAAGhmB,QAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;MAExE04E,OAAO,CAACn+G,IAAI,CAAE2e,QAAQ,CAACgmB,cAAe,CAAC;MACvCw5E,OAAO,CAAChuG,YAAY,CAAE4K,WAAY,CAAC;MACnCojG,OAAO,CAACliG,MAAM,IAAIkiF,SAAS;MAE3B,IAAK3zD,SAAS,CAACloB,GAAG,CAACnD,gBAAgB,CAAEg/F,OAAQ,CAAC,KAAK,KAAK,EAAG;;MAE3D;;MAEAF,cAAc,CAACj+G,IAAI,CAAE+a,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;MAC3C23G,IAAI,CAACl+G,IAAI,CAAEwqC,SAAS,CAACloB,GAAI,CAAC,CAACnS,YAAY,CAAE8tG,cAAe,CAAC;MAEzD,IAAMpB,cAAc,GAAG1e,SAAS,IAAK,CAAE,IAAI,CAACx2F,KAAK,CAAC1M,CAAC,GAAG,IAAI,CAAC0M,KAAK,CAACpM,CAAC,GAAG,IAAI,CAACoM,KAAK,CAACmI,CAAC,IAAK,CAAC,CAAE;MACzF,IAAMgtG,gBAAgB,GAAGD,cAAc,GAAGA,cAAc;MAExD,IAAMvjH,KAAK,GAAGqlB,QAAQ,CAACrlB,KAAK;MAC5B,IAAMslB,UAAU,GAAGD,QAAQ,CAACC,UAAU;MACtC,IAAM0oB,iBAAiB,GAAG1oB,UAAU,CAACC,QAAQ;MAE7C,IAAKvlB,KAAK,KAAK,IAAI,EAAG;QAErB,IAAMurC,KAAK,GAAG9qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEgqC,SAAS,CAACC,KAAM,CAAC;QAC5C,IAAMiG,GAAG,GAAG/wC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACkb,KAAK,EAAIowB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAQ,CAAC;QAE1E,KAAM,IAAI3rB,CAAC,GAAGg8C,KAAK,EAAElwB,EAAE,GAAGm2B,GAAG,EAAEjiD,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;UAE7C,IAAM4U,CAAC,GAAGnE,KAAK,CAAC4J,IAAI,CAAEra,CAAE,CAAC;UAEzBu1H,WAAW,CAACp7G,mBAAmB,CAAEskC,iBAAiB,EAAE7pC,CAAE,CAAC;UAEvDghH,SAAS,CAAEL,WAAW,EAAE3gH,CAAC,EAAEq/G,gBAAgB,EAAE/hG,WAAW,EAAEyvB,SAAS,EAAEC,UAAU,EAAE,IAAK,CAAC;QAExF;MAED,CAAC,MAAM;QAEN,IAAM5F,OAAK,GAAG9qC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEgqC,SAAS,CAACC,KAAM,CAAC;QAC5C,IAAMiG,KAAG,GAAG/wC,IAAI,CAACY,GAAG,CAAE2sC,iBAAiB,CAAC9yB,KAAK,EAAIowB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAACpwB,KAAQ,CAAC;QAEtF,KAAM,IAAI3rB,IAAC,GAAGg8C,OAAK,EAAElrC,CAAC,GAAGmxC,KAAG,EAAEjiD,IAAC,GAAG8Q,CAAC,EAAE9Q,IAAC,EAAG,EAAG;UAE3Cu1H,WAAW,CAACp7G,mBAAmB,CAAEskC,iBAAiB,EAAEz+C,IAAE,CAAC;UAEvD41H,SAAS,CAAEL,WAAW,EAAEv1H,IAAC,EAAEi0H,gBAAgB,EAAE/hG,WAAW,EAAEyvB,SAAS,EAAEC,UAAU,EAAE,IAAK,CAAC;QAExF;MAED;IAED;EAAC;IAAA1nD,GAAA;IAAAE,KAAA,EAED,SAAA+mD,mBAAA,EAAqB;MAEpB,IAAMrrB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM6lB,eAAe,GAAG7lB,QAAQ,CAAC6lB,eAAe;MAChD,IAAM76C,IAAI,GAAGlH,MAAM,CAACkH,IAAI,CAAE66C,eAAgB,CAAC;MAE3C,IAAK76C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAMg9C,cAAc,GAAGpB,eAAe,CAAE76C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAKi8C,cAAc,KAAKt+C,SAAS,EAAG;UAEnC,IAAI,CAAC2iD,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAInvC,CAAC,GAAG,CAAC,EAAEovC,EAAE,GAAGvE,cAAc,CAACh9C,MAAM,EAAEmS,CAAC,GAAGovC,EAAE,EAAEpvC,CAAC,EAAG,EAAG;YAE3D,IAAM5R,IAAI,GAAGy8C,cAAc,CAAE7qC,CAAC,CAAE,CAAC5R,IAAI,IAAI6C,MAAM,CAAE+O,CAAE,CAAC;YAEpD,IAAI,CAACkvC,qBAAqB,CAAC5hD,IAAI,CAAE,CAAE,CAAC;YACpC,IAAI,CAAC6hD,qBAAqB,CAAE/gD,IAAI,CAAE,GAAG4R,CAAC;UAEvC;QAED;MAED;IAED;EAAC;EAAA,OAAAsjH,MAAA;AAAA,EAtHmB/xF,QAAQ;AAAA/pC,OAAA,CAAA87H,MAAA,GAAAA,MAAA;AA0H7B,SAASI,SAASA,CAAEvgG,KAAK,EAAE5kB,KAAK,EAAEwjH,gBAAgB,EAAE/hG,WAAW,EAAEyvB,SAAS,EAAEC,UAAU,EAAE5gD,MAAM,EAAG;EAEhG,IAAM60H,kBAAkB,GAAGR,IAAI,CAACt7F,iBAAiB,CAAE1E,KAAM,CAAC;EAE1D,IAAKwgG,kBAAkB,GAAG5B,gBAAgB,EAAG;IAE5C,IAAM6B,cAAc,GAAG,IAAInlG,OAAO,CAAC,CAAC;IAEpC0kG,IAAI,CAACx7F,mBAAmB,CAAExE,KAAK,EAAEygG,cAAe,CAAC;IACjDA,cAAc,CAACxuG,YAAY,CAAE4K,WAAY,CAAC;IAE1C,IAAMyT,QAAQ,GAAGgc,SAAS,CAACloB,GAAG,CAACF,MAAM,CAAClgB,UAAU,CAAEy8G,cAAe,CAAC;IAElE,IAAKnwF,QAAQ,GAAGgc,SAAS,CAAC1gB,IAAI,IAAI0E,QAAQ,GAAGgc,SAAS,CAACzgB,GAAG,EAAG;IAE7D0gB,UAAU,CAACpiD,IAAI,CAAE;MAEhBmmC,QAAQ,EAAEA,QAAQ;MAClBowF,aAAa,EAAE7kH,IAAI,CAAC2H,IAAI,CAAEg9G,kBAAmB,CAAC;MAC9CxgG,KAAK,EAAEygG,cAAc;MACrBrlH,KAAK,EAAEA,KAAK;MACZ2xC,IAAI,EAAE,IAAI;MACVphD,MAAM,EAAEA;IAET,CAAE,CAAC;EAEJ;AAED;AAAC,IAEKg1H,YAAY,0BAAAC,SAAA;EAAA3xG,SAAA,CAAA0xG,YAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA1xG,YAAA,CAAAwxG,YAAA;EAEjB,SAAAA,aAAaG,KAAK,EAAEzxG,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU,EAAG;IAAA,IAAAmxG,OAAA;IAAA7zH,eAAA,OAAAyzH,YAAA;IAE3FI,OAAA,GAAAF,QAAA,CAAAh6H,IAAA,OAAOi6H,KAAK,EAAEzxG,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU;IAEnFmxG,OAAA,CAAK1nC,cAAc,GAAG,IAAI;IAE1B0nC,OAAA,CAAKrxG,SAAS,GAAGA,SAAS,KAAKtmB,SAAS,GAAGsmB,SAAS,GAAGzc,YAAY;IACnE8tH,OAAA,CAAKtxG,SAAS,GAAGA,SAAS,KAAKrmB,SAAS,GAAGqmB,SAAS,GAAGxc,YAAY;IAEnE8tH,OAAA,CAAKxwG,eAAe,GAAG,KAAK;IAE5B,IAAMi9B,KAAK,GAAAx9B,sBAAA,CAAA+wG,OAAA,CAAO;IAElB,SAASC,WAAWA,CAAA,EAAG;MAEtBxzE,KAAK,CAACr8B,WAAW,GAAG,IAAI;MACxB2vG,KAAK,CAACG,yBAAyB,CAAED,WAAY,CAAC;IAE/C;IAEA,IAAK,2BAA2B,IAAIF,KAAK,EAAG;MAE3CA,KAAK,CAACG,yBAAyB,CAAED,WAAY,CAAC;IAE/C;IAAC,OAAAD,OAAA;EAEF;EAACrzH,YAAA,CAAAizH,YAAA;IAAA97H,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAAC8hB,KAAM,CAAC,CAAChL,IAAI,CAAE,IAAK,CAAC;IAEvD;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAA,EAAS;MAER,IAAMypG,KAAK,GAAG,IAAI,CAACh0G,KAAK;MACxB,IAAMo0G,qBAAqB,IAAG,2BAA2B,IAAIJ,KAAK;MAElE,IAAKI,qBAAqB,KAAK,KAAK,IAAIJ,KAAK,CAACK,UAAU,IAAIL,KAAK,CAACM,iBAAiB,EAAG;QAErF,IAAI,CAACjwG,WAAW,GAAG,IAAI;MAExB;IAED;EAAC;EAAA,OAAAwvG,YAAA;AAAA,EA/CyB5xG,OAAO;AAAA1qB,OAAA,CAAAs8H,YAAA,GAAAA,YAAA;AAAA,IAmD5BU,kBAAkB,0BAAAC,SAAA;EAAAryG,SAAA,CAAAoyG,kBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAApyG,YAAA,CAAAkyG,kBAAA;EAEvB,SAAAA,mBAAan0G,KAAK,EAAEC,MAAM,EAAG;IAAA,IAAAq0G,OAAA;IAAAt0H,eAAA,OAAAm0H,kBAAA;IAE5BG,OAAA,GAAAD,QAAA,CAAA16H,IAAA,OAAO;MAAEqmB,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA;IAAO,CAAC;IAExBq0G,OAAA,CAAKzwB,oBAAoB,GAAG,IAAI;IAEhCywB,OAAA,CAAK/xG,SAAS,GAAG7c,aAAa;IAC9B4uH,OAAA,CAAK9xG,SAAS,GAAG9c,aAAa;IAE9B4uH,OAAA,CAAKjxG,eAAe,GAAG,KAAK;IAE5BixG,OAAA,CAAKrwG,WAAW,GAAG,IAAI;IAAC,OAAAqwG,OAAA;EAEzB;EAAC,OAAA9zH,YAAA,CAAA2zH,kBAAA;AAAA,EAf+BtyG,OAAO;AAAA1qB,OAAA,CAAAg9H,kBAAA,GAAAA,kBAAA;AAAA,IAmBlCI,iBAAiB,0BAAAC,SAAA;EAAAzyG,SAAA,CAAAwyG,iBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAxyG,YAAA,CAAAsyG,iBAAA;EAEtB,SAAAA,kBAAavxG,OAAO,EAAEhD,KAAK,EAAEC,MAAM,EAAEwC,MAAM,EAAE/oB,IAAI,EAAEyoB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEE,UAAU,EAAE1D,UAAU,EAAG;IAAA,IAAA01G,OAAA;IAAA10H,eAAA,OAAAu0H,iBAAA;IAExHG,OAAA,GAAAD,QAAA,CAAA96H,IAAA,OAAO,IAAI,EAAEwoB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU,EAAE1D,UAAU;IAE9F01G,OAAA,CAAK5wB,mBAAmB,GAAG,IAAI;IAE/B4wB,OAAA,CAAK90G,KAAK,GAAG;MAAEI,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAC7Cy0G,OAAA,CAAK1xG,OAAO,GAAGA,OAAO;;IAEtB;IACA;;IAEA0xG,OAAA,CAAKnxG,KAAK,GAAG,KAAK;;IAElB;IACA;;IAEAmxG,OAAA,CAAKrxG,eAAe,GAAG,KAAK;IAAC,OAAAqxG,OAAA;EAE9B;EAAC,OAAAl0H,YAAA,CAAA+zH,iBAAA;AAAA,EArB8B1yG,OAAO;AAAA1qB,OAAA,CAAAo9H,iBAAA,GAAAA,iBAAA;AAAA,IAyBjCI,sBAAsB,0BAAAC,kBAAA;EAAA7yG,SAAA,CAAA4yG,sBAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAA5yG,YAAA,CAAA0yG,sBAAA;EAE3B,SAAAA,uBAAa3xG,OAAO,EAAEhD,KAAK,EAAEC,MAAM,EAAE2G,KAAK,EAAEnE,MAAM,EAAE/oB,IAAI,EAAG;IAAA,IAAAo7H,OAAA;IAAA90H,eAAA,OAAA20H,sBAAA;IAE1DG,OAAA,GAAAD,QAAA,CAAAl7H,IAAA,OAAOqpB,OAAO,EAAEhD,KAAK,EAAEC,MAAM,EAAEwC,MAAM,EAAE/oB,IAAI;IAE3Co7H,OAAA,CAAKxtB,wBAAwB,GAAG,IAAI;IACpCwtB,OAAA,CAAKl1G,KAAK,CAACgH,KAAK,GAAGA,KAAK;IACxBkuG,OAAA,CAAK7sG,KAAK,GAAGziB,mBAAmB;IAAC,OAAAsvH,OAAA;EAElC;EAAC,OAAAt0H,YAAA,CAAAm0H,sBAAA;AAAA,EAVmCJ,iBAAiB;AAAAp9H,OAAA,CAAAw9H,sBAAA,GAAAA,sBAAA;AAAA,IAchDI,qBAAqB,0BAAAC,mBAAA;EAAAjzG,SAAA,CAAAgzG,qBAAA,EAAAC,mBAAA;EAAA,IAAAC,QAAA,GAAAhzG,YAAA,CAAA8yG,qBAAA;EAE1B,SAAAA,sBAAa3zG,MAAM,EAAEqB,MAAM,EAAE/oB,IAAI,EAAG;IAAA,IAAAw7H,OAAA;IAAAl1H,eAAA,OAAA+0H,qBAAA;IAEnCG,OAAA,GAAAD,QAAA,CAAAt7H,IAAA,OAAOuC,SAAS,EAAEklB,MAAM,CAAE,CAAC,CAAE,CAACpB,KAAK,EAAEoB,MAAM,CAAE,CAAC,CAAE,CAACnB,MAAM,EAAEwC,MAAM,EAAE/oB,IAAI,EAAEwL,qBAAqB;IAE5FgwH,OAAA,CAAKC,uBAAuB,GAAG,IAAI;IACnCD,OAAA,CAAKttE,aAAa,GAAG,IAAI;IAEzBstE,OAAA,CAAKt1G,KAAK,GAAGwB,MAAM;IAAC,OAAA8zG,OAAA;EAErB;EAAC,OAAA10H,YAAA,CAAAu0H,qBAAA;AAAA,EAXkCR,iBAAiB;AAAAp9H,OAAA,CAAA49H,qBAAA,GAAAA,qBAAA;AAAA,IAe/CK,aAAa,0BAAAC,SAAA;EAAAtzG,SAAA,CAAAqzG,aAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAArzG,YAAA,CAAAmzG,aAAA;EAElB,SAAAA,cAAa53G,MAAM,EAAE2E,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU,EAAG;IAAA,IAAA6yG,OAAA;IAAAv1H,eAAA,OAAAo1H,aAAA;IAE5FG,OAAA,GAAAD,QAAA,CAAA37H,IAAA,OAAO6jB,MAAM,EAAE2E,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAE/oB,IAAI,EAAEgpB,UAAU;IAEpF6yG,OAAA,CAAKC,eAAe,GAAG,IAAI;IAE3BD,OAAA,CAAKtxG,WAAW,GAAG,IAAI;IAAC,OAAAsxG,OAAA;EAEzB;EAAC,OAAA/0H,YAAA,CAAA40H,aAAA;AAAA,EAV0BvzG,OAAO;AAcnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA1qB,OAAA,CAAAi+H,aAAA,GAAAA,aAAA;AAAA,IA8BMK,KAAK;EAEV,SAAAA,MAAA,EAAc;IAAAz1H,eAAA,OAAAy1H,KAAA;IAEb,IAAI,CAAC/7H,IAAI,GAAG,OAAO;IAEnB,IAAI,CAACg8H,kBAAkB,GAAG,GAAG;EAE9B;;EAEA;EACA;EAAAl1H,YAAA,CAAAi1H,KAAA;IAAA99H,GAAA;IAAAE,KAAA,EAEA,SAAA89H,SAAA,CAAU;IAAA,EAA0B;MAEnCviH,OAAO,CAACC,IAAI,CAAE,2CAA4C,CAAC;MAC3D,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAA1b,GAAA;IAAAE,KAAA,EAEA,SAAA+9H,WAAYpkG,CAAC,EAAEqkG,cAAc,EAAG;MAE/B,IAAMxlH,CAAC,GAAG,IAAI,CAACylH,cAAc,CAAEtkG,CAAE,CAAC;MAClC,OAAO,IAAI,CAACmkG,QAAQ,CAAEtlH,CAAC,EAAEwlH,cAAe,CAAC;IAE1C;;IAEA;EAAA;IAAAl+H,GAAA;IAAAE,KAAA,EAEA,SAAAk+H,UAAWC,SAAS,GAAG,CAAC,EAAG;MAE1B,IAAM7jG,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIpX,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIi7G,SAAS,EAAEj7G,CAAC,EAAG,EAAG;QAEvCoX,MAAM,CAACl1B,IAAI,CAAE,IAAI,CAAC04H,QAAQ,CAAE56G,CAAC,GAAGi7G,SAAU,CAAE,CAAC;MAE9C;MAEA,OAAO7jG,MAAM;IAEd;;IAEA;EAAA;IAAAx6B,GAAA;IAAAE,KAAA,EAEA,SAAAo+H,gBAAiBD,SAAS,GAAG,CAAC,EAAG;MAEhC,IAAM7jG,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIpX,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIi7G,SAAS,EAAEj7G,CAAC,EAAG,EAAG;QAEvCoX,MAAM,CAACl1B,IAAI,CAAE,IAAI,CAAC24H,UAAU,CAAE76G,CAAC,GAAGi7G,SAAU,CAAE,CAAC;MAEhD;MAEA,OAAO7jG,MAAM;IAEd;;IAEA;EAAA;IAAAx6B,GAAA;IAAAE,KAAA,EAEA,SAAAq+H,UAAA,EAAY;MAEX,IAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;MACjC,OAAOD,OAAO,CAAEA,OAAO,CAAC34H,MAAM,GAAG,CAAC,CAAE;IAErC;;IAEA;EAAA;IAAA7F,GAAA;IAAAE,KAAA,EAEA,SAAAu+H,WAAYJ,SAAS,GAAG,IAAI,CAACN,kBAAkB,EAAG;MAEjD,IAAK,IAAI,CAACW,eAAe,IACtB,IAAI,CAACA,eAAe,CAAC74H,MAAM,KAAKw4H,SAAS,GAAG,CAAG,IACjD,CAAE,IAAI,CAAC/xG,WAAW,EAAG;QAErB,OAAO,IAAI,CAACoyG,eAAe;MAE5B;MAEA,IAAI,CAACpyG,WAAW,GAAG,KAAK;MAExB,IAAMijB,KAAK,GAAG,EAAE;MAChB,IAAIovF,OAAO;QAAEC,IAAI,GAAG,IAAI,CAACZ,QAAQ,CAAE,CAAE,CAAC;MACtC,IAAIxmD,GAAG,GAAG,CAAC;MAEXjoC,KAAK,CAACjqC,IAAI,CAAE,CAAE,CAAC;MAEf,KAAM,IAAI6hC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIk3F,SAAS,EAAEl3F,CAAC,EAAG,EAAG;QAEvCw3F,OAAO,GAAG,IAAI,CAACX,QAAQ,CAAE72F,CAAC,GAAGk3F,SAAU,CAAC;QACxC7mD,GAAG,IAAImnD,OAAO,CAACx/G,UAAU,CAAEy/G,IAAK,CAAC;QACjCrvF,KAAK,CAACjqC,IAAI,CAAEkyE,GAAI,CAAC;QACjBonD,IAAI,GAAGD,OAAO;MAEf;MAEA,IAAI,CAACD,eAAe,GAAGnvF,KAAK;MAE5B,OAAOA,KAAK,CAAC,CAAC;IAEf;EAAC;IAAAvvC,GAAA;IAAAE,KAAA,EAED,SAAA2+H,iBAAA,EAAmB;MAElB,IAAI,CAACvyG,WAAW,GAAG,IAAI;MACvB,IAAI,CAACmyG,UAAU,CAAC,CAAC;IAElB;;IAEA;EAAA;IAAAz+H,GAAA;IAAAE,KAAA,EAEA,SAAAi+H,eAAgBtkG,CAAC,EAAE4R,QAAQ,EAAG;MAE7B,IAAMqzF,UAAU,GAAG,IAAI,CAACL,UAAU,CAAC,CAAC;MAEpC,IAAI34H,CAAC,GAAG,CAAC;MACT,IAAM8rB,EAAE,GAAGktG,UAAU,CAACj5H,MAAM;MAE5B,IAAIk5H,eAAe,CAAC,CAAC;;MAErB,IAAKtzF,QAAQ,EAAG;QAEfszF,eAAe,GAAGtzF,QAAQ;MAE3B,CAAC,MAAM;QAENszF,eAAe,GAAGllG,CAAC,GAAGilG,UAAU,CAAEltG,EAAE,GAAG,CAAC,CAAE;MAE3C;;MAEA;;MAEA,IAAIxY,GAAG,GAAG,CAAC;QAAEC,IAAI,GAAGuY,EAAE,GAAG,CAAC;QAAEotG,UAAU;MAEtC,OAAQ5lH,GAAG,IAAIC,IAAI,EAAG;QAErBvT,CAAC,GAAGkR,IAAI,CAACsC,KAAK,CAAEF,GAAG,GAAG,CAAEC,IAAI,GAAGD,GAAG,IAAK,CAAE,CAAC,CAAC,CAAC;;QAE5C4lH,UAAU,GAAGF,UAAU,CAAEh5H,CAAC,CAAE,GAAGi5H,eAAe;QAE9C,IAAKC,UAAU,GAAG,CAAC,EAAG;UAErB5lH,GAAG,GAAGtT,CAAC,GAAG,CAAC;QAEZ,CAAC,MAAM,IAAKk5H,UAAU,GAAG,CAAC,EAAG;UAE5B3lH,IAAI,GAAGvT,CAAC,GAAG,CAAC;QAEb,CAAC,MAAM;UAENuT,IAAI,GAAGvT,CAAC;UACR;;UAEA;QAED;MAED;;MAEAA,CAAC,GAAGuT,IAAI;MAER,IAAKylH,UAAU,CAAEh5H,CAAC,CAAE,KAAKi5H,eAAe,EAAG;QAE1C,OAAOj5H,CAAC,IAAK8rB,EAAE,GAAG,CAAC,CAAE;MAEtB;;MAEA;;MAEA,IAAMqtG,YAAY,GAAGH,UAAU,CAAEh5H,CAAC,CAAE;MACpC,IAAMo5H,WAAW,GAAGJ,UAAU,CAAEh5H,CAAC,GAAG,CAAC,CAAE;MAEvC,IAAMq5H,aAAa,GAAGD,WAAW,GAAGD,YAAY;;MAEhD;;MAEA,IAAMG,eAAe,GAAG,CAAEL,eAAe,GAAGE,YAAY,IAAKE,aAAa;;MAE1E;;MAEA,IAAMzmH,CAAC,GAAG,CAAE5S,CAAC,GAAGs5H,eAAe,KAAOxtG,EAAE,GAAG,CAAC,CAAE;MAE9C,OAAOlZ,CAAC;IAET;;IAEA;IACA;IACA;IACA;EAAA;IAAA1Y,GAAA;IAAAE,KAAA,EAEA,SAAAm/H,WAAY3mH,CAAC,EAAEwlH,cAAc,EAAG;MAE/B,IAAMt/F,KAAK,GAAG,MAAM;MACpB,IAAIiC,EAAE,GAAGnoB,CAAC,GAAGkmB,KAAK;MAClB,IAAI0gG,EAAE,GAAG5mH,CAAC,GAAGkmB,KAAK;;MAElB;;MAEA,IAAKiC,EAAE,GAAG,CAAC,EAAGA,EAAE,GAAG,CAAC;MACpB,IAAKy+F,EAAE,GAAG,CAAC,EAAGA,EAAE,GAAG,CAAC;MAEpB,IAAMC,GAAG,GAAG,IAAI,CAACvB,QAAQ,CAAEn9F,EAAG,CAAC;MAC/B,IAAM2+F,GAAG,GAAG,IAAI,CAACxB,QAAQ,CAAEsB,EAAG,CAAC;MAE/B,IAAM78E,OAAO,GAAGy7E,cAAc,KAAQqB,GAAG,CAAC/iH,SAAS,GAAK,IAAIF,OAAO,CAAC,CAAC,GAAG,IAAIma,OAAO,CAAC,CAAC,CAAE;MAEvFgsB,OAAO,CAACxlC,IAAI,CAAEuiH,GAAI,CAAC,CAACjiH,GAAG,CAAEgiH,GAAI,CAAC,CAACpjH,SAAS,CAAC,CAAC;MAE1C,OAAOsmC,OAAO;IAEf;EAAC;IAAAziD,GAAA;IAAAE,KAAA,EAED,SAAAu/H,aAAc5lG,CAAC,EAAEqkG,cAAc,EAAG;MAEjC,IAAMxlH,CAAC,GAAG,IAAI,CAACylH,cAAc,CAAEtkG,CAAE,CAAC;MAClC,OAAO,IAAI,CAACwlG,UAAU,CAAE3mH,CAAC,EAAEwlH,cAAe,CAAC;IAE5C;EAAC;IAAAl+H,GAAA;IAAAE,KAAA,EAED,SAAAw/H,oBAAqBC,QAAQ,EAAEC,MAAM,EAAG;MAEvC;;MAEA,IAAM9mG,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;MAE5B,IAAM4sB,QAAQ,GAAG,EAAE;MACnB,IAAMH,OAAO,GAAG,EAAE;MAClB,IAAM28E,SAAS,GAAG,EAAE;MAEpB,IAAMC,GAAG,GAAG,IAAIrpG,OAAO,CAAC,CAAC;MACzB,IAAMspG,GAAG,GAAG,IAAI79F,OAAO,CAAC,CAAC;;MAEzB;;MAEA,KAAM,IAAIp8B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI65H,QAAQ,EAAE75H,CAAC,EAAG,EAAG;QAEtC,IAAM+zB,CAAC,GAAG/zB,CAAC,GAAG65H,QAAQ;QAEtBt8E,QAAQ,CAAEv9C,CAAC,CAAE,GAAG,IAAI,CAAC25H,YAAY,CAAE5lG,CAAC,EAAE,IAAIpD,OAAO,CAAC,CAAE,CAAC;MAEtD;;MAEA;MACA;;MAEAysB,OAAO,CAAE,CAAC,CAAE,GAAG,IAAIzsB,OAAO,CAAC,CAAC;MAC5BopG,SAAS,CAAE,CAAC,CAAE,GAAG,IAAIppG,OAAO,CAAC,CAAC;MAC9B,IAAI7e,GAAG,GAAGrO,MAAM,CAACy2H,SAAS;MAC1B,IAAM37G,EAAE,GAAGrN,IAAI,CAACgC,GAAG,CAAEqqC,QAAQ,CAAE,CAAC,CAAE,CAACnrC,CAAE,CAAC;MACtC,IAAMoM,EAAE,GAAGtN,IAAI,CAACgC,GAAG,CAAEqqC,QAAQ,CAAE,CAAC,CAAE,CAAC7qC,CAAE,CAAC;MACtC,IAAMynH,EAAE,GAAGjpH,IAAI,CAACgC,GAAG,CAAEqqC,QAAQ,CAAE,CAAC,CAAE,CAACt2B,CAAE,CAAC;MAEtC,IAAK1I,EAAE,IAAIzM,GAAG,EAAG;QAEhBA,GAAG,GAAGyM,EAAE;QACRyU,MAAM,CAACtd,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtB;MAEA,IAAK8I,EAAE,IAAI1M,GAAG,EAAG;QAEhBA,GAAG,GAAG0M,EAAE;QACRwU,MAAM,CAACtd,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtB;MAEA,IAAKykH,EAAE,IAAIroH,GAAG,EAAG;QAEhBkhB,MAAM,CAACtd,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtB;MAEAskH,GAAG,CAAC5nG,YAAY,CAAEmrB,QAAQ,CAAE,CAAC,CAAE,EAAEvqB,MAAO,CAAC,CAAC3c,SAAS,CAAC,CAAC;MAErD+mC,OAAO,CAAE,CAAC,CAAE,CAAChrB,YAAY,CAAEmrB,QAAQ,CAAE,CAAC,CAAE,EAAEy8E,GAAI,CAAC;MAC/CD,SAAS,CAAE,CAAC,CAAE,CAAC3nG,YAAY,CAAEmrB,QAAQ,CAAE,CAAC,CAAE,EAAEH,OAAO,CAAE,CAAC,CAAG,CAAC;;MAG1D;;MAEA,KAAM,IAAIp9C,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI65H,QAAQ,EAAE75H,IAAC,EAAG,EAAG;QAEtCo9C,OAAO,CAAEp9C,IAAC,CAAE,GAAGo9C,OAAO,CAAEp9C,IAAC,GAAG,CAAC,CAAE,CAACkX,KAAK,CAAC,CAAC;QAEvC6iH,SAAS,CAAE/5H,IAAC,CAAE,GAAG+5H,SAAS,CAAE/5H,IAAC,GAAG,CAAC,CAAE,CAACkX,KAAK,CAAC,CAAC;QAE3C8iH,GAAG,CAAC5nG,YAAY,CAAEmrB,QAAQ,CAAEv9C,IAAC,GAAG,CAAC,CAAE,EAAEu9C,QAAQ,CAAEv9C,IAAC,CAAG,CAAC;QAEpD,IAAKg6H,GAAG,CAACj6H,MAAM,CAAC,CAAC,GAAG0D,MAAM,CAAC+pB,OAAO,EAAG;UAEpCwsG,GAAG,CAAC3jH,SAAS,CAAC,CAAC;UAEf,IAAM8C,KAAK,GAAGjI,IAAI,CAACkI,IAAI,CAAEvH,KAAK,CAAE0rC,QAAQ,CAAEv9C,IAAC,GAAG,CAAC,CAAE,CAAC0Y,GAAG,CAAE6kC,QAAQ,CAAEv9C,IAAC,CAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CAAC,CAAC;;UAEpFo9C,OAAO,CAAEp9C,IAAC,CAAE,CAACsnB,YAAY,CAAE2yG,GAAG,CAACr6F,gBAAgB,CAAEo6F,GAAG,EAAE7gH,KAAM,CAAE,CAAC;QAEhE;QAEA4gH,SAAS,CAAE/5H,IAAC,CAAE,CAACoyB,YAAY,CAAEmrB,QAAQ,CAAEv9C,IAAC,CAAE,EAAEo9C,OAAO,CAAEp9C,IAAC,CAAG,CAAC;MAE3D;;MAEA;;MAEA,IAAK85H,MAAM,KAAK,IAAI,EAAG;QAEtB,IAAI3gH,MAAK,GAAGjI,IAAI,CAACkI,IAAI,CAAEvH,KAAK,CAAEurC,OAAO,CAAE,CAAC,CAAE,CAAC1kC,GAAG,CAAE0kC,OAAO,CAAEy8E,QAAQ,CAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;QACjF1gH,MAAK,IAAI0gH,QAAQ;QAEjB,IAAKt8E,QAAQ,CAAE,CAAC,CAAE,CAAC7kC,GAAG,CAAEshH,GAAG,CAAC5nG,YAAY,CAAEgrB,OAAO,CAAE,CAAC,CAAE,EAAEA,OAAO,CAAEy8E,QAAQ,CAAG,CAAE,CAAC,GAAG,CAAC,EAAG;UAErF1gH,MAAK,GAAG,CAAEA,MAAK;QAEhB;QAEA,KAAM,IAAInZ,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI65H,QAAQ,EAAE75H,IAAC,EAAG,EAAG;UAEtC;UACAo9C,OAAO,CAAEp9C,IAAC,CAAE,CAACsnB,YAAY,CAAE2yG,GAAG,CAACr6F,gBAAgB,CAAE2d,QAAQ,CAAEv9C,IAAC,CAAE,EAAEmZ,MAAK,GAAGnZ,IAAE,CAAE,CAAC;UAC7E+5H,SAAS,CAAE/5H,IAAC,CAAE,CAACoyB,YAAY,CAAEmrB,QAAQ,CAAEv9C,IAAC,CAAE,EAAEo9C,OAAO,CAAEp9C,IAAC,CAAG,CAAC;QAE3D;MAED;MAEA,OAAO;QACNu9C,QAAQ,EAAEA,QAAQ;QAClBH,OAAO,EAAEA,OAAO;QAChB28E,SAAS,EAAEA;MACZ,CAAC;IAEF;EAAC;IAAA7/H,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAC2yG,kBAAkB,GAAG3yG,MAAM,CAAC2yG,kBAAkB;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAA/9H,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAG;QACZuD,QAAQ,EAAE;UACTnD,OAAO,EAAE,GAAG;UACZtnB,IAAI,EAAE,OAAO;UACbR,SAAS,EAAE;QACZ;MACD,CAAC;MAED0nB,IAAI,CAAC80G,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MACjD90G,IAAI,CAAClnB,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,OAAOknB,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB,IAAI,CAACwG,kBAAkB,GAAGxG,IAAI,CAACwG,kBAAkB;MAEjD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAD,KAAA;AAAA;AAAAt+H,OAAA,CAAAs+H,KAAA,GAAAA,KAAA;AAAA,IAIIoC,YAAY,0BAAAC,MAAA;EAAA/1G,SAAA,CAAA81G,YAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAA91G,YAAA,CAAA41G,YAAA;EAEjB,SAAAA,aAAaG,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEC,WAAW,GAAG,CAAC,EAAEC,SAAS,GAAG1pH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE0pH,UAAU,GAAG,KAAK,EAAEC,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAAx4H,eAAA,OAAA63H,YAAA;IAEpIW,OAAA,GAAAT,QAAA,CAAAp+H,IAAA;IAEA6+H,OAAA,CAAKC,cAAc,GAAG,IAAI;IAE1BD,OAAA,CAAK9+H,IAAI,GAAG,cAAc;IAE1B8+H,OAAA,CAAKR,EAAE,GAAGA,EAAE;IACZQ,OAAA,CAAKP,EAAE,GAAGA,EAAE;IAEZO,OAAA,CAAKN,OAAO,GAAGA,OAAO;IACtBM,OAAA,CAAKL,OAAO,GAAGA,OAAO;IAEtBK,OAAA,CAAKJ,WAAW,GAAGA,WAAW;IAC9BI,OAAA,CAAKH,SAAS,GAAGA,SAAS;IAE1BG,OAAA,CAAKF,UAAU,GAAGA,UAAU;IAE5BE,OAAA,CAAKD,SAAS,GAAGA,SAAS;IAAC,OAAAC,OAAA;EAE5B;EAACh4H,YAAA,CAAAq3H,YAAA;IAAAlgI,GAAA;IAAAE,KAAA,EAED,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,EAAG;MAE7B,IAAM/iG,KAAK,GAAG+iG,cAAc,IAAI,IAAI5hH,OAAO,CAAC,CAAC;MAE7C,IAAMykH,KAAK,GAAG/pH,IAAI,CAACC,EAAE,GAAG,CAAC;MACzB,IAAI+pH,UAAU,GAAG,IAAI,CAACN,SAAS,GAAG,IAAI,CAACD,WAAW;MAClD,IAAMQ,UAAU,GAAGjqH,IAAI,CAACgC,GAAG,CAAEgoH,UAAW,CAAC,GAAGz3H,MAAM,CAAC+pB,OAAO;;MAE1D;MACA,OAAQ0tG,UAAU,GAAG,CAAC,EAAGA,UAAU,IAAID,KAAK;MAC5C,OAAQC,UAAU,GAAGD,KAAK,EAAGC,UAAU,IAAID,KAAK;MAEhD,IAAKC,UAAU,GAAGz3H,MAAM,CAAC+pB,OAAO,EAAG;QAElC,IAAK2tG,UAAU,EAAG;UAEjBD,UAAU,GAAG,CAAC;QAEf,CAAC,MAAM;UAENA,UAAU,GAAGD,KAAK;QAEnB;MAED;MAEA,IAAK,IAAI,CAACJ,UAAU,KAAK,IAAI,IAAI,CAAEM,UAAU,EAAG;QAE/C,IAAKD,UAAU,KAAKD,KAAK,EAAG;UAE3BC,UAAU,GAAG,CAAED,KAAK;QAErB,CAAC,MAAM;UAENC,UAAU,GAAGA,UAAU,GAAGD,KAAK;QAEhC;MAED;MAEA,IAAMliH,KAAK,GAAG,IAAI,CAAC4hH,WAAW,GAAG/nH,CAAC,GAAGsoH,UAAU;MAC/C,IAAI9oH,CAAC,GAAG,IAAI,CAACmoH,EAAE,GAAG,IAAI,CAACE,OAAO,GAAGvpH,IAAI,CAAC8D,GAAG,CAAE+D,KAAM,CAAC;MAClD,IAAIrG,CAAC,GAAG,IAAI,CAAC8nH,EAAE,GAAG,IAAI,CAACE,OAAO,GAAGxpH,IAAI,CAAC+D,GAAG,CAAE8D,KAAM,CAAC;MAElD,IAAK,IAAI,CAAC+hH,SAAS,KAAK,CAAC,EAAG;QAE3B,IAAM9lH,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAE,IAAI,CAAC8lH,SAAU,CAAC;QACtC,IAAM7lH,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAE,IAAI,CAAC6lH,SAAU,CAAC;QAEtC,IAAMv8G,EAAE,GAAGnM,CAAC,GAAG,IAAI,CAACmoH,EAAE;QACtB,IAAM/7G,EAAE,GAAG9L,CAAC,GAAG,IAAI,CAAC8nH,EAAE;;QAEtB;QACApoH,CAAC,GAAGmM,EAAE,GAAGvJ,GAAG,GAAGwJ,EAAE,GAAGvJ,GAAG,GAAG,IAAI,CAACslH,EAAE;QACjC7nH,CAAC,GAAG6L,EAAE,GAAGtJ,GAAG,GAAGuJ,EAAE,GAAGxJ,GAAG,GAAG,IAAI,CAACwlH,EAAE;MAElC;MAEA,OAAOnlG,KAAK,CAAC3f,GAAG,CAAEtD,CAAC,EAAEM,CAAE,CAAC;IAEzB;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAujF,YAAA,CAAAvgI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACi1G,EAAE,GAAGj1G,MAAM,CAACi1G,EAAE;MACnB,IAAI,CAACC,EAAE,GAAGl1G,MAAM,CAACk1G,EAAE;MAEnB,IAAI,CAACC,OAAO,GAAGn1G,MAAM,CAACm1G,OAAO;MAC7B,IAAI,CAACC,OAAO,GAAGp1G,MAAM,CAACo1G,OAAO;MAE7B,IAAI,CAACC,WAAW,GAAGr1G,MAAM,CAACq1G,WAAW;MACrC,IAAI,CAACC,SAAS,GAAGt1G,MAAM,CAACs1G,SAAS;MAEjC,IAAI,CAACC,UAAU,GAAGv1G,MAAM,CAACu1G,UAAU;MAEnC,IAAI,CAACC,SAAS,GAAGx1G,MAAM,CAACw1G,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAA5gI,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAujF,YAAA,CAAAvgI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACo3G,EAAE,GAAG,IAAI,CAACA,EAAE;MACjBp3G,IAAI,CAACq3G,EAAE,GAAG,IAAI,CAACA,EAAE;MAEjBr3G,IAAI,CAACs3G,OAAO,GAAG,IAAI,CAACA,OAAO;MAC3Bt3G,IAAI,CAACu3G,OAAO,GAAG,IAAI,CAACA,OAAO;MAE3Bv3G,IAAI,CAACw3G,WAAW,GAAG,IAAI,CAACA,WAAW;MACnCx3G,IAAI,CAACy3G,SAAS,GAAG,IAAI,CAACA,SAAS;MAE/Bz3G,IAAI,CAAC03G,UAAU,GAAG,IAAI,CAACA,UAAU;MAEjC13G,IAAI,CAAC23G,SAAS,GAAG,IAAI,CAACA,SAAS;MAE/B,OAAO33G,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAAujF,YAAA,CAAAvgI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC8I,EAAE,GAAG9I,IAAI,CAAC8I,EAAE;MACjB,IAAI,CAACC,EAAE,GAAG/I,IAAI,CAAC+I,EAAE;MAEjB,IAAI,CAACC,OAAO,GAAGhJ,IAAI,CAACgJ,OAAO;MAC3B,IAAI,CAACC,OAAO,GAAGjJ,IAAI,CAACiJ,OAAO;MAE3B,IAAI,CAACC,WAAW,GAAGlJ,IAAI,CAACkJ,WAAW;MACnC,IAAI,CAACC,SAAS,GAAGnJ,IAAI,CAACmJ,SAAS;MAE/B,IAAI,CAACC,UAAU,GAAGpJ,IAAI,CAACoJ,UAAU;MAEjC,IAAI,CAACC,SAAS,GAAGrJ,IAAI,CAACqJ,SAAS;MAE/B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAV,YAAA;AAAA,EApJyBpC,KAAK;AAAAt+H,OAAA,CAAA0gI,YAAA,GAAAA,YAAA;AAAA,IAwJ1BgB,QAAQ,0BAAAC,aAAA;EAAA/2G,SAAA,CAAA82G,QAAA,EAAAC,aAAA;EAAA,IAAAC,QAAA,GAAA92G,YAAA,CAAA42G,QAAA;EAEb,SAAAA,SAAab,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;IAAA,IAAAW,OAAA;IAAAj5H,eAAA,OAAA64H,QAAA;IAElEI,OAAA,GAAAF,QAAA,CAAAp/H,IAAA,OAAOq+H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEA,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU;IAEnEW,OAAA,CAAKC,UAAU,GAAG,IAAI;IAEtBD,OAAA,CAAKv/H,IAAI,GAAG,UAAU;IAAC,OAAAu/H,OAAA;EAExB;EAAC,OAAAz4H,YAAA,CAAAq4H,QAAA;AAAA,EAVqBhB,YAAY;AAcnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA1gI,OAAA,CAAA0hI,QAAA,GAAAA,QAAA;AAUA,SAASM,SAASA,CAAA,EAAG;EAEpB,IAAIC,EAAE,GAAG,CAAC;IAAE/uG,EAAE,GAAG,CAAC;IAAE1X,EAAE,GAAG,CAAC;IAAE2X,EAAE,GAAG,CAAC;;EAElC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASk+C,IAAIA,CAAEj7C,EAAE,EAAEI,EAAE,EAAE4K,EAAE,EAAEC,EAAE,EAAG;IAE/B4gG,EAAE,GAAG7rG,EAAE;IACPlD,EAAE,GAAGkO,EAAE;IACP5lB,EAAE,GAAG,CAAE,CAAC,GAAG4a,EAAE,GAAG,CAAC,GAAGI,EAAE,GAAG,CAAC,GAAG4K,EAAE,GAAGC,EAAE;IACpClO,EAAE,GAAG,CAAC,GAAGiD,EAAE,GAAG,CAAC,GAAGI,EAAE,GAAG4K,EAAE,GAAGC,EAAE;EAE/B;EAEA,OAAO;IAEN6gG,cAAc,EAAE,SAAAA,eAAW9rG,EAAE,EAAEI,EAAE,EAAE+P,EAAE,EAAE47F,EAAE,EAAEC,OAAO,EAAG;MAEpD/wD,IAAI,CAAE76C,EAAE,EAAE+P,EAAE,EAAE67F,OAAO,IAAK77F,EAAE,GAAGnQ,EAAE,CAAE,EAAEgsG,OAAO,IAAKD,EAAE,GAAG3rG,EAAE,CAAG,CAAC;IAE7D,CAAC;IAED6rG,wBAAwB,EAAE,SAAAA,yBAAWjsG,EAAE,EAAEI,EAAE,EAAE+P,EAAE,EAAE47F,EAAE,EAAEG,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAEpE;MACA,IAAInhG,EAAE,GAAG,CAAE7K,EAAE,GAAGJ,EAAE,IAAKksG,GAAG,GAAG,CAAE/7F,EAAE,GAAGnQ,EAAE,KAAOksG,GAAG,GAAGC,GAAG,CAAE,GAAG,CAAEh8F,EAAE,GAAG/P,EAAE,IAAK+rG,GAAG;MAC5E,IAAIzC,EAAE,GAAG,CAAEv5F,EAAE,GAAG/P,EAAE,IAAK+rG,GAAG,GAAG,CAAEJ,EAAE,GAAG3rG,EAAE,KAAO+rG,GAAG,GAAGC,GAAG,CAAE,GAAG,CAAEL,EAAE,GAAG57F,EAAE,IAAKi8F,GAAG;;MAE5E;MACAnhG,EAAE,IAAIkhG,GAAG;MACTzC,EAAE,IAAIyC,GAAG;MAETlxD,IAAI,CAAE76C,EAAE,EAAE+P,EAAE,EAAElF,EAAE,EAAEy+F,EAAG,CAAC;IAEvB,CAAC;IAED2C,IAAI,EAAE,SAAAA,KAAWvpH,CAAC,EAAG;MAEpB,IAAM4mH,EAAE,GAAG5mH,CAAC,GAAGA,CAAC;MAChB,IAAMwpH,EAAE,GAAG5C,EAAE,GAAG5mH,CAAC;MACjB,OAAO+oH,EAAE,GAAG/uG,EAAE,GAAGha,CAAC,GAAGsC,EAAE,GAAGskH,EAAE,GAAG3sG,EAAE,GAAGuvG,EAAE;IAEvC;EAED,CAAC;AAEF;;AAEA;;AAEA,IAAMn+G,GAAG,GAAG,aAAc,IAAI0S,OAAO,CAAC,CAAC;AACvC,IAAM0rG,EAAE,GAAG,aAAc,IAAIX,SAAS,CAAC,CAAC;AACxC,IAAMY,EAAE,GAAG,aAAc,IAAIZ,SAAS,CAAC,CAAC;AACxC,IAAMa,EAAE,GAAG,aAAc,IAAIb,SAAS,CAAC,CAAC;AAAC,IAEnCc,gBAAgB,0BAAAC,OAAA;EAAAn4G,SAAA,CAAAk4G,gBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAl4G,YAAA,CAAAg4G,gBAAA;EAErB,SAAAA,iBAAa9nG,MAAM,GAAG,EAAE,EAAEolG,MAAM,GAAG,KAAK,EAAE6C,SAAS,GAAG,aAAa,EAAEb,OAAO,GAAG,GAAG,EAAG;IAAA,IAAAc,OAAA;IAAAr6H,eAAA,OAAAi6H,gBAAA;IAEpFI,OAAA,GAAAF,QAAA,CAAAxgI,IAAA;IAEA0gI,OAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,OAAA,CAAK3gI,IAAI,GAAG,kBAAkB;IAE9B2gI,OAAA,CAAKloG,MAAM,GAAGA,MAAM;IACpBkoG,OAAA,CAAK9C,MAAM,GAAGA,MAAM;IACpB8C,OAAA,CAAKD,SAAS,GAAGA,SAAS;IAC1BC,OAAA,CAAKd,OAAO,GAAGA,OAAO;IAAC,OAAAc,OAAA;EAExB;EAAC75H,YAAA,CAAAy5H,gBAAA;IAAAtiI,GAAA;IAAAE,KAAA,EAED,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,GAAG,IAAIznG,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM0E,KAAK,GAAG+iG,cAAc;MAE5B,IAAM1jG,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAM5jB,CAAC,GAAG4jB,MAAM,CAAC30B,MAAM;MAEvB,IAAMshC,CAAC,GAAG,CAAEvwB,CAAC,IAAK,IAAI,CAACgpH,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,IAAKlnH,CAAC;MAC7C,IAAIkqH,QAAQ,GAAG5rH,IAAI,CAACsC,KAAK,CAAE6tB,CAAE,CAAC;MAC9B,IAAIswC,MAAM,GAAGtwC,CAAC,GAAGy7F,QAAQ;MAEzB,IAAK,IAAI,CAAChD,MAAM,EAAG;QAElBgD,QAAQ,IAAIA,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE5rH,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACgC,GAAG,CAAE4pH,QAAS,CAAC,GAAGhsH,CAAE,CAAC,GAAG,CAAC,IAAKA,CAAC;MAElF,CAAC,MAAM,IAAK6gE,MAAM,KAAK,CAAC,IAAImrD,QAAQ,KAAKhsH,CAAC,GAAG,CAAC,EAAG;QAEhDgsH,QAAQ,GAAGhsH,CAAC,GAAG,CAAC;QAChB6gE,MAAM,GAAG,CAAC;MAEX;MAEA,IAAI15C,EAAE,EAAEsU,EAAE,CAAC,CAAC;;MAEZ,IAAK,IAAI,CAACutF,MAAM,IAAIgD,QAAQ,GAAG,CAAC,EAAG;QAElC7kG,EAAE,GAAGvD,MAAM,CAAE,CAAEooG,QAAQ,GAAG,CAAC,IAAKhsH,CAAC,CAAE;MAEpC,CAAC,MAAM;QAEN;QACAmN,GAAG,CAACtG,UAAU,CAAE+c,MAAM,CAAE,CAAC,CAAE,EAAEA,MAAM,CAAE,CAAC,CAAG,CAAC,CAACrd,GAAG,CAAEqd,MAAM,CAAE,CAAC,CAAG,CAAC;QAC7DuD,EAAE,GAAGha,GAAG;MAET;MAEA,IAAMia,EAAE,GAAGxD,MAAM,CAAEooG,QAAQ,GAAGhsH,CAAC,CAAE;MACjC,IAAMqnB,EAAE,GAAGzD,MAAM,CAAE,CAAEooG,QAAQ,GAAG,CAAC,IAAKhsH,CAAC,CAAE;MAEzC,IAAK,IAAI,CAACgpH,MAAM,IAAIgD,QAAQ,GAAG,CAAC,GAAGhsH,CAAC,EAAG;QAEtCy7B,EAAE,GAAG7X,MAAM,CAAE,CAAEooG,QAAQ,GAAG,CAAC,IAAKhsH,CAAC,CAAE;MAEpC,CAAC,MAAM;QAEN;QACAmN,GAAG,CAACtG,UAAU,CAAE+c,MAAM,CAAE5jB,CAAC,GAAG,CAAC,CAAE,EAAE4jB,MAAM,CAAE5jB,CAAC,GAAG,CAAC,CAAG,CAAC,CAACuG,GAAG,CAAEqd,MAAM,CAAE5jB,CAAC,GAAG,CAAC,CAAG,CAAC;QACzEy7B,EAAE,GAAGtuB,GAAG;MAET;MAEA,IAAK,IAAI,CAAC0+G,SAAS,KAAK,aAAa,IAAI,IAAI,CAACA,SAAS,KAAK,SAAS,EAAG;QAEvE;QACA,IAAMtoH,GAAG,GAAG,IAAI,CAACsoH,SAAS,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI;QACrD,IAAIX,GAAG,GAAG9qH,IAAI,CAACmD,GAAG,CAAE4jB,EAAE,CAAC3e,iBAAiB,CAAE4e,EAAG,CAAC,EAAE7jB,GAAI,CAAC;QACrD,IAAI4nH,GAAG,GAAG/qH,IAAI,CAACmD,GAAG,CAAE6jB,EAAE,CAAC5e,iBAAiB,CAAE6e,EAAG,CAAC,EAAE9jB,GAAI,CAAC;QACrD,IAAI6nH,GAAG,GAAGhrH,IAAI,CAACmD,GAAG,CAAE8jB,EAAE,CAAC7e,iBAAiB,CAAEizB,EAAG,CAAC,EAAEl4B,GAAI,CAAC;;QAErD;QACA,IAAK4nH,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAG,GAAG;QAC3B,IAAKD,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAGC,GAAG;QAC3B,IAAKC,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAGD,GAAG;QAE3BI,EAAE,CAACN,wBAAwB,CAAE9jG,EAAE,CAAC7lB,CAAC,EAAE8lB,EAAE,CAAC9lB,CAAC,EAAE+lB,EAAE,CAAC/lB,CAAC,EAAEm6B,EAAE,CAACn6B,CAAC,EAAE4pH,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;QACpEI,EAAE,CAACP,wBAAwB,CAAE9jG,EAAE,CAACvlB,CAAC,EAAEwlB,EAAE,CAACxlB,CAAC,EAAEylB,EAAE,CAACzlB,CAAC,EAAE65B,EAAE,CAAC75B,CAAC,EAAEspH,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;QACpEK,EAAE,CAACR,wBAAwB,CAAE9jG,EAAE,CAAChR,CAAC,EAAEiR,EAAE,CAACjR,CAAC,EAAEkR,EAAE,CAAClR,CAAC,EAAEslB,EAAE,CAACtlB,CAAC,EAAE+0G,GAAG,EAAEC,GAAG,EAAEC,GAAI,CAAC;MAErE,CAAC,MAAM,IAAK,IAAI,CAACS,SAAS,KAAK,YAAY,EAAG;QAE7CN,EAAE,CAACT,cAAc,CAAE3jG,EAAE,CAAC7lB,CAAC,EAAE8lB,EAAE,CAAC9lB,CAAC,EAAE+lB,EAAE,CAAC/lB,CAAC,EAAEm6B,EAAE,CAACn6B,CAAC,EAAE,IAAI,CAAC0pH,OAAQ,CAAC;QACzDQ,EAAE,CAACV,cAAc,CAAE3jG,EAAE,CAACvlB,CAAC,EAAEwlB,EAAE,CAACxlB,CAAC,EAAEylB,EAAE,CAACzlB,CAAC,EAAE65B,EAAE,CAAC75B,CAAC,EAAE,IAAI,CAACopH,OAAQ,CAAC;QACzDS,EAAE,CAACX,cAAc,CAAE3jG,EAAE,CAAChR,CAAC,EAAEiR,EAAE,CAACjR,CAAC,EAAEkR,EAAE,CAAClR,CAAC,EAAEslB,EAAE,CAACtlB,CAAC,EAAE,IAAI,CAAC60G,OAAQ,CAAC;MAE1D;MAEAzmG,KAAK,CAAC3f,GAAG,CACR2mH,EAAE,CAACF,IAAI,CAAExqD,MAAO,CAAC,EACjB2qD,EAAE,CAACH,IAAI,CAAExqD,MAAO,CAAC,EACjB4qD,EAAE,CAACJ,IAAI,CAAExqD,MAAO,CACjB,CAAC;MAED,OAAOt8C,KAAK;IAEb;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA2lF,gBAAA,CAAA3iI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACoP,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI10B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGwU,MAAM,CAACoP,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAExD,IAAMq1B,KAAK,GAAG/P,MAAM,CAACoP,MAAM,CAAE10B,CAAC,CAAE;QAEhC,IAAI,CAAC00B,MAAM,CAACl1B,IAAI,CAAE61B,KAAK,CAACne,KAAK,CAAC,CAAE,CAAC;MAElC;MAEA,IAAI,CAAC4iH,MAAM,GAAGx0G,MAAM,CAACw0G,MAAM;MAC3B,IAAI,CAAC6C,SAAS,GAAGr3G,MAAM,CAACq3G,SAAS;MACjC,IAAI,CAACb,OAAO,GAAGx2G,MAAM,CAACw2G,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA5hI,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA2lF,gBAAA,CAAA3iI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACuR,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI10B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC4jB,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEtD,IAAMq1B,KAAK,GAAG,IAAI,CAACX,MAAM,CAAE10B,CAAC,CAAE;QAC9BmjB,IAAI,CAACuR,MAAM,CAACl1B,IAAI,CAAE61B,KAAK,CAACnb,OAAO,CAAC,CAAE,CAAC;MAEpC;MAEAiJ,IAAI,CAAC22G,MAAM,GAAG,IAAI,CAACA,MAAM;MACzB32G,IAAI,CAACw5G,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/Bx5G,IAAI,CAAC24G,OAAO,GAAG,IAAI,CAACA,OAAO;MAE3B,OAAO34G,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAA2lF,gBAAA,CAAA3iI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC/8F,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI10B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAAC/8F,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEtD,IAAMq1B,KAAK,GAAGo8F,IAAI,CAAC/8F,MAAM,CAAE10B,CAAC,CAAE;QAC9B,IAAI,CAAC00B,MAAM,CAACl1B,IAAI,CAAE,IAAImxB,OAAO,CAAC,CAAC,CAAC3W,SAAS,CAAEqb,KAAM,CAAE,CAAC;MAErD;MAEA,IAAI,CAACykG,MAAM,GAAGrI,IAAI,CAACqI,MAAM;MACzB,IAAI,CAAC6C,SAAS,GAAGlL,IAAI,CAACkL,SAAS;MAC/B,IAAI,CAACb,OAAO,GAAGrK,IAAI,CAACqK,OAAO;MAE3B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAU,gBAAA;AAAA,EArK6BxE,KAAK;AAyKpC;AACA;AACA;AACA;AAHAt+H,OAAA,CAAA8iI,gBAAA,GAAAA,gBAAA;AAKA,SAASO,UAAUA,CAAEnqH,CAAC,EAAEqlB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEoU,EAAE,EAAG;EAExC,IAAMzU,EAAE,GAAG,CAAEK,EAAE,GAAGF,EAAE,IAAK,GAAG;EAC5B,IAAMpe,EAAE,GAAG,CAAE0yB,EAAE,GAAGrU,EAAE,IAAK,GAAG;EAC5B,IAAMshG,EAAE,GAAG5mH,CAAC,GAAGA,CAAC;EAChB,IAAMwpH,EAAE,GAAGxpH,CAAC,GAAG4mH,EAAE;EACjB,OAAO,CAAE,CAAC,GAAGthG,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAGL,EAAE,GAAGje,EAAE,IAAKuiH,EAAE,GAAG,CAAE,CAAE,CAAC,GAAGlkG,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAG,CAAC,GAAGL,EAAE,GAAGje,EAAE,IAAK2/G,EAAE,GAAG1hG,EAAE,GAAGllB,CAAC,GAAGslB,EAAE;AAEnG;;AAEA;;AAEA,SAAS8kG,iBAAiBA,CAAEpqH,CAAC,EAAEyuB,CAAC,EAAG;EAElC,IAAMk3D,CAAC,GAAG,CAAC,GAAG3lF,CAAC;EACf,OAAO2lF,CAAC,GAAGA,CAAC,GAAGl3D,CAAC;AAEjB;AAEA,SAAS47F,iBAAiBA,CAAErqH,CAAC,EAAEyuB,CAAC,EAAG;EAElC,OAAO,CAAC,IAAK,CAAC,GAAGzuB,CAAC,CAAE,GAAGA,CAAC,GAAGyuB,CAAC;AAE7B;AAEA,SAAS67F,iBAAiBA,CAAEtqH,CAAC,EAAEyuB,CAAC,EAAG;EAElC,OAAOzuB,CAAC,GAAGA,CAAC,GAAGyuB,CAAC;AAEjB;AAEA,SAAS87F,eAAeA,CAAEvqH,CAAC,EAAEqlB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;EAEzC,OAAO6kG,iBAAiB,CAAEpqH,CAAC,EAAEqlB,EAAG,CAAC,GAAGglG,iBAAiB,CAAErqH,CAAC,EAAEslB,EAAG,CAAC,GAC7DglG,iBAAiB,CAAEtqH,CAAC,EAAEulB,EAAG,CAAC;AAE5B;;AAEA;;AAEA,SAASilG,aAAaA,CAAExqH,CAAC,EAAEyuB,CAAC,EAAG;EAE9B,IAAMk3D,CAAC,GAAG,CAAC,GAAG3lF,CAAC;EACf,OAAO2lF,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGl3D,CAAC;AAErB;AAEA,SAASg8F,aAAaA,CAAEzqH,CAAC,EAAEyuB,CAAC,EAAG;EAE9B,IAAMk3D,CAAC,GAAG,CAAC,GAAG3lF,CAAC;EACf,OAAO,CAAC,GAAG2lF,CAAC,GAAGA,CAAC,GAAG3lF,CAAC,GAAGyuB,CAAC;AAEzB;AAEA,SAASi8F,aAAaA,CAAE1qH,CAAC,EAAEyuB,CAAC,EAAG;EAE9B,OAAO,CAAC,IAAK,CAAC,GAAGzuB,CAAC,CAAE,GAAGA,CAAC,GAAGA,CAAC,GAAGyuB,CAAC;AAEjC;AAEA,SAASk8F,aAAaA,CAAE3qH,CAAC,EAAEyuB,CAAC,EAAG;EAE9B,OAAOzuB,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGyuB,CAAC;AAErB;AAEA,SAASm8F,WAAWA,CAAE5qH,CAAC,EAAEqlB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEoU,EAAE,EAAG;EAEzC,OAAO6wF,aAAa,CAAExqH,CAAC,EAAEqlB,EAAG,CAAC,GAAGolG,aAAa,CAAEzqH,CAAC,EAAEslB,EAAG,CAAC,GAAGolG,aAAa,CAAE1qH,CAAC,EAAEulB,EAAG,CAAC,GAC9EolG,aAAa,CAAE3qH,CAAC,EAAE25B,EAAG,CAAC;AAExB;AAAC,IAEKkxF,gBAAgB,0BAAAC,OAAA;EAAAp5G,SAAA,CAAAm5G,gBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAn5G,YAAA,CAAAi5G,gBAAA;EAErB,SAAAA,iBAAa3lG,EAAE,GAAG,IAAIthB,OAAO,CAAC,CAAC,EAAEqD,EAAE,GAAG,IAAIrD,OAAO,CAAC,CAAC,EAAEsD,EAAE,GAAG,IAAItD,OAAO,CAAC,CAAC,EAAE+0B,EAAE,GAAG,IAAI/0B,OAAO,CAAC,CAAC,EAAG;IAAA,IAAAonH,OAAA;IAAAr7H,eAAA,OAAAk7H,gBAAA;IAE7FG,OAAA,GAAAD,QAAA,CAAAzhI,IAAA;IAEA0hI,OAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,OAAA,CAAK3hI,IAAI,GAAG,kBAAkB;IAE9B2hI,OAAA,CAAK9lG,EAAE,GAAGA,EAAE;IACZ8lG,OAAA,CAAK/jH,EAAE,GAAGA,EAAE;IACZ+jH,OAAA,CAAK9jH,EAAE,GAAGA,EAAE;IACZ8jH,OAAA,CAAKryF,EAAE,GAAGA,EAAE;IAAC,OAAAqyF,OAAA;EAEd;EAAC76H,YAAA,CAAA06H,gBAAA;IAAAvjI,GAAA;IAAAE,KAAA,EAED,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,GAAG,IAAI5hH,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM6e,KAAK,GAAG+iG,cAAc;MAE5B,IAAMtgG,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEje,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEyxB,EAAE,GAAG,IAAI,CAACA,EAAE;MAE5DlW,KAAK,CAAC3f,GAAG,CACR8nH,WAAW,CAAE5qH,CAAC,EAAEklB,EAAE,CAAC1lB,CAAC,EAAEyH,EAAE,CAACzH,CAAC,EAAE0H,EAAE,CAAC1H,CAAC,EAAEm5B,EAAE,CAACn5B,CAAE,CAAC,EACxCorH,WAAW,CAAE5qH,CAAC,EAAEklB,EAAE,CAACplB,CAAC,EAAEmH,EAAE,CAACnH,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAE64B,EAAE,CAAC74B,CAAE,CACxC,CAAC;MAED,OAAO2iB,KAAK;IAEb;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA4mF,gBAAA,CAAA5jI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACwS,EAAE,CAAC3gB,IAAI,CAAEmO,MAAM,CAACwS,EAAG,CAAC;MACzB,IAAI,CAACje,EAAE,CAAC1C,IAAI,CAAEmO,MAAM,CAACzL,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAAC3C,IAAI,CAAEmO,MAAM,CAACxL,EAAG,CAAC;MACzB,IAAI,CAACyxB,EAAE,CAACp0B,IAAI,CAAEmO,MAAM,CAACimB,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAArxC,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA4mF,gBAAA,CAAA5jI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAAC2U,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC5d,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACtJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACrJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACooB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACrxB,OAAO,CAAC,CAAC;MAE3B,OAAOiJ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAA4mF,gBAAA,CAAA5jI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC35F,EAAE,CAAC9d,SAAS,CAAEy3G,IAAI,CAAC35F,EAAG,CAAC;MAC5B,IAAI,CAACje,EAAE,CAACG,SAAS,CAAEy3G,IAAI,CAAC53G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEy3G,IAAI,CAAC33G,EAAG,CAAC;MAC5B,IAAI,CAACyxB,EAAE,CAACvxB,SAAS,CAAEy3G,IAAI,CAAClmF,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAkyF,gBAAA;AAAA,EArE6BzF,KAAK;AAAAt+H,OAAA,CAAA+jI,gBAAA,GAAAA,gBAAA;AAAA,IAyE9BK,iBAAiB,0BAAAC,OAAA;EAAAz5G,SAAA,CAAAw5G,iBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAx5G,YAAA,CAAAs5G,iBAAA;EAEtB,SAAAA,kBAAahmG,EAAE,GAAG,IAAInH,OAAO,CAAC,CAAC,EAAE9W,EAAE,GAAG,IAAI8W,OAAO,CAAC,CAAC,EAAE7W,EAAE,GAAG,IAAI6W,OAAO,CAAC,CAAC,EAAE4a,EAAE,GAAG,IAAI5a,OAAO,CAAC,CAAC,EAAG;IAAA,IAAAstG,OAAA;IAAA17H,eAAA,OAAAu7H,iBAAA;IAE7FG,OAAA,GAAAD,QAAA,CAAA9hI,IAAA;IAEA+hI,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAKhiI,IAAI,GAAG,mBAAmB;IAE/BgiI,OAAA,CAAKnmG,EAAE,GAAGA,EAAE;IACZmmG,OAAA,CAAKpkH,EAAE,GAAGA,EAAE;IACZokH,OAAA,CAAKnkH,EAAE,GAAGA,EAAE;IACZmkH,OAAA,CAAK1yF,EAAE,GAAGA,EAAE;IAAC,OAAA0yF,OAAA;EAEd;EAACl7H,YAAA,CAAA+6H,iBAAA;IAAA5jI,GAAA;IAAAE,KAAA,EAED,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,GAAG,IAAIznG,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM0E,KAAK,GAAG+iG,cAAc;MAE5B,IAAMtgG,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEje,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEyxB,EAAE,GAAG,IAAI,CAACA,EAAE;MAE5DlW,KAAK,CAAC3f,GAAG,CACR8nH,WAAW,CAAE5qH,CAAC,EAAEklB,EAAE,CAAC1lB,CAAC,EAAEyH,EAAE,CAACzH,CAAC,EAAE0H,EAAE,CAAC1H,CAAC,EAAEm5B,EAAE,CAACn5B,CAAE,CAAC,EACxCorH,WAAW,CAAE5qH,CAAC,EAAEklB,EAAE,CAACplB,CAAC,EAAEmH,EAAE,CAACnH,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAE64B,EAAE,CAAC74B,CAAE,CAAC,EACxC8qH,WAAW,CAAE5qH,CAAC,EAAEklB,EAAE,CAAC7Q,CAAC,EAAEpN,EAAE,CAACoN,CAAC,EAAEnN,EAAE,CAACmN,CAAC,EAAEskB,EAAE,CAACtkB,CAAE,CACxC,CAAC;MAED,OAAOoO,KAAK;IAEb;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAinF,iBAAA,CAAAjkI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACwS,EAAE,CAAC3gB,IAAI,CAAEmO,MAAM,CAACwS,EAAG,CAAC;MACzB,IAAI,CAACje,EAAE,CAAC1C,IAAI,CAAEmO,MAAM,CAACzL,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAAC3C,IAAI,CAAEmO,MAAM,CAACxL,EAAG,CAAC;MACzB,IAAI,CAACyxB,EAAE,CAACp0B,IAAI,CAAEmO,MAAM,CAACimB,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAArxC,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAinF,iBAAA,CAAAjkI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAAC2U,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC5d,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACtJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACrJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACooB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACrxB,OAAO,CAAC,CAAC;MAE3B,OAAOiJ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAAinF,iBAAA,CAAAjkI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC35F,EAAE,CAAC9d,SAAS,CAAEy3G,IAAI,CAAC35F,EAAG,CAAC;MAC5B,IAAI,CAACje,EAAE,CAACG,SAAS,CAAEy3G,IAAI,CAAC53G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEy3G,IAAI,CAAC33G,EAAG,CAAC;MAC5B,IAAI,CAACyxB,EAAE,CAACvxB,SAAS,CAAEy3G,IAAI,CAAClmF,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAuyF,iBAAA;AAAA,EAtE8B9F,KAAK;AAAAt+H,OAAA,CAAAokI,iBAAA,GAAAA,iBAAA;AAAA,IA0E/BK,SAAS,0BAAAC,OAAA;EAAA95G,SAAA,CAAA65G,SAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA75G,YAAA,CAAA25G,SAAA;EAEd,SAAAA,UAAatkH,EAAE,GAAG,IAAIrD,OAAO,CAAC,CAAC,EAAEsD,EAAE,GAAG,IAAItD,OAAO,CAAC,CAAC,EAAG;IAAA,IAAA8nH,OAAA;IAAA/7H,eAAA,OAAA47H,SAAA;IAErDG,OAAA,GAAAD,QAAA,CAAAniI,IAAA;IAEAoiI,OAAA,CAAKC,WAAW,GAAG,IAAI;IAEvBD,OAAA,CAAKriI,IAAI,GAAG,WAAW;IAEvBqiI,OAAA,CAAKzkH,EAAE,GAAGA,EAAE;IACZykH,OAAA,CAAKxkH,EAAE,GAAGA,EAAE;IAAC,OAAAwkH,OAAA;EAEd;EAACv7H,YAAA,CAAAo7H,SAAA;IAAAjkI,GAAA;IAAAE,KAAA,EAED,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,GAAG,IAAI5hH,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM6e,KAAK,GAAG+iG,cAAc;MAE5B,IAAKxlH,CAAC,KAAK,CAAC,EAAG;QAEdyiB,KAAK,CAACle,IAAI,CAAE,IAAI,CAAC2C,EAAG,CAAC;MAEtB,CAAC,MAAM;QAENub,KAAK,CAACle,IAAI,CAAE,IAAI,CAAC2C,EAAG,CAAC,CAACrC,GAAG,CAAE,IAAI,CAACoC,EAAG,CAAC;QACpCwb,KAAK,CAACxd,cAAc,CAAEjF,CAAE,CAAC,CAACyE,GAAG,CAAE,IAAI,CAACwC,EAAG,CAAC;MAEzC;MAEA,OAAOwb,KAAK;IAEb;;IAEA;EAAA;IAAAn7B,GAAA;IAAAE,KAAA,EACA,SAAA+9H,WAAYpkG,CAAC,EAAEqkG,cAAc,EAAG;MAE/B,OAAO,IAAI,CAACF,QAAQ,CAAEnkG,CAAC,EAAEqkG,cAAe,CAAC;IAE1C;EAAC;IAAAl+H,GAAA;IAAAE,KAAA,EAED,SAAAm/H,WAAY3mH,CAAC,EAAEwlH,cAAc,GAAG,IAAI5hH,OAAO,CAAC,CAAC,EAAG;MAE/C,OAAO4hH,cAAc,CAACzgH,UAAU,CAAE,IAAI,CAACmC,EAAE,EAAE,IAAI,CAACD,EAAG,CAAC,CAACxD,SAAS,CAAC,CAAC;IAEjE;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAAu/H,aAAc5lG,CAAC,EAAEqkG,cAAc,EAAG;MAEjC,OAAO,IAAI,CAACmB,UAAU,CAAExlG,CAAC,EAAEqkG,cAAe,CAAC;IAE5C;EAAC;IAAAl+H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAsnF,SAAA,CAAAtkI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACzL,EAAE,CAAC1C,IAAI,CAAEmO,MAAM,CAACzL,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAAC3C,IAAI,CAAEmO,MAAM,CAACxL,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA5f,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAsnF,SAAA,CAAAtkI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACtJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACrJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAE3B,OAAOiJ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAAsnF,SAAA,CAAAtkI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC53G,EAAE,CAACG,SAAS,CAAEy3G,IAAI,CAAC53G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEy3G,IAAI,CAAC33G,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAqkH,SAAA;AAAA,EApFsBnG,KAAK;AAAAt+H,OAAA,CAAAykI,SAAA,GAAAA,SAAA;AAAA,IAwFvBK,UAAU,0BAAAC,OAAA;EAAAn6G,SAAA,CAAAk6G,UAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAl6G,YAAA,CAAAg6G,UAAA;EAEf,SAAAA,WAAa3kH,EAAE,GAAG,IAAI8W,OAAO,CAAC,CAAC,EAAE7W,EAAE,GAAG,IAAI6W,OAAO,CAAC,CAAC,EAAG;IAAA,IAAAguG,OAAA;IAAAp8H,eAAA,OAAAi8H,UAAA;IAErDG,OAAA,GAAAD,QAAA,CAAAxiI,IAAA;IAEAyiI,OAAA,CAAKC,YAAY,GAAG,IAAI;IAExBD,OAAA,CAAK1iI,IAAI,GAAG,YAAY;IAExB0iI,OAAA,CAAK9kH,EAAE,GAAGA,EAAE;IACZ8kH,OAAA,CAAK7kH,EAAE,GAAGA,EAAE;IAAC,OAAA6kH,OAAA;EAEd;EAAC57H,YAAA,CAAAy7H,UAAA;IAAAtkI,GAAA;IAAAE,KAAA,EACD,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,GAAG,IAAIznG,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM0E,KAAK,GAAG+iG,cAAc;MAE5B,IAAKxlH,CAAC,KAAK,CAAC,EAAG;QAEdyiB,KAAK,CAACle,IAAI,CAAE,IAAI,CAAC2C,EAAG,CAAC;MAEtB,CAAC,MAAM;QAENub,KAAK,CAACle,IAAI,CAAE,IAAI,CAAC2C,EAAG,CAAC,CAACrC,GAAG,CAAE,IAAI,CAACoC,EAAG,CAAC;QACpCwb,KAAK,CAACxd,cAAc,CAAEjF,CAAE,CAAC,CAACyE,GAAG,CAAE,IAAI,CAACwC,EAAG,CAAC;MAEzC;MAEA,OAAOwb,KAAK;IAEb;IACA;EAAA;IAAAn7B,GAAA;IAAAE,KAAA,EACA,SAAA+9H,WAAYpkG,CAAC,EAAEqkG,cAAc,EAAG;MAE/B,OAAO,IAAI,CAACF,QAAQ,CAAEnkG,CAAC,EAAEqkG,cAAe,CAAC;IAE1C;EAAC;IAAAl+H,GAAA;IAAAE,KAAA,EAED,SAAAm/H,WAAY3mH,CAAC,EAAEwlH,cAAc,GAAG,IAAIznG,OAAO,CAAC,CAAC,EAAG;MAE/C,OAAOynG,cAAc,CAACzgH,UAAU,CAAE,IAAI,CAACmC,EAAE,EAAE,IAAI,CAACD,EAAG,CAAC,CAACxD,SAAS,CAAC,CAAC;IAEjE;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAAu/H,aAAc5lG,CAAC,EAAEqkG,cAAc,EAAG;MAEjC,OAAO,IAAI,CAACmB,UAAU,CAAExlG,CAAC,EAAEqkG,cAAe,CAAC;IAE5C;EAAC;IAAAl+H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA2nF,UAAA,CAAA3kI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACzL,EAAE,CAAC1C,IAAI,CAAEmO,MAAM,CAACzL,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAAC3C,IAAI,CAAEmO,MAAM,CAACxL,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA5f,GAAA;IAAAE,KAAA,EACD,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA2nF,UAAA,CAAA3kI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACtJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACrJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAE3B,OAAOiJ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EACD,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAA2nF,UAAA,CAAA3kI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC53G,EAAE,CAACG,SAAS,CAAEy3G,IAAI,CAAC53G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEy3G,IAAI,CAAC33G,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA0kH,UAAA;AAAA,EAhFuBxG,KAAK;AAAAt+H,OAAA,CAAA8kI,UAAA,GAAAA,UAAA;AAAA,IAoFxBK,oBAAoB,0BAAAC,OAAA;EAAAx6G,SAAA,CAAAu6G,oBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAv6G,YAAA,CAAAq6G,oBAAA;EAEzB,SAAAA,qBAAa/mG,EAAE,GAAG,IAAIthB,OAAO,CAAC,CAAC,EAAEqD,EAAE,GAAG,IAAIrD,OAAO,CAAC,CAAC,EAAEsD,EAAE,GAAG,IAAItD,OAAO,CAAC,CAAC,EAAG;IAAA,IAAAwoH,OAAA;IAAAz8H,eAAA,OAAAs8H,oBAAA;IAEzEG,OAAA,GAAAD,QAAA,CAAA7iI,IAAA;IAEA8iI,OAAA,CAAKC,sBAAsB,GAAG,IAAI;IAElCD,OAAA,CAAK/iI,IAAI,GAAG,sBAAsB;IAElC+iI,OAAA,CAAKlnG,EAAE,GAAGA,EAAE;IACZknG,OAAA,CAAKnlH,EAAE,GAAGA,EAAE;IACZmlH,OAAA,CAAKllH,EAAE,GAAGA,EAAE;IAAC,OAAAklH,OAAA;EAEd;EAACj8H,YAAA,CAAA87H,oBAAA;IAAA3kI,GAAA;IAAAE,KAAA,EAED,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,GAAG,IAAI5hH,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM6e,KAAK,GAAG+iG,cAAc;MAE5B,IAAMtgG,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEje,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;MAE9Cub,KAAK,CAAC3f,GAAG,CACRynH,eAAe,CAAEvqH,CAAC,EAAEklB,EAAE,CAAC1lB,CAAC,EAAEyH,EAAE,CAACzH,CAAC,EAAE0H,EAAE,CAAC1H,CAAE,CAAC,EACtC+qH,eAAe,CAAEvqH,CAAC,EAAEklB,EAAE,CAACplB,CAAC,EAAEmH,EAAE,CAACnH,CAAC,EAAEoH,EAAE,CAACpH,CAAE,CACtC,CAAC;MAED,OAAO2iB,KAAK;IAEb;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAgoF,oBAAA,CAAAhlI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACwS,EAAE,CAAC3gB,IAAI,CAAEmO,MAAM,CAACwS,EAAG,CAAC;MACzB,IAAI,CAACje,EAAE,CAAC1C,IAAI,CAAEmO,MAAM,CAACzL,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAAC3C,IAAI,CAAEmO,MAAM,CAACxL,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA5f,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAgoF,oBAAA,CAAAhlI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAAC2U,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC5d,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACtJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACrJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAE3B,OAAOiJ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAAgoF,oBAAA,CAAAhlI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC35F,EAAE,CAAC9d,SAAS,CAAEy3G,IAAI,CAAC35F,EAAG,CAAC;MAC5B,IAAI,CAACje,EAAE,CAACG,SAAS,CAAEy3G,IAAI,CAAC53G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEy3G,IAAI,CAAC33G,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA+kH,oBAAA;AAAA,EAjEiC7G,KAAK;AAAAt+H,OAAA,CAAAmlI,oBAAA,GAAAA,oBAAA;AAAA,IAqElCK,qBAAqB,0BAAAC,OAAA;EAAA76G,SAAA,CAAA46G,qBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA56G,YAAA,CAAA06G,qBAAA;EAE1B,SAAAA,sBAAapnG,EAAE,GAAG,IAAInH,OAAO,CAAC,CAAC,EAAE9W,EAAE,GAAG,IAAI8W,OAAO,CAAC,CAAC,EAAE7W,EAAE,GAAG,IAAI6W,OAAO,CAAC,CAAC,EAAG;IAAA,IAAA0uG,OAAA;IAAA98H,eAAA,OAAA28H,qBAAA;IAEzEG,OAAA,GAAAD,QAAA,CAAAljI,IAAA;IAEAmjI,OAAA,CAAKC,uBAAuB,GAAG,IAAI;IAEnCD,OAAA,CAAKpjI,IAAI,GAAG,uBAAuB;IAEnCojI,OAAA,CAAKvnG,EAAE,GAAGA,EAAE;IACZunG,OAAA,CAAKxlH,EAAE,GAAGA,EAAE;IACZwlH,OAAA,CAAKvlH,EAAE,GAAGA,EAAE;IAAC,OAAAulH,OAAA;EAEd;EAACt8H,YAAA,CAAAm8H,qBAAA;IAAAhlI,GAAA;IAAAE,KAAA,EAED,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,GAAG,IAAIznG,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM0E,KAAK,GAAG+iG,cAAc;MAE5B,IAAMtgG,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEje,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;MAE9Cub,KAAK,CAAC3f,GAAG,CACRynH,eAAe,CAAEvqH,CAAC,EAAEklB,EAAE,CAAC1lB,CAAC,EAAEyH,EAAE,CAACzH,CAAC,EAAE0H,EAAE,CAAC1H,CAAE,CAAC,EACtC+qH,eAAe,CAAEvqH,CAAC,EAAEklB,EAAE,CAACplB,CAAC,EAAEmH,EAAE,CAACnH,CAAC,EAAEoH,EAAE,CAACpH,CAAE,CAAC,EACtCyqH,eAAe,CAAEvqH,CAAC,EAAEklB,EAAE,CAAC7Q,CAAC,EAAEpN,EAAE,CAACoN,CAAC,EAAEnN,EAAE,CAACmN,CAAE,CACtC,CAAC;MAED,OAAOoO,KAAK;IAEb;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAqoF,qBAAA,CAAArlI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACwS,EAAE,CAAC3gB,IAAI,CAAEmO,MAAM,CAACwS,EAAG,CAAC;MACzB,IAAI,CAACje,EAAE,CAAC1C,IAAI,CAAEmO,MAAM,CAACzL,EAAG,CAAC;MACzB,IAAI,CAACC,EAAE,CAAC3C,IAAI,CAAEmO,MAAM,CAACxL,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA5f,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAqoF,qBAAA,CAAArlI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAAC2U,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC5d,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACtJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,CAAC,CAAC;MAC3BiJ,IAAI,CAACrJ,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,CAAC,CAAC;MAE3B,OAAOiJ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAAqoF,qBAAA,CAAArlI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC35F,EAAE,CAAC9d,SAAS,CAAEy3G,IAAI,CAAC35F,EAAG,CAAC;MAC5B,IAAI,CAACje,EAAE,CAACG,SAAS,CAAEy3G,IAAI,CAAC53G,EAAG,CAAC;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEy3G,IAAI,CAAC33G,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAolH,qBAAA;AAAA,EAlEkClH,KAAK;AAAAt+H,OAAA,CAAAwlI,qBAAA,GAAAA,qBAAA;AAAA,IAsEnCK,WAAW,0BAAAC,OAAA;EAAAl7G,SAAA,CAAAi7G,WAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAj7G,YAAA,CAAA+6G,WAAA;EAEhB,SAAAA,YAAa7qG,MAAM,GAAG,EAAE,EAAG;IAAA,IAAAgrG,OAAA;IAAAn9H,eAAA,OAAAg9H,WAAA;IAE1BG,OAAA,GAAAD,QAAA,CAAAvjI,IAAA;IAEAwjI,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAKzjI,IAAI,GAAG,aAAa;IAEzByjI,OAAA,CAAKhrG,MAAM,GAAGA,MAAM;IAAC,OAAAgrG,OAAA;EAEtB;EAAC38H,YAAA,CAAAw8H,WAAA;IAAArlI,GAAA;IAAAE,KAAA,EAED,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,GAAG,IAAI5hH,OAAO,CAAC,CAAC,EAAG;MAE7C,IAAM6e,KAAK,GAAG+iG,cAAc;MAE5B,IAAM1jG,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAM2M,CAAC,GAAG,CAAE3M,MAAM,CAAC30B,MAAM,GAAG,CAAC,IAAK6S,CAAC;MAEnC,IAAMkqH,QAAQ,GAAG5rH,IAAI,CAACsC,KAAK,CAAE6tB,CAAE,CAAC;MAChC,IAAMswC,MAAM,GAAGtwC,CAAC,GAAGy7F,QAAQ;MAE3B,IAAM7kG,EAAE,GAAGvD,MAAM,CAAEooG,QAAQ,KAAK,CAAC,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAAC,CAAE;MAC7D,IAAM5kG,EAAE,GAAGxD,MAAM,CAAEooG,QAAQ,CAAE;MAC7B,IAAM3kG,EAAE,GAAGzD,MAAM,CAAEooG,QAAQ,GAAGpoG,MAAM,CAAC30B,MAAM,GAAG,CAAC,GAAG20B,MAAM,CAAC30B,MAAM,GAAG,CAAC,GAAG+8H,QAAQ,GAAG,CAAC,CAAE;MACpF,IAAMvwF,EAAE,GAAG7X,MAAM,CAAEooG,QAAQ,GAAGpoG,MAAM,CAAC30B,MAAM,GAAG,CAAC,GAAG20B,MAAM,CAAC30B,MAAM,GAAG,CAAC,GAAG+8H,QAAQ,GAAG,CAAC,CAAE;MAEpFznG,KAAK,CAAC3f,GAAG,CACRqnH,UAAU,CAAEprD,MAAM,EAAE15C,EAAE,CAAC7lB,CAAC,EAAE8lB,EAAE,CAAC9lB,CAAC,EAAE+lB,EAAE,CAAC/lB,CAAC,EAAEm6B,EAAE,CAACn6B,CAAE,CAAC,EAC5C2qH,UAAU,CAAEprD,MAAM,EAAE15C,EAAE,CAACvlB,CAAC,EAAEwlB,EAAE,CAACxlB,CAAC,EAAEylB,EAAE,CAACzlB,CAAC,EAAE65B,EAAE,CAAC75B,CAAE,CAC5C,CAAC;MAED,OAAO2iB,KAAK;IAEb;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA0oF,WAAA,CAAA1lI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACoP,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI10B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGwU,MAAM,CAACoP,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAExD,IAAMq1B,KAAK,GAAG/P,MAAM,CAACoP,MAAM,CAAE10B,CAAC,CAAE;QAEhC,IAAI,CAAC00B,MAAM,CAACl1B,IAAI,CAAE61B,KAAK,CAACne,KAAK,CAAC,CAAE,CAAC;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhd,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA0oF,WAAA,CAAA1lI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACuR,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI10B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC4jB,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEtD,IAAMq1B,KAAK,GAAG,IAAI,CAACX,MAAM,CAAE10B,CAAC,CAAE;QAC9BmjB,IAAI,CAACuR,MAAM,CAACl1B,IAAI,CAAE61B,KAAK,CAACnb,OAAO,CAAC,CAAE,CAAC;MAEpC;MAEA,OAAOiJ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAA0oF,WAAA,CAAA1lI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC/8F,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI10B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAAC/8F,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEtD,IAAMq1B,KAAK,GAAGo8F,IAAI,CAAC/8F,MAAM,CAAE10B,CAAC,CAAE;QAC9B,IAAI,CAAC00B,MAAM,CAACl1B,IAAI,CAAE,IAAIgX,OAAO,CAAC,CAAC,CAACwD,SAAS,CAAEqb,KAAM,CAAE,CAAC;MAErD;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAkqG,WAAA;AAAA,EAxFwBvH,KAAK;AAAAt+H,OAAA,CAAA6lI,WAAA,GAAAA,WAAA;AA4F/B,IAAIK,MAAM,GAAG,aAAahmI,MAAM,CAACimI,MAAM,CAAC;EACvCp/H,SAAS,EAAE,IAAI;EACf26H,QAAQ,EAAEA,QAAQ;EAClBoB,gBAAgB,EAAEA,gBAAgB;EAClCiB,gBAAgB,EAAEA,gBAAgB;EAClCK,iBAAiB,EAAEA,iBAAiB;EACpC1D,YAAY,EAAEA,YAAY;EAC1B+D,SAAS,EAAEA,SAAS;EACpBK,UAAU,EAAEA,UAAU;EACtBK,oBAAoB,EAAEA,oBAAoB;EAC1CK,qBAAqB,EAAEA,qBAAqB;EAC5CK,WAAW,EAAEA;AACd,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AAHA,IAKMO,SAAS,0BAAAC,QAAA;EAAAz7G,SAAA,CAAAw7G,SAAA,EAAAC,QAAA;EAAA,IAAAC,QAAA,GAAAx7G,YAAA,CAAAs7G,SAAA;EAEd,SAAAA,UAAA,EAAc;IAAA,IAAAG,OAAA;IAAA19H,eAAA,OAAAu9H,SAAA;IAEbG,OAAA,GAAAD,QAAA,CAAA9jI,IAAA;IAEA+jI,OAAA,CAAKhkI,IAAI,GAAG,WAAW;IAEvBgkI,OAAA,CAAKC,MAAM,GAAG,EAAE;IAChBD,OAAA,CAAKE,SAAS,GAAG,KAAK,CAAC,CAAC;IAAA,OAAAF,OAAA;EAEzB;EAACl9H,YAAA,CAAA+8H,SAAA;IAAA5lI,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAK+oH,KAAK,EAAG;MAEZ,IAAI,CAACF,MAAM,CAAC1gI,IAAI,CAAE4gI,KAAM,CAAC;IAE1B;EAAC;IAAAlmI,GAAA;IAAAE,KAAA,EAED,SAAAimI,UAAA,EAAY;MAEX;MACA,IAAMC,UAAU,GAAG,IAAI,CAACJ,MAAM,CAAE,CAAC,CAAE,CAAChI,QAAQ,CAAE,CAAE,CAAC;MACjD,IAAMqI,QAAQ,GAAG,IAAI,CAACL,MAAM,CAAE,IAAI,CAACA,MAAM,CAACngI,MAAM,GAAG,CAAC,CAAE,CAACm4H,QAAQ,CAAE,CAAE,CAAC;MAEpE,IAAK,CAAEoI,UAAU,CAACvmH,MAAM,CAAEwmH,QAAS,CAAC,EAAG;QAEtC,IAAI,CAACL,MAAM,CAAC1gI,IAAI,CAAE,IAAI2+H,SAAS,CAAEoC,QAAQ,EAAED,UAAW,CAAE,CAAC;MAE1D;IAED;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;EAAA;IAAApmI,GAAA;IAAAE,KAAA,EAEA,SAAA89H,SAAUtlH,CAAC,EAAEwlH,cAAc,EAAG;MAE7B,IAAM96G,CAAC,GAAG1K,CAAC,GAAG,IAAI,CAAC6lH,SAAS,CAAC,CAAC;MAC9B,IAAM+H,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;MAC3C,IAAIzgI,CAAC,GAAG,CAAC;;MAET;;MAEA,OAAQA,CAAC,GAAGwgI,YAAY,CAACzgI,MAAM,EAAG;QAEjC,IAAKygI,YAAY,CAAExgI,CAAC,CAAE,IAAIsd,CAAC,EAAG;UAE7B,IAAMojH,IAAI,GAAGF,YAAY,CAAExgI,CAAC,CAAE,GAAGsd,CAAC;UAClC,IAAM8iH,KAAK,GAAG,IAAI,CAACF,MAAM,CAAElgI,CAAC,CAAE;UAE9B,IAAMq5H,aAAa,GAAG+G,KAAK,CAAC3H,SAAS,CAAC,CAAC;UACvC,IAAM1kG,CAAC,GAAGslG,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGqH,IAAI,GAAGrH,aAAa;UAE5D,OAAO+G,KAAK,CAACjI,UAAU,CAAEpkG,CAAC,EAAEqkG,cAAe,CAAC;QAE7C;QAEAp4H,CAAC,EAAG;MAEL;MAEA,OAAO,IAAI;;MAEX;IAED;;IAEA;IACA;IACA;EAAA;IAAA9F,GAAA;IAAAE,KAAA,EAEA,SAAAq+H,UAAA,EAAY;MAEX,IAAMkI,IAAI,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC;MACnC,OAAOE,IAAI,CAAEA,IAAI,CAAC5gI,MAAM,GAAG,CAAC,CAAE;IAE/B;;IAEA;EAAA;IAAA7F,GAAA;IAAAE,KAAA,EACA,SAAA2+H,iBAAA,EAAmB;MAElB,IAAI,CAACvyG,WAAW,GAAG,IAAI;MACvB,IAAI,CAACo6G,YAAY,GAAG,IAAI;MACxB,IAAI,CAACH,eAAe,CAAC,CAAC;IAEvB;;IAEA;IACA;EAAA;IAAAvmI,GAAA;IAAAE,KAAA,EAEA,SAAAqmI,gBAAA,EAAkB;MAEjB;;MAEA,IAAK,IAAI,CAACG,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC7gI,MAAM,KAAK,IAAI,CAACmgI,MAAM,CAACngI,MAAM,EAAG;QAE3E,OAAO,IAAI,CAAC6gI,YAAY;MAEzB;;MAEA;MACA;;MAEA,IAAMlI,OAAO,GAAG,EAAE;MAClB,IAAImI,IAAI,GAAG,CAAC;MAEZ,KAAM,IAAI7gI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAACovH,MAAM,CAACngI,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEtD6gI,IAAI,IAAI,IAAI,CAACX,MAAM,CAAElgI,CAAC,CAAE,CAACy4H,SAAS,CAAC,CAAC;QACpCC,OAAO,CAACl5H,IAAI,CAAEqhI,IAAK,CAAC;MAErB;MAEA,IAAI,CAACD,YAAY,GAAGlI,OAAO;MAE3B,OAAOA,OAAO;IAEf;EAAC;IAAAx+H,GAAA;IAAAE,KAAA,EAED,SAAAo+H,gBAAiBD,SAAS,GAAG,EAAE,EAAG;MAEjC,IAAM7jG,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAI10B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIu4H,SAAS,EAAEv4H,CAAC,EAAG,EAAG;QAEvC00B,MAAM,CAACl1B,IAAI,CAAE,IAAI,CAAC04H,QAAQ,CAAEl4H,CAAC,GAAGu4H,SAAU,CAAE,CAAC;MAE9C;MAEA,IAAK,IAAI,CAAC4H,SAAS,EAAG;QAErBzrG,MAAM,CAACl1B,IAAI,CAAEk1B,MAAM,CAAE,CAAC,CAAG,CAAC;MAE3B;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAAx6B,GAAA;IAAAE,KAAA,EAED,SAAAk+H,UAAWC,SAAS,GAAG,EAAE,EAAG;MAE3B,IAAM7jG,MAAM,GAAG,EAAE;MACjB,IAAIokG,IAAI;MAER,KAAM,IAAI94H,CAAC,GAAG,CAAC,EAAEkgI,MAAM,GAAG,IAAI,CAACA,MAAM,EAAElgI,CAAC,GAAGkgI,MAAM,CAACngI,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEhE,IAAMogI,KAAK,GAAGF,MAAM,CAAElgI,CAAC,CAAE;QACzB,IAAM+1F,UAAU,GAAGqqC,KAAK,CAACpF,cAAc,GAAGzC,SAAS,GAAG,CAAC,GAClD6H,KAAK,CAAC7B,WAAW,IAAI6B,KAAK,CAACxB,YAAY,GAAK,CAAC,GAC9CwB,KAAK,CAACT,aAAa,GAAGpH,SAAS,GAAG6H,KAAK,CAAC1rG,MAAM,CAAC30B,MAAM,GACpDw4H,SAAS;QAEd,IAAMuI,GAAG,GAAGV,KAAK,CAAC9H,SAAS,CAAEviC,UAAW,CAAC;QAEzC,KAAM,IAAI/9D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8oG,GAAG,CAAC/gI,MAAM,EAAEi4B,CAAC,EAAG,EAAG;UAEvC,IAAM3C,KAAK,GAAGyrG,GAAG,CAAE9oG,CAAC,CAAE;UAEtB,IAAK8gG,IAAI,IAAIA,IAAI,CAAC/+G,MAAM,CAAEsb,KAAM,CAAC,EAAG,SAAS,CAAC;;UAE9CX,MAAM,CAACl1B,IAAI,CAAE61B,KAAM,CAAC;UACpByjG,IAAI,GAAGzjG,KAAK;QAEb;MAED;MAEA,IAAK,IAAI,CAAC8qG,SAAS,IAAIzrG,MAAM,CAAC30B,MAAM,GAAG,CAAC,IAAI,CAAE20B,MAAM,CAAEA,MAAM,CAAC30B,MAAM,GAAG,CAAC,CAAE,CAACga,MAAM,CAAE2a,MAAM,CAAE,CAAC,CAAG,CAAC,EAAG;QAEjGA,MAAM,CAACl1B,IAAI,CAAEk1B,MAAM,CAAE,CAAC,CAAG,CAAC;MAE3B;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAAx6B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAipF,SAAA,CAAAjmI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC46G,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIlgI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGwU,MAAM,CAAC46G,MAAM,CAACngI,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAExD,IAAMogI,KAAK,GAAG96G,MAAM,CAAC46G,MAAM,CAAElgI,CAAC,CAAE;QAEhC,IAAI,CAACkgI,MAAM,CAAC1gI,IAAI,CAAE4gI,KAAK,CAAClpH,KAAK,CAAC,CAAE,CAAC;MAElC;MAEA,IAAI,CAACipH,SAAS,GAAG76G,MAAM,CAAC66G,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAjmI,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAipF,SAAA,CAAAjmI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACg9G,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/Bh9G,IAAI,CAAC+8G,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIlgI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAACovH,MAAM,CAACngI,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEtD,IAAMogI,KAAK,GAAG,IAAI,CAACF,MAAM,CAAElgI,CAAC,CAAE;QAC9BmjB,IAAI,CAAC+8G,MAAM,CAAC1gI,IAAI,CAAE4gI,KAAK,CAAC58G,MAAM,CAAC,CAAE,CAAC;MAEnC;MAEA,OAAOL,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAAipF,SAAA,CAAAjmI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC0O,SAAS,GAAG1O,IAAI,CAAC0O,SAAS;MAC/B,IAAI,CAACD,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIlgI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAACyO,MAAM,CAACngI,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEtD,IAAMogI,KAAK,GAAG3O,IAAI,CAACyO,MAAM,CAAElgI,CAAC,CAAE;QAC9B,IAAI,CAACkgI,MAAM,CAAC1gI,IAAI,CAAE,IAAIogI,MAAM,CAAEQ,KAAK,CAACnkI,IAAI,CAAE,CAAC,CAAC,CAAC8nD,QAAQ,CAAEq8E,KAAM,CAAE,CAAC;MAEjE;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAN,SAAA;AAAA,EA9OsB9H,KAAK;AAAAt+H,OAAA,CAAAomI,SAAA,GAAAA,SAAA;AAAA,IAkPvBiB,IAAI,0BAAAC,UAAA;EAAA18G,SAAA,CAAAy8G,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAz8G,YAAA,CAAAu8G,IAAA;EAET,SAAAA,KAAarsG,MAAM,EAAG;IAAA,IAAAwsG,OAAA;IAAA3+H,eAAA,OAAAw+H,IAAA;IAErBG,OAAA,GAAAD,QAAA,CAAA/kI,IAAA;IAEAglI,OAAA,CAAKjlI,IAAI,GAAG,MAAM;IAElBilI,OAAA,CAAKC,YAAY,GAAG,IAAI3qH,OAAO,CAAC,CAAC;IAEjC,IAAKke,MAAM,EAAG;MAEbwsG,OAAA,CAAKzsG,aAAa,CAAEC,MAAO,CAAC;IAE7B;IAAC,OAAAwsG,OAAA;EAEF;EAACn+H,YAAA,CAAAg+H,IAAA;IAAA7mI,GAAA;IAAAE,KAAA,EAED,SAAAq6B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAAC0sG,MAAM,CAAE1sG,MAAM,CAAE,CAAC,CAAE,CAACtiB,CAAC,EAAEsiB,MAAM,CAAE,CAAC,CAAE,CAAChiB,CAAE,CAAC;MAE3C,KAAM,IAAI1S,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG4jB,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEjD,IAAI,CAACqhI,MAAM,CAAE3sG,MAAM,CAAE10B,CAAC,CAAE,CAACoS,CAAC,EAAEsiB,MAAM,CAAE10B,CAAC,CAAE,CAAC0S,CAAE,CAAC;MAE5C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAgnI,OAAQhvH,CAAC,EAAEM,CAAC,EAAG;MAEd,IAAI,CAACyuH,YAAY,CAACzrH,GAAG,CAAEtD,CAAC,EAAEM,CAAE,CAAC,CAAC,CAAC;;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAinI,OAAQjvH,CAAC,EAAEM,CAAC,EAAG;MAEd,IAAM0tH,KAAK,GAAG,IAAIjC,SAAS,CAAE,IAAI,CAACgD,YAAY,CAACjqH,KAAK,CAAC,CAAC,EAAE,IAAIV,OAAO,CAAEpE,CAAC,EAAEM,CAAE,CAAE,CAAC;MAC7E,IAAI,CAACwtH,MAAM,CAAC1gI,IAAI,CAAE4gI,KAAM,CAAC;MAEzB,IAAI,CAACe,YAAY,CAACzrH,GAAG,CAAEtD,CAAC,EAAEM,CAAE,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAknI,iBAAkBC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAE,EAAG;MAEtC,IAAM4F,KAAK,GAAG,IAAIvB,oBAAoB,CACrC,IAAI,CAACsC,YAAY,CAACjqH,KAAK,CAAC,CAAC,EACzB,IAAIV,OAAO,CAAE+qH,IAAI,EAAEC,IAAK,CAAC,EACzB,IAAIhrH,OAAO,CAAE+jH,EAAE,EAAEC,EAAG,CACrB,CAAC;MAED,IAAI,CAAC0F,MAAM,CAAC1gI,IAAI,CAAE4gI,KAAM,CAAC;MAEzB,IAAI,CAACe,YAAY,CAACzrH,GAAG,CAAE6kH,EAAE,EAAEC,EAAG,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAtgI,GAAA;IAAAE,KAAA,EAED,SAAAqnI,cAAeC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAM4F,KAAK,GAAG,IAAI3C,gBAAgB,CACjC,IAAI,CAAC0D,YAAY,CAACjqH,KAAK,CAAC,CAAC,EACzB,IAAIV,OAAO,CAAEkrH,KAAK,EAAEC,KAAM,CAAC,EAC3B,IAAInrH,OAAO,CAAEorH,KAAK,EAAEC,KAAM,CAAC,EAC3B,IAAIrrH,OAAO,CAAE+jH,EAAE,EAAEC,EAAG,CACrB,CAAC;MAED,IAAI,CAAC0F,MAAM,CAAC1gI,IAAI,CAAE4gI,KAAM,CAAC;MAEzB,IAAI,CAACe,YAAY,CAACzrH,GAAG,CAAE6kH,EAAE,EAAEC,EAAG,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAtgI,GAAA;IAAAE,KAAA,EAED,SAAA0nI,WAAYhB,GAAG,CAAC,qBAAsB;MAErC,IAAMiB,IAAI,GAAG,CAAE,IAAI,CAACZ,YAAY,CAACjqH,KAAK,CAAC,CAAC,CAAE,CAAC2K,MAAM,CAAEi/G,GAAI,CAAC;MAExD,IAAMV,KAAK,GAAG,IAAIb,WAAW,CAAEwC,IAAK,CAAC;MACrC,IAAI,CAAC7B,MAAM,CAAC1gI,IAAI,CAAE4gI,KAAM,CAAC;MAEzB,IAAI,CAACe,YAAY,CAAChqH,IAAI,CAAE2pH,GAAG,CAAEA,GAAG,CAAC/gI,MAAM,GAAG,CAAC,CAAG,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EAED,SAAA4nI,IAAKzH,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;MAE1D,IAAM/qG,EAAE,GAAG,IAAI,CAACqxG,YAAY,CAAC/uH,CAAC;MAC9B,IAAM2d,EAAE,GAAG,IAAI,CAACoxG,YAAY,CAACzuH,CAAC;MAE9B,IAAI,CAACuvH,MAAM,CAAE1H,EAAE,GAAGzqG,EAAE,EAAE0qG,EAAE,GAAGzqG,EAAE,EAAEwrG,OAAO,EACrCZ,WAAW,EAAEC,SAAS,EAAEC,UAAW,CAAC;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAA3gI,GAAA;IAAAE,KAAA,EAED,SAAA6nI,OAAQ1H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;MAE7D,IAAI,CAACqH,UAAU,CAAE3H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEA,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAW,CAAC;MAE/E,OAAO,IAAI;IAEZ;EAAC;IAAA3gI,GAAA;IAAAE,KAAA,EAED,SAAA+nI,QAAS5H,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAG;MAElF,IAAMhrG,EAAE,GAAG,IAAI,CAACqxG,YAAY,CAAC/uH,CAAC;MAC9B,IAAM2d,EAAE,GAAG,IAAI,CAACoxG,YAAY,CAACzuH,CAAC;MAE9B,IAAI,CAACwvH,UAAU,CAAE3H,EAAE,GAAGzqG,EAAE,EAAE0qG,EAAE,GAAGzqG,EAAE,EAAE0qG,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAU,CAAC;MAEpG,OAAO,IAAI;IAEZ;EAAC;IAAA5gI,GAAA;IAAAE,KAAA,EAED,SAAA8nI,WAAY3H,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAG;MAErF,IAAMsF,KAAK,GAAG,IAAIhG,YAAY,CAAEG,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAU,CAAC;MAEzG,IAAK,IAAI,CAACoF,MAAM,CAACngI,MAAM,GAAG,CAAC,EAAG;QAE7B;QACA,IAAMqiI,UAAU,GAAGhC,KAAK,CAAClI,QAAQ,CAAE,CAAE,CAAC;QAEtC,IAAK,CAAEkK,UAAU,CAACroH,MAAM,CAAE,IAAI,CAAConH,YAAa,CAAC,EAAG;UAE/C,IAAI,CAACE,MAAM,CAAEe,UAAU,CAAChwH,CAAC,EAAEgwH,UAAU,CAAC1vH,CAAE,CAAC;QAE1C;MAED;MAEA,IAAI,CAACwtH,MAAM,CAAC1gI,IAAI,CAAE4gI,KAAM,CAAC;MAEzB,IAAMiC,SAAS,GAAGjC,KAAK,CAAClI,QAAQ,CAAE,CAAE,CAAC;MACrC,IAAI,CAACiJ,YAAY,CAAChqH,IAAI,CAAEkrH,SAAU,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAnoI,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAkqF,IAAA,CAAAlnI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC67G,YAAY,CAAChqH,IAAI,CAAEmO,MAAM,CAAC67G,YAAa,CAAC;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAAjnI,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAkqF,IAAA,CAAAlnI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACg+G,YAAY,GAAG,IAAI,CAACA,YAAY,CAACjnH,OAAO,CAAC,CAAC;MAE/C,OAAOiJ,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAAkqF,IAAA,CAAAlnI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC0P,YAAY,CAACnnH,SAAS,CAAEy3G,IAAI,CAAC0P,YAAa,CAAC;MAEhD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAJ,IAAA;AAAA,EAtLiBjB,SAAS;AAAApmI,OAAA,CAAAqnI,IAAA,GAAAA,IAAA;AAAA,IA0LtBuB,aAAa,0BAAAC,gBAAA;EAAAj+G,SAAA,CAAAg+G,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAh+G,YAAA,CAAA89G,aAAA;EAElB,SAAAA,cAAa5tG,MAAM,GAAG,CAAE,IAAIle,OAAO,CAAE,CAAC,EAAE,CAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,GAAI,CAAC,CAAE,EAAEqjH,QAAQ,GAAG,EAAE,EAAE4I,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAGxxH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAwxH,OAAA;IAAApgI,eAAA,OAAA+/H,aAAA;IAEvJK,OAAA,GAAAH,QAAA,CAAAtmI,IAAA;IAEAymI,OAAA,CAAK1mI,IAAI,GAAG,eAAe;IAE3B0mI,OAAA,CAAK55F,UAAU,GAAG;MACjBrU,MAAM,EAAEA,MAAM;MACdmlG,QAAQ,EAAEA,QAAQ;MAClB4I,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAEA;IACZ,CAAC;IAED7I,QAAQ,GAAG3oH,IAAI,CAACsC,KAAK,CAAEqmH,QAAS,CAAC;;IAEjC;;IAEA6I,SAAS,GAAG7wH,KAAK,CAAE6wH,SAAS,EAAE,CAAC,EAAExxH,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC;;IAE9C;;IAEA,IAAM+rC,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAMzF,GAAG,GAAG,EAAE;IACd,IAAMulF,WAAW,GAAG,EAAE;IACtB,IAAMxlF,OAAO,GAAG,EAAE;;IAElB;;IAEA,IAAMylF,eAAe,GAAG,GAAG,GAAGhJ,QAAQ;IACtC,IAAM/kC,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;IAC5B,IAAM9J,EAAE,GAAG,IAAIrQ,OAAO,CAAC,CAAC;IACxB,IAAMwc,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;IAC5B,IAAMmyG,SAAS,GAAG,IAAInyG,OAAO,CAAC,CAAC;IAC/B,IAAMoyG,UAAU,GAAG,IAAIpyG,OAAO,CAAC,CAAC;IAChC,IAAIpX,EAAE,GAAG,CAAC;IACV,IAAIC,EAAE,GAAG,CAAC;;IAEV;;IAEA,KAAM,IAAIwe,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAMtD,MAAM,CAAC30B,MAAM,GAAG,CAAG,EAAEi4B,CAAC,EAAG,EAAG;MAEnD,QAASA,CAAC;QAET,KAAK,CAAC;UAAK;;UAEVze,EAAE,GAAGmb,MAAM,CAAEsD,CAAC,GAAG,CAAC,CAAE,CAAC5lB,CAAC,GAAGsiB,MAAM,CAAEsD,CAAC,CAAE,CAAC5lB,CAAC;UACtCoH,EAAE,GAAGkb,MAAM,CAAEsD,CAAC,GAAG,CAAC,CAAE,CAACtlB,CAAC,GAAGgiB,MAAM,CAAEsD,CAAC,CAAE,CAACtlB,CAAC;UAEtCsgB,MAAM,CAAC5gB,CAAC,GAAGoH,EAAE,GAAG,GAAG;UACnBwZ,MAAM,CAACtgB,CAAC,GAAG,CAAE6G,EAAE;UACfyZ,MAAM,CAAC/L,CAAC,GAAGzN,EAAE,GAAG,GAAG;UAEnBupH,UAAU,CAAC5rH,IAAI,CAAE6b,MAAO,CAAC;UAEzBA,MAAM,CAAC3c,SAAS,CAAC,CAAC;UAElBusH,WAAW,CAACpjI,IAAI,CAAEwzB,MAAM,CAAC5gB,CAAC,EAAE4gB,MAAM,CAACtgB,CAAC,EAAEsgB,MAAM,CAAC/L,CAAE,CAAC;UAEhD;QAED,KAAOyN,MAAM,CAAC30B,MAAM,GAAG,CAAC;UAAI;;UAE3B6iI,WAAW,CAACpjI,IAAI,CAAEujI,UAAU,CAAC3wH,CAAC,EAAE2wH,UAAU,CAACrwH,CAAC,EAAEqwH,UAAU,CAAC97G,CAAE,CAAC;UAE5D;QAED;UAAW;;UAEV1N,EAAE,GAAGmb,MAAM,CAAEsD,CAAC,GAAG,CAAC,CAAE,CAAC5lB,CAAC,GAAGsiB,MAAM,CAAEsD,CAAC,CAAE,CAAC5lB,CAAC;UACtCoH,EAAE,GAAGkb,MAAM,CAAEsD,CAAC,GAAG,CAAC,CAAE,CAACtlB,CAAC,GAAGgiB,MAAM,CAAEsD,CAAC,CAAE,CAACtlB,CAAC;UAEtCsgB,MAAM,CAAC5gB,CAAC,GAAGoH,EAAE,GAAG,GAAG;UACnBwZ,MAAM,CAACtgB,CAAC,GAAG,CAAE6G,EAAE;UACfyZ,MAAM,CAAC/L,CAAC,GAAGzN,EAAE,GAAG,GAAG;UAEnBspH,SAAS,CAAC3rH,IAAI,CAAE6b,MAAO,CAAC;UAExBA,MAAM,CAAC5gB,CAAC,IAAI2wH,UAAU,CAAC3wH,CAAC;UACxB4gB,MAAM,CAACtgB,CAAC,IAAIqwH,UAAU,CAACrwH,CAAC;UACxBsgB,MAAM,CAAC/L,CAAC,IAAI87G,UAAU,CAAC97G,CAAC;UAExB+L,MAAM,CAAC3c,SAAS,CAAC,CAAC;UAElBusH,WAAW,CAACpjI,IAAI,CAAEwzB,MAAM,CAAC5gB,CAAC,EAAE4gB,MAAM,CAACtgB,CAAC,EAAEsgB,MAAM,CAAC/L,CAAE,CAAC;UAEhD87G,UAAU,CAAC5rH,IAAI,CAAE2rH,SAAU,CAAC;MAE9B;IAED;;IAEA;;IAEA,KAAM,IAAI9iI,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI65H,QAAQ,EAAE75H,CAAC,EAAG,EAAG;MAEtC,IAAMqzB,GAAG,GAAGovG,QAAQ,GAAGziI,CAAC,GAAG6iI,eAAe,GAAGH,SAAS;MAEtD,IAAMztH,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAEoe,GAAI,CAAC;MAC3B,IAAMre,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAEqe,GAAI,CAAC;MAE3B,KAAM,IAAI2E,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAMtD,MAAM,CAAC30B,MAAM,GAAG,CAAG,EAAEi4B,GAAC,EAAG,EAAG;QAEnD;;QAEA88D,MAAM,CAAC1iF,CAAC,GAAGsiB,MAAM,CAAEsD,GAAC,CAAE,CAAC5lB,CAAC,GAAG6C,GAAG;QAC9B6/E,MAAM,CAACpiF,CAAC,GAAGgiB,MAAM,CAAEsD,GAAC,CAAE,CAACtlB,CAAC;QACxBoiF,MAAM,CAAC7tE,CAAC,GAAGyN,MAAM,CAAEsD,GAAC,CAAE,CAAC5lB,CAAC,GAAG4C,GAAG;QAE9B8tC,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;;QAE7C;;QAEAJ,EAAE,CAACzU,CAAC,GAAGpS,CAAC,GAAG65H,QAAQ;QACnBhzG,EAAE,CAACnU,CAAC,GAAGslB,GAAC,IAAKtD,MAAM,CAAC30B,MAAM,GAAG,CAAC,CAAE;QAEhCs9C,GAAG,CAAC79C,IAAI,CAAEqnB,EAAE,CAACzU,CAAC,EAAEyU,EAAE,CAACnU,CAAE,CAAC;;QAEtB;;QAEA,IAAMN,CAAC,GAAGwwH,WAAW,CAAE,CAAC,GAAG5qG,GAAC,GAAG,CAAC,CAAE,GAAG/iB,GAAG;QACxC,IAAMvC,CAAC,GAAGkwH,WAAW,CAAE,CAAC,GAAG5qG,GAAC,GAAG,CAAC,CAAE;QAClC,IAAM/Q,CAAC,GAAG27G,WAAW,CAAE,CAAC,GAAG5qG,GAAC,GAAG,CAAC,CAAE,GAAGhjB,GAAG;QAExCooC,OAAO,CAAC59C,IAAI,CAAE4S,CAAC,EAAEM,CAAC,EAAEuU,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEA,KAAM,IAAIjnB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG65H,QAAQ,EAAE75H,IAAC,EAAG,EAAG;MAErC,KAAM,IAAIg4B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAKtD,MAAM,CAAC30B,MAAM,GAAG,CAAG,EAAEi4B,GAAC,EAAG,EAAG;QAElD,IAAMgrG,IAAI,GAAGhrG,GAAC,GAAGh4B,IAAC,GAAG00B,MAAM,CAAC30B,MAAM;QAElC,IAAM6U,CAAC,GAAGouH,IAAI;QACd,IAAMnuH,CAAC,GAAGmuH,IAAI,GAAGtuG,MAAM,CAAC30B,MAAM;QAC9B,IAAM+U,CAAC,GAAGkuH,IAAI,GAAGtuG,MAAM,CAAC30B,MAAM,GAAG,CAAC;QAClC,IAAMud,CAAC,GAAG0lH,IAAI,GAAG,CAAC;;QAElB;;QAEA9lF,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;QACvB4/B,OAAO,CAAC19C,IAAI,CAAEsV,CAAC,EAAEwI,CAAC,EAAEzI,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEA8tH,OAAA,CAAKzmF,QAAQ,CAAEgB,OAAQ,CAAC;IACxBylF,OAAA,CAAKvmF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E6/E,OAAA,CAAKvmF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAC/DslF,OAAA,CAAKvmF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAulF,OAAA;EAEzE;EAAC5/H,YAAA,CAAAu/H,aAAA;IAAApoI,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAyrF,aAAA,CAAAzoI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAIm/G,aAAa,CAAEn/G,IAAI,CAACuR,MAAM,EAAEvR,IAAI,CAAC02G,QAAQ,EAAE12G,IAAI,CAACs/G,QAAQ,EAAEt/G,IAAI,CAACu/G,SAAU,CAAC;IAEtF;EAAC;EAAA,OAAAJ,aAAA;AAAA,EAjL0BhnF,cAAc;AAAA5hD,OAAA,CAAA4oI,aAAA,GAAAA,aAAA;AAAA,IAqLpCW,eAAe,0BAAAC,cAAA;EAAA5+G,SAAA,CAAA2+G,eAAA,EAAAC,cAAA;EAAA,IAAAC,QAAA,GAAA3+G,YAAA,CAAAy+G,eAAA;EAEpB,SAAAA,gBAAa7vG,MAAM,GAAG,CAAC,EAAErzB,MAAM,GAAG,CAAC,EAAEqjI,WAAW,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAA/gI,eAAA,OAAA0gI,eAAA;IAE1E,IAAMjmD,IAAI,GAAG,IAAI+jD,IAAI,CAAC,CAAC;IACvB/jD,IAAI,CAACilD,MAAM,CAAE,CAAC,EAAE,CAAEliI,MAAM,GAAG,CAAC,EAAEqzB,MAAM,EAAEliB,IAAI,CAACC,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC;IACxD6rE,IAAI,CAACilD,MAAM,CAAE,CAAC,EAAEliI,MAAM,GAAG,CAAC,EAAEqzB,MAAM,EAAE,CAAC,EAAEliB,IAAI,CAACC,EAAE,GAAG,GAAI,CAAC;IAEtDmyH,OAAA,GAAAH,QAAA,CAAAjnI,IAAA,OAAO8gF,IAAI,CAACs7C,SAAS,CAAE8K,WAAY,CAAC,EAAEC,cAAc;IAEpDC,OAAA,CAAKrnI,IAAI,GAAG,iBAAiB;IAE7BqnI,OAAA,CAAKv6F,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdrzB,MAAM,EAAEA,MAAM;MACdqjI,WAAW,EAAEA,WAAW;MACxBC,cAAc,EAAEA;IACjB,CAAC;IAAC,OAAAC,OAAA;EAEH;EAACvgI,YAAA,CAAAkgI,eAAA;IAAA/oI,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAI8/G,eAAe,CAAE9/G,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACpjB,MAAM,EAAEojB,IAAI,CAACigH,WAAW,EAAEjgH,IAAI,CAACkgH,cAAe,CAAC;IAE9F;EAAC;EAAA,OAAAJ,eAAA;AAAA,EAzB4BX,aAAa;AAAA5oI,OAAA,CAAAupI,eAAA,GAAAA,eAAA;AAAA,IA6BrCM,cAAc,0BAAAC,gBAAA;EAAAl/G,SAAA,CAAAi/G,cAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAj/G,YAAA,CAAA++G,cAAA;EAEnB,SAAAA,eAAanwG,MAAM,GAAG,CAAC,EAAEymG,QAAQ,GAAG,EAAE,EAAE6J,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGzyH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAyyH,OAAA;IAAArhI,eAAA,OAAAghI,cAAA;IAEnFK,OAAA,GAAAH,QAAA,CAAAvnI,IAAA;IAEA0nI,OAAA,CAAK3nI,IAAI,GAAG,gBAAgB;IAE5B2nI,OAAA,CAAK76F,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdymG,QAAQ,EAAEA,QAAQ;MAClB6J,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAED9J,QAAQ,GAAG3oH,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE8nH,QAAS,CAAC;;IAElC;;IAEA,IAAM38E,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAMy3C,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;IAC5B,IAAM9J,EAAE,GAAG,IAAIrQ,OAAO,CAAC,CAAC;;IAExB;;IAEAssC,QAAQ,CAACtjD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACxB49C,OAAO,CAAC59C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACvB69C,GAAG,CAAC79C,IAAI,CAAE,GAAG,EAAE,GAAI,CAAC;IAEpB,KAAM,IAAIqU,CAAC,GAAG,CAAC,EAAE7T,CAAC,GAAG,CAAC,EAAE6T,CAAC,IAAIgmH,QAAQ,EAAEhmH,CAAC,EAAG,EAAE7T,CAAC,IAAI,CAAC,EAAG;MAErD,IAAM6jI,OAAO,GAAGH,UAAU,GAAG7vH,CAAC,GAAGgmH,QAAQ,GAAG8J,WAAW;;MAEvD;;MAEA7uC,MAAM,CAAC1iF,CAAC,GAAGghB,MAAM,GAAGliB,IAAI,CAAC8D,GAAG,CAAE6uH,OAAQ,CAAC;MACvC/uC,MAAM,CAACpiF,CAAC,GAAG0gB,MAAM,GAAGliB,IAAI,CAAC+D,GAAG,CAAE4uH,OAAQ,CAAC;MAEvC/gF,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;;MAE7C;;MAEAm2B,OAAO,CAAC59C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;;MAEvB;;MAEAqnB,EAAE,CAACzU,CAAC,GAAG,CAAE0wC,QAAQ,CAAE9iD,CAAC,CAAE,GAAGozB,MAAM,GAAG,CAAC,IAAK,CAAC;MACzCvM,EAAE,CAACnU,CAAC,GAAG,CAAEowC,QAAQ,CAAE9iD,CAAC,GAAG,CAAC,CAAE,GAAGozB,MAAM,GAAG,CAAC,IAAK,CAAC;MAE7CiqB,GAAG,CAAC79C,IAAI,CAAEqnB,EAAE,CAACzU,CAAC,EAAEyU,EAAE,CAACnU,CAAE,CAAC;IAEvB;;IAEA;;IAEA,KAAM,IAAI1S,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI65H,QAAQ,EAAE75H,IAAC,EAAG,EAAG;MAEtCk9C,OAAO,CAAC19C,IAAI,CAAEQ,IAAC,EAAEA,IAAC,GAAG,CAAC,EAAE,CAAE,CAAC;IAE5B;;IAEA;;IAEA4jI,OAAA,CAAK1nF,QAAQ,CAAEgB,OAAQ,CAAC;IACxB0mF,OAAA,CAAKxnF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E8gF,OAAA,CAAKxnF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEwmF,OAAA,CAAKxnF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAumF,OAAA;EAEjE;EAAC7gI,YAAA,CAAAwgI,cAAA;IAAArpI,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA0sF,cAAA,CAAA1pI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAIogH,cAAc,CAAEpgH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAAC02G,QAAQ,EAAE12G,IAAI,CAACugH,UAAU,EAAEvgH,IAAI,CAACwgH,WAAY,CAAC;IAE3F;EAAC;EAAA,OAAAJ,cAAA;AAAA,EA1F2BjoF,cAAc;AAAA5hD,OAAA,CAAA6pI,cAAA,GAAAA,cAAA;AAAA,IA8FrCO,gBAAgB,0BAAAC,gBAAA;EAAAz/G,SAAA,CAAAw/G,gBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAx/G,YAAA,CAAAs/G,gBAAA;EAErB,SAAAA,iBAAaG,SAAS,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,EAAE1hH,MAAM,GAAG,CAAC,EAAE6gH,cAAc,GAAG,EAAE,EAAE3gF,cAAc,GAAG,CAAC,EAAEyhF,SAAS,GAAG,KAAK,EAAET,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGzyH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAizH,OAAA;IAAA7hI,eAAA,OAAAuhI,gBAAA;IAEjKM,OAAA,GAAAJ,QAAA,CAAA9nI,IAAA;IAEAkoI,OAAA,CAAKnoI,IAAI,GAAG,kBAAkB;IAE9BmoI,OAAA,CAAKr7F,UAAU,GAAG;MACjBk7F,SAAS,EAAEA,SAAS;MACpBC,YAAY,EAAEA,YAAY;MAC1B1hH,MAAM,EAAEA,MAAM;MACd6gH,cAAc,EAAEA,cAAc;MAC9B3gF,cAAc,EAAEA,cAAc;MAC9ByhF,SAAS,EAAEA,SAAS;MACpBT,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAED,IAAM9gF,KAAK,GAAAx9B,sBAAA,CAAA++G,OAAA,CAAO;IAElBf,cAAc,GAAGnyH,IAAI,CAACsC,KAAK,CAAE6vH,cAAe,CAAC;IAC7C3gF,cAAc,GAAGxxC,IAAI,CAACsC,KAAK,CAAEkvC,cAAe,CAAC;;IAE7C;;IAEA,IAAMxF,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAI5sC,KAAK,GAAG,CAAC;IACb,IAAM4zH,UAAU,GAAG,EAAE;IACrB,IAAM7zC,UAAU,GAAGhuE,MAAM,GAAG,CAAC;IAC7B,IAAIwgC,UAAU,GAAG,CAAC;;IAElB;;IAEAshF,aAAa,CAAC,CAAC;IAEf,IAAKH,SAAS,KAAK,KAAK,EAAG;MAE1B,IAAKF,SAAS,GAAG,CAAC,EAAGM,WAAW,CAAE,IAAK,CAAC;MACxC,IAAKL,YAAY,GAAG,CAAC,EAAGK,WAAW,CAAE,KAAM,CAAC;IAE7C;;IAEA;;IAEAH,OAAA,CAAKloF,QAAQ,CAAEgB,OAAQ,CAAC;IACxBknF,OAAA,CAAKhoF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EshF,OAAA,CAAKhoF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEgnF,OAAA,CAAKhoF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAE/D,SAASinF,aAAaA,CAAA,EAAG;MAExB,IAAMtxG,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;MAC5B,IAAMmkE,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;MAE5B,IAAImzB,UAAU,GAAG,CAAC;;MAElB;MACA,IAAM0gF,KAAK,GAAG,CAAEN,YAAY,GAAGD,SAAS,IAAKzhH,MAAM;;MAEnD;;MAEA,KAAM,IAAI9P,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIgwC,cAAc,EAAEhwC,CAAC,EAAG,EAAG;QAE5C,IAAM+xH,QAAQ,GAAG,EAAE;QAEnB,IAAMrtH,CAAC,GAAG1E,CAAC,GAAGgwC,cAAc;;QAE5B;;QAEA,IAAMtvB,MAAM,GAAGhc,CAAC,IAAK8sH,YAAY,GAAGD,SAAS,CAAE,GAAGA,SAAS;QAE3D,KAAM,IAAI7xH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIixH,cAAc,EAAEjxH,CAAC,EAAG,EAAG;UAE5C,IAAM2hB,CAAC,GAAG3hB,CAAC,GAAGixH,cAAc;UAE5B,IAAMlqH,KAAK,GAAG4a,CAAC,GAAG4vG,WAAW,GAAGD,UAAU;UAE1C,IAAMgB,QAAQ,GAAGxzH,IAAI,CAAC+D,GAAG,CAAEkE,KAAM,CAAC;UAClC,IAAMwrH,QAAQ,GAAGzzH,IAAI,CAAC8D,GAAG,CAAEmE,KAAM,CAAC;;UAElC;;UAEA27E,MAAM,CAAC1iF,CAAC,GAAGghB,MAAM,GAAGsxG,QAAQ;UAC5B5vC,MAAM,CAACpiF,CAAC,GAAG,CAAE0E,CAAC,GAAGoL,MAAM,GAAGguE,UAAU;UACpCsE,MAAM,CAAC7tE,CAAC,GAAGmM,MAAM,GAAGuxG,QAAQ;UAC5B7hF,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;;UAE7C;;UAEA+L,MAAM,CAACtd,GAAG,CAAEgvH,QAAQ,EAAEF,KAAK,EAAEG,QAAS,CAAC,CAACtuH,SAAS,CAAC,CAAC;UACnD+mC,OAAO,CAAC59C,IAAI,CAAEwzB,MAAM,CAAC5gB,CAAC,EAAE4gB,MAAM,CAACtgB,CAAC,EAAEsgB,MAAM,CAAC/L,CAAE,CAAC;;UAE5C;;UAEAo2B,GAAG,CAAC79C,IAAI,CAAEu0B,CAAC,EAAE,CAAC,GAAG3c,CAAE,CAAC;;UAEpB;;UAEAqtH,QAAQ,CAACjlI,IAAI,CAAEiR,KAAK,EAAI,CAAC;QAE1B;;QAEA;;QAEA4zH,UAAU,CAAC7kI,IAAI,CAAEilI,QAAS,CAAC;MAE5B;;MAEA;;MAEA,KAAM,IAAIryH,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGixH,cAAc,EAAEjxH,GAAC,EAAG,EAAG;QAE3C,KAAM,IAAIM,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGgwC,cAAc,EAAEhwC,GAAC,EAAG,EAAG;UAE3C;;UAEA,IAAMkC,CAAC,GAAGyvH,UAAU,CAAE3xH,GAAC,CAAE,CAAEN,GAAC,CAAE;UAC9B,IAAMyC,CAAC,GAAGwvH,UAAU,CAAE3xH,GAAC,GAAG,CAAC,CAAE,CAAEN,GAAC,CAAE;UAClC,IAAM0C,CAAC,GAAGuvH,UAAU,CAAE3xH,GAAC,GAAG,CAAC,CAAE,CAAEN,GAAC,GAAG,CAAC,CAAE;UACtC,IAAMkL,CAAC,GAAG+mH,UAAU,CAAE3xH,GAAC,CAAE,CAAEN,GAAC,GAAG,CAAC,CAAE;;UAElC;;UAEA8qC,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;UACvB4/B,OAAO,CAAC19C,IAAI,CAAEqV,CAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;;UAEvB;;UAEAwmC,UAAU,IAAI,CAAC;QAEhB;MAED;;MAEA;;MAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAE,CAAE,CAAC;;MAE3C;;MAEAd,UAAU,IAAIc,UAAU;IAEzB;IAEA,SAASygF,WAAWA,CAAExjG,GAAG,EAAG;MAE3B;MACA,IAAM6jG,gBAAgB,GAAGn0H,KAAK;MAE9B,IAAMoW,EAAE,GAAG,IAAIrQ,OAAO,CAAC,CAAC;MACxB,IAAMs+E,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;MAE5B,IAAImzB,UAAU,GAAG,CAAC;MAElB,IAAM1wB,MAAM,GAAK2N,GAAG,KAAK,IAAI,GAAKkjG,SAAS,GAAGC,YAAY;MAC1D,IAAMloG,IAAI,GAAK+E,GAAG,KAAK,IAAI,GAAK,CAAC,GAAG,CAAE,CAAC;;MAEvC;MACA;MACA;;MAEA,KAAM,IAAI3uB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIixH,cAAc,EAAEjxH,CAAC,EAAG,EAAG;QAE5C;;QAEA0wC,QAAQ,CAACtjD,IAAI,CAAE,CAAC,EAAEgxF,UAAU,GAAGx0D,IAAI,EAAE,CAAE,CAAC;;QAExC;;QAEAohB,OAAO,CAAC59C,IAAI,CAAE,CAAC,EAAEw8B,IAAI,EAAE,CAAE,CAAC;;QAE1B;;QAEAqhB,GAAG,CAAC79C,IAAI,CAAE,GAAG,EAAE,GAAI,CAAC;;QAEpB;;QAEAiR,KAAK,EAAG;MAET;;MAEA;MACA,IAAMo0H,cAAc,GAAGp0H,KAAK;;MAE5B;;MAEA,KAAM,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAIixH,cAAc,EAAEjxH,GAAC,EAAG,EAAG;QAE5C,IAAM2hB,CAAC,GAAG3hB,GAAC,GAAGixH,cAAc;QAC5B,IAAMlqH,KAAK,GAAG4a,CAAC,GAAG4vG,WAAW,GAAGD,UAAU;QAE1C,IAAMiB,QAAQ,GAAGzzH,IAAI,CAAC8D,GAAG,CAAEmE,KAAM,CAAC;QAClC,IAAMurH,QAAQ,GAAGxzH,IAAI,CAAC+D,GAAG,CAAEkE,KAAM,CAAC;;QAElC;;QAEA27E,MAAM,CAAC1iF,CAAC,GAAGghB,MAAM,GAAGsxG,QAAQ;QAC5B5vC,MAAM,CAACpiF,CAAC,GAAG89E,UAAU,GAAGx0D,IAAI;QAC5B84D,MAAM,CAAC7tE,CAAC,GAAGmM,MAAM,GAAGuxG,QAAQ;QAC5B7hF,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;;QAE7C;;QAEAm2B,OAAO,CAAC59C,IAAI,CAAE,CAAC,EAAEw8B,IAAI,EAAE,CAAE,CAAC;;QAE1B;;QAEAnV,EAAE,CAACzU,CAAC,GAAKuyH,QAAQ,GAAG,GAAG,GAAK,GAAG;QAC/B99G,EAAE,CAACnU,CAAC,GAAKgyH,QAAQ,GAAG,GAAG,GAAG1oG,IAAI,GAAK,GAAG;QACtCqhB,GAAG,CAAC79C,IAAI,CAAEqnB,EAAE,CAACzU,CAAC,EAAEyU,EAAE,CAACnU,CAAE,CAAC;;QAEtB;;QAEAjC,KAAK,EAAG;MAET;;MAEA;;MAEA,KAAM,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGixH,cAAc,EAAEjxH,GAAC,EAAG,EAAG;QAE3C,IAAM0C,CAAC,GAAG8vH,gBAAgB,GAAGxyH,GAAC;QAC9B,IAAMpS,CAAC,GAAG6kI,cAAc,GAAGzyH,GAAC;QAE5B,IAAK2uB,GAAG,KAAK,IAAI,EAAG;UAEnB;;UAEAmc,OAAO,CAAC19C,IAAI,CAAEQ,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE8U,CAAE,CAAC;QAE5B,CAAC,MAAM;UAEN;;UAEAooC,OAAO,CAAC19C,IAAI,CAAEQ,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE8U,CAAE,CAAC;QAE5B;QAEAgvC,UAAU,IAAI,CAAC;MAEhB;;MAEA;;MAEAjB,KAAK,CAACtG,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAE/iB,GAAG,KAAK,IAAI,GAAG,CAAC,GAAG,CAAE,CAAC;;MAE9D;;MAEAiiB,UAAU,IAAIc,UAAU;IAEzB;IAAC,OAAAsgF,OAAA;EAEF;EAACrhI,YAAA,CAAA+gI,gBAAA;IAAA5pI,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAitF,gBAAA,CAAAjqI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAI2gH,gBAAgB,CAAE3gH,IAAI,CAAC8gH,SAAS,EAAE9gH,IAAI,CAAC+gH,YAAY,EAAE/gH,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACkgH,cAAc,EAAElgH,IAAI,CAACu/B,cAAc,EAAEv/B,IAAI,CAACghH,SAAS,EAAEhhH,IAAI,CAACugH,UAAU,EAAEvgH,IAAI,CAACwgH,WAAY,CAAC;IAE3K;EAAC;EAAA,OAAAG,gBAAA;AAAA,EAnR6BxoF,cAAc;AAAA5hD,OAAA,CAAAoqI,gBAAA,GAAAA,gBAAA;AAAA,IAuRvCgB,YAAY,0BAAAC,iBAAA;EAAAzgH,SAAA,CAAAwgH,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAxgH,YAAA,CAAAsgH,YAAA;EAEjB,SAAAA,aAAa1xG,MAAM,GAAG,CAAC,EAAE5Q,MAAM,GAAG,CAAC,EAAE6gH,cAAc,GAAG,EAAE,EAAE3gF,cAAc,GAAG,CAAC,EAAEyhF,SAAS,GAAG,KAAK,EAAET,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGzyH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAA8zH,OAAA;IAAA1iI,eAAA,OAAAuiI,YAAA;IAE5IG,OAAA,GAAAD,QAAA,CAAA9oI,IAAA,OAAO,CAAC,EAAEk3B,MAAM,EAAE5Q,MAAM,EAAE6gH,cAAc,EAAE3gF,cAAc,EAAEyhF,SAAS,EAAET,UAAU,EAAEC,WAAW;IAE5FsB,OAAA,CAAKhpI,IAAI,GAAG,cAAc;IAE1BgpI,OAAA,CAAKl8F,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACd5Q,MAAM,EAAEA,MAAM;MACd6gH,cAAc,EAAEA,cAAc;MAC9B3gF,cAAc,EAAEA,cAAc;MAC9ByhF,SAAS,EAAEA,SAAS;MACpBT,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAAC,OAAAsB,OAAA;EAEH;EAACliI,YAAA,CAAA+hI,YAAA;IAAA5qI,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAI2hH,YAAY,CAAE3hH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACkgH,cAAc,EAAElgH,IAAI,CAACu/B,cAAc,EAAEv/B,IAAI,CAACghH,SAAS,EAAEhhH,IAAI,CAACugH,UAAU,EAAEvgH,IAAI,CAACwgH,WAAY,CAAC;IAEjJ;EAAC;EAAA,OAAAmB,YAAA;AAAA,EAxByBhB,gBAAgB;AAAApqI,OAAA,CAAAorI,YAAA,GAAAA,YAAA;AAAA,IA4BrCI,kBAAkB,0BAAAC,gBAAA;EAAA7gH,SAAA,CAAA4gH,kBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA5gH,YAAA,CAAA0gH,kBAAA;EAEvB,SAAAA,mBAAapiF,QAAQ,GAAG,EAAE,EAAE5F,OAAO,GAAG,EAAE,EAAE9pB,MAAM,GAAG,CAAC,EAAEw4F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAyZ,OAAA;IAAA9iI,eAAA,OAAA2iI,kBAAA;IAElEG,OAAA,GAAAD,QAAA,CAAAlpI,IAAA;IAEAmpI,OAAA,CAAKppI,IAAI,GAAG,oBAAoB;IAEhCopI,OAAA,CAAKt8F,UAAU,GAAG;MACjB+Z,QAAQ,EAAEA,QAAQ;MAClB5F,OAAO,EAAEA,OAAO;MAChB9pB,MAAM,EAAEA,MAAM;MACdw4F,MAAM,EAAEA;IACT,CAAC;;IAED;;IAEA,IAAM0Z,YAAY,GAAG,EAAE;IACvB,IAAMC,QAAQ,GAAG,EAAE;;IAEnB;;IAEAC,SAAS,CAAE5Z,MAAO,CAAC;;IAEnB;;IAEA6Z,WAAW,CAAEryG,MAAO,CAAC;;IAErB;;IAEAsyG,WAAW,CAAC,CAAC;;IAEb;;IAEAL,OAAA,CAAKjpF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE6qF,YAAY,EAAE,CAAE,CAAE,CAAC;IAC9ED,OAAA,CAAKjpF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE6qF,YAAY,CAAChkI,KAAK,CAAC,CAAC,EAAE,CAAE,CAAE,CAAC;IACpF+jI,OAAA,CAAKjpF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE8qF,QAAQ,EAAE,CAAE,CAAE,CAAC;IAEpE,IAAK3Z,MAAM,KAAK,CAAC,EAAG;MAEnByZ,OAAA,CAAK7mF,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAE9B,CAAC,MAAM;MAEN6mF,OAAA,CAAKlmF,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAE1B;;IAEA;;IAEA,SAASqmF,SAASA,CAAE5Z,MAAM,EAAG;MAE5B,IAAMh3G,CAAC,GAAG,IAAI+b,OAAO,CAAC,CAAC;MACvB,IAAM9b,CAAC,GAAG,IAAI8b,OAAO,CAAC,CAAC;MACvB,IAAM7b,CAAC,GAAG,IAAI6b,OAAO,CAAC,CAAC;;MAEvB;;MAEA,KAAM,IAAI3wB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk9C,OAAO,CAACn9C,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;QAE7C;;QAEA2lI,gBAAgB,CAAEzoF,OAAO,CAAEl9C,CAAC,GAAG,CAAC,CAAE,EAAE4U,CAAE,CAAC;QACvC+wH,gBAAgB,CAAEzoF,OAAO,CAAEl9C,CAAC,GAAG,CAAC,CAAE,EAAE6U,CAAE,CAAC;QACvC8wH,gBAAgB,CAAEzoF,OAAO,CAAEl9C,CAAC,GAAG,CAAC,CAAE,EAAE8U,CAAE,CAAC;;QAEvC;;QAEA8wH,aAAa,CAAEhxH,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE82G,MAAO,CAAC;MAEjC;IAED;IAEA,SAASga,aAAaA,CAAEhxH,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE82G,MAAM,EAAG;MAEzC,IAAMia,IAAI,GAAGja,MAAM,GAAG,CAAC;;MAEvB;;MAEA,IAAMx0G,CAAC,GAAG,EAAE;;MAEZ;;MAEA,KAAM,IAAIpX,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6lI,IAAI,EAAE7lI,CAAC,EAAG,EAAG;QAElCoX,CAAC,CAAEpX,CAAC,CAAE,GAAG,EAAE;QAEX,IAAM8lI,EAAE,GAAGlxH,CAAC,CAACsC,KAAK,CAAC,CAAC,CAACvE,IAAI,CAAEmC,CAAC,EAAE9U,CAAC,GAAG6lI,IAAK,CAAC;QACxC,IAAME,EAAE,GAAGlxH,CAAC,CAACqC,KAAK,CAAC,CAAC,CAACvE,IAAI,CAAEmC,CAAC,EAAE9U,CAAC,GAAG6lI,IAAK,CAAC;QAExC,IAAMG,IAAI,GAAGH,IAAI,GAAG7lI,CAAC;QAErB,KAAM,IAAIg4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIguG,IAAI,EAAEhuG,CAAC,EAAG,EAAG;UAElC,IAAKA,CAAC,KAAK,CAAC,IAAIh4B,CAAC,KAAK6lI,IAAI,EAAG;YAE5BzuH,CAAC,CAAEpX,CAAC,CAAE,CAAEg4B,CAAC,CAAE,GAAG8tG,EAAE;UAEjB,CAAC,MAAM;YAEN1uH,CAAC,CAAEpX,CAAC,CAAE,CAAEg4B,CAAC,CAAE,GAAG8tG,EAAE,CAAC5uH,KAAK,CAAC,CAAC,CAACvE,IAAI,CAAEozH,EAAE,EAAE/tG,CAAC,GAAGguG,IAAK,CAAC;UAE9C;QAED;MAED;;MAEA;;MAEA,KAAM,IAAIhmI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG6lI,IAAI,EAAE7lI,IAAC,EAAG,EAAG;QAEjC,KAAM,IAAIg4B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,IAAK6tG,IAAI,GAAG7lI,IAAC,CAAE,GAAG,CAAC,EAAEg4B,GAAC,EAAG,EAAG;UAEjD,IAAMugE,CAAC,GAAGrnF,IAAI,CAACsC,KAAK,CAAEwkB,GAAC,GAAG,CAAE,CAAC;UAE7B,IAAKA,GAAC,GAAG,CAAC,KAAK,CAAC,EAAG;YAElBiuG,UAAU,CAAE7uH,CAAC,CAAEpX,IAAC,CAAE,CAAEu4F,CAAC,GAAG,CAAC,CAAG,CAAC;YAC7B0tC,UAAU,CAAE7uH,CAAC,CAAEpX,IAAC,GAAG,CAAC,CAAE,CAAEu4F,CAAC,CAAG,CAAC;YAC7B0tC,UAAU,CAAE7uH,CAAC,CAAEpX,IAAC,CAAE,CAAEu4F,CAAC,CAAG,CAAC;UAE1B,CAAC,MAAM;YAEN0tC,UAAU,CAAE7uH,CAAC,CAAEpX,IAAC,CAAE,CAAEu4F,CAAC,GAAG,CAAC,CAAG,CAAC;YAC7B0tC,UAAU,CAAE7uH,CAAC,CAAEpX,IAAC,GAAG,CAAC,CAAE,CAAEu4F,CAAC,GAAG,CAAC,CAAG,CAAC;YACjC0tC,UAAU,CAAE7uH,CAAC,CAAEpX,IAAC,GAAG,CAAC,CAAE,CAAEu4F,CAAC,CAAG,CAAC;UAE9B;QAED;MAED;IAED;IAEA,SAASktC,WAAWA,CAAEryG,MAAM,EAAG;MAE9B,IAAM0hE,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;;MAE5B;;MAEA,KAAM,IAAI3wB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGslI,YAAY,CAACvlI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;QAElD80F,MAAM,CAAC1iF,CAAC,GAAGkzH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE;QAChC80F,MAAM,CAACpiF,CAAC,GAAG4yH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE;QAChC80F,MAAM,CAAC7tE,CAAC,GAAGq+G,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE;QAEhC80F,MAAM,CAACz+E,SAAS,CAAC,CAAC,CAACwB,cAAc,CAAEub,MAAO,CAAC;QAE3CkyG,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,GAAG80F,MAAM,CAAC1iF,CAAC;QAChCkzH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,GAAG80F,MAAM,CAACpiF,CAAC;QAChC4yH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,GAAG80F,MAAM,CAAC7tE,CAAC;MAEjC;IAED;IAEA,SAASy+G,WAAWA,CAAA,EAAG;MAEtB,IAAM5wC,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;MAE5B,KAAM,IAAI3wB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGslI,YAAY,CAACvlI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;QAElD80F,MAAM,CAAC1iF,CAAC,GAAGkzH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE;QAChC80F,MAAM,CAACpiF,CAAC,GAAG4yH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE;QAChC80F,MAAM,CAAC7tE,CAAC,GAAGq+G,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE;QAEhC,IAAM+zB,CAAC,GAAGmyG,OAAO,CAAEpxC,MAAO,CAAC,GAAG,CAAC,GAAG5jF,IAAI,CAACC,EAAE,GAAG,GAAG;QAC/C,IAAMiG,CAAC,GAAG+uH,WAAW,CAAErxC,MAAO,CAAC,GAAG5jF,IAAI,CAACC,EAAE,GAAG,GAAG;QAC/Co0H,QAAQ,CAAC/lI,IAAI,CAAEu0B,CAAC,EAAE,CAAC,GAAG3c,CAAE,CAAC;MAE1B;MAEAgvH,UAAU,CAAC,CAAC;MAEZC,WAAW,CAAC,CAAC;IAEd;IAEA,SAASA,WAAWA,CAAA,EAAG;MAEtB;;MAEA,KAAM,IAAIrmI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGulI,QAAQ,CAACxlI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;QAE9C;;QAEA,IAAM8vB,EAAE,GAAGy1G,QAAQ,CAAEvlI,CAAC,GAAG,CAAC,CAAE;QAC5B,IAAMkwB,EAAE,GAAGq1G,QAAQ,CAAEvlI,CAAC,GAAG,CAAC,CAAE;QAC5B,IAAMigC,EAAE,GAAGslG,QAAQ,CAAEvlI,CAAC,GAAG,CAAC,CAAE;QAE5B,IAAM+R,GAAG,GAAGb,IAAI,CAACa,GAAG,CAAE+d,EAAE,EAAEI,EAAE,EAAE+P,EAAG,CAAC;QAClC,IAAMnuB,GAAG,GAAGZ,IAAI,CAACY,GAAG,CAAEge,EAAE,EAAEI,EAAE,EAAE+P,EAAG,CAAC;;QAElC;;QAEA,IAAKluB,GAAG,GAAG,GAAG,IAAID,GAAG,GAAG,GAAG,EAAG;UAE7B,IAAKge,EAAE,GAAG,GAAG,EAAGy1G,QAAQ,CAAEvlI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;UACtC,IAAKkwB,EAAE,GAAG,GAAG,EAAGq1G,QAAQ,CAAEvlI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;UACtC,IAAKigC,EAAE,GAAG,GAAG,EAAGslG,QAAQ,CAAEvlI,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;QAEvC;MAED;IAED;IAEA,SAASimI,UAAUA,CAAEnxC,MAAM,EAAG;MAE7BwwC,YAAY,CAAC9lI,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;IAElD;IAEA,SAAS0+G,gBAAgBA,CAAEl1H,KAAK,EAAEqkF,MAAM,EAAG;MAE1C,IAAMt1C,MAAM,GAAG/uC,KAAK,GAAG,CAAC;MAExBqkF,MAAM,CAAC1iF,CAAC,GAAG0wC,QAAQ,CAAEtD,MAAM,GAAG,CAAC,CAAE;MACjCs1C,MAAM,CAACpiF,CAAC,GAAGowC,QAAQ,CAAEtD,MAAM,GAAG,CAAC,CAAE;MACjCs1C,MAAM,CAAC7tE,CAAC,GAAG67B,QAAQ,CAAEtD,MAAM,GAAG,CAAC,CAAE;IAElC;IAEA,SAAS4mF,UAAUA,CAAA,EAAG;MAErB,IAAMxxH,CAAC,GAAG,IAAI+b,OAAO,CAAC,CAAC;MACvB,IAAM9b,CAAC,GAAG,IAAI8b,OAAO,CAAC,CAAC;MACvB,IAAM7b,CAAC,GAAG,IAAI6b,OAAO,CAAC,CAAC;MAEvB,IAAM21G,QAAQ,GAAG,IAAI31G,OAAO,CAAC,CAAC;MAE9B,IAAMktB,GAAG,GAAG,IAAIrnC,OAAO,CAAC,CAAC;MACzB,IAAMsnC,GAAG,GAAG,IAAItnC,OAAO,CAAC,CAAC;MACzB,IAAMunC,GAAG,GAAG,IAAIvnC,OAAO,CAAC,CAAC;MAEzB,KAAM,IAAIxW,CAAC,GAAG,CAAC,EAAEg4B,CAAC,GAAG,CAAC,EAAEh4B,CAAC,GAAGslI,YAAY,CAACvlI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAEg4B,CAAC,IAAI,CAAC,EAAG;QAEjEpjB,CAAC,CAACc,GAAG,CAAE4vH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,EAAEslI,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,EAAEslI,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAG,CAAC;QAC5E6U,CAAC,CAACa,GAAG,CAAE4vH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,EAAEslI,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,EAAEslI,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAG,CAAC;QAC5E8U,CAAC,CAACY,GAAG,CAAE4vH,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,EAAEslI,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAE,EAAEslI,YAAY,CAAEtlI,CAAC,GAAG,CAAC,CAAG,CAAC;QAE5E69C,GAAG,CAACnoC,GAAG,CAAE6vH,QAAQ,CAAEvtG,CAAC,GAAG,CAAC,CAAE,EAAEutG,QAAQ,CAAEvtG,CAAC,GAAG,CAAC,CAAG,CAAC;QAC/C8lB,GAAG,CAACpoC,GAAG,CAAE6vH,QAAQ,CAAEvtG,CAAC,GAAG,CAAC,CAAE,EAAEutG,QAAQ,CAAEvtG,CAAC,GAAG,CAAC,CAAG,CAAC;QAC/C+lB,GAAG,CAACroC,GAAG,CAAE6vH,QAAQ,CAAEvtG,CAAC,GAAG,CAAC,CAAE,EAAEutG,QAAQ,CAAEvtG,CAAC,GAAG,CAAC,CAAG,CAAC;QAE/CsuG,QAAQ,CAACnvH,IAAI,CAAEvC,CAAE,CAAC,CAACyC,GAAG,CAAExC,CAAE,CAAC,CAACwC,GAAG,CAAEvC,CAAE,CAAC,CAACiD,YAAY,CAAE,CAAE,CAAC;QAEtD,IAAMwuH,GAAG,GAAGL,OAAO,CAAEI,QAAS,CAAC;QAE/BE,SAAS,CAAE3oF,GAAG,EAAE7lB,CAAC,GAAG,CAAC,EAAEpjB,CAAC,EAAE2xH,GAAI,CAAC;QAC/BC,SAAS,CAAE1oF,GAAG,EAAE9lB,CAAC,GAAG,CAAC,EAAEnjB,CAAC,EAAE0xH,GAAI,CAAC;QAC/BC,SAAS,CAAEzoF,GAAG,EAAE/lB,CAAC,GAAG,CAAC,EAAEljB,CAAC,EAAEyxH,GAAI,CAAC;MAEhC;IAED;IAEA,SAASC,SAASA,CAAE3/G,EAAE,EAAE24B,MAAM,EAAEjqB,MAAM,EAAE2wG,OAAO,EAAG;MAEjD,IAAOA,OAAO,GAAG,CAAC,IAAQr/G,EAAE,CAACzU,CAAC,KAAK,CAAG,EAAG;QAExCmzH,QAAQ,CAAE/lF,MAAM,CAAE,GAAG34B,EAAE,CAACzU,CAAC,GAAG,CAAC;MAE9B;MAEA,IAAOmjB,MAAM,CAACnjB,CAAC,KAAK,CAAC,IAAQmjB,MAAM,CAACtO,CAAC,KAAK,CAAG,EAAG;QAE/Cs+G,QAAQ,CAAE/lF,MAAM,CAAE,GAAG0mF,OAAO,GAAG,CAAC,GAAGh1H,IAAI,CAACC,EAAE,GAAG,GAAG;MAEjD;IAED;;IAEA;;IAEA,SAAS+0H,OAAOA,CAAE3wG,MAAM,EAAG;MAE1B,OAAOrkB,IAAI,CAAC8H,KAAK,CAAEuc,MAAM,CAACtO,CAAC,EAAE,CAAEsO,MAAM,CAACnjB,CAAE,CAAC;IAE1C;;IAGA;;IAEA,SAAS+zH,WAAWA,CAAE5wG,MAAM,EAAG;MAE9B,OAAOrkB,IAAI,CAAC8H,KAAK,CAAE,CAAEuc,MAAM,CAAC7iB,CAAC,EAAExB,IAAI,CAAC2H,IAAI,CAAI0c,MAAM,CAACnjB,CAAC,GAAGmjB,MAAM,CAACnjB,CAAC,GAAOmjB,MAAM,CAACtO,CAAC,GAAGsO,MAAM,CAACtO,CAAI,CAAE,CAAC;IAEhG;IAAC,OAAAo+G,OAAA;EAEF;EAACtiI,YAAA,CAAAmiI,kBAAA;IAAAhrI,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAquF,kBAAA,CAAArrI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAI+hH,kBAAkB,CAAE/hH,IAAI,CAAC2/B,QAAQ,EAAE3/B,IAAI,CAAC+5B,OAAO,EAAE/5B,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACsjH,OAAQ,CAAC;IAExF;EAAC;EAAA,OAAAvB,kBAAA;AAAA,EArT+B5pF,cAAc;AAAA5hD,OAAA,CAAAwrI,kBAAA,GAAAA,kBAAA;AAAA,IAyTzCwB,oBAAoB,0BAAAC,mBAAA;EAAAriH,SAAA,CAAAoiH,oBAAA,EAAAC,mBAAA;EAAA,IAAAC,QAAA,GAAApiH,YAAA,CAAAkiH,oBAAA;EAEzB,SAAAA,qBAAatzG,MAAM,GAAG,CAAC,EAAEw4F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAib,OAAA;IAAAtkI,eAAA,OAAAmkI,oBAAA;IAErC,IAAM9zH,CAAC,GAAG,CAAE,CAAC,GAAG1B,IAAI,CAAC2H,IAAI,CAAE,CAAE,CAAC,IAAK,CAAC;IACpC,IAAMwF,CAAC,GAAG,CAAC,GAAGzL,CAAC;IAEf,IAAMkwC,QAAQ,GAAG;IAEhB;IACA,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAC1B,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACtB,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EACtB,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAElB;IACA,CAAC,EAAE,CAAEzkC,CAAC,EAAE,CAAEzL,CAAC,EAAE,CAAC,EAAE,CAAEyL,CAAC,EAAEzL,CAAC,EACtB,CAAC,EAAEyL,CAAC,EAAE,CAAEzL,CAAC,EAAE,CAAC,EAAEyL,CAAC,EAAEzL,CAAC;IAElB;IACA,CAAEyL,CAAC,EAAE,CAAEzL,CAAC,EAAE,CAAC,EAAE,CAAEyL,CAAC,EAAEzL,CAAC,EAAE,CAAC,EACtByL,CAAC,EAAE,CAAEzL,CAAC,EAAE,CAAC,EAAEyL,CAAC,EAAEzL,CAAC,EAAE,CAAC;IAElB;IACA,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAEyL,CAAC,EAAEzL,CAAC,EAAE,CAAC,EAAE,CAAEyL,CAAC,EACtB,CAAEzL,CAAC,EAAE,CAAC,EAAEyL,CAAC,EAAEzL,CAAC,EAAE,CAAC,EAAEyL,CAAC,CAClB;IAED,IAAM6+B,OAAO,GAAG,CACf,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC/B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC9B,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC/B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAC9B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9B;IAED2pF,OAAA,GAAAD,QAAA,CAAA1qI,IAAA,OAAO4mD,QAAQ,EAAE5F,OAAO,EAAE9pB,MAAM,EAAEw4F,MAAM;IAExCib,OAAA,CAAK5qI,IAAI,GAAG,sBAAsB;IAElC4qI,OAAA,CAAK99F,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdw4F,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAib,OAAA;EAEH;EAAC9jI,YAAA,CAAA2jI,oBAAA;IAAAxsI,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAIujH,oBAAoB,CAAEvjH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACyoG,MAAO,CAAC;IAE5D;EAAC;EAAA,OAAA8a,oBAAA;AAAA,EA1DiCxB,kBAAkB;AAAAxrI,OAAA,CAAAgtI,oBAAA,GAAAA,oBAAA;AA8DrD,IAAMI,GAAG,GAAG,aAAc,IAAIn2G,OAAO,CAAC,CAAC;AACvC,IAAMo2G,KAAK,GAAG,aAAc,IAAIp2G,OAAO,CAAC,CAAC;AACzC,IAAMq2G,OAAO,GAAG,aAAc,IAAIr2G,OAAO,CAAC,CAAC;AAC3C,IAAMs2G,SAAS,GAAG,aAAc,IAAI38F,QAAQ,CAAC,CAAC;AAAC,IAEzC48F,aAAa,0BAAAC,gBAAA;EAAA7iH,SAAA,CAAA4iH,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA5iH,YAAA,CAAA0iH,aAAA;EAElB,SAAAA,cAAapxG,QAAQ,GAAG,IAAI,EAAEuxG,cAAc,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAA/kI,eAAA,OAAA2kI,aAAA;IAElDI,OAAA,GAAAF,QAAA,CAAAlrI,IAAA;IAEAorI,OAAA,CAAKrrI,IAAI,GAAG,eAAe;IAE3BqrI,OAAA,CAAKv+F,UAAU,GAAG;MACjBjT,QAAQ,EAAEA,QAAQ;MAClBuxG,cAAc,EAAEA;IACjB,CAAC;IAED,IAAKvxG,QAAQ,KAAK,IAAI,EAAG;MAExB,IAAMyxG,eAAe,GAAG,CAAC;MACzB,IAAM74F,SAAS,GAAGx9B,IAAI,CAACmD,GAAG,CAAE,EAAE,EAAEkzH,eAAgB,CAAC;MACjD,IAAMC,YAAY,GAAGt2H,IAAI,CAAC8D,GAAG,CAAE/D,OAAO,GAAGo2H,cAAe,CAAC;MAEzD,IAAMI,SAAS,GAAG3xG,QAAQ,CAACmmB,QAAQ,CAAC,CAAC;MACrC,IAAMyrF,YAAY,GAAG5xG,QAAQ,CAACqmB,YAAY,CAAE,UAAW,CAAC;MACxD,IAAMwrF,UAAU,GAAGF,SAAS,GAAGA,SAAS,CAAC97G,KAAK,GAAG+7G,YAAY,CAAC/7G,KAAK;MAEnE,IAAMi8G,QAAQ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC5B,IAAMC,QAAQ,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;MAClC,IAAMC,MAAM,GAAG,IAAIhkH,KAAK,CAAE,CAAE,CAAC;MAE7B,IAAMikH,QAAQ,GAAG,CAAC,CAAC;MACnB,IAAMjlF,QAAQ,GAAG,EAAE;MACnB,KAAM,IAAI9iD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2nI,UAAU,EAAE3nI,CAAC,IAAI,CAAC,EAAG;QAEzC,IAAKynI,SAAS,EAAG;UAEhBG,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAACptH,IAAI,CAAEra,CAAE,CAAC;UACnC4nI,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAACptH,IAAI,CAAEra,CAAC,GAAG,CAAE,CAAC;UACvC4nI,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAACptH,IAAI,CAAEra,CAAC,GAAG,CAAE,CAAC;QAExC,CAAC,MAAM;UAEN4nI,QAAQ,CAAE,CAAC,CAAE,GAAG5nI,CAAC;UACjB4nI,QAAQ,CAAE,CAAC,CAAE,GAAG5nI,CAAC,GAAG,CAAC;UACrB4nI,QAAQ,CAAE,CAAC,CAAE,GAAG5nI,CAAC,GAAG,CAAC;QAEtB;QAEA,IAAQ4U,CAAC,GAAWqyH,SAAS,CAArBryH,CAAC;UAAEC,CAAC,GAAQoyH,SAAS,CAAlBpyH,CAAC;UAAEC,CAAC,GAAKmyH,SAAS,CAAfnyH,CAAC;QACfF,CAAC,CAACuF,mBAAmB,CAAEutH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAG,CAAC;QACpD/yH,CAAC,CAACsF,mBAAmB,CAAEutH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAG,CAAC;QACpD9yH,CAAC,CAACqF,mBAAmB,CAAEutH,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAG,CAAC;QACpDX,SAAS,CAACn8F,SAAS,CAAEk8F,OAAQ,CAAC;;QAE9B;QACAc,MAAM,CAAE,CAAC,CAAE,MAAAjmH,MAAA,CAAO3Q,IAAI,CAACoF,KAAK,CAAE1B,CAAC,CAACxC,CAAC,GAAGs8B,SAAU,CAAC,OAAA7sB,MAAA,CAAM3Q,IAAI,CAACoF,KAAK,CAAE1B,CAAC,CAAClC,CAAC,GAAGg8B,SAAU,CAAC,OAAA7sB,MAAA,CAAM3Q,IAAI,CAACoF,KAAK,CAAE1B,CAAC,CAACqS,CAAC,GAAGynB,SAAU,CAAC,CAAG;QACxHo5F,MAAM,CAAE,CAAC,CAAE,MAAAjmH,MAAA,CAAO3Q,IAAI,CAACoF,KAAK,CAAEzB,CAAC,CAACzC,CAAC,GAAGs8B,SAAU,CAAC,OAAA7sB,MAAA,CAAM3Q,IAAI,CAACoF,KAAK,CAAEzB,CAAC,CAACnC,CAAC,GAAGg8B,SAAU,CAAC,OAAA7sB,MAAA,CAAM3Q,IAAI,CAACoF,KAAK,CAAEzB,CAAC,CAACoS,CAAC,GAAGynB,SAAU,CAAC,CAAG;QACxHo5F,MAAM,CAAE,CAAC,CAAE,MAAAjmH,MAAA,CAAO3Q,IAAI,CAACoF,KAAK,CAAExB,CAAC,CAAC1C,CAAC,GAAGs8B,SAAU,CAAC,OAAA7sB,MAAA,CAAM3Q,IAAI,CAACoF,KAAK,CAAExB,CAAC,CAACpC,CAAC,GAAGg8B,SAAU,CAAC,OAAA7sB,MAAA,CAAM3Q,IAAI,CAACoF,KAAK,CAAExB,CAAC,CAACmS,CAAC,GAAGynB,SAAU,CAAC,CAAG;;QAExH;QACA,IAAKo5F,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,EAAG;UAEhG;QAED;;QAEA;QACA,KAAM,IAAI9vG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B;UACA,IAAMgwG,KAAK,GAAG,CAAEhwG,CAAC,GAAG,CAAC,IAAK,CAAC;UAC3B,IAAMiwG,QAAQ,GAAGH,MAAM,CAAE9vG,CAAC,CAAE;UAC5B,IAAMkwG,QAAQ,GAAGJ,MAAM,CAAEE,KAAK,CAAE;UAChC,IAAMlwG,EAAE,GAAGmvG,SAAS,CAAEY,QAAQ,CAAE7vG,CAAC,CAAE,CAAE;UACrC,IAAMne,EAAE,GAAGotH,SAAS,CAAEY,QAAQ,CAAEG,KAAK,CAAE,CAAE;UAEzC,IAAMh3C,IAAI,MAAAnvE,MAAA,CAAOomH,QAAQ,OAAApmH,MAAA,CAAMqmH,QAAQ,CAAG;UAC1C,IAAMC,WAAW,MAAAtmH,MAAA,CAAOqmH,QAAQ,OAAArmH,MAAA,CAAMomH,QAAQ,CAAG;UAEjD,IAAKE,WAAW,IAAIJ,QAAQ,IAAIA,QAAQ,CAAEI,WAAW,CAAE,EAAG;YAEzD;YACA;YACA,IAAKnB,OAAO,CAACtuH,GAAG,CAAEqvH,QAAQ,CAAEI,WAAW,CAAE,CAACn1G,MAAO,CAAC,IAAIw0G,YAAY,EAAG;cAEpE1kF,QAAQ,CAACtjD,IAAI,CAAEs4B,EAAE,CAAC1lB,CAAC,EAAE0lB,EAAE,CAACplB,CAAC,EAAEolB,EAAE,CAAC7Q,CAAE,CAAC;cACjC67B,QAAQ,CAACtjD,IAAI,CAAEqa,EAAE,CAACzH,CAAC,EAAEyH,EAAE,CAACnH,CAAC,EAAEmH,EAAE,CAACoN,CAAE,CAAC;YAElC;YAEA8gH,QAAQ,CAAEI,WAAW,CAAE,GAAG,IAAI;UAE/B,CAAC,MAAM,IAAK,EAAIn3C,IAAI,IAAI+2C,QAAQ,CAAE,EAAG;YAEpC;YACAA,QAAQ,CAAE/2C,IAAI,CAAE,GAAG;cAElBo3C,MAAM,EAAER,QAAQ,CAAE5vG,CAAC,CAAE;cACrBugB,MAAM,EAAEqvF,QAAQ,CAAEI,KAAK,CAAE;cACzBh1G,MAAM,EAAEg0G,OAAO,CAAC9vH,KAAK,CAAC;YAEvB,CAAC;UAEF;QAED;MAED;;MAEA;MACA,KAAM,IAAMhd,GAAG,IAAI6tI,QAAQ,EAAG;QAE7B,IAAKA,QAAQ,CAAE7tI,GAAG,CAAE,EAAG;UAEtB,IAAAmuI,aAAA,GAA2BN,QAAQ,CAAE7tI,GAAG,CAAE;YAAlCkuI,MAAM,GAAAC,aAAA,CAAND,MAAM;YAAE7vF,MAAM,GAAA8vF,aAAA,CAAN9vF,MAAM;UACtBuuF,GAAG,CAAC3sH,mBAAmB,CAAEutH,YAAY,EAAEU,MAAO,CAAC;UAC/CrB,KAAK,CAAC5sH,mBAAmB,CAAEutH,YAAY,EAAEnvF,MAAO,CAAC;UAEjDuK,QAAQ,CAACtjD,IAAI,CAAEsnI,GAAG,CAAC10H,CAAC,EAAE00H,GAAG,CAACp0H,CAAC,EAAEo0H,GAAG,CAAC7/G,CAAE,CAAC;UACpC67B,QAAQ,CAACtjD,IAAI,CAAEunI,KAAK,CAAC30H,CAAC,EAAE20H,KAAK,CAACr0H,CAAC,EAAEq0H,KAAK,CAAC9/G,CAAE,CAAC;QAE3C;MAED;MAEAqgH,OAAA,CAAKlrF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAE3E;IAAC,OAAAwkF,OAAA;EAEF;EAACvkI,YAAA,CAAAmkI,aAAA;IAAAhtI,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAqwF,aAAA,CAAArtI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAm+F,aAAA;AAAA,EAxI0B5rF,cAAc;AAAA5hD,OAAA,CAAAwtI,aAAA,GAAAA,aAAA;AAAA,IA4IpCoB,KAAK,0BAAAC,KAAA;EAAAjkH,SAAA,CAAAgkH,KAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAAhkH,YAAA,CAAA8jH,KAAA;EAEV,SAAAA,MAAa5zG,MAAM,EAAG;IAAA,IAAA+zG,OAAA;IAAAlmI,eAAA,OAAA+lI,KAAA;IAErBG,OAAA,GAAAD,QAAA,CAAAtsI,IAAA,OAAOw4B,MAAM;IAEb+zG,OAAA,CAAK92H,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1Bo3H,OAAA,CAAKxsI,IAAI,GAAG,OAAO;IAEnBwsI,OAAA,CAAKC,KAAK,GAAG,EAAE;IAAC,OAAAD,OAAA;EAEjB;EAAC1lI,YAAA,CAAAulI,KAAA;IAAApuI,GAAA;IAAAE,KAAA,EAED,SAAAuuI,eAAgBpQ,SAAS,EAAG;MAE3B,IAAMqQ,QAAQ,GAAG,EAAE;MAEnB,KAAM,IAAI5oI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC43H,KAAK,CAAC3oI,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAErD4oI,QAAQ,CAAE5oI,CAAC,CAAE,GAAG,IAAI,CAAC0oI,KAAK,CAAE1oI,CAAC,CAAE,CAACs4H,SAAS,CAAEC,SAAU,CAAC;MAEvD;MAEA,OAAOqQ,QAAQ;IAEhB;;IAEA;EAAA;IAAA1uI,GAAA;IAAAE,KAAA,EAEA,SAAAyuI,cAAetQ,SAAS,EAAG;MAE1B,OAAO;QAENvvF,KAAK,EAAE,IAAI,CAACsvF,SAAS,CAAEC,SAAU,CAAC;QAClCmQ,KAAK,EAAE,IAAI,CAACC,cAAc,CAAEpQ,SAAU;MAEvC,CAAC;IAEF;EAAC;IAAAr+H,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAyxF,KAAA,CAAAzuI,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACojH,KAAK,GAAG,EAAE;MAEf,KAAM,IAAI1oI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGwU,MAAM,CAACojH,KAAK,CAAC3oI,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEvD,IAAM8oI,IAAI,GAAGxjH,MAAM,CAACojH,KAAK,CAAE1oI,CAAC,CAAE;QAE9B,IAAI,CAAC0oI,KAAK,CAAClpI,IAAI,CAAEspI,IAAI,CAAC5xH,KAAK,CAAC,CAAE,CAAC;MAEhC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhd,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAyxF,KAAA,CAAAzuI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACxR,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBwR,IAAI,CAACulH,KAAK,GAAG,EAAE;MAEf,KAAM,IAAI1oI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAAC43H,KAAK,CAAC3oI,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAErD,IAAM8oI,IAAI,GAAG,IAAI,CAACJ,KAAK,CAAE1oI,CAAC,CAAE;QAC5BmjB,IAAI,CAACulH,KAAK,CAAClpI,IAAI,CAAEspI,IAAI,CAACtlH,MAAM,CAAC,CAAE,CAAC;MAEjC;MAEA,OAAOL,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB76E,IAAA,CAAAC,eAAA,CAAAyxF,KAAA,CAAAzuI,SAAA,qBAAAqC,IAAA,OAAgBu1H,IAAI;MAEpB,IAAI,CAAC9/G,IAAI,GAAG8/G,IAAI,CAAC9/G,IAAI;MACrB,IAAI,CAAC+2H,KAAK,GAAG,EAAE;MAEf,KAAM,IAAI1oI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAACiX,KAAK,CAAC3oI,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAErD,IAAM8oI,IAAI,GAAGrX,IAAI,CAACiX,KAAK,CAAE1oI,CAAC,CAAE;QAC5B,IAAI,CAAC0oI,KAAK,CAAClpI,IAAI,CAAE,IAAIuhI,IAAI,CAAC,CAAC,CAACh9E,QAAQ,CAAE+kF,IAAK,CAAE,CAAC;MAE/C;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAR,KAAA;AAAA,EA7FkBvH,IAAI;AAiGxB;AACA;AACA;AAFArnI,OAAA,CAAA4uI,KAAA,GAAAA,KAAA;AAIA,IAAMS,MAAM,GAAG;EAEdC,WAAW,EAAE,SAAAA,YAAW7lH,IAAI,EAAE8lH,WAAW,EAAEC,GAAG,GAAG,CAAC,EAAG;IAEpD,IAAMC,QAAQ,GAAGF,WAAW,IAAIA,WAAW,CAAClpI,MAAM;IAClD,IAAMqpI,QAAQ,GAAGD,QAAQ,GAAGF,WAAW,CAAE,CAAC,CAAE,GAAGC,GAAG,GAAG/lH,IAAI,CAACpjB,MAAM;IAChE,IAAIspI,SAAS,GAAGC,UAAU,CAAEnmH,IAAI,EAAE,CAAC,EAAEimH,QAAQ,EAAEF,GAAG,EAAE,IAAK,CAAC;IAC1D,IAAMj1D,SAAS,GAAG,EAAE;IAEpB,IAAK,CAAEo1D,SAAS,IAAIA,SAAS,CAACvqI,IAAI,KAAKuqI,SAAS,CAACjoI,IAAI,EAAG,OAAO6yE,SAAS;IAExE,IAAIs1D,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEt3H,CAAC,EAAEM,CAAC,EAAEi3H,OAAO;IAEzC,IAAKR,QAAQ,EAAGE,SAAS,GAAGO,cAAc,CAAEzmH,IAAI,EAAE8lH,WAAW,EAAEI,SAAS,EAAEH,GAAI,CAAC;;IAE/E;IACA,IAAK/lH,IAAI,CAACpjB,MAAM,GAAG,EAAE,GAAGmpI,GAAG,EAAG;MAE7BK,IAAI,GAAGE,IAAI,GAAGtmH,IAAI,CAAE,CAAC,CAAE;MACvBqmH,IAAI,GAAGE,IAAI,GAAGvmH,IAAI,CAAE,CAAC,CAAE;MAEvB,KAAM,IAAInjB,CAAC,GAAGkpI,GAAG,EAAElpI,CAAC,GAAGopI,QAAQ,EAAEppI,CAAC,IAAIkpI,GAAG,EAAG;QAE3C92H,CAAC,GAAG+Q,IAAI,CAAEnjB,CAAC,CAAE;QACb0S,CAAC,GAAGyQ,IAAI,CAAEnjB,CAAC,GAAG,CAAC,CAAE;QACjB,IAAKoS,CAAC,GAAGm3H,IAAI,EAAGA,IAAI,GAAGn3H,CAAC;QACxB,IAAKM,CAAC,GAAG82H,IAAI,EAAGA,IAAI,GAAG92H,CAAC;QACxB,IAAKN,CAAC,GAAGq3H,IAAI,EAAGA,IAAI,GAAGr3H,CAAC;QACxB,IAAKM,CAAC,GAAGg3H,IAAI,EAAGA,IAAI,GAAGh3H,CAAC;MAEzB;;MAEA;MACAi3H,OAAO,GAAGz4H,IAAI,CAACa,GAAG,CAAE03H,IAAI,GAAGF,IAAI,EAAEG,IAAI,GAAGF,IAAK,CAAC;MAC9CG,OAAO,GAAGA,OAAO,KAAK,CAAC,GAAG,KAAK,GAAGA,OAAO,GAAG,CAAC;IAE9C;IAEAE,YAAY,CAAER,SAAS,EAAEp1D,SAAS,EAAEi1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;IAEjE,OAAO11D,SAAS;EAEjB;AAED,CAAC;;AAED;AACA,SAASq1D,UAAUA,CAAEnmH,IAAI,EAAE64B,KAAK,EAAEiG,GAAG,EAAEinF,GAAG,EAAEY,SAAS,EAAG;EAEvD,IAAI9pI,CAAC,EAAE84H,IAAI;EAEX,IAAKgR,SAAS,KAAOC,UAAU,CAAE5mH,IAAI,EAAE64B,KAAK,EAAEiG,GAAG,EAAEinF,GAAI,CAAC,GAAG,CAAG,EAAG;IAEhE,KAAMlpI,CAAC,GAAGg8C,KAAK,EAAEh8C,CAAC,GAAGiiD,GAAG,EAAEjiD,CAAC,IAAIkpI,GAAG,EAAGpQ,IAAI,GAAGkR,UAAU,CAAEhqI,CAAC,EAAEmjB,IAAI,CAAEnjB,CAAC,CAAE,EAAEmjB,IAAI,CAAEnjB,CAAC,GAAG,CAAC,CAAE,EAAE84H,IAAK,CAAC;EAE5F,CAAC,MAAM;IAEN,KAAM94H,CAAC,GAAGiiD,GAAG,GAAGinF,GAAG,EAAElpI,CAAC,IAAIg8C,KAAK,EAAEh8C,CAAC,IAAIkpI,GAAG,EAAGpQ,IAAI,GAAGkR,UAAU,CAAEhqI,CAAC,EAAEmjB,IAAI,CAAEnjB,CAAC,CAAE,EAAEmjB,IAAI,CAAEnjB,CAAC,GAAG,CAAC,CAAE,EAAE84H,IAAK,CAAC;EAEnG;EAEA,IAAKA,IAAI,IAAI/+G,MAAM,CAAE++G,IAAI,EAAEA,IAAI,CAACh6H,IAAK,CAAC,EAAG;IAExCmrI,UAAU,CAAEnR,IAAK,CAAC;IAClBA,IAAI,GAAGA,IAAI,CAACh6H,IAAI;EAEjB;EAEA,OAAOg6H,IAAI;AAEZ;;AAEA;AACA,SAASoR,YAAYA,CAAEluF,KAAK,EAAEiG,GAAG,EAAG;EAEnC,IAAK,CAAEjG,KAAK,EAAG,OAAOA,KAAK;EAC3B,IAAK,CAAEiG,GAAG,EAAGA,GAAG,GAAGjG,KAAK;EAExB,IAAI3a,CAAC,GAAG2a,KAAK;IACZmuF,KAAK;EACN,GAAG;IAEFA,KAAK,GAAG,KAAK;IAEb,IAAK,CAAE9oG,CAAC,CAAC+oG,OAAO,KAAMrwH,MAAM,CAAEsnB,CAAC,EAAEA,CAAC,CAACviC,IAAK,CAAC,IAAIurI,IAAI,CAAEhpG,CAAC,CAACjgC,IAAI,EAAEigC,CAAC,EAAEA,CAAC,CAACviC,IAAK,CAAC,KAAK,CAAC,CAAE,EAAG;MAEhFmrI,UAAU,CAAE5oG,CAAE,CAAC;MACfA,CAAC,GAAG4gB,GAAG,GAAG5gB,CAAC,CAACjgC,IAAI;MAChB,IAAKigC,CAAC,KAAKA,CAAC,CAACviC,IAAI,EAAG;MACpBqrI,KAAK,GAAG,IAAI;IAEb,CAAC,MAAM;MAEN9oG,CAAC,GAAGA,CAAC,CAACviC,IAAI;IAEX;EAED,CAAC,QAASqrI,KAAK,IAAI9oG,CAAC,KAAK4gB,GAAG;EAE5B,OAAOA,GAAG;AAEX;;AAEA;AACA,SAAS4nF,YAAYA,CAAES,GAAG,EAAEr2D,SAAS,EAAEi1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAEY,IAAI,EAAG;EAEvE,IAAK,CAAED,GAAG,EAAG;;EAEb;EACA,IAAK,CAAEC,IAAI,IAAIZ,OAAO,EAAGa,UAAU,CAAEF,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;EAE/D,IAAIpoI,IAAI,GAAG+oI,GAAG;IACblpI,IAAI;IAAEtC,IAAI;;EAEX;EACA,OAAQwrI,GAAG,CAAClpI,IAAI,KAAKkpI,GAAG,CAACxrI,IAAI,EAAG;IAE/BsC,IAAI,GAAGkpI,GAAG,CAAClpI,IAAI;IACftC,IAAI,GAAGwrI,GAAG,CAACxrI,IAAI;IAEf,IAAK6qI,OAAO,GAAGc,WAAW,CAAEH,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC,GAAGe,KAAK,CAAEJ,GAAI,CAAC,EAAG;MAEvE;MACAr2D,SAAS,CAACz0E,IAAI,CAAE4B,IAAI,CAACpB,CAAC,GAAGkpI,GAAG,GAAG,CAAE,CAAC;MAClCj1D,SAAS,CAACz0E,IAAI,CAAE8qI,GAAG,CAACtqI,CAAC,GAAGkpI,GAAG,GAAG,CAAE,CAAC;MACjCj1D,SAAS,CAACz0E,IAAI,CAAEV,IAAI,CAACkB,CAAC,GAAGkpI,GAAG,GAAG,CAAE,CAAC;MAElCe,UAAU,CAAEK,GAAI,CAAC;;MAEjB;MACAA,GAAG,GAAGxrI,IAAI,CAACA,IAAI;MACfyC,IAAI,GAAGzC,IAAI,CAACA,IAAI;MAEhB;IAED;IAEAwrI,GAAG,GAAGxrI,IAAI;;IAEV;IACA,IAAKwrI,GAAG,KAAK/oI,IAAI,EAAG;MAEnB;MACA,IAAK,CAAEgpI,IAAI,EAAG;QAEbV,YAAY,CAAEK,YAAY,CAAEI,GAAI,CAAC,EAAEr2D,SAAS,EAAEi1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;;QAE3E;MAED,CAAC,MAAM,IAAKY,IAAI,KAAK,CAAC,EAAG;QAExBD,GAAG,GAAGK,sBAAsB,CAAET,YAAY,CAAEI,GAAI,CAAC,EAAEr2D,SAAS,EAAEi1D,GAAI,CAAC;QACnEW,YAAY,CAAES,GAAG,EAAEr2D,SAAS,EAAEi1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;;QAE3D;MAED,CAAC,MAAM,IAAKY,IAAI,KAAK,CAAC,EAAG;QAExBK,WAAW,CAAEN,GAAG,EAAEr2D,SAAS,EAAEi1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;MAExD;MAEA;IAED;EAED;AAED;;AAEA;AACA,SAASe,KAAKA,CAAEJ,GAAG,EAAG;EAErB,IAAM11H,CAAC,GAAG01H,GAAG,CAAClpI,IAAI;IACjByT,CAAC,GAAGy1H,GAAG;IACPx1H,CAAC,GAAGw1H,GAAG,CAACxrI,IAAI;EAEb,IAAKurI,IAAI,CAAEz1H,CAAC,EAAEC,CAAC,EAAEC,CAAE,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC;;EAE1C;EACA,IAAMud,EAAE,GAAGzd,CAAC,CAACxC,CAAC;IAAEogB,EAAE,GAAG3d,CAAC,CAACzC,CAAC;IAAEwM,EAAE,GAAG9J,CAAC,CAAC1C,CAAC;IAAEkgB,EAAE,GAAG1d,CAAC,CAAClC,CAAC;IAAE+f,EAAE,GAAG5d,CAAC,CAACnC,CAAC;IAAEmM,EAAE,GAAG/J,CAAC,CAACpC,CAAC;;EAEhE;EACA,IAAMod,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGzT,EAAE,GAAGyT,EAAE,GAAGzT,EAAE,GAAO4T,EAAE,GAAG5T,EAAE,GAAG4T,EAAE,GAAG5T,EAAI;IACjEmR,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGzT,EAAE,GAAGyT,EAAE,GAAGzT,EAAE,GAAO4T,EAAE,GAAG5T,EAAE,GAAG4T,EAAE,GAAG5T,EAAI;IAC5DqR,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGzT,EAAE,GAAGyT,EAAE,GAAGzT,EAAE,GAAO4T,EAAE,GAAG5T,EAAE,GAAG4T,EAAE,GAAG5T,EAAI;IAC5DuR,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGzT,EAAE,GAAGyT,EAAE,GAAGzT,EAAE,GAAO4T,EAAE,GAAG5T,EAAE,GAAG4T,EAAE,GAAG5T,EAAI;EAE7D,IAAIwiB,CAAC,GAAGvsB,CAAC,CAAChW,IAAI;EACd,OAAQuiC,CAAC,KAAKzsB,CAAC,EAAG;IAEjB,IAAKysB,CAAC,CAACjvB,CAAC,IAAI0d,EAAE,IAAIuR,CAAC,CAACjvB,CAAC,IAAI8d,EAAE,IAAImR,CAAC,CAAC3uB,CAAC,IAAIqd,EAAE,IAAIsR,CAAC,CAAC3uB,CAAC,IAAIyd,EAAE,IACpD06G,eAAe,CAAEx4G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAE7T,EAAE,EAAEC,EAAE,EAAEwiB,CAAC,CAACjvB,CAAC,EAAEivB,CAAC,CAAC3uB,CAAE,CAAC,IACnD23H,IAAI,CAAEhpG,CAAC,CAACjgC,IAAI,EAAEigC,CAAC,EAAEA,CAAC,CAACviC,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IAC9CuiC,CAAC,GAAGA,CAAC,CAACviC,IAAI;EAEX;EAEA,OAAO,IAAI;AAEZ;AAEA,SAAS2rI,WAAWA,CAAEH,GAAG,EAAEf,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;EAEhD,IAAM/0H,CAAC,GAAG01H,GAAG,CAAClpI,IAAI;IACjByT,CAAC,GAAGy1H,GAAG;IACPx1H,CAAC,GAAGw1H,GAAG,CAACxrI,IAAI;EAEb,IAAKurI,IAAI,CAAEz1H,CAAC,EAAEC,CAAC,EAAEC,CAAE,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC;;EAE1C,IAAMud,EAAE,GAAGzd,CAAC,CAACxC,CAAC;IAAEogB,EAAE,GAAG3d,CAAC,CAACzC,CAAC;IAAEwM,EAAE,GAAG9J,CAAC,CAAC1C,CAAC;IAAEkgB,EAAE,GAAG1d,CAAC,CAAClC,CAAC;IAAE+f,EAAE,GAAG5d,CAAC,CAACnC,CAAC;IAAEmM,EAAE,GAAG/J,CAAC,CAACpC,CAAC;;EAEhE;EACA,IAAMod,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGzT,EAAE,GAAGyT,EAAE,GAAGzT,EAAE,GAAO4T,EAAE,GAAG5T,EAAE,GAAG4T,EAAE,GAAG5T,EAAI;IACjEmR,EAAE,GAAGuC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGzT,EAAE,GAAGyT,EAAE,GAAGzT,EAAE,GAAO4T,EAAE,GAAG5T,EAAE,GAAG4T,EAAE,GAAG5T,EAAI;IAC5DqR,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGzT,EAAE,GAAGyT,EAAE,GAAGzT,EAAE,GAAO4T,EAAE,GAAG5T,EAAE,GAAG4T,EAAE,GAAG5T,EAAI;IAC5DuR,EAAE,GAAGmC,EAAE,GAAGG,EAAE,GAAKH,EAAE,GAAGzT,EAAE,GAAGyT,EAAE,GAAGzT,EAAE,GAAO4T,EAAE,GAAG5T,EAAE,GAAG4T,EAAE,GAAG5T,EAAI;;EAE7D;EACA,IAAMisH,IAAI,GAAGC,MAAM,CAAEj7G,EAAE,EAAEC,EAAE,EAAEw5G,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;IACjDqB,IAAI,GAAGD,MAAM,CAAE76G,EAAE,EAAEC,EAAE,EAAEo5G,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;EAE7C,IAAItoG,CAAC,GAAGipG,GAAG,CAACW,KAAK;IAChBh5H,CAAC,GAAGq4H,GAAG,CAACY,KAAK;;EAEd;EACA,OAAQ7pG,CAAC,IAAIA,CAAC,CAACpa,CAAC,IAAI6jH,IAAI,IAAI74H,CAAC,IAAIA,CAAC,CAACgV,CAAC,IAAI+jH,IAAI,EAAG;IAE9C,IAAK3pG,CAAC,CAACjvB,CAAC,IAAI0d,EAAE,IAAIuR,CAAC,CAACjvB,CAAC,IAAI8d,EAAE,IAAImR,CAAC,CAAC3uB,CAAC,IAAIqd,EAAE,IAAIsR,CAAC,CAAC3uB,CAAC,IAAIyd,EAAE,IAAIkR,CAAC,KAAKzsB,CAAC,IAAIysB,CAAC,KAAKvsB,CAAC,IAC1E+1H,eAAe,CAAEx4G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAE7T,EAAE,EAAEC,EAAE,EAAEwiB,CAAC,CAACjvB,CAAC,EAAEivB,CAAC,CAAC3uB,CAAE,CAAC,IAAI23H,IAAI,CAAEhpG,CAAC,CAACjgC,IAAI,EAAEigC,CAAC,EAAEA,CAAC,CAACviC,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IACrGuiC,CAAC,GAAGA,CAAC,CAAC4pG,KAAK;IAEX,IAAKh5H,CAAC,CAACG,CAAC,IAAI0d,EAAE,IAAI7d,CAAC,CAACG,CAAC,IAAI8d,EAAE,IAAIje,CAAC,CAACS,CAAC,IAAIqd,EAAE,IAAI9d,CAAC,CAACS,CAAC,IAAIyd,EAAE,IAAIle,CAAC,KAAK2C,CAAC,IAAI3C,CAAC,KAAK6C,CAAC,IAC1E+1H,eAAe,CAAEx4G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAE7T,EAAE,EAAEC,EAAE,EAAE5M,CAAC,CAACG,CAAC,EAAEH,CAAC,CAACS,CAAE,CAAC,IAAI23H,IAAI,CAAEp4H,CAAC,CAAC7Q,IAAI,EAAE6Q,CAAC,EAAEA,CAAC,CAACnT,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IACrGmT,CAAC,GAAGA,CAAC,CAACi5H,KAAK;EAEZ;;EAEA;EACA,OAAQ7pG,CAAC,IAAIA,CAAC,CAACpa,CAAC,IAAI6jH,IAAI,EAAG;IAE1B,IAAKzpG,CAAC,CAACjvB,CAAC,IAAI0d,EAAE,IAAIuR,CAAC,CAACjvB,CAAC,IAAI8d,EAAE,IAAImR,CAAC,CAAC3uB,CAAC,IAAIqd,EAAE,IAAIsR,CAAC,CAAC3uB,CAAC,IAAIyd,EAAE,IAAIkR,CAAC,KAAKzsB,CAAC,IAAIysB,CAAC,KAAKvsB,CAAC,IAC1E+1H,eAAe,CAAEx4G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAE7T,EAAE,EAAEC,EAAE,EAAEwiB,CAAC,CAACjvB,CAAC,EAAEivB,CAAC,CAAC3uB,CAAE,CAAC,IAAI23H,IAAI,CAAEhpG,CAAC,CAACjgC,IAAI,EAAEigC,CAAC,EAAEA,CAAC,CAACviC,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IACrGuiC,CAAC,GAAGA,CAAC,CAAC4pG,KAAK;EAEZ;;EAEA;EACA,OAAQh5H,CAAC,IAAIA,CAAC,CAACgV,CAAC,IAAI+jH,IAAI,EAAG;IAE1B,IAAK/4H,CAAC,CAACG,CAAC,IAAI0d,EAAE,IAAI7d,CAAC,CAACG,CAAC,IAAI8d,EAAE,IAAIje,CAAC,CAACS,CAAC,IAAIqd,EAAE,IAAI9d,CAAC,CAACS,CAAC,IAAIyd,EAAE,IAAIle,CAAC,KAAK2C,CAAC,IAAI3C,CAAC,KAAK6C,CAAC,IAC1E+1H,eAAe,CAAEx4G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAE7T,EAAE,EAAEC,EAAE,EAAE5M,CAAC,CAACG,CAAC,EAAEH,CAAC,CAACS,CAAE,CAAC,IAAI23H,IAAI,CAAEp4H,CAAC,CAAC7Q,IAAI,EAAE6Q,CAAC,EAAEA,CAAC,CAACnT,IAAK,CAAC,IAAI,CAAC,EAAG,OAAO,KAAK;IACrGmT,CAAC,GAAGA,CAAC,CAACi5H,KAAK;EAEZ;EAEA,OAAO,IAAI;AAEZ;;AAEA;AACA,SAASP,sBAAsBA,CAAE3uF,KAAK,EAAEi4B,SAAS,EAAEi1D,GAAG,EAAG;EAExD,IAAI7nG,CAAC,GAAG2a,KAAK;EACb,GAAG;IAEF,IAAMpnC,CAAC,GAAGysB,CAAC,CAACjgC,IAAI;MACfyT,CAAC,GAAGwsB,CAAC,CAACviC,IAAI,CAACA,IAAI;IAEhB,IAAK,CAAEib,MAAM,CAAEnF,CAAC,EAAEC,CAAE,CAAC,IAAI+sC,UAAU,CAAEhtC,CAAC,EAAEysB,CAAC,EAAEA,CAAC,CAACviC,IAAI,EAAE+V,CAAE,CAAC,IAAIs2H,aAAa,CAAEv2H,CAAC,EAAEC,CAAE,CAAC,IAAIs2H,aAAa,CAAEt2H,CAAC,EAAED,CAAE,CAAC,EAAG;MAE1Gq/D,SAAS,CAACz0E,IAAI,CAAEoV,CAAC,CAAC5U,CAAC,GAAGkpI,GAAG,GAAG,CAAE,CAAC;MAC/Bj1D,SAAS,CAACz0E,IAAI,CAAE6hC,CAAC,CAACrhC,CAAC,GAAGkpI,GAAG,GAAG,CAAE,CAAC;MAC/Bj1D,SAAS,CAACz0E,IAAI,CAAEqV,CAAC,CAAC7U,CAAC,GAAGkpI,GAAG,GAAG,CAAE,CAAC;;MAE/B;MACAe,UAAU,CAAE5oG,CAAE,CAAC;MACf4oG,UAAU,CAAE5oG,CAAC,CAACviC,IAAK,CAAC;MAEpBuiC,CAAC,GAAG2a,KAAK,GAAGnnC,CAAC;IAEd;IAEAwsB,CAAC,GAAGA,CAAC,CAACviC,IAAI;EAEX,CAAC,QAASuiC,CAAC,KAAK2a,KAAK;EAErB,OAAOkuF,YAAY,CAAE7oG,CAAE,CAAC;AAEzB;;AAEA;AACA,SAASupG,WAAWA,CAAE5uF,KAAK,EAAEi4B,SAAS,EAAEi1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;EAElE;EACA,IAAI/0H,CAAC,GAAGonC,KAAK;EACb,GAAG;IAEF,IAAInnC,CAAC,GAAGD,CAAC,CAAC9V,IAAI,CAACA,IAAI;IACnB,OAAQ+V,CAAC,KAAKD,CAAC,CAACxT,IAAI,EAAG;MAEtB,IAAKwT,CAAC,CAAC5U,CAAC,KAAK6U,CAAC,CAAC7U,CAAC,IAAIorI,eAAe,CAAEx2H,CAAC,EAAEC,CAAE,CAAC,EAAG;QAE7C;QACA,IAAIC,CAAC,GAAGu2H,YAAY,CAAEz2H,CAAC,EAAEC,CAAE,CAAC;;QAE5B;QACAD,CAAC,GAAGs1H,YAAY,CAAEt1H,CAAC,EAAEA,CAAC,CAAC9V,IAAK,CAAC;QAC7BgW,CAAC,GAAGo1H,YAAY,CAAEp1H,CAAC,EAAEA,CAAC,CAAChW,IAAK,CAAC;;QAE7B;QACA+qI,YAAY,CAAEj1H,CAAC,EAAEq/D,SAAS,EAAEi1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;QACzDE,YAAY,CAAE/0H,CAAC,EAAEm/D,SAAS,EAAEi1D,GAAG,EAAEK,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAE,CAAE,CAAC;QACzD;MAED;MAEA90H,CAAC,GAAGA,CAAC,CAAC/V,IAAI;IAEX;IAEA8V,CAAC,GAAGA,CAAC,CAAC9V,IAAI;EAEX,CAAC,QAAS8V,CAAC,KAAKonC,KAAK;AAEtB;;AAEA;AACA,SAAS4tF,cAAcA,CAAEzmH,IAAI,EAAE8lH,WAAW,EAAEI,SAAS,EAAEH,GAAG,EAAG;EAE5D,IAAMoC,KAAK,GAAG,EAAE;EAChB,IAAItrI,CAAC,EAAEwwB,GAAG,EAAEwrB,KAAK,EAAEiG,GAAG,EAAEmuC,IAAI;EAE5B,KAAMpwF,CAAC,GAAG,CAAC,EAAEwwB,GAAG,GAAGy4G,WAAW,CAAClpI,MAAM,EAAEC,CAAC,GAAGwwB,GAAG,EAAExwB,CAAC,EAAG,EAAG;IAEtDg8C,KAAK,GAAGitF,WAAW,CAAEjpI,CAAC,CAAE,GAAGkpI,GAAG;IAC9BjnF,GAAG,GAAGjiD,CAAC,GAAGwwB,GAAG,GAAG,CAAC,GAAGy4G,WAAW,CAAEjpI,CAAC,GAAG,CAAC,CAAE,GAAGkpI,GAAG,GAAG/lH,IAAI,CAACpjB,MAAM;IAC5DqwF,IAAI,GAAGk5C,UAAU,CAAEnmH,IAAI,EAAE64B,KAAK,EAAEiG,GAAG,EAAEinF,GAAG,EAAE,KAAM,CAAC;IACjD,IAAK94C,IAAI,KAAKA,IAAI,CAACtxF,IAAI,EAAGsxF,IAAI,CAACg6C,OAAO,GAAG,IAAI;IAC7CkB,KAAK,CAAC9rI,IAAI,CAAE+rI,WAAW,CAAEn7C,IAAK,CAAE,CAAC;EAElC;EAEAk7C,KAAK,CAACj1D,IAAI,CAAEm1D,QAAS,CAAC;;EAEtB;EACA,KAAMxrI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsrI,KAAK,CAACvrI,MAAM,EAAEC,CAAC,EAAG,EAAG;IAErCqpI,SAAS,GAAGoC,aAAa,CAAEH,KAAK,CAAEtrI,CAAC,CAAE,EAAEqpI,SAAU,CAAC;EAEnD;EAEA,OAAOA,SAAS;AAEjB;AAEA,SAASmC,QAAQA,CAAE52H,CAAC,EAAEC,CAAC,EAAG;EAEzB,OAAOD,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;AAEjB;;AAEA;AACA,SAASq5H,aAAaA,CAAE3C,IAAI,EAAEO,SAAS,EAAG;EAEzC,IAAMqC,MAAM,GAAGC,cAAc,CAAE7C,IAAI,EAAEO,SAAU,CAAC;EAChD,IAAK,CAAEqC,MAAM,EAAG;IAEf,OAAOrC,SAAS;EAEjB;EAEA,IAAMuC,aAAa,GAAGP,YAAY,CAAEK,MAAM,EAAE5C,IAAK,CAAC;;EAElD;EACAoB,YAAY,CAAE0B,aAAa,EAAEA,aAAa,CAAC9sI,IAAK,CAAC;EACjD,OAAOorI,YAAY,CAAEwB,MAAM,EAAEA,MAAM,CAAC5sI,IAAK,CAAC;AAE3C;;AAEA;AACA,SAAS6sI,cAAcA,CAAE7C,IAAI,EAAEO,SAAS,EAAG;EAE1C,IAAIhoG,CAAC,GAAGgoG,SAAS;IAChBj4G,EAAE,GAAG,CAAE8C,QAAQ;IACfhiB,CAAC;EAEF,IAAM25H,EAAE,GAAG/C,IAAI,CAAC12H,CAAC;IAAE05H,EAAE,GAAGhD,IAAI,CAACp2H,CAAC;;EAE9B;EACA;EACA,GAAG;IAEF,IAAKo5H,EAAE,IAAIzqG,CAAC,CAAC3uB,CAAC,IAAIo5H,EAAE,IAAIzqG,CAAC,CAACviC,IAAI,CAAC4T,CAAC,IAAI2uB,CAAC,CAACviC,IAAI,CAAC4T,CAAC,KAAK2uB,CAAC,CAAC3uB,CAAC,EAAG;MAEtD,IAAMN,CAAC,GAAGivB,CAAC,CAACjvB,CAAC,GAAG,CAAE05H,EAAE,GAAGzqG,CAAC,CAAC3uB,CAAC,KAAO2uB,CAAC,CAACviC,IAAI,CAACsT,CAAC,GAAGivB,CAAC,CAACjvB,CAAC,CAAE,IAAKivB,CAAC,CAACviC,IAAI,CAAC4T,CAAC,GAAG2uB,CAAC,CAAC3uB,CAAC,CAAE;MACtE,IAAKN,CAAC,IAAIy5H,EAAE,IAAIz5H,CAAC,GAAGgf,EAAE,EAAG;QAExBA,EAAE,GAAGhf,CAAC;QACNF,CAAC,GAAGmvB,CAAC,CAACjvB,CAAC,GAAGivB,CAAC,CAACviC,IAAI,CAACsT,CAAC,GAAGivB,CAAC,GAAGA,CAAC,CAACviC,IAAI;QAC/B,IAAKsT,CAAC,KAAKy5H,EAAE,EAAG,OAAO35H,CAAC,CAAC,CAAC;MAE3B;IAED;;IAEAmvB,CAAC,GAAGA,CAAC,CAACviC,IAAI;EAEX,CAAC,QAASuiC,CAAC,KAAKgoG,SAAS;EAEzB,IAAK,CAAEn3H,CAAC,EAAG,OAAO,IAAI;;EAEtB;EACA;EACA;;EAEA,IAAM3Q,IAAI,GAAG2Q,CAAC;IACb65H,EAAE,GAAG75H,CAAC,CAACE,CAAC;IACR45H,EAAE,GAAG95H,CAAC,CAACQ,CAAC;EACT,IAAIu5H,MAAM,GAAG/3G,QAAQ;IAAEwzB,GAAG;EAE1BrmB,CAAC,GAAGnvB,CAAC;EAEL,GAAG;IAEF,IAAK25H,EAAE,IAAIxqG,CAAC,CAACjvB,CAAC,IAAIivB,CAAC,CAACjvB,CAAC,IAAI25H,EAAE,IAAIF,EAAE,KAAKxqG,CAAC,CAACjvB,CAAC,IACvCy4H,eAAe,CAAEiB,EAAE,GAAGE,EAAE,GAAGH,EAAE,GAAGz6G,EAAE,EAAE06G,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEF,EAAE,GAAGE,EAAE,GAAG56G,EAAE,GAAGy6G,EAAE,EAAEC,EAAE,EAAEzqG,CAAC,CAACjvB,CAAC,EAAEivB,CAAC,CAAC3uB,CAAE,CAAC,EAAG;MAErFg1C,GAAG,GAAGx2C,IAAI,CAACgC,GAAG,CAAE44H,EAAE,GAAGzqG,CAAC,CAAC3uB,CAAE,CAAC,IAAKm5H,EAAE,GAAGxqG,CAAC,CAACjvB,CAAC,CAAE,CAAC,CAAC;;MAE3C,IAAK+4H,aAAa,CAAE9pG,CAAC,EAAEynG,IAAK,CAAC,KAAMphF,GAAG,GAAGukF,MAAM,IAAMvkF,GAAG,KAAKukF,MAAM,KAAM5qG,CAAC,CAACjvB,CAAC,GAAGF,CAAC,CAACE,CAAC,IAAMivB,CAAC,CAACjvB,CAAC,KAAKF,CAAC,CAACE,CAAC,IAAI85H,oBAAoB,CAAEh6H,CAAC,EAAEmvB,CAAE,CAAG,CAAI,CAAE,EAAG;QAE7InvB,CAAC,GAAGmvB,CAAC;QACL4qG,MAAM,GAAGvkF,GAAG;MAEb;IAED;IAEArmB,CAAC,GAAGA,CAAC,CAACviC,IAAI;EAEX,CAAC,QAASuiC,CAAC,KAAK9/B,IAAI;EAEpB,OAAO2Q,CAAC;AAET;;AAEA;AACA,SAASg6H,oBAAoBA,CAAEh6H,CAAC,EAAEmvB,CAAC,EAAG;EAErC,OAAOgpG,IAAI,CAAEn4H,CAAC,CAAC9Q,IAAI,EAAE8Q,CAAC,EAAEmvB,CAAC,CAACjgC,IAAK,CAAC,GAAG,CAAC,IAAIipI,IAAI,CAAEhpG,CAAC,CAACviC,IAAI,EAAEoT,CAAC,EAAEA,CAAC,CAACpT,IAAK,CAAC,GAAG,CAAC;AAEtE;;AAEA;AACA,SAAS0rI,UAAUA,CAAExuF,KAAK,EAAEutF,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;EAEjD,IAAItoG,CAAC,GAAG2a,KAAK;EACb,GAAG;IAEF,IAAK3a,CAAC,CAACpa,CAAC,KAAK,CAAC,EAAGoa,CAAC,CAACpa,CAAC,GAAG8jH,MAAM,CAAE1pG,CAAC,CAACjvB,CAAC,EAAEivB,CAAC,CAAC3uB,CAAC,EAAE62H,IAAI,EAAEC,IAAI,EAAEG,OAAQ,CAAC;IAC9DtoG,CAAC,CAAC4pG,KAAK,GAAG5pG,CAAC,CAACjgC,IAAI;IAChBigC,CAAC,CAAC6pG,KAAK,GAAG7pG,CAAC,CAACviC,IAAI;IAChBuiC,CAAC,GAAGA,CAAC,CAACviC,IAAI;EAEX,CAAC,QAASuiC,CAAC,KAAK2a,KAAK;EAErB3a,CAAC,CAAC4pG,KAAK,CAACC,KAAK,GAAG,IAAI;EACpB7pG,CAAC,CAAC4pG,KAAK,GAAG,IAAI;EAEdkB,UAAU,CAAE9qG,CAAE,CAAC;AAEhB;;AAEA;AACA;AACA,SAAS8qG,UAAUA,CAAE/7C,IAAI,EAAG;EAE3B,IAAIpwF,CAAC;IAAEqhC,CAAC;IAAE1sB,CAAC;IAAEsD,CAAC;IAAEm0H,IAAI;IAAEC,SAAS;IAAEC,KAAK;IAAEC,KAAK;IAC5CC,MAAM,GAAG,CAAC;EAEX,GAAG;IAEFnrG,CAAC,GAAG+uD,IAAI;IACRA,IAAI,GAAG,IAAI;IACXg8C,IAAI,GAAG,IAAI;IACXC,SAAS,GAAG,CAAC;IAEb,OAAQhrG,CAAC,EAAG;MAEXgrG,SAAS,EAAG;MACZ13H,CAAC,GAAG0sB,CAAC;MACLirG,KAAK,GAAG,CAAC;MACT,KAAMtsI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwsI,MAAM,EAAExsI,CAAC,EAAG,EAAG;QAE/BssI,KAAK,EAAG;QACR33H,CAAC,GAAGA,CAAC,CAACu2H,KAAK;QACX,IAAK,CAAEv2H,CAAC,EAAG;MAEZ;MAEA43H,KAAK,GAAGC,MAAM;MAEd,OAAQF,KAAK,GAAG,CAAC,IAAMC,KAAK,GAAG,CAAC,IAAI53H,CAAG,EAAG;QAEzC,IAAK23H,KAAK,KAAK,CAAC,KAAMC,KAAK,KAAK,CAAC,IAAI,CAAE53H,CAAC,IAAI0sB,CAAC,CAACpa,CAAC,IAAItS,CAAC,CAACsS,CAAC,CAAE,EAAG;UAE1DhP,CAAC,GAAGopB,CAAC;UACLA,CAAC,GAAGA,CAAC,CAAC6pG,KAAK;UACXoB,KAAK,EAAG;QAET,CAAC,MAAM;UAENr0H,CAAC,GAAGtD,CAAC;UACLA,CAAC,GAAGA,CAAC,CAACu2H,KAAK;UACXqB,KAAK,EAAG;QAET;QAEA,IAAKH,IAAI,EAAGA,IAAI,CAAClB,KAAK,GAAGjzH,CAAC,CAAC,KACtBm4E,IAAI,GAAGn4E,CAAC;QAEbA,CAAC,CAACgzH,KAAK,GAAGmB,IAAI;QACdA,IAAI,GAAGn0H,CAAC;MAET;MAEAopB,CAAC,GAAG1sB,CAAC;IAEN;IAEAy3H,IAAI,CAAClB,KAAK,GAAG,IAAI;IACjBsB,MAAM,IAAI,CAAC;EAEZ,CAAC,QAASH,SAAS,GAAG,CAAC;EAEvB,OAAOj8C,IAAI;AAEZ;;AAEA;AACA,SAAS26C,MAAMA,CAAE34H,CAAC,EAAEM,CAAC,EAAE62H,IAAI,EAAEC,IAAI,EAAEG,OAAO,EAAG;EAE5C;EACAv3H,CAAC,GAAG,CAAEA,CAAC,GAAGm3H,IAAI,IAAKI,OAAO,GAAG,CAAC;EAC9Bj3H,CAAC,GAAG,CAAEA,CAAC,GAAG82H,IAAI,IAAKG,OAAO,GAAG,CAAC;EAE9Bv3H,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EAEnCM,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EAEnC,OAAON,CAAC,GAAKM,CAAC,IAAI,CAAG;AAEtB;;AAEA;AACA,SAAS64H,WAAWA,CAAEvvF,KAAK,EAAG;EAE7B,IAAI3a,CAAC,GAAG2a,KAAK;IACZywF,QAAQ,GAAGzwF,KAAK;EACjB,GAAG;IAEF,IAAK3a,CAAC,CAACjvB,CAAC,GAAGq6H,QAAQ,CAACr6H,CAAC,IAAMivB,CAAC,CAACjvB,CAAC,KAAKq6H,QAAQ,CAACr6H,CAAC,IAAIivB,CAAC,CAAC3uB,CAAC,GAAG+5H,QAAQ,CAAC/5H,CAAG,EAAG+5H,QAAQ,GAAGprG,CAAC;IAClFA,CAAC,GAAGA,CAAC,CAACviC,IAAI;EAEX,CAAC,QAASuiC,CAAC,KAAK2a,KAAK;EAErB,OAAOywF,QAAQ;AAEhB;;AAEA;AACA,SAAS5B,eAAeA,CAAEx4G,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAE7T,EAAE,EAAEC,EAAE,EAAEw9G,EAAE,EAAEC,EAAE,EAAG;EAE1D,OAAO,CAAE19G,EAAE,GAAGy9G,EAAE,KAAO/pG,EAAE,GAAGgqG,EAAE,CAAE,IAAI,CAAEjqG,EAAE,GAAGgqG,EAAE,KAAOx9G,EAAE,GAAGy9G,EAAE,CAAE,IACnD,CAAEjqG,EAAE,GAAGgqG,EAAE,KAAO5pG,EAAE,GAAG6pG,EAAE,CAAE,IAAI,CAAE9pG,EAAE,GAAG6pG,EAAE,KAAO/pG,EAAE,GAAGgqG,EAAE,CAAE,IACtD,CAAE9pG,EAAE,GAAG6pG,EAAE,KAAOx9G,EAAE,GAAGy9G,EAAE,CAAE,IAAI,CAAE19G,EAAE,GAAGy9G,EAAE,KAAO5pG,EAAE,GAAG6pG,EAAE,CAAE;AAEjE;;AAEA;AACA,SAAS8O,eAAeA,CAAEx2H,CAAC,EAAEC,CAAC,EAAG;EAEhC,OAAOD,CAAC,CAAC9V,IAAI,CAACkB,CAAC,KAAK6U,CAAC,CAAC7U,CAAC,IAAI4U,CAAC,CAACxT,IAAI,CAACpB,CAAC,KAAK6U,CAAC,CAAC7U,CAAC,IAAI,CAAE0sI,iBAAiB,CAAE93H,CAAC,EAAEC,CAAE,CAAC;EAAI;EAClEs2H,aAAa,CAAEv2H,CAAC,EAAEC,CAAE,CAAC,IAAIs2H,aAAa,CAAEt2H,CAAC,EAAED,CAAE,CAAC,IAAI+3H,YAAY,CAAE/3H,CAAC,EAAEC,CAAE,CAAC;EAAI;EACzEw1H,IAAI,CAAEz1H,CAAC,CAACxT,IAAI,EAAEwT,CAAC,EAAEC,CAAC,CAACzT,IAAK,CAAC,IAAIipI,IAAI,CAAEz1H,CAAC,EAAEC,CAAC,CAACzT,IAAI,EAAEyT,CAAE,CAAC,CAAE;EAAI;EACzDkF,MAAM,CAAEnF,CAAC,EAAEC,CAAE,CAAC,IAAIw1H,IAAI,CAAEz1H,CAAC,CAACxT,IAAI,EAAEwT,CAAC,EAAEA,CAAC,CAAC9V,IAAK,CAAC,GAAG,CAAC,IAAIurI,IAAI,CAAEx1H,CAAC,CAACzT,IAAI,EAAEyT,CAAC,EAAEA,CAAC,CAAC/V,IAAK,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;AAEhG;;AAEA;AACA,SAASurI,IAAIA,CAAEhpG,CAAC,EAAE1sB,CAAC,EAAE0J,CAAC,EAAG;EAExB,OAAO,CAAE1J,CAAC,CAACjC,CAAC,GAAG2uB,CAAC,CAAC3uB,CAAC,KAAO2L,CAAC,CAACjM,CAAC,GAAGuC,CAAC,CAACvC,CAAC,CAAE,GAAG,CAAEuC,CAAC,CAACvC,CAAC,GAAGivB,CAAC,CAACjvB,CAAC,KAAOiM,CAAC,CAAC3L,CAAC,GAAGiC,CAAC,CAACjC,CAAC,CAAE;AAErE;;AAEA;AACA,SAASqH,MAAMA,CAAEme,EAAE,EAAEC,EAAE,EAAG;EAEzB,OAAOD,EAAE,CAAC9lB,CAAC,KAAK+lB,EAAE,CAAC/lB,CAAC,IAAI8lB,EAAE,CAACxlB,CAAC,KAAKylB,EAAE,CAACzlB,CAAC;AAEtC;;AAEA;AACA,SAASkvC,UAAUA,CAAE1pB,EAAE,EAAE00G,EAAE,EAAEz0G,EAAE,EAAE00G,EAAE,EAAG;EAErC,IAAMC,EAAE,GAAG9wG,IAAI,CAAEquG,IAAI,CAAEnyG,EAAE,EAAE00G,EAAE,EAAEz0G,EAAG,CAAE,CAAC;EACrC,IAAM40G,EAAE,GAAG/wG,IAAI,CAAEquG,IAAI,CAAEnyG,EAAE,EAAE00G,EAAE,EAAEC,EAAG,CAAE,CAAC;EACrC,IAAMG,EAAE,GAAGhxG,IAAI,CAAEquG,IAAI,CAAElyG,EAAE,EAAE00G,EAAE,EAAE30G,EAAG,CAAE,CAAC;EACrC,IAAM+0G,EAAE,GAAGjxG,IAAI,CAAEquG,IAAI,CAAElyG,EAAE,EAAE00G,EAAE,EAAED,EAAG,CAAE,CAAC;EAErC,IAAKE,EAAE,KAAKC,EAAE,IAAIC,EAAE,KAAKC,EAAE,EAAG,OAAO,IAAI,CAAC,CAAC;;EAE3C,IAAKH,EAAE,KAAK,CAAC,IAAII,SAAS,CAAEh1G,EAAE,EAAEC,EAAE,EAAEy0G,EAAG,CAAC,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKG,EAAE,KAAK,CAAC,IAAIG,SAAS,CAAEh1G,EAAE,EAAE20G,EAAE,EAAED,EAAG,CAAC,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKI,EAAE,KAAK,CAAC,IAAIE,SAAS,CAAE/0G,EAAE,EAAED,EAAE,EAAE20G,EAAG,CAAC,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKI,EAAE,KAAK,CAAC,IAAIC,SAAS,CAAE/0G,EAAE,EAAEy0G,EAAE,EAAEC,EAAG,CAAC,EAAG,OAAO,IAAI,CAAC,CAAC;;EAExD,OAAO,KAAK;AAEb;;AAEA;AACA,SAASK,SAASA,CAAE7rG,CAAC,EAAE1sB,CAAC,EAAE0J,CAAC,EAAG;EAE7B,OAAO1J,CAAC,CAACvC,CAAC,IAAIlB,IAAI,CAACa,GAAG,CAAEsvB,CAAC,CAACjvB,CAAC,EAAEiM,CAAC,CAACjM,CAAE,CAAC,IAAIuC,CAAC,CAACvC,CAAC,IAAIlB,IAAI,CAACY,GAAG,CAAEuvB,CAAC,CAACjvB,CAAC,EAAEiM,CAAC,CAACjM,CAAE,CAAC,IAAIuC,CAAC,CAACjC,CAAC,IAAIxB,IAAI,CAACa,GAAG,CAAEsvB,CAAC,CAAC3uB,CAAC,EAAE2L,CAAC,CAAC3L,CAAE,CAAC,IAAIiC,CAAC,CAACjC,CAAC,IAAIxB,IAAI,CAACY,GAAG,CAAEuvB,CAAC,CAAC3uB,CAAC,EAAE2L,CAAC,CAAC3L,CAAE,CAAC;AAEhI;AAEA,SAASspB,IAAIA,CAAEmxG,GAAG,EAAG;EAEpB,OAAOA,GAAG,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC;AAEvC;;AAEA;AACA,SAAST,iBAAiBA,CAAE93H,CAAC,EAAEC,CAAC,EAAG;EAElC,IAAIwsB,CAAC,GAAGzsB,CAAC;EACT,GAAG;IAEF,IAAKysB,CAAC,CAACrhC,CAAC,KAAK4U,CAAC,CAAC5U,CAAC,IAAIqhC,CAAC,CAACviC,IAAI,CAACkB,CAAC,KAAK4U,CAAC,CAAC5U,CAAC,IAAIqhC,CAAC,CAACrhC,CAAC,KAAK6U,CAAC,CAAC7U,CAAC,IAAIqhC,CAAC,CAACviC,IAAI,CAACkB,CAAC,KAAK6U,CAAC,CAAC7U,CAAC,IACtE4hD,UAAU,CAAEvgB,CAAC,EAAEA,CAAC,CAACviC,IAAI,EAAE8V,CAAC,EAAEC,CAAE,CAAC,EAAG,OAAO,IAAI;IAC5CwsB,CAAC,GAAGA,CAAC,CAACviC,IAAI;EAEX,CAAC,QAASuiC,CAAC,KAAKzsB,CAAC;EAEjB,OAAO,KAAK;AAEb;;AAEA;AACA,SAASu2H,aAAaA,CAAEv2H,CAAC,EAAEC,CAAC,EAAG;EAE9B,OAAOw1H,IAAI,CAAEz1H,CAAC,CAACxT,IAAI,EAAEwT,CAAC,EAAEA,CAAC,CAAC9V,IAAK,CAAC,GAAG,CAAC,GACnCurI,IAAI,CAAEz1H,CAAC,EAAEC,CAAC,EAAED,CAAC,CAAC9V,IAAK,CAAC,IAAI,CAAC,IAAIurI,IAAI,CAAEz1H,CAAC,EAAEA,CAAC,CAACxT,IAAI,EAAEyT,CAAE,CAAC,IAAI,CAAC,GACtDw1H,IAAI,CAAEz1H,CAAC,EAAEC,CAAC,EAAED,CAAC,CAACxT,IAAK,CAAC,GAAG,CAAC,IAAIipI,IAAI,CAAEz1H,CAAC,EAAEA,CAAC,CAAC9V,IAAI,EAAE+V,CAAE,CAAC,GAAG,CAAC;AAEtD;;AAEA;AACA,SAAS83H,YAAYA,CAAE/3H,CAAC,EAAEC,CAAC,EAAG;EAE7B,IAAIwsB,CAAC,GAAGzsB,CAAC;IACRw4H,MAAM,GAAG,KAAK;EACf,IAAM/Q,EAAE,GAAG,CAAEznH,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC,IAAK,CAAC;IAC3BkqH,EAAE,GAAG,CAAE1nH,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC,IAAK,CAAC;EACvB,GAAG;IAEF,IAAS2uB,CAAC,CAAC3uB,CAAC,GAAG4pH,EAAE,KAASj7F,CAAC,CAACviC,IAAI,CAAC4T,CAAC,GAAG4pH,EAAI,IAAMj7F,CAAC,CAACviC,IAAI,CAAC4T,CAAC,KAAK2uB,CAAC,CAAC3uB,CAAC,IAC5D2pH,EAAE,GAAG,CAAEh7F,CAAC,CAACviC,IAAI,CAACsT,CAAC,GAAGivB,CAAC,CAACjvB,CAAC,KAAOkqH,EAAE,GAAGj7F,CAAC,CAAC3uB,CAAC,CAAE,IAAK2uB,CAAC,CAACviC,IAAI,CAAC4T,CAAC,GAAG2uB,CAAC,CAAC3uB,CAAC,CAAE,GAAG2uB,CAAC,CAACjvB,CAAG,EACrEg7H,MAAM,GAAG,CAAEA,MAAM;IAClB/rG,CAAC,GAAGA,CAAC,CAACviC,IAAI;EAEX,CAAC,QAASuiC,CAAC,KAAKzsB,CAAC;EAEjB,OAAOw4H,MAAM;AAEd;;AAEA;AACA;AACA,SAAS/B,YAAYA,CAAEz2H,CAAC,EAAEC,CAAC,EAAG;EAE7B,IAAMvC,EAAE,GAAG,IAAI+6H,IAAI,CAAEz4H,CAAC,CAAC5U,CAAC,EAAE4U,CAAC,CAACxC,CAAC,EAAEwC,CAAC,CAAClC,CAAE,CAAC;IACnCF,EAAE,GAAG,IAAI66H,IAAI,CAAEx4H,CAAC,CAAC7U,CAAC,EAAE6U,CAAC,CAACzC,CAAC,EAAEyC,CAAC,CAACnC,CAAE,CAAC;IAC9B46H,EAAE,GAAG14H,CAAC,CAAC9V,IAAI;IACXyuI,EAAE,GAAG14H,CAAC,CAACzT,IAAI;EAEZwT,CAAC,CAAC9V,IAAI,GAAG+V,CAAC;EACVA,CAAC,CAACzT,IAAI,GAAGwT,CAAC;EAEVtC,EAAE,CAACxT,IAAI,GAAGwuI,EAAE;EACZA,EAAE,CAAClsI,IAAI,GAAGkR,EAAE;EAEZE,EAAE,CAAC1T,IAAI,GAAGwT,EAAE;EACZA,EAAE,CAAClR,IAAI,GAAGoR,EAAE;EAEZ+6H,EAAE,CAACzuI,IAAI,GAAG0T,EAAE;EACZA,EAAE,CAACpR,IAAI,GAAGmsI,EAAE;EAEZ,OAAO/6H,EAAE;AAEV;;AAEA;AACA,SAASw3H,UAAUA,CAAEhqI,CAAC,EAAEoS,CAAC,EAAEM,CAAC,EAAEomH,IAAI,EAAG;EAEpC,IAAMz3F,CAAC,GAAG,IAAIgsG,IAAI,CAAErtI,CAAC,EAAEoS,CAAC,EAAEM,CAAE,CAAC;EAE7B,IAAK,CAAEomH,IAAI,EAAG;IAEbz3F,CAAC,CAACjgC,IAAI,GAAGigC,CAAC;IACVA,CAAC,CAACviC,IAAI,GAAGuiC,CAAC;EAEX,CAAC,MAAM;IAENA,CAAC,CAACviC,IAAI,GAAGg6H,IAAI,CAACh6H,IAAI;IAClBuiC,CAAC,CAACjgC,IAAI,GAAG03H,IAAI;IACbA,IAAI,CAACh6H,IAAI,CAACsC,IAAI,GAAGigC,CAAC;IAClBy3F,IAAI,CAACh6H,IAAI,GAAGuiC,CAAC;EAEd;EAEA,OAAOA,CAAC;AAET;AAEA,SAAS4oG,UAAUA,CAAE5oG,CAAC,EAAG;EAExBA,CAAC,CAACviC,IAAI,CAACsC,IAAI,GAAGigC,CAAC,CAACjgC,IAAI;EACpBigC,CAAC,CAACjgC,IAAI,CAACtC,IAAI,GAAGuiC,CAAC,CAACviC,IAAI;EAEpB,IAAKuiC,CAAC,CAAC4pG,KAAK,EAAG5pG,CAAC,CAAC4pG,KAAK,CAACC,KAAK,GAAG7pG,CAAC,CAAC6pG,KAAK;EACtC,IAAK7pG,CAAC,CAAC6pG,KAAK,EAAG7pG,CAAC,CAAC6pG,KAAK,CAACD,KAAK,GAAG5pG,CAAC,CAAC4pG,KAAK;AAEvC;AAEA,SAASoC,IAAIA,CAAErtI,CAAC,EAAEoS,CAAC,EAAEM,CAAC,EAAG;EAExB;EACA,IAAI,CAAC1S,CAAC,GAAGA,CAAC;;EAEV;EACA,IAAI,CAACoS,CAAC,GAAGA,CAAC;EACV,IAAI,CAACM,CAAC,GAAGA,CAAC;;EAEV;EACA,IAAI,CAACtR,IAAI,GAAG,IAAI;EAChB,IAAI,CAACtC,IAAI,GAAG,IAAI;;EAEhB;EACA,IAAI,CAACmoB,CAAC,GAAG,CAAC;;EAEV;EACA,IAAI,CAACgkH,KAAK,GAAG,IAAI;EACjB,IAAI,CAACC,KAAK,GAAG,IAAI;;EAEjB;EACA,IAAI,CAACd,OAAO,GAAG,KAAK;AAErB;AAEA,SAASL,UAAUA,CAAE5mH,IAAI,EAAE64B,KAAK,EAAEiG,GAAG,EAAEinF,GAAG,EAAG;EAE5C,IAAIx3D,GAAG,GAAG,CAAC;EACX,KAAM,IAAI1xE,CAAC,GAAGg8C,KAAK,EAAEhkB,CAAC,GAAGiqB,GAAG,GAAGinF,GAAG,EAAElpI,CAAC,GAAGiiD,GAAG,EAAEjiD,CAAC,IAAIkpI,GAAG,EAAG;IAEvDx3D,GAAG,IAAI,CAAEvuD,IAAI,CAAE6U,CAAC,CAAE,GAAG7U,IAAI,CAAEnjB,CAAC,CAAE,KAAOmjB,IAAI,CAAEnjB,CAAC,GAAG,CAAC,CAAE,GAAGmjB,IAAI,CAAE6U,CAAC,GAAG,CAAC,CAAE,CAAE;IACpEA,CAAC,GAAGh4B,CAAC;EAEN;EAEA,OAAO0xE,GAAG;AAEX;AAAC,IAEK87D,UAAU;EAAA,SAAAA,WAAA;IAAAjrI,eAAA,OAAAirI,UAAA;EAAA;EAAAzqI,YAAA,CAAAyqI,UAAA;IAAAtzI,GAAA;IAAAE,KAAA;IAEf;;IAEA,SAAAiwI,KAAaoD,OAAO,EAAG;MAEtB,IAAMx7H,CAAC,GAAGw7H,OAAO,CAAC1tI,MAAM;MACxB,IAAI6U,CAAC,GAAG,GAAG;MAEX,KAAM,IAAIysB,CAAC,GAAGpvB,CAAC,GAAG,CAAC,EAAE0C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,CAAC,EAAEovB,CAAC,GAAG1sB,CAAC,EAAG,EAAG;QAE7CC,CAAC,IAAI64H,OAAO,CAAEpsG,CAAC,CAAE,CAACjvB,CAAC,GAAGq7H,OAAO,CAAE94H,CAAC,CAAE,CAACjC,CAAC,GAAG+6H,OAAO,CAAE94H,CAAC,CAAE,CAACvC,CAAC,GAAGq7H,OAAO,CAAEpsG,CAAC,CAAE,CAAC3uB,CAAC;MAEvE;MAEA,OAAOkC,CAAC,GAAG,GAAG;IAEf;EAAC;IAAA1a,GAAA;IAAAE,KAAA,EAED,SAAAszI,YAAoB5M,GAAG,EAAG;MAEzB,OAAO0M,UAAU,CAACnD,IAAI,CAAEvJ,GAAI,CAAC,GAAG,CAAC;IAElC;EAAC;IAAA5mI,GAAA;IAAAE,KAAA,EAED,SAAAuzI,iBAAyBF,OAAO,EAAE/E,KAAK,EAAG;MAEzC,IAAM5lF,QAAQ,GAAG,EAAE,CAAC,CAAC;MACrB,IAAMmmF,WAAW,GAAG,EAAE,CAAC,CAAC;MACxB,IAAM2E,KAAK,GAAG,EAAE,CAAC,CAAC;;MAElBC,eAAe,CAAEJ,OAAQ,CAAC;MAC1BK,UAAU,CAAEhrF,QAAQ,EAAE2qF,OAAQ,CAAC;;MAE/B;;MAEA,IAAIM,SAAS,GAAGN,OAAO,CAAC1tI,MAAM;MAE9B2oI,KAAK,CAAC7rI,OAAO,CAAEgxI,eAAgB,CAAC;MAEhC,KAAM,IAAI7tI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0oI,KAAK,CAAC3oI,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEzCipI,WAAW,CAACzpI,IAAI,CAAEuuI,SAAU,CAAC;QAC7BA,SAAS,IAAIrF,KAAK,CAAE1oI,CAAC,CAAE,CAACD,MAAM;QAC9B+tI,UAAU,CAAEhrF,QAAQ,EAAE4lF,KAAK,CAAE1oI,CAAC,CAAG,CAAC;MAEnC;;MAEA;;MAEA,IAAMi0E,SAAS,GAAG80D,MAAM,CAACC,WAAW,CAAElmF,QAAQ,EAAEmmF,WAAY,CAAC;;MAE7D;;MAEA,KAAM,IAAIjpI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGi0E,SAAS,CAACl0E,MAAM,EAAEC,IAAC,IAAI,CAAC,EAAG;QAE/C4tI,KAAK,CAACpuI,IAAI,CAAEy0E,SAAS,CAAC3yE,KAAK,CAAEtB,IAAC,EAAEA,IAAC,GAAG,CAAE,CAAE,CAAC;MAE1C;MAEA,OAAO4tI,KAAK;IAEb;EAAC;EAAA,OAAAJ,UAAA;AAAA;AAAA9zI,OAAA,CAAA8zI,UAAA,GAAAA,UAAA;AAIF,SAASK,eAAeA,CAAEn5G,MAAM,EAAG;EAElC,IAAM5jB,CAAC,GAAG4jB,MAAM,CAAC30B,MAAM;EAEvB,IAAK+Q,CAAC,GAAG,CAAC,IAAI4jB,MAAM,CAAE5jB,CAAC,GAAG,CAAC,CAAE,CAACiJ,MAAM,CAAE2a,MAAM,CAAE,CAAC,CAAG,CAAC,EAAG;IAErDA,MAAM,CAACxzB,GAAG,CAAC,CAAC;EAEb;AAED;AAEA,SAAS4sI,UAAUA,CAAEhrF,QAAQ,EAAE2qF,OAAO,EAAG;EAExC,KAAM,IAAIztI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGytI,OAAO,CAAC1tI,MAAM,EAAEC,CAAC,EAAG,EAAG;IAE3C8iD,QAAQ,CAACtjD,IAAI,CAAEiuI,OAAO,CAAEztI,CAAC,CAAE,CAACoS,CAAE,CAAC;IAC/B0wC,QAAQ,CAACtjD,IAAI,CAAEiuI,OAAO,CAAEztI,CAAC,CAAE,CAAC0S,CAAE,CAAC;EAEhC;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,IAuBMs7H,eAAe,0BAAAC,gBAAA;EAAA3pH,SAAA,CAAA0pH,eAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA1pH,YAAA,CAAAwpH,eAAA;EAEpB,SAAAA,gBAAajmG,MAAM,GAAG,IAAIugG,KAAK,CAAE,CAAE,IAAI9xH,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,CAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,GAAI,CAAC,CAAG,CAAC,EAAEwS,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAmlH,OAAA;IAAA5rI,eAAA,OAAAyrI,eAAA;IAEjKG,OAAA,GAAAD,QAAA,CAAAhyI,IAAA;IAEAiyI,OAAA,CAAKlyI,IAAI,GAAG,iBAAiB;IAE7BkyI,OAAA,CAAKplG,UAAU,GAAG;MACjBhB,MAAM,EAAEA,MAAM;MACd/e,OAAO,EAAEA;IACV,CAAC;IAED+e,MAAM,GAAGjkB,KAAK,CAACC,OAAO,CAAEgkB,MAAO,CAAC,GAAGA,MAAM,GAAG,CAAEA,MAAM,CAAE;IAEtD,IAAM8a,KAAK,GAAAx9B,sBAAA,CAAA8oH,OAAA,CAAO;IAElB,IAAMC,aAAa,GAAG,EAAE;IACxB,IAAMC,OAAO,GAAG,EAAE;IAElB,KAAM,IAAIruI,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGi3B,MAAM,CAAChoC,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;MAEjD,IAAMgpC,KAAK,GAAGjB,MAAM,CAAE/nC,CAAC,CAAE;MACzBsuI,QAAQ,CAAEtlG,KAAM,CAAC;IAElB;;IAEA;;IAEAmlG,OAAA,CAAK/xF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE2zF,aAAa,EAAE,CAAE,CAAE,CAAC;IAC/ED,OAAA,CAAK/xF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4zF,OAAO,EAAE,CAAE,CAAE,CAAC;IAEnEF,OAAA,CAAK3vF,oBAAoB,CAAC,CAAC;;IAE3B;;IAEA,SAAS8vF,QAAQA,CAAEtlG,KAAK,EAAG;MAE1B,IAAMulG,WAAW,GAAG,EAAE;;MAEtB;;MAEA,IAAMC,aAAa,GAAGxlH,OAAO,CAACwlH,aAAa,KAAK/vI,SAAS,GAAGuqB,OAAO,CAACwlH,aAAa,GAAG,EAAE;MACtF,IAAMC,KAAK,GAAGzlH,OAAO,CAACylH,KAAK,KAAKhwI,SAAS,GAAGuqB,OAAO,CAACylH,KAAK,GAAG,CAAC;MAC7D,IAAMtlH,KAAK,GAAGH,OAAO,CAACG,KAAK,KAAK1qB,SAAS,GAAGuqB,OAAO,CAACG,KAAK,GAAG,CAAC;MAE7D,IAAIulH,YAAY,GAAG1lH,OAAO,CAAC0lH,YAAY,KAAKjwI,SAAS,GAAGuqB,OAAO,CAAC0lH,YAAY,GAAG,IAAI;MACnF,IAAIC,cAAc,GAAG3lH,OAAO,CAAC2lH,cAAc,KAAKlwI,SAAS,GAAGuqB,OAAO,CAAC2lH,cAAc,GAAG,GAAG;MACxF,IAAIC,SAAS,GAAG5lH,OAAO,CAAC4lH,SAAS,KAAKnwI,SAAS,GAAGuqB,OAAO,CAAC4lH,SAAS,GAAGD,cAAc,GAAG,GAAG;MAC1F,IAAIE,WAAW,GAAG7lH,OAAO,CAAC6lH,WAAW,KAAKpwI,SAAS,GAAGuqB,OAAO,CAAC6lH,WAAW,GAAG,CAAC;MAC7E,IAAIC,aAAa,GAAG9lH,OAAO,CAAC8lH,aAAa,KAAKrwI,SAAS,GAAGuqB,OAAO,CAAC8lH,aAAa,GAAG,CAAC;MAEnF,IAAMC,WAAW,GAAG/lH,OAAO,CAAC+lH,WAAW;MAEvC,IAAMC,KAAK,GAAGhmH,OAAO,CAACimH,WAAW,KAAKxwI,SAAS,GAAGuqB,OAAO,CAACimH,WAAW,GAAGC,gBAAgB;;MAExF;;MAEA,IAAIC,UAAU;QAAEC,aAAa,GAAG,KAAK;MACrC,IAAIC,UAAU,EAAEC,QAAQ,EAAEt8G,MAAM,EAAEu8G,SAAS;MAE3C,IAAKR,WAAW,EAAG;QAElBI,UAAU,GAAGJ,WAAW,CAACvW,eAAe,CAAEiW,KAAM,CAAC;QAEjDW,aAAa,GAAG,IAAI;QACpBV,YAAY,GAAG,KAAK,CAAC,CAAC;;QAEtB;;QAEA;;QAEAW,UAAU,GAAGN,WAAW,CAACnV,mBAAmB,CAAE6U,KAAK,EAAE,KAAM,CAAC;;QAE5D;;QAEAa,QAAQ,GAAG,IAAI3+G,OAAO,CAAC,CAAC;QACxBqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;QACtB4+G,SAAS,GAAG,IAAI5+G,OAAO,CAAC,CAAC;MAE1B;;MAEA;;MAEA,IAAK,CAAE+9G,YAAY,EAAG;QAErBI,aAAa,GAAG,CAAC;QACjBH,cAAc,GAAG,CAAC;QAClBC,SAAS,GAAG,CAAC;QACbC,WAAW,GAAG,CAAC;MAEhB;;MAEA;;MAEA,IAAMW,WAAW,GAAGxmG,KAAK,CAAC6/F,aAAa,CAAE2F,aAAc,CAAC;MAExD,IAAI1rF,QAAQ,GAAG0sF,WAAW,CAACxmG,KAAK;MAChC,IAAM0/F,KAAK,GAAG8G,WAAW,CAAC9G,KAAK;MAE/B,IAAMznI,OAAO,GAAG,CAAEusI,UAAU,CAACE,WAAW,CAAE5qF,QAAS,CAAC;MAEpD,IAAK7hD,OAAO,EAAG;QAEd6hD,QAAQ,GAAGA,QAAQ,CAAC7hD,OAAO,CAAC,CAAC;;QAE7B;;QAEA,KAAM,IAAIwc,CAAC,GAAG,CAAC,EAAEgyH,EAAE,GAAG/G,KAAK,CAAC3oI,MAAM,EAAE0d,CAAC,GAAGgyH,EAAE,EAAEhyH,CAAC,EAAG,EAAG;UAElD,IAAMiyH,KAAK,GAAGhH,KAAK,CAAEjrH,CAAC,CAAE;UAExB,IAAK+vH,UAAU,CAACE,WAAW,CAAEgC,KAAM,CAAC,EAAG;YAEtChH,KAAK,CAAEjrH,CAAC,CAAE,GAAGiyH,KAAK,CAACzuI,OAAO,CAAC,CAAC;UAE7B;QAED;MAED;MAGA,IAAM2sI,KAAK,GAAGJ,UAAU,CAACG,gBAAgB,CAAE7qF,QAAQ,EAAE4lF,KAAM,CAAC;;MAE5D;;MAEA,IAAM+E,OAAO,GAAG3qF,QAAQ,CAAC,CAAC;;MAE1B,KAAM,IAAIrlC,EAAC,GAAG,CAAC,EAAEgyH,GAAE,GAAG/G,KAAK,CAAC3oI,MAAM,EAAE0d,EAAC,GAAGgyH,GAAE,EAAEhyH,EAAC,EAAG,EAAG;QAElD,IAAMiyH,MAAK,GAAGhH,KAAK,CAAEjrH,EAAC,CAAE;QAExBqlC,QAAQ,GAAGA,QAAQ,CAACjhC,MAAM,CAAE6tH,MAAM,CAAC;MAEpC;MAGA,SAASC,QAAQA,CAAEC,EAAE,EAAE5V,GAAG,EAAEplG,IAAI,EAAG;QAElC,IAAK,CAAEolG,GAAG,EAAGrkH,OAAO,CAAChY,KAAK,CAAE,2CAA4C,CAAC;QAEzE,OAAOiyI,EAAE,CAAC14H,KAAK,CAAC,CAAC,CAACM,eAAe,CAAEwiH,GAAG,EAAEplG,IAAK,CAAC;MAE/C;MAEA,IAAMi7G,IAAI,GAAG/sF,QAAQ,CAAC/iD,MAAM;QAAE+vI,IAAI,GAAGlC,KAAK,CAAC7tI,MAAM;;MAGjD;;MAGA,SAASgwI,WAAWA,CAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAG;QAE5C;QACA;QACA;QACA;QACA;QACA;;QAEA,IAAIC,SAAS,EAAEC,SAAS,EAAEC,SAAS,CAAC,CAAC;;QAErC;QACA;;QAEA,IAAMC,QAAQ,GAAGN,IAAI,CAAC59H,CAAC,GAAG69H,MAAM,CAAC79H,CAAC;UACjCm+H,QAAQ,GAAGP,IAAI,CAACt9H,CAAC,GAAGu9H,MAAM,CAACv9H,CAAC;QAC7B,IAAM89H,QAAQ,GAAGN,MAAM,CAAC99H,CAAC,GAAG49H,IAAI,CAAC59H,CAAC;UACjCq+H,QAAQ,GAAGP,MAAM,CAACx9H,CAAC,GAAGs9H,IAAI,CAACt9H,CAAC;QAE7B,IAAMg+H,YAAY,GAAKJ,QAAQ,GAAGA,QAAQ,GAAGC,QAAQ,GAAGA,QAAU;;QAElE;QACA,IAAMI,UAAU,GAAKL,QAAQ,GAAGG,QAAQ,GAAGF,QAAQ,GAAGC,QAAU;QAEhE,IAAKt/H,IAAI,CAACgC,GAAG,CAAEy9H,UAAW,CAAC,GAAGltI,MAAM,CAAC+pB,OAAO,EAAG;UAE9C;;UAEA;;UAEA,IAAMojH,UAAU,GAAG1/H,IAAI,CAAC2H,IAAI,CAAE63H,YAAa,CAAC;UAC5C,IAAMG,UAAU,GAAG3/H,IAAI,CAAC2H,IAAI,CAAE23H,QAAQ,GAAGA,QAAQ,GAAGC,QAAQ,GAAGA,QAAS,CAAC;;UAEzE;;UAEA,IAAMK,aAAa,GAAKb,MAAM,CAAC79H,CAAC,GAAGm+H,QAAQ,GAAGK,UAAY;UAC1D,IAAMG,aAAa,GAAKd,MAAM,CAACv9H,CAAC,GAAG49H,QAAQ,GAAGM,UAAY;UAE1D,IAAMI,aAAa,GAAKd,MAAM,CAAC99H,CAAC,GAAGq+H,QAAQ,GAAGI,UAAY;UAC1D,IAAMI,aAAa,GAAKf,MAAM,CAACx9H,CAAC,GAAG89H,QAAQ,GAAGK,UAAY;;UAE1D;;UAEA,IAAMK,EAAE,GAAG,CAAE,CAAEF,aAAa,GAAGF,aAAa,IAAKL,QAAQ,GACvD,CAAEQ,aAAa,GAAGF,aAAa,IAAKP,QAAQ,KAC3CF,QAAQ,GAAGG,QAAQ,GAAGF,QAAQ,GAAGC,QAAQ,CAAE;;UAE9C;;UAEAL,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGY,EAAE,GAAGlB,IAAI,CAAC59H,CAAG;UACtDg+H,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGW,EAAE,GAAGlB,IAAI,CAACt9H,CAAG;;UAEtD;UACA;UACA,IAAMy+H,aAAa,GAAKhB,SAAS,GAAGA,SAAS,GAAGC,SAAS,GAAGA,SAAW;UACvE,IAAKe,aAAa,IAAI,CAAC,EAAG;YAEzB,OAAO,IAAI36H,OAAO,CAAE25H,SAAS,EAAEC,SAAU,CAAC;UAE3C,CAAC,MAAM;YAENC,SAAS,GAAGn/H,IAAI,CAAC2H,IAAI,CAAEs4H,aAAa,GAAG,CAAE,CAAC;UAE3C;QAED,CAAC,MAAM;UAEN;;UAEA,IAAIC,YAAY,GAAG,KAAK,CAAC,CAAC;;UAE1B,IAAKd,QAAQ,GAAG7sI,MAAM,CAAC+pB,OAAO,EAAG;YAEhC,IAAKgjH,QAAQ,GAAG/sI,MAAM,CAAC+pB,OAAO,EAAG;cAEhC4jH,YAAY,GAAG,IAAI;YAEpB;UAED,CAAC,MAAM;YAEN,IAAKd,QAAQ,GAAG,CAAE7sI,MAAM,CAAC+pB,OAAO,EAAG;cAElC,IAAKgjH,QAAQ,GAAG,CAAE/sI,MAAM,CAAC+pB,OAAO,EAAG;gBAElC4jH,YAAY,GAAG,IAAI;cAEpB;YAED,CAAC,MAAM;cAEN,IAAKlgI,IAAI,CAAC8qB,IAAI,CAAEu0G,QAAS,CAAC,KAAKr/H,IAAI,CAAC8qB,IAAI,CAAEy0G,QAAS,CAAC,EAAG;gBAEtDW,YAAY,GAAG,IAAI;cAEpB;YAED;UAED;UAEA,IAAKA,YAAY,EAAG;YAEnB;YACAjB,SAAS,GAAG,CAAEI,QAAQ;YACtBH,SAAS,GAAGE,QAAQ;YACpBD,SAAS,GAAGn/H,IAAI,CAAC2H,IAAI,CAAE63H,YAAa,CAAC;UAEtC,CAAC,MAAM;YAEN;YACAP,SAAS,GAAGG,QAAQ;YACpBF,SAAS,GAAGG,QAAQ;YACpBF,SAAS,GAAGn/H,IAAI,CAAC2H,IAAI,CAAE63H,YAAY,GAAG,CAAE,CAAC;UAE1C;QAED;QAEA,OAAO,IAAIl6H,OAAO,CAAE25H,SAAS,GAAGE,SAAS,EAAED,SAAS,GAAGC,SAAU,CAAC;MAEnE;MAGA,IAAMgB,gBAAgB,GAAG,EAAE;MAE3B,KAAM,IAAIrxI,IAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG2hH,OAAO,CAAC1tI,MAAM,EAAEi4B,CAAC,GAAGlM,EAAE,GAAG,CAAC,EAAEysE,CAAC,GAAGv4F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8rB,EAAE,EAAE9rB,IAAC,EAAG,EAAEg4B,CAAC,EAAG,EAAEugE,CAAC,EAAG,EAAG;QAEvF,IAAKvgE,CAAC,KAAKlM,EAAE,EAAGkM,CAAC,GAAG,CAAC;QACrB,IAAKugE,CAAC,KAAKzsE,EAAE,EAAGysE,CAAC,GAAG,CAAC;;QAErB;QACA;;QAEA84C,gBAAgB,CAAErxI,IAAC,CAAE,GAAG+vI,WAAW,CAAEtC,OAAO,CAAEztI,IAAC,CAAE,EAAEytI,OAAO,CAAEz1G,CAAC,CAAE,EAAEy1G,OAAO,CAAEl1C,CAAC,CAAG,CAAC;MAEhF;MAEA,IAAM+4C,cAAc,GAAG,EAAE;MACzB,IAAIC,gBAAgB;QAAEC,iBAAiB,GAAGH,gBAAgB,CAACxvH,MAAM,CAAC,CAAC;MAEnE,KAAM,IAAIpE,GAAC,GAAG,CAAC,EAAEgyH,IAAE,GAAG/G,KAAK,CAAC3oI,MAAM,EAAE0d,GAAC,GAAGgyH,IAAE,EAAEhyH,GAAC,EAAG,EAAG;QAElD,IAAMiyH,OAAK,GAAGhH,KAAK,CAAEjrH,GAAC,CAAE;QAExB8zH,gBAAgB,GAAG,EAAE;QAErB,KAAM,IAAIvxI,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAG4jH,OAAK,CAAC3vI,MAAM,EAAEi4B,GAAC,GAAGlM,KAAE,GAAG,CAAC,EAAEysE,EAAC,GAAGv4F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAEg4B,GAAC,EAAG,EAAEugE,EAAC,EAAG,EAAG;UAErF,IAAKvgE,GAAC,KAAKlM,KAAE,EAAGkM,GAAC,GAAG,CAAC;UACrB,IAAKugE,EAAC,KAAKzsE,KAAE,EAAGysE,EAAC,GAAG,CAAC;;UAErB;UACAg5C,gBAAgB,CAAEvxI,IAAC,CAAE,GAAG+vI,WAAW,CAAEL,OAAK,CAAE1vI,IAAC,CAAE,EAAE0vI,OAAK,CAAE13G,GAAC,CAAE,EAAE03G,OAAK,CAAEn3C,EAAC,CAAG,CAAC;QAE1E;QAEA+4C,cAAc,CAAC9xI,IAAI,CAAE+xI,gBAAiB,CAAC;QACvCC,iBAAiB,GAAGA,iBAAiB,CAAC3vH,MAAM,CAAE0vH,gBAAiB,CAAC;MAEjE;;MAGA;;MAEA,KAAM,IAAI18H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi6H,aAAa,EAAEj6H,CAAC,EAAG,EAAG;QAE1C;;QAEA,IAAMjC,CAAC,GAAGiC,CAAC,GAAGi6H,aAAa;QAC3B,IAAM7nH,CAAC,GAAG0nH,cAAc,GAAGz9H,IAAI,CAAC8D,GAAG,CAAEpC,CAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC;QACtD,IAAMsgI,GAAE,GAAG7C,SAAS,GAAG19H,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC,GAAG09H,WAAW;;QAEhE;;QAEA,KAAM,IAAI7uI,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAG2hH,OAAO,CAAC1tI,MAAM,EAAEC,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAG;UAEpD,IAAM0xI,IAAI,GAAG/B,QAAQ,CAAElC,OAAO,CAAEztI,IAAC,CAAE,EAAEqxI,gBAAgB,CAAErxI,IAAC,CAAE,EAAEyxI,GAAG,CAAC;UAEhEr6H,CAAC,CAAEs6H,IAAI,CAACt/H,CAAC,EAAEs/H,IAAI,CAACh/H,CAAC,EAAE,CAAEuU,CAAE,CAAC;QAEzB;;QAEA;;QAEA,KAAM,IAAIxJ,GAAC,GAAG,CAAC,EAAEgyH,IAAE,GAAG/G,KAAK,CAAC3oI,MAAM,EAAE0d,GAAC,GAAGgyH,IAAE,EAAEhyH,GAAC,EAAG,EAAG;UAElD,IAAMiyH,OAAK,GAAGhH,KAAK,CAAEjrH,GAAC,CAAE;UACxB8zH,gBAAgB,GAAGD,cAAc,CAAE7zH,GAAC,CAAE;UAEtC,KAAM,IAAIzd,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAG4jH,OAAK,CAAC3vI,MAAM,EAAEC,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAG;YAElD,IAAM0xI,KAAI,GAAG/B,QAAQ,CAAED,OAAK,CAAE1vI,IAAC,CAAE,EAAEuxI,gBAAgB,CAAEvxI,IAAC,CAAE,EAAEyxI,GAAG,CAAC;YAE9Dr6H,CAAC,CAAEs6H,KAAI,CAACt/H,CAAC,EAAEs/H,KAAI,CAACh/H,CAAC,EAAE,CAAEuU,CAAE,CAAC;UAEzB;QAED;MAED;MAEA,IAAMwqH,EAAE,GAAG7C,SAAS,GAAGC,WAAW;;MAElC;;MAEA,KAAM,IAAI7uI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG6vI,IAAI,EAAE7vI,IAAC,EAAG,EAAG;QAEjC,IAAM0xI,MAAI,GAAGhD,YAAY,GAAGiB,QAAQ,CAAE7sF,QAAQ,CAAE9iD,IAAC,CAAE,EAAEwxI,iBAAiB,CAAExxI,IAAC,CAAE,EAAEyxI,EAAG,CAAC,GAAG3uF,QAAQ,CAAE9iD,IAAC,CAAE;QAEjG,IAAK,CAAEovI,aAAa,EAAG;UAEtBh4H,CAAC,CAAEs6H,MAAI,CAACt/H,CAAC,EAAEs/H,MAAI,CAACh/H,CAAC,EAAE,CAAE,CAAC;QAEvB,CAAC,MAAM;UAEN;;UAEAsgB,MAAM,CAAC7b,IAAI,CAAEk4H,UAAU,CAACjyF,OAAO,CAAE,CAAC,CAAG,CAAC,CAACvlC,cAAc,CAAE65H,MAAI,CAACt/H,CAAE,CAAC;UAC/Dk9H,QAAQ,CAACn4H,IAAI,CAAEk4H,UAAU,CAACtV,SAAS,CAAE,CAAC,CAAG,CAAC,CAACliH,cAAc,CAAE65H,MAAI,CAACh/H,CAAE,CAAC;UAEnE68H,SAAS,CAACp4H,IAAI,CAAEg4H,UAAU,CAAE,CAAC,CAAG,CAAC,CAAC93H,GAAG,CAAE2b,MAAO,CAAC,CAAC3b,GAAG,CAAEi4H,QAAS,CAAC;UAE/Dl4H,CAAC,CAAEm4H,SAAS,CAACn9H,CAAC,EAAEm9H,SAAS,CAAC78H,CAAC,EAAE68H,SAAS,CAACtoH,CAAE,CAAC;QAE3C;MAED;;MAEA;MACA;;MAEA,KAAM,IAAIpT,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI46H,KAAK,EAAE56H,CAAC,EAAG,EAAG;QAEnC,KAAM,IAAI7T,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG6vI,IAAI,EAAE7vI,IAAC,EAAG,EAAG;UAEjC,IAAM0xI,MAAI,GAAGhD,YAAY,GAAGiB,QAAQ,CAAE7sF,QAAQ,CAAE9iD,IAAC,CAAE,EAAEwxI,iBAAiB,CAAExxI,IAAC,CAAE,EAAEyxI,EAAG,CAAC,GAAG3uF,QAAQ,CAAE9iD,IAAC,CAAE;UAEjG,IAAK,CAAEovI,aAAa,EAAG;YAEtBh4H,CAAC,CAAEs6H,MAAI,CAACt/H,CAAC,EAAEs/H,MAAI,CAACh/H,CAAC,EAAEyW,KAAK,GAAGslH,KAAK,GAAG56H,CAAE,CAAC;UAEvC,CAAC,MAAM;YAEN;;YAEAmf,MAAM,CAAC7b,IAAI,CAAEk4H,UAAU,CAACjyF,OAAO,CAAEvpC,CAAC,CAAG,CAAC,CAACgE,cAAc,CAAE65H,MAAI,CAACt/H,CAAE,CAAC;YAC/Dk9H,QAAQ,CAACn4H,IAAI,CAAEk4H,UAAU,CAACtV,SAAS,CAAElmH,CAAC,CAAG,CAAC,CAACgE,cAAc,CAAE65H,MAAI,CAACh/H,CAAE,CAAC;YAEnE68H,SAAS,CAACp4H,IAAI,CAAEg4H,UAAU,CAAEt7H,CAAC,CAAG,CAAC,CAACwD,GAAG,CAAE2b,MAAO,CAAC,CAAC3b,GAAG,CAAEi4H,QAAS,CAAC;YAE/Dl4H,CAAC,CAAEm4H,SAAS,CAACn9H,CAAC,EAAEm9H,SAAS,CAAC78H,CAAC,EAAE68H,SAAS,CAACtoH,CAAE,CAAC;UAE3C;QAED;MAED;;MAGA;;MAEA;MACA,KAAM,IAAIpS,GAAC,GAAGi6H,aAAa,GAAG,CAAC,EAAEj6H,GAAC,IAAI,CAAC,EAAEA,GAAC,EAAG,EAAG;QAE/C,IAAMjC,EAAC,GAAGiC,GAAC,GAAGi6H,aAAa;QAC3B,IAAM7nH,GAAC,GAAG0nH,cAAc,GAAGz9H,IAAI,CAAC8D,GAAG,CAAEpC,EAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC;QACtD,IAAMsgI,IAAE,GAAG7C,SAAS,GAAG19H,IAAI,CAAC+D,GAAG,CAAErC,EAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAE,CAAC,GAAG09H,WAAW;;QAEhE;;QAEA,KAAM,IAAI7uI,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAG2hH,OAAO,CAAC1tI,MAAM,EAAEC,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAG;UAEpD,IAAM0xI,MAAI,GAAG/B,QAAQ,CAAElC,OAAO,CAAEztI,IAAC,CAAE,EAAEqxI,gBAAgB,CAAErxI,IAAC,CAAE,EAAEyxI,IAAG,CAAC;UAChEr6H,CAAC,CAAEs6H,MAAI,CAACt/H,CAAC,EAAEs/H,MAAI,CAACh/H,CAAC,EAAEyW,KAAK,GAAGlC,GAAE,CAAC;QAE/B;;QAEA;;QAEA,KAAM,IAAIxJ,GAAC,GAAG,CAAC,EAAEgyH,IAAE,GAAG/G,KAAK,CAAC3oI,MAAM,EAAE0d,GAAC,GAAGgyH,IAAE,EAAEhyH,GAAC,EAAG,EAAG;UAElD,IAAMiyH,OAAK,GAAGhH,KAAK,CAAEjrH,GAAC,CAAE;UACxB8zH,gBAAgB,GAAGD,cAAc,CAAE7zH,GAAC,CAAE;UAEtC,KAAM,IAAIzd,IAAC,GAAG,CAAC,EAAE8rB,KAAE,GAAG4jH,OAAK,CAAC3vI,MAAM,EAAEC,IAAC,GAAG8rB,KAAE,EAAE9rB,IAAC,EAAG,EAAG;YAElD,IAAM0xI,MAAI,GAAG/B,QAAQ,CAAED,OAAK,CAAE1vI,IAAC,CAAE,EAAEuxI,gBAAgB,CAAEvxI,IAAC,CAAE,EAAEyxI,IAAG,CAAC;YAE9D,IAAK,CAAErC,aAAa,EAAG;cAEtBh4H,CAAC,CAAEs6H,MAAI,CAACt/H,CAAC,EAAEs/H,MAAI,CAACh/H,CAAC,EAAEyW,KAAK,GAAGlC,GAAE,CAAC;YAE/B,CAAC,MAAM;cAEN7P,CAAC,CAAEs6H,MAAI,CAACt/H,CAAC,EAAEs/H,MAAI,CAACh/H,CAAC,GAAGy8H,UAAU,CAAEV,KAAK,GAAG,CAAC,CAAE,CAAC/7H,CAAC,EAAEy8H,UAAU,CAAEV,KAAK,GAAG,CAAC,CAAE,CAACr8H,CAAC,GAAG6U,GAAE,CAAC;YAE/E;UAED;QAED;MAED;;MAEA;;MAEA;;MAEA0qH,aAAa,CAAC,CAAC;;MAEf;;MAEAC,cAAc,CAAC,CAAC;;MAGhB;;MAEA,SAASD,aAAaA,CAAA,EAAG;QAExB,IAAM31F,KAAK,GAAGoyF,aAAa,CAACruI,MAAM,GAAG,CAAC;QAEtC,IAAK2uI,YAAY,EAAG;UAEnB,IAAI7kB,KAAK,GAAG,CAAC,CAAC,CAAC;UACf,IAAI5vG,MAAM,GAAG41H,IAAI,GAAGhmB,KAAK;;UAEzB;;UAEA,KAAM,IAAI7pH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8vI,IAAI,EAAE9vI,IAAC,EAAG,EAAG;YAEjC,IAAMoiD,IAAI,GAAGwrF,KAAK,CAAE5tI,IAAC,CAAE;YACvB6xI,EAAE,CAAEzvF,IAAI,CAAE,CAAC,CAAE,GAAGnoC,MAAM,EAAEmoC,IAAI,CAAE,CAAC,CAAE,GAAGnoC,MAAM,EAAEmoC,IAAI,CAAE,CAAC,CAAE,GAAGnoC,MAAO,CAAC;UAEjE;UAEA4vG,KAAK,GAAG4kB,KAAK,GAAGK,aAAa,GAAG,CAAC;UACjC70H,MAAM,GAAG41H,IAAI,GAAGhmB,KAAK;;UAErB;;UAEA,KAAM,IAAI7pH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8vI,IAAI,EAAE9vI,IAAC,EAAG,EAAG;YAEjC,IAAMoiD,KAAI,GAAGwrF,KAAK,CAAE5tI,IAAC,CAAE;YACvB6xI,EAAE,CAAEzvF,KAAI,CAAE,CAAC,CAAE,GAAGnoC,MAAM,EAAEmoC,KAAI,CAAE,CAAC,CAAE,GAAGnoC,MAAM,EAAEmoC,KAAI,CAAE,CAAC,CAAE,GAAGnoC,MAAO,CAAC;UAEjE;QAED,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAIja,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8vI,IAAI,EAAE9vI,IAAC,EAAG,EAAG;YAEjC,IAAMoiD,MAAI,GAAGwrF,KAAK,CAAE5tI,IAAC,CAAE;YACvB6xI,EAAE,CAAEzvF,MAAI,CAAE,CAAC,CAAE,EAAEA,MAAI,CAAE,CAAC,CAAE,EAAEA,MAAI,CAAE,CAAC,CAAG,CAAC;UAEtC;;UAEA;;UAEA,KAAM,IAAIpiD,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8vI,IAAI,EAAE9vI,IAAC,EAAG,EAAG;YAEjC,IAAMoiD,MAAI,GAAGwrF,KAAK,CAAE5tI,IAAC,CAAE;YACvB6xI,EAAE,CAAEzvF,MAAI,CAAE,CAAC,CAAE,GAAGytF,IAAI,GAAGpB,KAAK,EAAErsF,MAAI,CAAE,CAAC,CAAE,GAAGytF,IAAI,GAAGpB,KAAK,EAAErsF,MAAI,CAAE,CAAC,CAAE,GAAGytF,IAAI,GAAGpB,KAAM,CAAC;UAEnF;QAED;QAEA5rF,KAAK,CAACtG,QAAQ,CAAEP,KAAK,EAAEoyF,aAAa,CAACruI,MAAM,GAAG,CAAC,GAAGi8C,KAAK,EAAE,CAAE,CAAC;MAE7D;;MAEA;;MAEA,SAAS41F,cAAcA,CAAA,EAAG;QAEzB,IAAM51F,KAAK,GAAGoyF,aAAa,CAACruI,MAAM,GAAG,CAAC;QACtC,IAAI+xI,WAAW,GAAG,CAAC;QACnBC,SAAS,CAAEtE,OAAO,EAAEqE,WAAY,CAAC;QACjCA,WAAW,IAAIrE,OAAO,CAAC1tI,MAAM;QAE7B,KAAM,IAAI0d,GAAC,GAAG,CAAC,EAAEgyH,IAAE,GAAG/G,KAAK,CAAC3oI,MAAM,EAAE0d,GAAC,GAAGgyH,IAAE,EAAEhyH,GAAC,EAAG,EAAG;UAElD,IAAMiyH,OAAK,GAAGhH,KAAK,CAAEjrH,GAAC,CAAE;UACxBs0H,SAAS,CAAErC,OAAK,EAAEoC,WAAY,CAAC;;UAE/B;UACAA,WAAW,IAAIpC,OAAK,CAAC3vI,MAAM;QAE5B;QAGA8iD,KAAK,CAACtG,QAAQ,CAAEP,KAAK,EAAEoyF,aAAa,CAACruI,MAAM,GAAG,CAAC,GAAGi8C,KAAK,EAAE,CAAE,CAAC;MAG7D;MAEA,SAAS+1F,SAASA,CAAEtE,OAAO,EAAEqE,WAAW,EAAG;QAE1C,IAAI9xI,CAAC,GAAGytI,OAAO,CAAC1tI,MAAM;QAEtB,OAAQ,EAAGC,CAAC,IAAI,CAAC,EAAG;UAEnB,IAAMg4B,GAAC,GAAGh4B,CAAC;UACX,IAAIu4F,GAAC,GAAGv4F,CAAC,GAAG,CAAC;UACb,IAAKu4F,GAAC,GAAG,CAAC,EAAGA,GAAC,GAAGk1C,OAAO,CAAC1tI,MAAM,GAAG,CAAC;;UAEnC;;UAEA,KAAM,IAAI8T,GAAC,GAAG,CAAC,EAAEm+H,EAAE,GAAKvD,KAAK,GAAGK,aAAa,GAAG,CAAG,EAAEj7H,GAAC,GAAGm+H,EAAE,EAAEn+H,GAAC,EAAG,EAAG;YAEnE,IAAMo+H,KAAK,GAAGpC,IAAI,GAAGh8H,GAAC;YACtB,IAAMq+H,KAAK,GAAGrC,IAAI,IAAKh8H,GAAC,GAAG,CAAC,CAAE;YAE9B,IAAMe,CAAC,GAAGk9H,WAAW,GAAG95G,GAAC,GAAGi6G,KAAK;cAChCp9H,GAAC,GAAGi9H,WAAW,GAAGv5C,GAAC,GAAG05C,KAAK;cAC3Bn9H,CAAC,GAAGg9H,WAAW,GAAGv5C,GAAC,GAAG25C,KAAK;cAC3B50H,CAAC,GAAGw0H,WAAW,GAAG95G,GAAC,GAAGk6G,KAAK;YAE5BC,EAAE,CAAEv9H,CAAC,EAAEC,GAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;UAEjB;QAED;MAED;MAEA,SAASlG,CAACA,CAAEhF,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;QAErBsnH,WAAW,CAAC/uI,IAAI,CAAE4S,CAAE,CAAC;QACrBm8H,WAAW,CAAC/uI,IAAI,CAAEkT,CAAE,CAAC;QACrB67H,WAAW,CAAC/uI,IAAI,CAAEynB,CAAE,CAAC;MAEtB;MAGA,SAAS4qH,EAAEA,CAAEj9H,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;QAEtBs9H,SAAS,CAAEx9H,CAAE,CAAC;QACdw9H,SAAS,CAAEv9H,CAAE,CAAC;QACdu9H,SAAS,CAAEt9H,CAAE,CAAC;QAEd,IAAMu9H,SAAS,GAAGjE,aAAa,CAACruI,MAAM,GAAG,CAAC;QAC1C,IAAMs9C,GAAG,GAAG2xF,KAAK,CAACsD,aAAa,CAAEzvF,KAAK,EAAEurF,aAAa,EAAEiE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAE,CAAC;QAEpGE,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBk1F,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBk1F,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;MAElB;MAEA,SAAS80F,EAAEA,CAAEv9H,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEwI,CAAC,EAAG;QAEzB80H,SAAS,CAAEx9H,CAAE,CAAC;QACdw9H,SAAS,CAAEv9H,CAAE,CAAC;QACdu9H,SAAS,CAAE90H,CAAE,CAAC;QAEd80H,SAAS,CAAEv9H,CAAE,CAAC;QACdu9H,SAAS,CAAEt9H,CAAE,CAAC;QACds9H,SAAS,CAAE90H,CAAE,CAAC;QAGd,IAAM+0H,SAAS,GAAGjE,aAAa,CAACruI,MAAM,GAAG,CAAC;QAC1C,IAAMs9C,GAAG,GAAG2xF,KAAK,CAACwD,kBAAkB,CAAE3vF,KAAK,EAAEurF,aAAa,EAAEiE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAE,CAAC;QAExHE,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBk1F,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBk1F,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;QAEjBk1F,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBk1F,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;QACjBk1F,KAAK,CAAEl1F,GAAG,CAAE,CAAC,CAAG,CAAC;MAElB;MAEA,SAAS+0F,SAASA,CAAE3hI,KAAK,EAAG;QAE3B29H,aAAa,CAAC5uI,IAAI,CAAE+uI,WAAW,CAAE99H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAG,CAAC;QAClD29H,aAAa,CAAC5uI,IAAI,CAAE+uI,WAAW,CAAE99H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAG,CAAC;QAClD29H,aAAa,CAAC5uI,IAAI,CAAE+uI,WAAW,CAAE99H,KAAK,GAAG,CAAC,GAAG,CAAC,CAAG,CAAC;MAEnD;MAGA,SAAS8hI,KAAKA,CAAEE,OAAO,EAAG;QAEzBpE,OAAO,CAAC7uI,IAAI,CAAEizI,OAAO,CAACrgI,CAAE,CAAC;QACzBi8H,OAAO,CAAC7uI,IAAI,CAAEizI,OAAO,CAAC//H,CAAE,CAAC;MAE1B;IAED;IAAC,OAAAy7H,OAAA;EAEF;EAACprI,YAAA,CAAAirI,eAAA;IAAA9zI,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAm3F,eAAA,CAAAn0I,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAm3F,eAAA,CAAAn0I,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B,IAAM6rC,MAAM,GAAG,IAAI,CAACgB,UAAU,CAAChB,MAAM;MACrC,IAAM/e,OAAO,GAAG,IAAI,CAAC+f,UAAU,CAAC/f,OAAO;MAEvC,OAAO0pH,QAAQ,CAAE3qG,MAAM,EAAE/e,OAAO,EAAE7F,IAAK,CAAC;IAEzC;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAE4kB,MAAM,EAAG;MAE/B,IAAM4qG,cAAc,GAAG,EAAE;MAEzB,KAAM,IAAI36G,CAAC,GAAG,CAAC,EAAEglB,EAAE,GAAG75B,IAAI,CAAC4kB,MAAM,CAAChoC,MAAM,EAAEi4B,CAAC,GAAGglB,EAAE,EAAEhlB,CAAC,EAAG,EAAG;QAExD,IAAMgR,KAAK,GAAGjB,MAAM,CAAE5kB,IAAI,CAAC4kB,MAAM,CAAE/P,CAAC,CAAE,CAAE;QAExC26G,cAAc,CAACnzI,IAAI,CAAEwpC,KAAM,CAAC;MAE7B;MAEA,IAAM+lG,WAAW,GAAG5rH,IAAI,CAAC6F,OAAO,CAAC+lH,WAAW;MAE5C,IAAKA,WAAW,KAAKtwI,SAAS,EAAG;QAEhC0kB,IAAI,CAAC6F,OAAO,CAAC+lH,WAAW,GAAG,IAAInP,MAAM,CAAEmP,WAAW,CAAC9yI,IAAI,CAAE,CAAC,CAAC,CAAC8nD,QAAQ,CAAEgrF,WAAY,CAAC;MAEpF;MAEA,OAAO,IAAIf,eAAe,CAAE2E,cAAc,EAAExvH,IAAI,CAAC6F,OAAQ,CAAC;IAE3D;EAAC;EAAA,OAAAglH,eAAA;AAAA,EAprB4B1yF,cAAc;AAAA5hD,OAAA,CAAAs0I,eAAA,GAAAA,eAAA;AAwrB5C,IAAMkB,gBAAgB,GAAG;EAExBoD,aAAa,EAAE,SAAAA,cAAWx8G,QAAQ,EAAEgtB,QAAQ,EAAE8vF,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAG;IAEtE,IAAMC,GAAG,GAAGjwF,QAAQ,CAAE8vF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMI,GAAG,GAAGlwF,QAAQ,CAAE8vF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMK,GAAG,GAAGnwF,QAAQ,CAAE+vF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAGpwF,QAAQ,CAAE+vF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAGrwF,QAAQ,CAAEgwF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMM,GAAG,GAAGtwF,QAAQ,CAAEgwF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IAEtC,OAAO,CACN,IAAIt8H,OAAO,CAAEu8H,GAAG,EAAEC,GAAI,CAAC,EACvB,IAAIx8H,OAAO,CAAEy8H,GAAG,EAAEC,GAAI,CAAC,EACvB,IAAI18H,OAAO,CAAE28H,GAAG,EAAEC,GAAI,CAAC,CACvB;EAEF,CAAC;EAEDZ,kBAAkB,EAAE,SAAAA,mBAAW18G,QAAQ,EAAEgtB,QAAQ,EAAE8vF,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEO,MAAM,EAAG;IAEnF,IAAMN,GAAG,GAAGjwF,QAAQ,CAAE8vF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMI,GAAG,GAAGlwF,QAAQ,CAAE8vF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAGxwF,QAAQ,CAAE8vF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMK,GAAG,GAAGnwF,QAAQ,CAAE+vF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAGpwF,QAAQ,CAAE+vF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAGzwF,QAAQ,CAAE+vF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAGrwF,QAAQ,CAAEgwF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMM,GAAG,GAAGtwF,QAAQ,CAAEgwF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAG1wF,QAAQ,CAAEgwF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMW,GAAG,GAAG3wF,QAAQ,CAAEuwF,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAG5wF,QAAQ,CAAEuwF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAG7wF,QAAQ,CAAEuwF,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IAEtC,IAAKniI,IAAI,CAACgC,GAAG,CAAE8/H,GAAG,GAAGE,GAAI,CAAC,GAAGhiI,IAAI,CAACgC,GAAG,CAAE6/H,GAAG,GAAGE,GAAI,CAAC,EAAG;MAEpD,OAAO,CACN,IAAIz8H,OAAO,CAAEu8H,GAAG,EAAE,CAAC,GAAGO,GAAI,CAAC,EAC3B,IAAI98H,OAAO,CAAEy8H,GAAG,EAAE,CAAC,GAAGM,GAAI,CAAC,EAC3B,IAAI/8H,OAAO,CAAE28H,GAAG,EAAE,CAAC,GAAGK,GAAI,CAAC,EAC3B,IAAIh9H,OAAO,CAAEi9H,GAAG,EAAE,CAAC,GAAGE,GAAI,CAAC,CAC3B;IAEF,CAAC,MAAM;MAEN,OAAO,CACN,IAAIn9H,OAAO,CAAEw8H,GAAG,EAAE,CAAC,GAAGM,GAAI,CAAC,EAC3B,IAAI98H,OAAO,CAAE08H,GAAG,EAAE,CAAC,GAAGK,GAAI,CAAC,EAC3B,IAAI/8H,OAAO,CAAE48H,GAAG,EAAE,CAAC,GAAGI,GAAI,CAAC,EAC3B,IAAIh9H,OAAO,CAAEk9H,GAAG,EAAE,CAAC,GAAGC,GAAI,CAAC,CAC3B;IAEF;EAED;AAED,CAAC;AAED,SAASjB,QAAQA,CAAE3qG,MAAM,EAAE/e,OAAO,EAAE7F,IAAI,EAAG;EAE1CA,IAAI,CAAC4kB,MAAM,GAAG,EAAE;EAEhB,IAAKjkB,KAAK,CAACC,OAAO,CAAEgkB,MAAO,CAAC,EAAG;IAE9B,KAAM,IAAI/nC,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGi3B,MAAM,CAAChoC,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;MAEjD,IAAMgpC,KAAK,GAAGjB,MAAM,CAAE/nC,CAAC,CAAE;MAEzBmjB,IAAI,CAAC4kB,MAAM,CAACvoC,IAAI,CAAEwpC,KAAK,CAACr3B,IAAK,CAAC;IAE/B;EAED,CAAC,MAAM;IAENwR,IAAI,CAAC4kB,MAAM,CAACvoC,IAAI,CAAEuoC,MAAM,CAACp2B,IAAK,CAAC;EAEhC;EAEAwR,IAAI,CAAC6F,OAAO,GAAGpvB,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEb,OAAQ,CAAC;EAE3C,IAAKA,OAAO,CAAC+lH,WAAW,KAAKtwI,SAAS,EAAG0kB,IAAI,CAAC6F,OAAO,CAAC+lH,WAAW,GAAG/lH,OAAO,CAAC+lH,WAAW,CAACvrH,MAAM,CAAC,CAAC;EAEhG,OAAOL,IAAI;AAEZ;AAAC,IAEKywH,mBAAmB,0BAAAC,oBAAA;EAAAvvH,SAAA,CAAAsvH,mBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAAtvH,YAAA,CAAAovH,mBAAA;EAExB,SAAAA,oBAAaxgH,MAAM,GAAG,CAAC,EAAEw4F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAmoB,OAAA;IAAAxxI,eAAA,OAAAqxI,mBAAA;IAErC,IAAMhhI,CAAC,GAAG,CAAE,CAAC,GAAG1B,IAAI,CAAC2H,IAAI,CAAE,CAAE,CAAC,IAAK,CAAC;IAEpC,IAAMiqC,QAAQ,GAAG,CAChB,CAAE,CAAC,EAAElwC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAEA,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAEA,CAAC,EAAE,CAAC,EAC7C,CAAC,EAAE,CAAE,CAAC,EAAEA,CAAC,EAAG,CAAC,EAAE,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAEA,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAEA,CAAC,EAC5CA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAGA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAC,CAC7C;IAED,IAAMsqC,OAAO,GAAG,CACf,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EACnD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9C;IAED62F,OAAA,GAAAD,QAAA,CAAA53I,IAAA,OAAO4mD,QAAQ,EAAE5F,OAAO,EAAE9pB,MAAM,EAAEw4F,MAAM;IAExCmoB,OAAA,CAAK93I,IAAI,GAAG,qBAAqB;IAEjC83I,OAAA,CAAKhrG,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdw4F,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAmoB,OAAA;EAEH;EAAChxI,YAAA,CAAA6wI,mBAAA;IAAA15I,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAIywH,mBAAmB,CAAEzwH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACyoG,MAAO,CAAC;IAE3D;EAAC;EAAA,OAAAgoB,mBAAA;AAAA,EAlCgC1O,kBAAkB;AAAAxrI,OAAA,CAAAk6I,mBAAA,GAAAA,mBAAA;AAAA,IAsC9CI,kBAAkB,0BAAAC,oBAAA;EAAA3vH,SAAA,CAAA0vH,kBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAA1vH,YAAA,CAAAwvH,kBAAA;EAEvB,SAAAA,mBAAa5gH,MAAM,GAAG,CAAC,EAAEw4F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAuoB,OAAA;IAAA5xI,eAAA,OAAAyxI,kBAAA;IAErC,IAAMlxF,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAC9B;IAED,IAAM5F,OAAO,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAChB;IAEDi3F,OAAA,GAAAD,QAAA,CAAAh4I,IAAA,OAAO4mD,QAAQ,EAAE5F,OAAO,EAAE9pB,MAAM,EAAEw4F,MAAM;IAExCuoB,OAAA,CAAKl4I,IAAI,GAAG,oBAAoB;IAEhCk4I,OAAA,CAAKprG,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdw4F,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAuoB,OAAA;EAEH;EAACpxI,YAAA,CAAAixI,kBAAA;IAAA95I,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAI6wH,kBAAkB,CAAE7wH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACyoG,MAAO,CAAC;IAE1D;EAAC;EAAA,OAAAooB,kBAAA;AAAA,EA9B+B9O,kBAAkB;AAAAxrI,OAAA,CAAAs6I,kBAAA,GAAAA,kBAAA;AAAA,IAkC7CI,YAAY,0BAAAC,gBAAA;EAAA/vH,SAAA,CAAA8vH,YAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA9vH,YAAA,CAAA4vH,YAAA;EAEjB,SAAAA,aAAaG,WAAW,GAAG,GAAG,EAAEC,WAAW,GAAG,CAAC,EAAEC,aAAa,GAAG,EAAE,EAAEC,WAAW,GAAG,CAAC,EAAEhR,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGzyH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAwjI,OAAA;IAAApyI,eAAA,OAAA6xI,YAAA;IAEjIO,OAAA,GAAAL,QAAA,CAAAp4I,IAAA;IAEAy4I,OAAA,CAAK14I,IAAI,GAAG,cAAc;IAE1B04I,OAAA,CAAK5rG,UAAU,GAAG;MACjBwrG,WAAW,EAAEA,WAAW;MACxBC,WAAW,EAAEA,WAAW;MACxBC,aAAa,EAAEA,aAAa;MAC5BC,WAAW,EAAEA,WAAW;MACxBhR,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAED8Q,aAAa,GAAGvjI,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE0iI,aAAc,CAAC;IAC5CC,WAAW,GAAGxjI,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2iI,WAAY,CAAC;;IAExC;;IAEA,IAAMx3F,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAIjqB,MAAM,GAAGmhH,WAAW;IACxB,IAAMK,UAAU,GAAK,CAAEJ,WAAW,GAAGD,WAAW,IAAKG,WAAa;IAClE,IAAM5/C,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;IAC5B,IAAM9J,EAAE,GAAG,IAAIrQ,OAAO,CAAC,CAAC;;IAExB;;IAEA,KAAM,IAAIwhB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI08G,WAAW,EAAE18G,CAAC,EAAG,EAAG;MAEzC,KAAM,IAAIh4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIy0I,aAAa,EAAEz0I,CAAC,EAAG,EAAG;QAE3C;;QAEA,IAAM6jI,OAAO,GAAGH,UAAU,GAAG1jI,CAAC,GAAGy0I,aAAa,GAAG9Q,WAAW;;QAE5D;;QAEA7uC,MAAM,CAAC1iF,CAAC,GAAGghB,MAAM,GAAGliB,IAAI,CAAC8D,GAAG,CAAE6uH,OAAQ,CAAC;QACvC/uC,MAAM,CAACpiF,CAAC,GAAG0gB,MAAM,GAAGliB,IAAI,CAAC+D,GAAG,CAAE4uH,OAAQ,CAAC;QAEvC/gF,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;;QAE7C;;QAEAm2B,OAAO,CAAC59C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;;QAEvB;;QAEAqnB,EAAE,CAACzU,CAAC,GAAG,CAAE0iF,MAAM,CAAC1iF,CAAC,GAAGoiI,WAAW,GAAG,CAAC,IAAK,CAAC;QACzC3tH,EAAE,CAACnU,CAAC,GAAG,CAAEoiF,MAAM,CAACpiF,CAAC,GAAG8hI,WAAW,GAAG,CAAC,IAAK,CAAC;QAEzCn3F,GAAG,CAAC79C,IAAI,CAAEqnB,EAAE,CAACzU,CAAC,EAAEyU,EAAE,CAACnU,CAAE,CAAC;MAEvB;;MAEA;;MAEA0gB,MAAM,IAAIwhH,UAAU;IAErB;;IAEA;;IAEA,KAAM,IAAI58G,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG08G,WAAW,EAAE18G,IAAC,EAAG,EAAG;MAExC,IAAM68G,iBAAiB,GAAG78G,IAAC,IAAKy8G,aAAa,GAAG,CAAC,CAAE;MAEnD,KAAM,IAAIz0I,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGy0I,aAAa,EAAEz0I,IAAC,EAAG,EAAG;QAE1C,IAAM6jI,QAAO,GAAG7jI,IAAC,GAAG60I,iBAAiB;QAErC,IAAMjgI,CAAC,GAAGivH,QAAO;QACjB,IAAMhvH,CAAC,GAAGgvH,QAAO,GAAG4Q,aAAa,GAAG,CAAC;QACrC,IAAM3/H,CAAC,GAAG+uH,QAAO,GAAG4Q,aAAa,GAAG,CAAC;QACrC,IAAMn3H,CAAC,GAAGumH,QAAO,GAAG,CAAC;;QAErB;;QAEA3mF,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;QACvB4/B,OAAO,CAAC19C,IAAI,CAAEqV,CAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEAq3H,OAAA,CAAKz4F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBy3F,OAAA,CAAKv4F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E6xF,OAAA,CAAKv4F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEu3F,OAAA,CAAKv4F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAs3F,OAAA;EAEjE;EAAC5xI,YAAA,CAAAqxI,YAAA;IAAAl6I,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAu9F,YAAA,CAAAv6I,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAIixH,YAAY,CAAEjxH,IAAI,CAACoxH,WAAW,EAAEpxH,IAAI,CAACqxH,WAAW,EAAErxH,IAAI,CAACsxH,aAAa,EAAEtxH,IAAI,CAACuxH,WAAW,EAAEvxH,IAAI,CAACugH,UAAU,EAAEvgH,IAAI,CAACwgH,WAAY,CAAC;IAEvI;EAAC;EAAA,OAAAyQ,YAAA;AAAA,EArHyB94F,cAAc;AAAA5hD,OAAA,CAAA06I,YAAA,GAAAA,YAAA;AAAA,IAyHnCU,aAAa,0BAAAC,iBAAA;EAAAzwH,SAAA,CAAAwwH,aAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAxwH,YAAA,CAAAswH,aAAA;EAElB,SAAAA,cAAa/sG,MAAM,GAAG,IAAIugG,KAAK,CAAE,CAAE,IAAI9xH,OAAO,CAAE,CAAC,EAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,CAAE,GAAI,CAAC,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,GAAI,CAAC,CAAG,CAAC,EAAEg4H,aAAa,GAAG,EAAE,EAAG;IAAA,IAAAyG,OAAA;IAAA1yI,eAAA,OAAAuyI,aAAA;IAE1IG,OAAA,GAAAD,QAAA,CAAA94I,IAAA;IAEA+4I,OAAA,CAAKh5I,IAAI,GAAG,eAAe;IAE3Bg5I,OAAA,CAAKlsG,UAAU,GAAG;MACjBhB,MAAM,EAAEA,MAAM;MACdymG,aAAa,EAAEA;IAChB,CAAC;;IAED;;IAEA,IAAMtxF,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAI2F,UAAU,GAAG,CAAC;IAClB,IAAIc,UAAU,GAAG,CAAC;;IAElB;;IAEA,IAAKhgC,KAAK,CAACC,OAAO,CAAEgkB,MAAO,CAAC,KAAK,KAAK,EAAG;MAExCumG,QAAQ,CAAEvmG,MAAO,CAAC;IAEnB,CAAC,MAAM;MAEN,KAAM,IAAI/nC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+nC,MAAM,CAAChoC,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE1CsuI,QAAQ,CAAEvmG,MAAM,CAAE/nC,CAAC,CAAG,CAAC;QAEvBi1I,OAAA,CAAK14F,QAAQ,CAAEyG,UAAU,EAAEc,UAAU,EAAE9jD,CAAE,CAAC,CAAC,CAAC;;QAE5CgjD,UAAU,IAAIc,UAAU;QACxBA,UAAU,GAAG,CAAC;MAEf;IAED;;IAEA;;IAEAmxF,OAAA,CAAK/4F,QAAQ,CAAEgB,OAAQ,CAAC;IACxB+3F,OAAA,CAAK74F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EmyF,OAAA,CAAK74F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvE63F,OAAA,CAAK74F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;;IAG/D;;IAEA,SAASixF,QAAQA,CAAEtlG,KAAK,EAAG;MAE1B,IAAMksG,WAAW,GAAGpyF,QAAQ,CAAC/iD,MAAM,GAAG,CAAC;MACvC,IAAM20B,MAAM,GAAGsU,KAAK,CAAC6/F,aAAa,CAAE2F,aAAc,CAAC;MAEnD,IAAI2G,aAAa,GAAGzgH,MAAM,CAACsU,KAAK;MAChC,IAAMosG,UAAU,GAAG1gH,MAAM,CAACg0G,KAAK;;MAE/B;;MAEA,IAAK8E,UAAU,CAACE,WAAW,CAAEyH,aAAc,CAAC,KAAK,KAAK,EAAG;QAExDA,aAAa,GAAGA,aAAa,CAACl0I,OAAO,CAAC,CAAC;MAExC;MAEA,KAAM,IAAIjB,IAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGskI,UAAU,CAACr1I,MAAM,EAAEC,IAAC,GAAG8Q,CAAC,EAAE9Q,IAAC,EAAG,EAAG;QAErD,IAAMq1I,SAAS,GAAGD,UAAU,CAAEp1I,IAAC,CAAE;QAEjC,IAAKwtI,UAAU,CAACE,WAAW,CAAE2H,SAAU,CAAC,KAAK,IAAI,EAAG;UAEnDD,UAAU,CAAEp1I,IAAC,CAAE,GAAGq1I,SAAS,CAACp0I,OAAO,CAAC,CAAC;QAEtC;MAED;MAEA,IAAM2sI,KAAK,GAAGJ,UAAU,CAACG,gBAAgB,CAAEwH,aAAa,EAAEC,UAAW,CAAC;;MAEtE;;MAEA,KAAM,IAAIp1I,IAAC,GAAG,CAAC,EAAE8Q,GAAC,GAAGskI,UAAU,CAACr1I,MAAM,EAAEC,IAAC,GAAG8Q,GAAC,EAAE9Q,IAAC,EAAG,EAAG;QAErD,IAAMq1I,UAAS,GAAGD,UAAU,CAAEp1I,IAAC,CAAE;QACjCm1I,aAAa,GAAGA,aAAa,CAACtzH,MAAM,CAAEwzH,UAAU,CAAC;MAElD;;MAEA;;MAEA,KAAM,IAAIr1I,IAAC,GAAG,CAAC,EAAE8Q,GAAC,GAAGqkI,aAAa,CAACp1I,MAAM,EAAEC,IAAC,GAAG8Q,GAAC,EAAE9Q,IAAC,EAAG,EAAG;QAExD,IAAM80F,QAAM,GAAGqgD,aAAa,CAAEn1I,IAAC,CAAE;QAEjC8iD,QAAQ,CAACtjD,IAAI,CAAEs1F,QAAM,CAAC1iF,CAAC,EAAE0iF,QAAM,CAACpiF,CAAC,EAAE,CAAE,CAAC;QACtC0qC,OAAO,CAAC59C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QACvB69C,GAAG,CAAC79C,IAAI,CAAEs1F,QAAM,CAAC1iF,CAAC,EAAE0iF,QAAM,CAACpiF,CAAE,CAAC,CAAC,CAAC;MAEjC;;MAEA;;MAEA,KAAM,IAAI1S,IAAC,GAAG,CAAC,EAAE8Q,IAAC,GAAG88H,KAAK,CAAC7tI,MAAM,EAAEC,IAAC,GAAG8Q,IAAC,EAAE9Q,IAAC,EAAG,EAAG;QAEhD,IAAMoiD,IAAI,GAAGwrF,KAAK,CAAE5tI,IAAC,CAAE;QAEvB,IAAM4U,CAAC,GAAGwtC,IAAI,CAAE,CAAC,CAAE,GAAG8yF,WAAW;QACjC,IAAMrgI,CAAC,GAAGutC,IAAI,CAAE,CAAC,CAAE,GAAG8yF,WAAW;QACjC,IAAMpgI,CAAC,GAAGstC,IAAI,CAAE,CAAC,CAAE,GAAG8yF,WAAW;QAEjCh4F,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEC,CAAE,CAAC;QACvBgvC,UAAU,IAAI,CAAC;MAEhB;IAED;IAAC,OAAAmxF,OAAA;EAEF;EAAClyI,YAAA,CAAA+xI,aAAA;IAAA56I,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAi+F,aAAA,CAAAj7I,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAi+F,aAAA,CAAAj7I,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B,IAAM6rC,MAAM,GAAG,IAAI,CAACgB,UAAU,CAAChB,MAAM;MAErC,OAAOvkB,OAAM,CAAEukB,MAAM,EAAE5kB,IAAK,CAAC;IAE9B;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAE4kB,MAAM,EAAG;MAE/B,IAAM4qG,cAAc,GAAG,EAAE;MAEzB,KAAM,IAAI36G,CAAC,GAAG,CAAC,EAAEglB,EAAE,GAAG75B,IAAI,CAAC4kB,MAAM,CAAChoC,MAAM,EAAEi4B,CAAC,GAAGglB,EAAE,EAAEhlB,CAAC,EAAG,EAAG;QAExD,IAAMgR,KAAK,GAAGjB,MAAM,CAAE5kB,IAAI,CAAC4kB,MAAM,CAAE/P,CAAC,CAAE,CAAE;QAExC26G,cAAc,CAACnzI,IAAI,CAAEwpC,KAAM,CAAC;MAE7B;MAEA,OAAO,IAAI8rG,aAAa,CAAEnC,cAAc,EAAExvH,IAAI,CAACqrH,aAAc,CAAC;IAE/D;EAAC;EAAA,OAAAsG,aAAA;AAAA,EAhK0Bx5F,cAAc;AAAA5hD,OAAA,CAAAo7I,aAAA,GAAAA,aAAA;AAoK1C,SAAStxH,OAAMA,CAAEukB,MAAM,EAAE5kB,IAAI,EAAG;EAE/BA,IAAI,CAAC4kB,MAAM,GAAG,EAAE;EAEhB,IAAKjkB,KAAK,CAACC,OAAO,CAAEgkB,MAAO,CAAC,EAAG;IAE9B,KAAM,IAAI/nC,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGi3B,MAAM,CAAChoC,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;MAEjD,IAAMgpC,KAAK,GAAGjB,MAAM,CAAE/nC,CAAC,CAAE;MAEzBmjB,IAAI,CAAC4kB,MAAM,CAACvoC,IAAI,CAAEwpC,KAAK,CAACr3B,IAAK,CAAC;IAE/B;EAED,CAAC,MAAM;IAENwR,IAAI,CAAC4kB,MAAM,CAACvoC,IAAI,CAAEuoC,MAAM,CAACp2B,IAAK,CAAC;EAEhC;EAEA,OAAOwR,IAAI;AAEZ;AAAC,IAEKmyH,cAAc,0BAAAC,iBAAA;EAAAjxH,SAAA,CAAAgxH,cAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAhxH,YAAA,CAAA8wH,cAAA;EAEnB,SAAAA,eAAaliH,MAAM,GAAG,CAAC,EAAEqvB,aAAa,GAAG,EAAE,EAAEC,cAAc,GAAG,EAAE,EAAE+/E,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAGxxH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEuyH,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGzyH,IAAI,CAACC,EAAE,EAAG;IAAA,IAAAskI,OAAA;IAAAlzI,eAAA,OAAA+yI,cAAA;IAEhJG,OAAA,GAAAD,QAAA,CAAAt5I,IAAA;IAEAu5I,OAAA,CAAKx5I,IAAI,GAAG,gBAAgB;IAE5Bw5I,OAAA,CAAK1sG,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdqvB,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA,cAAc;MAC9B+/E,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAEA,SAAS;MACpBgB,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAEDlhF,aAAa,GAAGvxC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEb,IAAI,CAACsC,KAAK,CAAEivC,aAAc,CAAE,CAAC;IAC1DC,cAAc,GAAGxxC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEb,IAAI,CAACsC,KAAK,CAAEkvC,cAAe,CAAE,CAAC;IAE5D,IAAMgzF,QAAQ,GAAGxkI,IAAI,CAACY,GAAG,CAAE4xH,UAAU,GAAGC,WAAW,EAAEzyH,IAAI,CAACC,EAAG,CAAC;IAE9D,IAAIV,KAAK,GAAG,CAAC;IACb,IAAMklI,IAAI,GAAG,EAAE;IAEf,IAAM7gD,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;IAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;;IAE5B;;IAEA,IAAMusB,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,KAAM,IAAI5rB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAIixB,cAAc,EAAEjxB,EAAE,EAAG,EAAG;MAE/C,IAAMmkH,WAAW,GAAG,EAAE;MAEtB,IAAMx+H,CAAC,GAAGqa,EAAE,GAAGixB,cAAc;;MAE7B;;MAEA,IAAImzF,OAAO,GAAG,CAAC;MAEf,IAAKpkH,EAAE,KAAK,CAAC,IAAIiyG,UAAU,KAAK,CAAC,EAAG;QAEnCmS,OAAO,GAAG,GAAG,GAAGpzF,aAAa;MAE9B,CAAC,MAAM,IAAKhxB,EAAE,KAAKixB,cAAc,IAAIgzF,QAAQ,KAAKxkI,IAAI,CAACC,EAAE,EAAG;QAE3D0kI,OAAO,GAAG,CAAE,GAAG,GAAGpzF,aAAa;MAEhC;MAEA,KAAM,IAAIjxB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAIixB,aAAa,EAAEjxB,EAAE,EAAG,EAAG;QAE9C,IAAMuC,CAAC,GAAGvC,EAAE,GAAGixB,aAAa;;QAE5B;;QAEAqyC,MAAM,CAAC1iF,CAAC,GAAG,CAAEghB,MAAM,GAAGliB,IAAI,CAAC8D,GAAG,CAAEytH,QAAQ,GAAG1uG,CAAC,GAAG2uG,SAAU,CAAC,GAAGxxH,IAAI,CAAC+D,GAAG,CAAEyuH,UAAU,GAAGtsH,CAAC,GAAGusH,WAAY,CAAC;QACrG7uC,MAAM,CAACpiF,CAAC,GAAG0gB,MAAM,GAAGliB,IAAI,CAAC8D,GAAG,CAAE0uH,UAAU,GAAGtsH,CAAC,GAAGusH,WAAY,CAAC;QAC5D7uC,MAAM,CAAC7tE,CAAC,GAAGmM,MAAM,GAAGliB,IAAI,CAAC+D,GAAG,CAAEwtH,QAAQ,GAAG1uG,CAAC,GAAG2uG,SAAU,CAAC,GAAGxxH,IAAI,CAAC+D,GAAG,CAAEyuH,UAAU,GAAGtsH,CAAC,GAAGusH,WAAY,CAAC;QAEnG7gF,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;;QAE7C;;QAEA+L,MAAM,CAAC7b,IAAI,CAAE29E,MAAO,CAAC,CAACz+E,SAAS,CAAC,CAAC;QACjC+mC,OAAO,CAAC59C,IAAI,CAAEwzB,MAAM,CAAC5gB,CAAC,EAAE4gB,MAAM,CAACtgB,CAAC,EAAEsgB,MAAM,CAAC/L,CAAE,CAAC;;QAE5C;;QAEAo2B,GAAG,CAAC79C,IAAI,CAAEu0B,CAAC,GAAG8hH,OAAO,EAAE,CAAC,GAAGz+H,CAAE,CAAC;QAE9Bw+H,WAAW,CAACp2I,IAAI,CAAEiR,KAAK,EAAI,CAAC;MAE7B;MAEAklI,IAAI,CAACn2I,IAAI,CAAEo2I,WAAY,CAAC;IAEzB;;IAEA;;IAEA,KAAM,IAAInkH,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAGixB,cAAc,EAAEjxB,IAAE,EAAG,EAAG;MAE9C,KAAM,IAAID,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAGixB,aAAa,EAAEjxB,IAAE,EAAG,EAAG;QAE7C,IAAM5c,CAAC,GAAG+gI,IAAI,CAAElkH,IAAE,CAAE,CAAED,IAAE,GAAG,CAAC,CAAE;QAC9B,IAAM3c,CAAC,GAAG8gI,IAAI,CAAElkH,IAAE,CAAE,CAAED,IAAE,CAAE;QAC1B,IAAM1c,CAAC,GAAG6gI,IAAI,CAAElkH,IAAE,GAAG,CAAC,CAAE,CAAED,IAAE,CAAE;QAC9B,IAAMlU,CAAC,GAAGq4H,IAAI,CAAElkH,IAAE,GAAG,CAAC,CAAE,CAAED,IAAE,GAAG,CAAC,CAAE;QAElC,IAAKC,IAAE,KAAK,CAAC,IAAIiyG,UAAU,GAAG,CAAC,EAAGxmF,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;QACzD,IAAKmU,IAAE,KAAKixB,cAAc,GAAG,CAAC,IAAIgzF,QAAQ,GAAGxkI,IAAI,CAACC,EAAE,EAAG+rC,OAAO,CAAC19C,IAAI,CAAEqV,CAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;MAE/E;IAED;;IAEA;;IAEAm4H,OAAA,CAAKv5F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBu4F,OAAA,CAAKr5F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E2yF,OAAA,CAAKr5F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEq4F,OAAA,CAAKr5F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAo4F,OAAA;EAEjE;EAAC1yI,YAAA,CAAAuyI,cAAA;IAAAp7I,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAy+F,cAAA,CAAAz7I,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAImyH,cAAc,CAAEnyH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACs/B,aAAa,EAAEt/B,IAAI,CAACu/B,cAAc,EAAEv/B,IAAI,CAACs/G,QAAQ,EAAEt/G,IAAI,CAACu/G,SAAS,EAAEv/G,IAAI,CAACugH,UAAU,EAAEvgH,IAAI,CAACwgH,WAAY,CAAC;IAEpJ;EAAC;EAAA,OAAA2R,cAAA;AAAA,EAhI2Bh6F,cAAc;AAAA5hD,OAAA,CAAA47I,cAAA,GAAAA,cAAA;AAAA,IAoIrCQ,mBAAmB,0BAAAC,oBAAA;EAAAzxH,SAAA,CAAAwxH,mBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAAxxH,YAAA,CAAAsxH,mBAAA;EAExB,SAAAA,oBAAa1iH,MAAM,GAAG,CAAC,EAAEw4F,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAqqB,OAAA;IAAA1zI,eAAA,OAAAuzI,mBAAA;IAErC,IAAMhzF,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CACjD;IAED,IAAM5F,OAAO,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACnC;IAED+4F,OAAA,GAAAD,QAAA,CAAA95I,IAAA,OAAO4mD,QAAQ,EAAE5F,OAAO,EAAE9pB,MAAM,EAAEw4F,MAAM;IAExCqqB,OAAA,CAAKh6I,IAAI,GAAG,qBAAqB;IAEjCg6I,OAAA,CAAKltG,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdw4F,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAqqB,OAAA;EAEH;EAAClzI,YAAA,CAAA+yI,mBAAA;IAAA57I,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAI2yH,mBAAmB,CAAE3yH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACyoG,MAAO,CAAC;IAE3D;EAAC;EAAA,OAAAkqB,mBAAA;AAAA,EA3BgC5Q,kBAAkB;AAAAxrI,OAAA,CAAAo8I,mBAAA,GAAAA,mBAAA;AAAA,IA+B9CI,aAAa,0BAAAC,iBAAA;EAAA7xH,SAAA,CAAA4xH,aAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA5xH,YAAA,CAAA0xH,aAAA;EAElB,SAAAA,cAAa9iH,MAAM,GAAG,CAAC,EAAEijH,IAAI,GAAG,GAAG,EAAEhT,cAAc,GAAG,EAAE,EAAEiT,eAAe,GAAG,EAAE,EAAEtU,GAAG,GAAG9wH,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAolI,OAAA;IAAAh0I,eAAA,OAAA2zI,aAAA;IAEnGK,OAAA,GAAAH,QAAA,CAAAl6I,IAAA;IAEAq6I,OAAA,CAAKt6I,IAAI,GAAG,eAAe;IAE3Bs6I,OAAA,CAAKxtG,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdijH,IAAI,EAAEA,IAAI;MACVhT,cAAc,EAAEA,cAAc;MAC9BiT,eAAe,EAAEA,eAAe;MAChCtU,GAAG,EAAEA;IACN,CAAC;IAEDqB,cAAc,GAAGnyH,IAAI,CAACsC,KAAK,CAAE6vH,cAAe,CAAC;IAC7CiT,eAAe,GAAGplI,IAAI,CAACsC,KAAK,CAAE8iI,eAAgB,CAAC;;IAE/C;;IAEA,IAAMp5F,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAM7iC,MAAM,GAAG,IAAImW,OAAO,CAAC,CAAC;IAC5B,IAAMmkE,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;IAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;;IAE5B;;IAEA,KAAM,IAAIqH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqrG,cAAc,EAAErrG,CAAC,EAAG,EAAG;MAE5C,KAAM,IAAIh4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIs2I,eAAe,EAAEt2I,CAAC,EAAG,EAAG;QAE7C,IAAM+zB,CAAC,GAAG/zB,CAAC,GAAGs2I,eAAe,GAAGtU,GAAG;QACnC,IAAM5qH,CAAC,GAAG4gB,CAAC,GAAGqrG,cAAc,GAAGnyH,IAAI,CAACC,EAAE,GAAG,CAAC;;QAE1C;;QAEA2jF,MAAM,CAAC1iF,CAAC,GAAG,CAAEghB,MAAM,GAAGijH,IAAI,GAAGnlI,IAAI,CAAC8D,GAAG,CAAEoC,CAAE,CAAC,IAAKlG,IAAI,CAAC8D,GAAG,CAAE+e,CAAE,CAAC;QAC5D+gE,MAAM,CAACpiF,CAAC,GAAG,CAAE0gB,MAAM,GAAGijH,IAAI,GAAGnlI,IAAI,CAAC8D,GAAG,CAAEoC,CAAE,CAAC,IAAKlG,IAAI,CAAC+D,GAAG,CAAE8e,CAAE,CAAC;QAC5D+gE,MAAM,CAAC7tE,CAAC,GAAGovH,IAAI,GAAGnlI,IAAI,CAAC+D,GAAG,CAAEmC,CAAE,CAAC;QAE/B0rC,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;;QAE7C;;QAEAzM,MAAM,CAACpI,CAAC,GAAGghB,MAAM,GAAGliB,IAAI,CAAC8D,GAAG,CAAE+e,CAAE,CAAC;QACjCvZ,MAAM,CAAC9H,CAAC,GAAG0gB,MAAM,GAAGliB,IAAI,CAAC+D,GAAG,CAAE8e,CAAE,CAAC;QACjCf,MAAM,CAACrb,UAAU,CAAEm9E,MAAM,EAAEt6E,MAAO,CAAC,CAACnE,SAAS,CAAC,CAAC;QAE/C+mC,OAAO,CAAC59C,IAAI,CAAEwzB,MAAM,CAAC5gB,CAAC,EAAE4gB,MAAM,CAACtgB,CAAC,EAAEsgB,MAAM,CAAC/L,CAAE,CAAC;;QAE5C;;QAEAo2B,GAAG,CAAC79C,IAAI,CAAEQ,CAAC,GAAGs2I,eAAgB,CAAC;QAC/Bj5F,GAAG,CAAC79C,IAAI,CAAEw4B,CAAC,GAAGqrG,cAAe,CAAC;MAE/B;IAED;;IAEA;;IAEA,KAAM,IAAIrrG,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIqrG,cAAc,EAAErrG,IAAC,EAAG,EAAG;MAE5C,KAAM,IAAIh4B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIs2I,eAAe,EAAEt2I,IAAC,EAAG,EAAG;QAE7C;;QAEA,IAAM4U,CAAC,GAAG,CAAE0hI,eAAe,GAAG,CAAC,IAAKt+G,IAAC,GAAGh4B,IAAC,GAAG,CAAC;QAC7C,IAAM6U,CAAC,GAAG,CAAEyhI,eAAe,GAAG,CAAC,KAAOt+G,IAAC,GAAG,CAAC,CAAE,GAAGh4B,IAAC,GAAG,CAAC;QACrD,IAAM8U,CAAC,GAAG,CAAEwhI,eAAe,GAAG,CAAC,KAAOt+G,IAAC,GAAG,CAAC,CAAE,GAAGh4B,IAAC;QACjD,IAAMsd,CAAC,GAAG,CAAEg5H,eAAe,GAAG,CAAC,IAAKt+G,IAAC,GAAGh4B,IAAC;;QAEzC;;QAEAk9C,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;QACvB4/B,OAAO,CAAC19C,IAAI,CAAEqV,CAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEAi5H,OAAA,CAAKr6F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBq5F,OAAA,CAAKn6F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EyzF,OAAA,CAAKn6F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEm5F,OAAA,CAAKn6F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;IAAC,OAAAk5F,OAAA;EAEjE;EAACxzI,YAAA,CAAAmzI,aAAA;IAAAh8I,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAq/F,aAAA,CAAAr8I,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAI+yH,aAAa,CAAE/yH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACkzH,IAAI,EAAElzH,IAAI,CAACkgH,cAAc,EAAElgH,IAAI,CAACmzH,eAAe,EAAEnzH,IAAI,CAAC6+G,GAAI,CAAC;IAExG;EAAC;EAAA,OAAAkU,aAAA;AAAA,EA/G0B56F,cAAc;AAAA5hD,OAAA,CAAAw8I,aAAA,GAAAA,aAAA;AAAA,IAmHpCM,iBAAiB,0BAAAC,iBAAA;EAAAnyH,SAAA,CAAAkyH,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAlyH,YAAA,CAAAgyH,iBAAA;EAEtB,SAAAA,kBAAapjH,MAAM,GAAG,CAAC,EAAEijH,IAAI,GAAG,GAAG,EAAEC,eAAe,GAAG,EAAE,EAAEjT,cAAc,GAAG,CAAC,EAAEhiG,CAAC,GAAG,CAAC,EAAE1sB,CAAC,GAAG,CAAC,EAAG;IAAA,IAAAgiI,OAAA;IAAAp0I,eAAA,OAAAi0I,iBAAA;IAE7FG,OAAA,GAAAD,QAAA,CAAAx6I,IAAA;IAEAy6I,OAAA,CAAK16I,IAAI,GAAG,mBAAmB;IAE/B06I,OAAA,CAAK5tG,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdijH,IAAI,EAAEA,IAAI;MACVC,eAAe,EAAEA,eAAe;MAChCjT,cAAc,EAAEA,cAAc;MAC9BhiG,CAAC,EAAEA,CAAC;MACJ1sB,CAAC,EAAEA;IACJ,CAAC;IAED2hI,eAAe,GAAGplI,IAAI,CAACsC,KAAK,CAAE8iI,eAAgB,CAAC;IAC/CjT,cAAc,GAAGnyH,IAAI,CAACsC,KAAK,CAAE6vH,cAAe,CAAC;;IAE7C;;IAEA,IAAMnmF,OAAO,GAAG,EAAE;IAClB,IAAM4F,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAMy3C,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;IAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;IAE5B,IAAMimH,EAAE,GAAG,IAAIjmH,OAAO,CAAC,CAAC;IACxB,IAAMkmH,EAAE,GAAG,IAAIlmH,OAAO,CAAC,CAAC;IAExB,IAAMmmH,CAAC,GAAG,IAAInmH,OAAO,CAAC,CAAC;IACvB,IAAMomH,CAAC,GAAG,IAAIpmH,OAAO,CAAC,CAAC;IACvB,IAAMqmH,CAAC,GAAG,IAAIrmH,OAAO,CAAC,CAAC;;IAEvB;;IAEA,KAAM,IAAI3wB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIs2I,eAAe,EAAE,EAAGt2I,CAAC,EAAG;MAE7C;;MAEA,IAAM+zB,CAAC,GAAG/zB,CAAC,GAAGs2I,eAAe,GAAGj1G,CAAC,GAAGnwB,IAAI,CAACC,EAAE,GAAG,CAAC;;MAE/C;MACA;;MAEA8lI,wBAAwB,CAAEljH,CAAC,EAAEsN,CAAC,EAAE1sB,CAAC,EAAEye,MAAM,EAAEwjH,EAAG,CAAC;MAC/CK,wBAAwB,CAAEljH,CAAC,GAAG,IAAI,EAAEsN,CAAC,EAAE1sB,CAAC,EAAEye,MAAM,EAAEyjH,EAAG,CAAC;;MAEtD;;MAEAE,CAAC,CAACp/H,UAAU,CAAEk/H,EAAE,EAAED,EAAG,CAAC;MACtBI,CAAC,CAACz/H,UAAU,CAAEs/H,EAAE,EAAED,EAAG,CAAC;MACtBE,CAAC,CAAC1kH,YAAY,CAAE2kH,CAAC,EAAEC,CAAE,CAAC;MACtBA,CAAC,CAAC5kH,YAAY,CAAE0kH,CAAC,EAAEC,CAAE,CAAC;;MAEtB;;MAEAD,CAAC,CAACzgI,SAAS,CAAC,CAAC;MACb2gI,CAAC,CAAC3gI,SAAS,CAAC,CAAC;MAEb,KAAM,IAAI2hB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqrG,cAAc,EAAE,EAAGrrG,CAAC,EAAG;QAE5C;QACA;;QAEA,IAAM5gB,CAAC,GAAG4gB,CAAC,GAAGqrG,cAAc,GAAGnyH,IAAI,CAACC,EAAE,GAAG,CAAC;QAC1C,IAAMyN,EAAE,GAAG,CAAEy3H,IAAI,GAAGnlI,IAAI,CAAC8D,GAAG,CAAEoC,CAAE,CAAC;QACjC,IAAMyH,EAAE,GAAGw3H,IAAI,GAAGnlI,IAAI,CAAC+D,GAAG,CAAEmC,CAAE,CAAC;;QAE/B;QACA;;QAEA09E,MAAM,CAAC1iF,CAAC,GAAGwkI,EAAE,CAACxkI,CAAC,IAAKwM,EAAE,GAAGo4H,CAAC,CAAC5kI,CAAC,GAAGyM,EAAE,GAAGi4H,CAAC,CAAC1kI,CAAC,CAAE;QACzC0iF,MAAM,CAACpiF,CAAC,GAAGkkI,EAAE,CAAClkI,CAAC,IAAKkM,EAAE,GAAGo4H,CAAC,CAACtkI,CAAC,GAAGmM,EAAE,GAAGi4H,CAAC,CAACpkI,CAAC,CAAE;QACzCoiF,MAAM,CAAC7tE,CAAC,GAAG2vH,EAAE,CAAC3vH,CAAC,IAAKrI,EAAE,GAAGo4H,CAAC,CAAC/vH,CAAC,GAAGpI,EAAE,GAAGi4H,CAAC,CAAC7vH,CAAC,CAAE;QAEzC67B,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;;QAE7C;;QAEA+L,MAAM,CAACrb,UAAU,CAAEm9E,MAAM,EAAE8hD,EAAG,CAAC,CAACvgI,SAAS,CAAC,CAAC;QAE3C+mC,OAAO,CAAC59C,IAAI,CAAEwzB,MAAM,CAAC5gB,CAAC,EAAE4gB,MAAM,CAACtgB,CAAC,EAAEsgB,MAAM,CAAC/L,CAAE,CAAC;;QAE5C;;QAEAo2B,GAAG,CAAC79C,IAAI,CAAEQ,CAAC,GAAGs2I,eAAgB,CAAC;QAC/Bj5F,GAAG,CAAC79C,IAAI,CAAEw4B,CAAC,GAAGqrG,cAAe,CAAC;MAE/B;IAED;;IAEA;;IAEA,KAAM,IAAIrrG,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIs+G,eAAe,EAAEt+G,IAAC,EAAG,EAAG;MAE7C,KAAM,IAAIh4B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIqjI,cAAc,EAAErjI,IAAC,EAAG,EAAG;QAE5C;;QAEA,IAAM4U,CAAC,GAAG,CAAEyuH,cAAc,GAAG,CAAC,KAAOrrG,IAAC,GAAG,CAAC,CAAE,IAAKh4B,IAAC,GAAG,CAAC,CAAE;QACxD,IAAM6U,CAAC,GAAG,CAAEwuH,cAAc,GAAG,CAAC,IAAKrrG,IAAC,IAAKh4B,IAAC,GAAG,CAAC,CAAE;QAChD,IAAM8U,CAAC,GAAG,CAAEuuH,cAAc,GAAG,CAAC,IAAKrrG,IAAC,GAAGh4B,IAAC;QACxC,IAAMsd,CAAC,GAAG,CAAE+lH,cAAc,GAAG,CAAC,KAAOrrG,IAAC,GAAG,CAAC,CAAE,GAAGh4B,IAAC;;QAEhD;;QAEAk9C,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;QACvB4/B,OAAO,CAAC19C,IAAI,CAAEqV,CAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;MAExB;IAED;;IAEA;;IAEAq5H,OAAA,CAAKz6F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBy5F,OAAA,CAAKv6F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E6zF,OAAA,CAAKv6F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEu5F,OAAA,CAAKv6F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;;IAE/D;;IAEA,SAAS45F,wBAAwBA,CAAEljH,CAAC,EAAEsN,CAAC,EAAE1sB,CAAC,EAAEye,MAAM,EAAE4C,QAAQ,EAAG;MAE9D,IAAMkhH,EAAE,GAAGhmI,IAAI,CAAC8D,GAAG,CAAE+e,CAAE,CAAC;MACxB,IAAMojH,EAAE,GAAGjmI,IAAI,CAAC+D,GAAG,CAAE8e,CAAE,CAAC;MACxB,IAAMqjH,OAAO,GAAGziI,CAAC,GAAG0sB,CAAC,GAAGtN,CAAC;MACzB,IAAMsjH,EAAE,GAAGnmI,IAAI,CAAC8D,GAAG,CAAEoiI,OAAQ,CAAC;MAE9BphH,QAAQ,CAAC5jB,CAAC,GAAGghB,MAAM,IAAK,CAAC,GAAGikH,EAAE,CAAE,GAAG,GAAG,GAAGH,EAAE;MAC3ClhH,QAAQ,CAACtjB,CAAC,GAAG0gB,MAAM,IAAK,CAAC,GAAGikH,EAAE,CAAE,GAAGF,EAAE,GAAG,GAAG;MAC3CnhH,QAAQ,CAAC/O,CAAC,GAAGmM,MAAM,GAAGliB,IAAI,CAAC+D,GAAG,CAAEmiI,OAAQ,CAAC,GAAG,GAAG;IAEhD;IAAC,OAAAT,OAAA;EAEF;EAAC5zI,YAAA,CAAAyzI,iBAAA;IAAAt8I,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA2/F,iBAAA,CAAA38I,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB,OAAO,IAAIqzH,iBAAiB,CAAErzH,IAAI,CAACiQ,MAAM,EAAEjQ,IAAI,CAACkzH,IAAI,EAAElzH,IAAI,CAACmzH,eAAe,EAAEnzH,IAAI,CAACkgH,cAAc,EAAElgH,IAAI,CAACke,CAAC,EAAEle,IAAI,CAACxO,CAAE,CAAC;IAElH;EAAC;EAAA,OAAA6hI,iBAAA;AAAA,EA9J8Bl7F,cAAc;AAAA5hD,OAAA,CAAA88I,iBAAA,GAAAA,iBAAA;AAAA,IAkKxCc,YAAY,0BAAAC,iBAAA;EAAAjzH,SAAA,CAAAgzH,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAhzH,YAAA,CAAA8yH,YAAA;EAEjB,SAAAA,aAAat6D,IAAI,GAAG,IAAIkiD,qBAAqB,CAAE,IAAIvuG,OAAO,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EAAE2lH,eAAe,GAAG,EAAE,EAAEljH,MAAM,GAAG,CAAC,EAAEiwG,cAAc,GAAG,CAAC,EAAEvJ,MAAM,GAAG,KAAK,EAAG;IAAA,IAAA2d,OAAA;IAAAl1I,eAAA,OAAA+0I,YAAA;IAErMG,OAAA,GAAAD,QAAA,CAAAt7I,IAAA;IAEAu7I,OAAA,CAAKx7I,IAAI,GAAG,cAAc;IAE1Bw7I,OAAA,CAAK1uG,UAAU,GAAG;MACjBi0C,IAAI,EAAEA,IAAI;MACVs5D,eAAe,EAAEA,eAAe;MAChCljH,MAAM,EAAEA,MAAM;MACdiwG,cAAc,EAAEA,cAAc;MAC9BvJ,MAAM,EAAEA;IACT,CAAC;IAED,IAAM4d,MAAM,GAAG16D,IAAI,CAAC48C,mBAAmB,CAAE0c,eAAe,EAAExc,MAAO,CAAC;;IAElE;;IAEA2d,OAAA,CAAKl6F,QAAQ,GAAGm6F,MAAM,CAACn6F,QAAQ;IAC/Bk6F,OAAA,CAAKr6F,OAAO,GAAGs6F,MAAM,CAACt6F,OAAO;IAC7Bq6F,OAAA,CAAK1d,SAAS,GAAG2d,MAAM,CAAC3d,SAAS;;IAEjC;;IAEA,IAAMjlC,MAAM,GAAG,IAAInkE,OAAO,CAAC,CAAC;IAC5B,IAAMqC,MAAM,GAAG,IAAIrC,OAAO,CAAC,CAAC;IAC5B,IAAM9J,EAAE,GAAG,IAAIrQ,OAAO,CAAC,CAAC;IACxB,IAAImhI,CAAC,GAAG,IAAIhnH,OAAO,CAAC,CAAC;;IAErB;;IAEA,IAAMmyB,QAAQ,GAAG,EAAE;IACnB,IAAM1F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;IACd,IAAMH,OAAO,GAAG,EAAE;;IAElB;;IAEA06F,kBAAkB,CAAC,CAAC;;IAEpB;;IAEAH,OAAA,CAAKv7F,QAAQ,CAAEgB,OAAQ,CAAC;IACxBu6F,OAAA,CAAKr7F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1E20F,OAAA,CAAKr7F,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAE,CAAE,CAAC;IACvEq6F,OAAA,CAAKr7F,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAE,CAAE,CAAC;;IAE/D;;IAEA,SAASu6F,kBAAkBA,CAAA,EAAG;MAE7B,KAAM,IAAI53I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs2I,eAAe,EAAEt2I,CAAC,EAAG,EAAG;QAE5C63I,eAAe,CAAE73I,CAAE,CAAC;MAErB;;MAEA;MACA;MACA;MACA;;MAEA63I,eAAe,CAAI/d,MAAM,KAAK,KAAK,GAAKwc,eAAe,GAAG,CAAE,CAAC;;MAE7D;MACA;;MAEA5Q,WAAW,CAAC,CAAC;;MAEb;;MAEAoS,eAAe,CAAC,CAAC;IAElB;IAEA,SAASD,eAAeA,CAAE73I,CAAC,EAAG;MAE7B;;MAEA23I,CAAC,GAAG36D,IAAI,CAACm7C,UAAU,CAAEn4H,CAAC,GAAGs2I,eAAe,EAAEqB,CAAE,CAAC;;MAE7C;;MAEA,IAAMX,CAAC,GAAGU,MAAM,CAACt6F,OAAO,CAAEp9C,CAAC,CAAE;MAC7B,IAAM82I,CAAC,GAAGY,MAAM,CAAC3d,SAAS,CAAE/5H,CAAC,CAAE;;MAE/B;;MAEA,KAAM,IAAIg4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqrG,cAAc,EAAErrG,CAAC,EAAG,EAAG;QAE5C,IAAM5gB,CAAC,GAAG4gB,CAAC,GAAGqrG,cAAc,GAAGnyH,IAAI,CAACC,EAAE,GAAG,CAAC;QAE1C,IAAM8D,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAEmC,CAAE,CAAC;QACzB,IAAMpC,GAAG,GAAG,CAAE9D,IAAI,CAAC8D,GAAG,CAAEoC,CAAE,CAAC;;QAE3B;;QAEA4b,MAAM,CAAC5gB,CAAC,GAAK4C,GAAG,GAAGgiI,CAAC,CAAC5kI,CAAC,GAAG6C,GAAG,GAAG6hI,CAAC,CAAC1kI,CAAG;QACpC4gB,MAAM,CAACtgB,CAAC,GAAKsC,GAAG,GAAGgiI,CAAC,CAACtkI,CAAC,GAAGuC,GAAG,GAAG6hI,CAAC,CAACpkI,CAAG;QACpCsgB,MAAM,CAAC/L,CAAC,GAAKjS,GAAG,GAAGgiI,CAAC,CAAC/vH,CAAC,GAAGhS,GAAG,GAAG6hI,CAAC,CAAC7vH,CAAG;QACpC+L,MAAM,CAAC3c,SAAS,CAAC,CAAC;QAElB+mC,OAAO,CAAC59C,IAAI,CAAEwzB,MAAM,CAAC5gB,CAAC,EAAE4gB,MAAM,CAACtgB,CAAC,EAAEsgB,MAAM,CAAC/L,CAAE,CAAC;;QAE5C;;QAEA6tE,MAAM,CAAC1iF,CAAC,GAAGulI,CAAC,CAACvlI,CAAC,GAAGghB,MAAM,GAAGJ,MAAM,CAAC5gB,CAAC;QAClC0iF,MAAM,CAACpiF,CAAC,GAAGilI,CAAC,CAACjlI,CAAC,GAAG0gB,MAAM,GAAGJ,MAAM,CAACtgB,CAAC;QAClCoiF,MAAM,CAAC7tE,CAAC,GAAG0wH,CAAC,CAAC1wH,CAAC,GAAGmM,MAAM,GAAGJ,MAAM,CAAC/L,CAAC;QAElC67B,QAAQ,CAACtjD,IAAI,CAAEs1F,MAAM,CAAC1iF,CAAC,EAAE0iF,MAAM,CAACpiF,CAAC,EAAEoiF,MAAM,CAAC7tE,CAAE,CAAC;MAE9C;IAED;IAEA,SAAS6wH,eAAeA,CAAA,EAAG;MAE1B,KAAM,IAAI9/G,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIs+G,eAAe,EAAEt+G,CAAC,EAAG,EAAG;QAE7C,KAAM,IAAIh4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqjI,cAAc,EAAErjI,CAAC,EAAG,EAAG;UAE5C,IAAM4U,CAAC,GAAG,CAAEyuH,cAAc,GAAG,CAAC,KAAOrrG,CAAC,GAAG,CAAC,CAAE,IAAKh4B,CAAC,GAAG,CAAC,CAAE;UACxD,IAAM6U,CAAC,GAAG,CAAEwuH,cAAc,GAAG,CAAC,IAAKrrG,CAAC,IAAKh4B,CAAC,GAAG,CAAC,CAAE;UAChD,IAAM8U,CAAC,GAAG,CAAEuuH,cAAc,GAAG,CAAC,IAAKrrG,CAAC,GAAGh4B,CAAC;UACxC,IAAMsd,CAAC,GAAG,CAAE+lH,cAAc,GAAG,CAAC,KAAOrrG,CAAC,GAAG,CAAC,CAAE,GAAGh4B,CAAC;;UAEhD;;UAEAk9C,OAAO,CAAC19C,IAAI,CAAEoV,CAAC,EAAEC,CAAC,EAAEyI,CAAE,CAAC;UACvB4/B,OAAO,CAAC19C,IAAI,CAAEqV,CAAC,EAAEC,CAAC,EAAEwI,CAAE,CAAC;QAExB;MAED;IAED;IAEA,SAASooH,WAAWA,CAAA,EAAG;MAEtB,KAAM,IAAI1lI,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIs2I,eAAe,EAAEt2I,CAAC,EAAG,EAAG;QAE7C,KAAM,IAAIg4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIqrG,cAAc,EAAErrG,CAAC,EAAG,EAAG;UAE5CnR,EAAE,CAACzU,CAAC,GAAGpS,CAAC,GAAGs2I,eAAe;UAC1BzvH,EAAE,CAACnU,CAAC,GAAGslB,CAAC,GAAGqrG,cAAc;UAEzBhmF,GAAG,CAAC79C,IAAI,CAAEqnB,EAAE,CAACzU,CAAC,EAAEyU,EAAE,CAACnU,CAAE,CAAC;QAEvB;MAED;IAED;IAAC,OAAA+kI,OAAA;EAEF;EAAC10I,YAAA,CAAAu0I,YAAA;IAAAp9I,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAygG,YAAA,CAAAz9I,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAAygG,YAAA,CAAAz9I,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAAC65D,IAAI,GAAG,IAAI,CAACj0C,UAAU,CAACi0C,IAAI,CAACx5D,MAAM,CAAC,CAAC;MAEzC,OAAOL,IAAI;IAEZ;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAiB5gC,IAAI,EAAG;MAEvB;MACA;MACA,OAAO,IAAIm0H,YAAY,CACtB,IAAI1X,MAAM,CAAEz8G,IAAI,CAAC65D,IAAI,CAAC/gF,IAAI,CAAE,CAAC,CAAC,CAAC8nD,QAAQ,CAAE5gC,IAAI,CAAC65D,IAAK,CAAC,EACpD75D,IAAI,CAACmzH,eAAe,EACpBnzH,IAAI,CAACiQ,MAAM,EACXjQ,IAAI,CAACkgH,cAAc,EACnBlgH,IAAI,CAAC22G,MACN,CAAC;IAEF;EAAC;EAAA,OAAAwd,YAAA;AAAA,EA/LyBh8F,cAAc;AAAA5hD,OAAA,CAAA49I,YAAA,GAAAA,YAAA;AAAA,IAmMnCS,iBAAiB,0BAAAC,iBAAA;EAAA1zH,SAAA,CAAAyzH,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAzzH,YAAA,CAAAuzH,iBAAA;EAEtB,SAAAA,kBAAajiH,QAAQ,GAAG,IAAI,EAAG;IAAA,IAAAoiH,OAAA;IAAA31I,eAAA,OAAAw1I,iBAAA;IAE9BG,OAAA,GAAAD,QAAA,CAAA/7I,IAAA;IAEAg8I,OAAA,CAAKj8I,IAAI,GAAG,mBAAmB;IAE/Bi8I,OAAA,CAAKnvG,UAAU,GAAG;MACjBjT,QAAQ,EAAEA;IACX,CAAC;IAED,IAAKA,QAAQ,KAAK,IAAI,EAAG;MAExB;;MAEA,IAAMgtB,QAAQ,GAAG,EAAE;MACnB,IAAMq1F,KAAK,GAAG,IAAIruD,GAAG,CAAC,CAAC;;MAEvB;;MAEA,IAAM9tC,KAAK,GAAG,IAAIrrB,OAAO,CAAC,CAAC;MAC3B,IAAMsxB,GAAG,GAAG,IAAItxB,OAAO,CAAC,CAAC;MAEzB,IAAKmF,QAAQ,CAACrlB,KAAK,KAAK,IAAI,EAAG;QAE9B;;QAEA,IAAMulB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAC7C,IAAMknB,OAAO,GAAGpnB,QAAQ,CAACrlB,KAAK;QAC9B,IAAIorC,MAAM,GAAG/lB,QAAQ,CAAC+lB,MAAM;QAE5B,IAAKA,MAAM,CAAC97C,MAAM,KAAK,CAAC,EAAG;UAE1B87C,MAAM,GAAG,CAAE;YAAEG,KAAK,EAAE,CAAC;YAAErwB,KAAK,EAAEuxB,OAAO,CAACvxB,KAAK;YAAE6wB,aAAa,EAAE;UAAE,CAAC,CAAE;QAElE;;QAEA;;QAEA,KAAM,IAAI47F,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGx8F,MAAM,CAAC97C,MAAM,EAAEq4I,CAAC,GAAGC,EAAE,EAAE,EAAGD,CAAC,EAAG;UAEnD,IAAMh6F,KAAK,GAAGvC,MAAM,CAAEu8F,CAAC,CAAE;UAEzB,IAAMp1F,UAAU,GAAG5E,KAAK,CAACpC,KAAK;UAC9B,IAAM8H,UAAU,GAAG1F,KAAK,CAACzyB,KAAK;UAE9B,KAAM,IAAI3rB,CAAC,GAAGgjD,UAAU,EAAElyC,CAAC,GAAKkyC,UAAU,GAAGc,UAAY,EAAE9jD,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,IAAI,CAAC,EAAG;YAE1E,KAAM,IAAIg4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;cAE9B,IAAMugB,MAAM,GAAG2E,OAAO,CAAC7iC,IAAI,CAAEra,CAAC,GAAGg4B,CAAE,CAAC;cACpC,IAAMwgB,MAAM,GAAG0E,OAAO,CAAC7iC,IAAI,CAAEra,CAAC,GAAG,CAAEg4B,CAAC,GAAG,CAAC,IAAK,CAAE,CAAC;cAEhDgkB,KAAK,CAAC7hC,mBAAmB,CAAE6b,QAAQ,EAAEuiB,MAAO,CAAC;cAC7C0J,GAAG,CAAC9nC,mBAAmB,CAAE6b,QAAQ,EAAEwiB,MAAO,CAAC;cAE3C,IAAK8/F,YAAY,CAAEt8F,KAAK,EAAEiG,GAAG,EAAEk2F,KAAM,CAAC,KAAK,IAAI,EAAG;gBAEjDr1F,QAAQ,CAACtjD,IAAI,CAAEw8C,KAAK,CAAC5pC,CAAC,EAAE4pC,KAAK,CAACtpC,CAAC,EAAEspC,KAAK,CAAC/0B,CAAE,CAAC;gBAC1C67B,QAAQ,CAACtjD,IAAI,CAAEyiD,GAAG,CAAC7vC,CAAC,EAAE6vC,GAAG,CAACvvC,CAAC,EAAEuvC,GAAG,CAACh7B,CAAE,CAAC;cAErC;YAED;UAED;QAED;MAED,CAAC,MAAM;QAEN;;QAEA,IAAM+O,UAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAE7C,KAAM,IAAIh2B,IAAC,GAAG,CAAC,EAAE8Q,IAAC,GAAKklB,UAAQ,CAACrK,KAAK,GAAG,CAAG,EAAE3rB,IAAC,GAAG8Q,IAAC,EAAE9Q,IAAC,EAAG,EAAG;UAE1D,KAAM,IAAIg4B,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;YAE9B;YACA;;YAEA,IAAMugB,MAAM,GAAG,CAAC,GAAGv4C,IAAC,GAAGg4B,IAAC;YACxB,IAAMwgB,OAAM,GAAG,CAAC,GAAGx4C,IAAC,GAAK,CAAEg4B,IAAC,GAAG,CAAC,IAAK,CAAG;YAExCgkB,KAAK,CAAC7hC,mBAAmB,CAAE6b,UAAQ,EAAEuiB,MAAO,CAAC;YAC7C0J,GAAG,CAAC9nC,mBAAmB,CAAE6b,UAAQ,EAAEwiB,OAAO,CAAC;YAE3C,IAAK8/F,YAAY,CAAEt8F,KAAK,EAAEiG,GAAG,EAAEk2F,KAAM,CAAC,KAAK,IAAI,EAAG;cAEjDr1F,QAAQ,CAACtjD,IAAI,CAAEw8C,KAAK,CAAC5pC,CAAC,EAAE4pC,KAAK,CAACtpC,CAAC,EAAEspC,KAAK,CAAC/0B,CAAE,CAAC;cAC1C67B,QAAQ,CAACtjD,IAAI,CAAEyiD,GAAG,CAAC7vC,CAAC,EAAE6vC,GAAG,CAACvvC,CAAC,EAAEuvC,GAAG,CAACh7B,CAAE,CAAC;YAErC;UAED;QAED;MAED;;MAEA;;MAEAixH,OAAA,CAAK97F,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAE3E;IAAC,OAAAo1F,OAAA;EAEF;EAACn1I,YAAA,CAAAg1I,iBAAA;IAAA79I,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAkhG,iBAAA,CAAAl+I,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyjB,UAAU,GAAGnvC,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAEvE,MAAM,CAACyjB,UAAW,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAgvG,iBAAA;AAAA,EAtH8Bz8F,cAAc;AAAA5hD,OAAA,CAAAq+I,iBAAA,GAAAA,iBAAA;AA0H9C,SAASO,YAAYA,CAAEt8F,KAAK,EAAEiG,GAAG,EAAEk2F,KAAK,EAAG;EAE1C,IAAMI,KAAK,MAAA12H,MAAA,CAAMm6B,KAAK,CAAC5pC,CAAC,OAAAyP,MAAA,CAAIm6B,KAAK,CAACtpC,CAAC,OAAAmP,MAAA,CAAIm6B,KAAK,CAAC/0B,CAAC,OAAApF,MAAA,CAAIogC,GAAG,CAAC7vC,CAAC,OAAAyP,MAAA,CAAIogC,GAAG,CAACvvC,CAAC,OAAAmP,MAAA,CAAIogC,GAAG,CAACh7B,CAAC,CAAE;EAC3E,IAAMuxH,KAAK,MAAA32H,MAAA,CAAMogC,GAAG,CAAC7vC,CAAC,OAAAyP,MAAA,CAAIogC,GAAG,CAACvvC,CAAC,OAAAmP,MAAA,CAAIogC,GAAG,CAACh7B,CAAC,OAAApF,MAAA,CAAIm6B,KAAK,CAAC5pC,CAAC,OAAAyP,MAAA,CAAIm6B,KAAK,CAACtpC,CAAC,OAAAmP,MAAA,CAAIm6B,KAAK,CAAC/0B,CAAC,CAAE,CAAC,CAAC;;EAE7E,IAAKkxH,KAAK,CAAC3vE,GAAG,CAAE+vE,KAAM,CAAC,KAAK,IAAI,IAAIJ,KAAK,CAAC3vE,GAAG,CAAEgwE,KAAM,CAAC,KAAK,IAAI,EAAG;IAEjE,OAAO,KAAK;EAEb,CAAC,MAAM;IAENL,KAAK,CAAC9gI,GAAG,CAAEkhI,KAAM,CAAC;IAClBJ,KAAK,CAAC9gI,GAAG,CAAEmhI,KAAM,CAAC;IAClB,OAAO,IAAI;EAEZ;AAED;AAEA,IAAIC,UAAU,GAAG,aAAa7+I,MAAM,CAACimI,MAAM,CAAC;EAC3Cp/H,SAAS,EAAE,IAAI;EACf6hD,WAAW,EAAEA,WAAW;EACxB2gF,eAAe,EAAEA,eAAe;EAChCM,cAAc,EAAEA,cAAc;EAC9BuB,YAAY,EAAEA,YAAY;EAC1BhB,gBAAgB,EAAEA,gBAAgB;EAClC4C,oBAAoB,EAAEA,oBAAoB;EAC1CQ,aAAa,EAAEA,aAAa;EAC5B8G,eAAe,EAAEA,eAAe;EAChC4F,mBAAmB,EAAEA,mBAAmB;EACxCtR,aAAa,EAAEA,aAAa;EAC5B0R,kBAAkB,EAAEA,kBAAkB;EACtC7jF,aAAa,EAAEA,aAAa;EAC5B+0E,kBAAkB,EAAEA,kBAAkB;EACtCkP,YAAY,EAAEA,YAAY;EAC1BU,aAAa,EAAEA,aAAa;EAC5BQ,cAAc,EAAEA,cAAc;EAC9BQ,mBAAmB,EAAEA,mBAAmB;EACxCI,aAAa,EAAEA,aAAa;EAC5BM,iBAAiB,EAAEA,iBAAiB;EACpCc,YAAY,EAAEA,YAAY;EAC1BS,iBAAiB,EAAEA;AACpB,CAAC,CAAC;AAAC,IAEG5sD,cAAc,0BAAAutD,UAAA;EAAAp0H,SAAA,CAAA6mE,cAAA,EAAAutD,UAAA;EAAA,IAAAC,QAAA,GAAAn0H,YAAA,CAAA2mE,cAAA;EAEnB,SAAAA,eAAapiD,UAAU,EAAG;IAAA,IAAA6vG,OAAA;IAAAr2I,eAAA,OAAA4oF,cAAA;IAEzBytD,OAAA,GAAAD,QAAA,CAAAz8I,IAAA;IAEA08I,OAAA,CAAKr6B,gBAAgB,GAAG,IAAI;IAE5Bq6B,OAAA,CAAK38I,IAAI,GAAG,gBAAgB;IAE5B28I,OAAA,CAAKl4H,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC;IAClCskG,OAAA,CAAK1rG,WAAW,GAAG,IAAI;IAEvB0rG,OAAA,CAAK7kG,GAAG,GAAG,IAAI;IAEf6kG,OAAA,CAAKppG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA6vG,OAAA;EAE9B;EAAC71I,YAAA,CAAAooF,cAAA;IAAAjxF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAs0C,cAAA,CAAAtxF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC5E,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAE/B,IAAI,CAACqzB,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAo3C,cAAA;AAAA,EA7B2B1+C,QAAQ;AAAA/yC,OAAA,CAAAyxF,cAAA,GAAAA,cAAA;AAAA,IAiC/B0tD,iBAAiB,0BAAAC,eAAA;EAAAx0H,SAAA,CAAAu0H,iBAAA,EAAAC,eAAA;EAAA,IAAAC,QAAA,GAAAv0H,YAAA,CAAAq0H,iBAAA;EAEtB,SAAAA,kBAAa9vG,UAAU,EAAG;IAAA,IAAAiwG,OAAA;IAAAz2I,eAAA,OAAAs2I,iBAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAA78I,IAAA,OAAO6sC,UAAU;IAEjBiwG,OAAA,CAAK50D,mBAAmB,GAAG,IAAI;IAE/B40D,OAAA,CAAK/8I,IAAI,GAAG,mBAAmB;IAAC,OAAA+8I,OAAA;EAEjC;EAAC,OAAAj2I,YAAA,CAAA81I,iBAAA;AAAA,EAV8B/zF,cAAc;AAAAprD,OAAA,CAAAm/I,iBAAA,GAAAA,iBAAA;AAAA,IAcxChuD,oBAAoB,0BAAAouD,UAAA;EAAA30H,SAAA,CAAAumE,oBAAA,EAAAouD,UAAA;EAAA,IAAAC,QAAA,GAAA10H,YAAA,CAAAqmE,oBAAA;EAEzB,SAAAA,qBAAa9hD,UAAU,EAAG;IAAA,IAAAowG,OAAA;IAAA52I,eAAA,OAAAsoF,oBAAA;IAEzBsuD,OAAA,GAAAD,QAAA,CAAAh9I,IAAA;IAEAi9I,OAAA,CAAK3tD,sBAAsB,GAAG,IAAI;IAElC2tD,OAAA,CAAKh0F,OAAO,GAAG;MAAE,UAAU,EAAE;IAAG,CAAC;IAEjCg0F,OAAA,CAAKl9I,IAAI,GAAG,sBAAsB;IAElCk9I,OAAA,CAAKz4H,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;IACpC6kG,OAAA,CAAKvpG,SAAS,GAAG,GAAG;IACpBupG,OAAA,CAAKtpG,SAAS,GAAG,GAAG;IAEpBspG,OAAA,CAAK/nG,GAAG,GAAG,IAAI;IAEf+nG,OAAA,CAAK5nG,QAAQ,GAAG,IAAI;IACpB4nG,OAAA,CAAK3nG,iBAAiB,GAAG,GAAG;IAE5B2nG,OAAA,CAAK1nG,KAAK,GAAG,IAAI;IACjB0nG,OAAA,CAAKznG,cAAc,GAAG,GAAG;IAEzBynG,OAAA,CAAKlpG,QAAQ,GAAG,IAAIqE,KAAK,CAAE,QAAS,CAAC;IACrC6kG,OAAA,CAAKjpG,iBAAiB,GAAG,GAAG;IAC5BipG,OAAA,CAAK9mG,WAAW,GAAG,IAAI;IAEvB8mG,OAAA,CAAKxnG,OAAO,GAAG,IAAI;IACnBwnG,OAAA,CAAKvnG,SAAS,GAAG,CAAC;IAElBunG,OAAA,CAAKtnG,SAAS,GAAG,IAAI;IACrBsnG,OAAA,CAAKrnG,aAAa,GAAG3kC,qBAAqB;IAC1CgsI,OAAA,CAAKpnG,WAAW,GAAG,IAAIv7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtC2iI,OAAA,CAAKnnG,eAAe,GAAG,IAAI;IAC3BmnG,OAAA,CAAKlnG,iBAAiB,GAAG,CAAC;IAC1BknG,OAAA,CAAKjnG,gBAAgB,GAAG,CAAC;IAEzBinG,OAAA,CAAKhnG,YAAY,GAAG,IAAI;IAExBgnG,OAAA,CAAK/mG,YAAY,GAAG,IAAI;IAExB+mG,OAAA,CAAK7nG,QAAQ,GAAG,IAAI;IAEpB6nG,OAAA,CAAK1mG,MAAM,GAAG,IAAI;IAClB0mG,OAAA,CAAKxmG,eAAe,GAAG,GAAG;IAE1BwmG,OAAA,CAAKzlG,SAAS,GAAG,KAAK;IACtBylG,OAAA,CAAKxlG,kBAAkB,GAAG,CAAC;IAC3BwlG,OAAA,CAAKvlG,gBAAgB,GAAG,OAAO;IAC/BulG,OAAA,CAAKtlG,iBAAiB,GAAG,OAAO;IAEhCslG,OAAA,CAAKrlG,WAAW,GAAG,KAAK;IAExBqlG,OAAA,CAAKplG,GAAG,GAAG,IAAI;IAEfolG,OAAA,CAAK3pG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAowG,OAAA;EAE9B;EAACp2I,YAAA,CAAA8nF,oBAAA;IAAA3wF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAg0C,oBAAA,CAAAhxF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC6/B,OAAO,GAAG;QAAE,UAAU,EAAE;MAAG,CAAC;MAEjC,IAAI,CAACzkC,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAC/B,IAAI,CAACkvB,SAAS,GAAGtqB,MAAM,CAACsqB,SAAS;MACjC,IAAI,CAACC,SAAS,GAAGvqB,MAAM,CAACuqB,SAAS;MAEjC,IAAI,CAACuB,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGjsB,MAAM,CAACisB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGlsB,MAAM,CAACksB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGnsB,MAAM,CAACmsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGpsB,MAAM,CAACosB,cAAc;MAE3C,IAAI,CAACzB,QAAQ,CAAC94B,IAAI,CAAEmO,MAAM,CAAC2qB,QAAS,CAAC;MACrC,IAAI,CAACoC,WAAW,GAAG/sB,MAAM,CAAC+sB,WAAW;MACrC,IAAI,CAACnC,iBAAiB,GAAG5qB,MAAM,CAAC4qB,iBAAiB;MAEjD,IAAI,CAACyB,OAAO,GAAGrsB,MAAM,CAACqsB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGtsB,MAAM,CAACssB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGvsB,MAAM,CAACusB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAGxsB,MAAM,CAACwsB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC56B,IAAI,CAAEmO,MAAM,CAACysB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG3sB,MAAM,CAAC2sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG5sB,MAAM,CAAC4sB,gBAAgB;MAE/C,IAAI,CAACC,YAAY,GAAG7sB,MAAM,CAAC6sB,YAAY;MAEvC,IAAI,CAACC,YAAY,GAAG9sB,MAAM,CAAC8sB,YAAY;MAEvC,IAAI,CAACd,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGntB,MAAM,CAACmtB,MAAM;MAC3B,IAAI,CAACE,eAAe,GAAGrtB,MAAM,CAACqtB,eAAe;MAE7C,IAAI,CAACe,SAAS,GAAGpuB,MAAM,CAACouB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGruB,MAAM,CAACquB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGtuB,MAAM,CAACsuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGvuB,MAAM,CAACuuB,iBAAiB;MAEjD,IAAI,CAACC,WAAW,GAAGxuB,MAAM,CAACwuB,WAAW;MAErC,IAAI,CAACC,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA82C,oBAAA;AAAA,EAlHiCp+C,QAAQ;AAAA/yC,OAAA,CAAAmxF,oBAAA,GAAAA,oBAAA;AAAA,IAsHrCC,oBAAoB,0BAAAsuD,qBAAA;EAAA90H,SAAA,CAAAwmE,oBAAA,EAAAsuD,qBAAA;EAAA,IAAAC,QAAA,GAAA70H,YAAA,CAAAsmE,oBAAA;EAEzB,SAAAA,qBAAa/hD,UAAU,EAAG;IAAA,IAAAuwG,OAAA;IAAA/2I,eAAA,OAAAuoF,oBAAA;IAEzBwuD,OAAA,GAAAD,QAAA,CAAAn9I,IAAA;IAEAo9I,OAAA,CAAK77B,sBAAsB,GAAG,IAAI;IAElC67B,OAAA,CAAKn0F,OAAO,GAAG;MAEd,UAAU,EAAE,EAAE;MACd,UAAU,EAAE;IAEb,CAAC;IAEDm0F,OAAA,CAAKr9I,IAAI,GAAG,sBAAsB;IAElCq9I,OAAA,CAAKpoG,kBAAkB,GAAG,CAAC;IAC3BooG,OAAA,CAAKnoG,aAAa,GAAG,IAAI;IAEzBmoG,OAAA,CAAK7oG,YAAY,GAAG,IAAI;IACxB6oG,OAAA,CAAK9oG,kBAAkB,GAAG,GAAG;IAC7B8oG,OAAA,CAAK5oG,qBAAqB,GAAG,IAAI;IACjC4oG,OAAA,CAAK1oG,oBAAoB,GAAG,IAAIp6B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAC/C8iI,OAAA,CAAK3oG,kBAAkB,GAAG,IAAI;IAE9B2oG,OAAA,CAAKr9E,GAAG,GAAG,GAAG;IAEdriE,MAAM,CAACI,cAAc,CAAAqrB,sBAAA,CAAAi0H,OAAA,GAAQ,cAAc,EAAE;MAC5C3iI,GAAG,EAAE,SAAAA,IAAA,EAAY;QAEhB,OAAS9E,KAAK,CAAE,GAAG,IAAK,IAAI,CAACoqD,GAAG,GAAG,CAAC,CAAE,IAAK,IAAI,CAACA,GAAG,GAAG,CAAC,CAAE,EAAE,CAAC,EAAE,CAAE,CAAC;MAElE,CAAC;MACDvmD,GAAG,EAAE,SAAAA,IAAWk9B,YAAY,EAAG;QAE9B,IAAI,CAACqpB,GAAG,GAAG,CAAE,CAAC,GAAG,GAAG,GAAGrpB,YAAY,KAAO,CAAC,GAAG,GAAG,GAAGA,YAAY,CAAE;MAEnE;IACD,CAAE,CAAC;IAEH0mG,OAAA,CAAKtoG,cAAc,GAAG,IAAI;IAC1BsoG,OAAA,CAAKxoG,cAAc,GAAG,GAAG;IACzBwoG,OAAA,CAAKvoG,yBAAyB,GAAG,CAAE,GAAG,EAAE,GAAG,CAAE;IAC7CuoG,OAAA,CAAKroG,uBAAuB,GAAG,IAAI;IAEnCqoG,OAAA,CAAKvpG,UAAU,GAAG,IAAIuE,KAAK,CAAE,QAAS,CAAC;IACvCglG,OAAA,CAAKl4E,aAAa,GAAG,IAAI;IACzBk4E,OAAA,CAAKtpG,cAAc,GAAG,GAAG;IACzBspG,OAAA,CAAKh4E,iBAAiB,GAAG,IAAI;IAE7Bg4E,OAAA,CAAKtmG,eAAe,GAAG,IAAI;IAE3BsmG,OAAA,CAAKrmG,SAAS,GAAG,CAAC;IAClBqmG,OAAA,CAAKpmG,YAAY,GAAG,IAAI;IACxBomG,OAAA,CAAKnmG,mBAAmB,GAAGjf,QAAQ;IACnColH,OAAA,CAAKlmG,gBAAgB,GAAG,IAAIkB,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE5CglG,OAAA,CAAKlpG,iBAAiB,GAAG,GAAG;IAC5BkpG,OAAA,CAAK/mG,oBAAoB,GAAG,IAAI;IAChC+mG,OAAA,CAAKjpG,aAAa,GAAG,IAAIiE,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzCglG,OAAA,CAAK9mG,gBAAgB,GAAG,IAAI;IAE5B8mG,OAAA,CAAKC,WAAW,GAAG,CAAC;IACpBD,OAAA,CAAKE,UAAU,GAAG,CAAC;IACnBF,OAAA,CAAKG,YAAY,GAAG,CAAC;IACrBH,OAAA,CAAKI,MAAM,GAAG,GAAG;IACjBJ,OAAA,CAAKK,aAAa,GAAG,CAAC;IAEtBL,OAAA,CAAK9pG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAuwG,OAAA;EAE9B;EAACv2I,YAAA,CAAA+nF,oBAAA;IAAA5wF,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAiB;MAEhB,OAAO,IAAI,CAAC4iI,WAAW;IAExB,CAAC;IAAA7jI,GAAA,EAED,SAAAA,IAAgBtb,KAAK,EAAG;MAEvB,IAAK,IAAI,CAACm/I,WAAW,GAAG,CAAC,KAAKn/I,KAAK,GAAG,CAAC,EAAG;QAEzC,IAAI,CAACmpB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACg2H,WAAW,GAAGn/I,KAAK;IAEzB;EAAC;IAAAF,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAgB;MAEf,OAAO,IAAI,CAAC6iI,UAAU;IAEvB,CAAC;IAAA9jI,GAAA,EAED,SAAAA,IAAetb,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACo/I,UAAU,GAAG,CAAC,KAAKp/I,KAAK,GAAG,CAAC,EAAG;QAExC,IAAI,CAACmpB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACi2H,UAAU,GAAGp/I,KAAK;IAExB;EAAC;IAAAF,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAkB;MAEjB,OAAO,IAAI,CAAC8iI,YAAY;IAEzB,CAAC;IAAA/jI,GAAA,EAED,SAAAA,IAAiBtb,KAAK,EAAG;MAExB,IAAK,IAAI,CAACq/I,YAAY,GAAG,CAAC,KAAKr/I,KAAK,GAAG,CAAC,EAAG;QAE1C,IAAI,CAACmpB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACk2H,YAAY,GAAGr/I,KAAK;IAE1B;EAAC;IAAAF,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAAC+iI,MAAM;IAEnB,CAAC;IAAAhkI,GAAA,EAED,SAAAA,IAAWtb,KAAK,EAAG;MAElB,IAAK,IAAI,CAACs/I,MAAM,GAAG,CAAC,KAAKt/I,KAAK,GAAG,CAAC,EAAG;QAEpC,IAAI,CAACmpB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACm2H,MAAM,GAAGt/I,KAAK;IAEpB;EAAC;IAAAF,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAmB;MAElB,OAAO,IAAI,CAACgjI,aAAa;IAE1B,CAAC;IAAAjkI,GAAA,EAED,SAAAA,IAAkBtb,KAAK,EAAG;MAEzB,IAAK,IAAI,CAACu/I,aAAa,GAAG,CAAC,KAAKv/I,KAAK,GAAG,CAAC,EAAG;QAE3C,IAAI,CAACmpB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACo2H,aAAa,GAAGv/I,KAAK;IAE3B;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAi0C,oBAAA,CAAAjxF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC6/B,OAAO,GAAG;QAEd,UAAU,EAAE,EAAE;QACd,UAAU,EAAE;MAEb,CAAC;MAED,IAAI,CAAClgC,UAAU,GAAGK,MAAM,CAACL,UAAU;MACnC,IAAI,CAACisB,kBAAkB,GAAG5rB,MAAM,CAAC4rB,kBAAkB;MACnD,IAAI,CAACC,aAAa,GAAG7rB,MAAM,CAAC6rB,aAAa;MAEzC,IAAI,CAACZ,SAAS,GAAGjrB,MAAM,CAACirB,SAAS;MACjC,IAAI,CAACE,YAAY,GAAGnrB,MAAM,CAACmrB,YAAY;MACvC,IAAI,CAACD,kBAAkB,GAAGlrB,MAAM,CAACkrB,kBAAkB;MACnD,IAAI,CAACE,qBAAqB,GAAGprB,MAAM,CAACorB,qBAAqB;MACzD,IAAI,CAACC,kBAAkB,GAAGrrB,MAAM,CAACqrB,kBAAkB;MACnD,IAAI,CAACC,oBAAoB,CAACz5B,IAAI,CAAEmO,MAAM,CAACsrB,oBAAqB,CAAC;MAE7D,IAAI,CAACqrB,GAAG,GAAG32C,MAAM,CAAC22C,GAAG;MAErB,IAAI,CAACprB,WAAW,GAAGvrB,MAAM,CAACurB,WAAW;MACrC,IAAI,CAACG,cAAc,GAAG1rB,MAAM,CAAC0rB,cAAc;MAC3C,IAAI,CAACF,cAAc,GAAGxrB,MAAM,CAACwrB,cAAc;MAC3C,IAAI,CAACC,yBAAyB,GAAAvK,kBAAA,CAAQlhB,MAAM,CAACyrB,yBAAyB,CAAE;MACxE,IAAI,CAACE,uBAAuB,GAAG3rB,MAAM,CAAC2rB,uBAAuB;MAE7D,IAAI,CAACnB,KAAK,GAAGxqB,MAAM,CAACwqB,KAAK;MACzB,IAAI,CAACC,UAAU,CAAC54B,IAAI,CAAEmO,MAAM,CAACyqB,UAAW,CAAC;MACzC,IAAI,CAACqxB,aAAa,GAAG97C,MAAM,CAAC87C,aAAa;MACzC,IAAI,CAACpxB,cAAc,GAAG1qB,MAAM,CAAC0qB,cAAc;MAC3C,IAAI,CAACsxB,iBAAiB,GAAGh8C,MAAM,CAACg8C,iBAAiB;MAEjD,IAAI,CAACvuB,YAAY,GAAGztB,MAAM,CAACytB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAG1tB,MAAM,CAAC0tB,eAAe;MAE7C,IAAI,CAACC,SAAS,GAAG3tB,MAAM,CAAC2tB,SAAS;MACjC,IAAI,CAACC,YAAY,GAAG5tB,MAAM,CAAC4tB,YAAY;MACvC,IAAI,CAACC,mBAAmB,GAAG7tB,MAAM,CAAC6tB,mBAAmB;MACrD,IAAI,CAACC,gBAAgB,CAACj8B,IAAI,CAAEmO,MAAM,CAAC8tB,gBAAiB,CAAC;MAErD,IAAI,CAAChD,iBAAiB,GAAG9qB,MAAM,CAAC8qB,iBAAiB;MACjD,IAAI,CAACmC,oBAAoB,GAAGjtB,MAAM,CAACitB,oBAAoB;MACvD,IAAI,CAAClC,aAAa,CAACl5B,IAAI,CAAEmO,MAAM,CAAC+qB,aAAc,CAAC;MAC/C,IAAI,CAACmC,gBAAgB,GAAGltB,MAAM,CAACktB,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAs4C,oBAAA;AAAA,EAtNiCD,oBAAoB;AAAAnxF,OAAA,CAAAoxF,oBAAA,GAAAA,oBAAA;AAAA,IA0NjDH,iBAAiB,0BAAAivD,WAAA;EAAAt1H,SAAA,CAAAqmE,iBAAA,EAAAivD,WAAA;EAAA,IAAAC,QAAA,GAAAr1H,YAAA,CAAAmmE,iBAAA;EAEtB,SAAAA,kBAAa5hD,UAAU,EAAG;IAAA,IAAA+wG,OAAA;IAAAv3I,eAAA,OAAAooF,iBAAA;IAEzBmvD,OAAA,GAAAD,QAAA,CAAA39I,IAAA;IAEA49I,OAAA,CAAKx8B,mBAAmB,GAAG,IAAI;IAE/Bw8B,OAAA,CAAK79I,IAAI,GAAG,mBAAmB;IAE/B69I,OAAA,CAAKp5H,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;IACpCwlG,OAAA,CAAK3pG,QAAQ,GAAG,IAAImE,KAAK,CAAE,QAAS,CAAC;IACrCwlG,OAAA,CAAKxpG,SAAS,GAAG,EAAE;IAEnBwpG,OAAA,CAAK1oG,GAAG,GAAG,IAAI;IAEf0oG,OAAA,CAAKvoG,QAAQ,GAAG,IAAI;IACpBuoG,OAAA,CAAKtoG,iBAAiB,GAAG,GAAG;IAE5BsoG,OAAA,CAAKroG,KAAK,GAAG,IAAI;IACjBqoG,OAAA,CAAKpoG,cAAc,GAAG,GAAG;IAEzBooG,OAAA,CAAK7pG,QAAQ,GAAG,IAAIqE,KAAK,CAAE,QAAS,CAAC;IACrCwlG,OAAA,CAAK5pG,iBAAiB,GAAG,GAAG;IAC5B4pG,OAAA,CAAKznG,WAAW,GAAG,IAAI;IAEvBynG,OAAA,CAAKnoG,OAAO,GAAG,IAAI;IACnBmoG,OAAA,CAAKloG,SAAS,GAAG,CAAC;IAElBkoG,OAAA,CAAKjoG,SAAS,GAAG,IAAI;IACrBioG,OAAA,CAAKhoG,aAAa,GAAG3kC,qBAAqB;IAC1C2sI,OAAA,CAAK/nG,WAAW,GAAG,IAAIv7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtCsjI,OAAA,CAAK9nG,eAAe,GAAG,IAAI;IAC3B8nG,OAAA,CAAK7nG,iBAAiB,GAAG,CAAC;IAC1B6nG,OAAA,CAAK5nG,gBAAgB,GAAG,CAAC;IAEzB4nG,OAAA,CAAKxnG,WAAW,GAAG,IAAI;IAEvBwnG,OAAA,CAAKxoG,QAAQ,GAAG,IAAI;IAEpBwoG,OAAA,CAAKrnG,MAAM,GAAG,IAAI;IAClBqnG,OAAA,CAAKpnG,OAAO,GAAG3rC,iBAAiB;IAChC+yI,OAAA,CAAKlnG,YAAY,GAAG,CAAC;IACrBknG,OAAA,CAAKjnG,eAAe,GAAG,IAAI;IAE3BinG,OAAA,CAAKpmG,SAAS,GAAG,KAAK;IACtBomG,OAAA,CAAKnmG,kBAAkB,GAAG,CAAC;IAC3BmmG,OAAA,CAAKlmG,gBAAgB,GAAG,OAAO;IAC/BkmG,OAAA,CAAKjmG,iBAAiB,GAAG,OAAO;IAEhCimG,OAAA,CAAKhmG,WAAW,GAAG,KAAK;IAExBgmG,OAAA,CAAK/lG,GAAG,GAAG,IAAI;IAEf+lG,OAAA,CAAKtqG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA+wG,OAAA;EAE9B;EAAC/2I,YAAA,CAAA4nF,iBAAA;IAAAzwF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA8zC,iBAAA,CAAA9wF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC5E,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAC/B,IAAI,CAACyvB,QAAQ,CAACh5B,IAAI,CAAEmO,MAAM,CAAC6qB,QAAS,CAAC;MACrC,IAAI,CAACG,SAAS,GAAGhrB,MAAM,CAACgrB,SAAS;MAEjC,IAAI,CAACc,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGjsB,MAAM,CAACisB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGlsB,MAAM,CAACksB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGnsB,MAAM,CAACmsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGpsB,MAAM,CAACosB,cAAc;MAE3C,IAAI,CAACzB,QAAQ,CAAC94B,IAAI,CAAEmO,MAAM,CAAC2qB,QAAS,CAAC;MACrC,IAAI,CAACoC,WAAW,GAAG/sB,MAAM,CAAC+sB,WAAW;MACrC,IAAI,CAACnC,iBAAiB,GAAG5qB,MAAM,CAAC4qB,iBAAiB;MAEjD,IAAI,CAACyB,OAAO,GAAGrsB,MAAM,CAACqsB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGtsB,MAAM,CAACssB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGvsB,MAAM,CAACusB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAGxsB,MAAM,CAACwsB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC56B,IAAI,CAAEmO,MAAM,CAACysB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG3sB,MAAM,CAAC2sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG5sB,MAAM,CAAC4sB,gBAAgB;MAE/C,IAAI,CAACI,WAAW,GAAGhtB,MAAM,CAACgtB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGntB,MAAM,CAACmtB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGptB,MAAM,CAACotB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAGttB,MAAM,CAACstB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAGvtB,MAAM,CAACutB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGpuB,MAAM,CAACouB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGruB,MAAM,CAACquB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGtuB,MAAM,CAACsuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGvuB,MAAM,CAACuuB,iBAAiB;MAEjD,IAAI,CAACC,WAAW,GAAGxuB,MAAM,CAACwuB,WAAW;MAErC,IAAI,CAACC,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA42C,iBAAA;AAAA,EA9G8Bl+C,QAAQ;AAAA/yC,OAAA,CAAAixF,iBAAA,GAAAA,iBAAA;AAAA,IAkHlCC,gBAAgB,0BAAAmvD,WAAA;EAAAz1H,SAAA,CAAAsmE,gBAAA,EAAAmvD,WAAA;EAAA,IAAAC,QAAA,GAAAx1H,YAAA,CAAAomE,gBAAA;EAErB,SAAAA,iBAAa7hD,UAAU,EAAG;IAAA,IAAAkxG,OAAA;IAAA13I,eAAA,OAAAqoF,gBAAA;IAEzBqvD,OAAA,GAAAD,QAAA,CAAA99I,IAAA;IAEA+9I,OAAA,CAAK78B,kBAAkB,GAAG,IAAI;IAE9B68B,OAAA,CAAK90F,OAAO,GAAG;MAAE,MAAM,EAAE;IAAG,CAAC;IAE7B80F,OAAA,CAAKh+I,IAAI,GAAG,kBAAkB;IAE9Bg+I,OAAA,CAAKv5H,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC;IAElC2lG,OAAA,CAAK7oG,GAAG,GAAG,IAAI;IACf6oG,OAAA,CAAKnnG,WAAW,GAAG,IAAI;IAEvBmnG,OAAA,CAAK1oG,QAAQ,GAAG,IAAI;IACpB0oG,OAAA,CAAKzoG,iBAAiB,GAAG,GAAG;IAE5ByoG,OAAA,CAAKxoG,KAAK,GAAG,IAAI;IACjBwoG,OAAA,CAAKvoG,cAAc,GAAG,GAAG;IAEzBuoG,OAAA,CAAKhqG,QAAQ,GAAG,IAAIqE,KAAK,CAAE,QAAS,CAAC;IACrC2lG,OAAA,CAAK/pG,iBAAiB,GAAG,GAAG;IAC5B+pG,OAAA,CAAK5nG,WAAW,GAAG,IAAI;IAEvB4nG,OAAA,CAAKtoG,OAAO,GAAG,IAAI;IACnBsoG,OAAA,CAAKroG,SAAS,GAAG,CAAC;IAElBqoG,OAAA,CAAKpoG,SAAS,GAAG,IAAI;IACrBooG,OAAA,CAAKnoG,aAAa,GAAG3kC,qBAAqB;IAC1C8sI,OAAA,CAAKloG,WAAW,GAAG,IAAIv7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtCyjI,OAAA,CAAKjoG,eAAe,GAAG,IAAI;IAC3BioG,OAAA,CAAKhoG,iBAAiB,GAAG,CAAC;IAC1BgoG,OAAA,CAAK/nG,gBAAgB,GAAG,CAAC;IAEzB+nG,OAAA,CAAK3oG,QAAQ,GAAG,IAAI;IAEpB2oG,OAAA,CAAKvmG,SAAS,GAAG,KAAK;IACtBumG,OAAA,CAAKtmG,kBAAkB,GAAG,CAAC;IAC3BsmG,OAAA,CAAKrmG,gBAAgB,GAAG,OAAO;IAC/BqmG,OAAA,CAAKpmG,iBAAiB,GAAG,OAAO;IAEhComG,OAAA,CAAKlmG,GAAG,GAAG,IAAI;IAEfkmG,OAAA,CAAKzqG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAkxG,OAAA;EAE9B;EAACl3I,YAAA,CAAA6nF,gBAAA;IAAA1wF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA+zC,gBAAA,CAAA/wF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC5E,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAE/B,IAAI,CAAC0wB,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MACrB,IAAI,CAAC0B,WAAW,GAAGxtB,MAAM,CAACwtB,WAAW;MAErC,IAAI,CAACvB,QAAQ,GAAGjsB,MAAM,CAACisB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGlsB,MAAM,CAACksB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGnsB,MAAM,CAACmsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGpsB,MAAM,CAACosB,cAAc;MAE3C,IAAI,CAACzB,QAAQ,CAAC94B,IAAI,CAAEmO,MAAM,CAAC2qB,QAAS,CAAC;MACrC,IAAI,CAACoC,WAAW,GAAG/sB,MAAM,CAAC+sB,WAAW;MACrC,IAAI,CAACnC,iBAAiB,GAAG5qB,MAAM,CAAC4qB,iBAAiB;MAEjD,IAAI,CAACyB,OAAO,GAAGrsB,MAAM,CAACqsB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGtsB,MAAM,CAACssB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGvsB,MAAM,CAACusB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAGxsB,MAAM,CAACwsB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC56B,IAAI,CAAEmO,MAAM,CAACysB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG3sB,MAAM,CAAC2sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG5sB,MAAM,CAAC4sB,gBAAgB;MAE/C,IAAI,CAACZ,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAACoC,SAAS,GAAGpuB,MAAM,CAACouB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGruB,MAAM,CAACquB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGtuB,MAAM,CAACsuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGvuB,MAAM,CAACuuB,iBAAiB;MAEjD,IAAI,CAACE,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA62C,gBAAA;AAAA,EA5F6Bn+C,QAAQ;AAAA/yC,OAAA,CAAAkxF,gBAAA,GAAAA,gBAAA;AAAA,IAgGjCH,kBAAkB,0BAAAyvD,WAAA;EAAA51H,SAAA,CAAAmmE,kBAAA,EAAAyvD,WAAA;EAAA,IAAAC,QAAA,GAAA31H,YAAA,CAAAimE,kBAAA;EAEvB,SAAAA,mBAAa1hD,UAAU,EAAG;IAAA,IAAAqxG,OAAA;IAAA73I,eAAA,OAAAkoF,kBAAA;IAEzB2vD,OAAA,GAAAD,QAAA,CAAAj+I,IAAA;IAEAk+I,OAAA,CAAKt8B,oBAAoB,GAAG,IAAI;IAEhCs8B,OAAA,CAAKn+I,IAAI,GAAG,oBAAoB;IAEhCm+I,OAAA,CAAKzoG,OAAO,GAAG,IAAI;IACnByoG,OAAA,CAAKxoG,SAAS,GAAG,CAAC;IAElBwoG,OAAA,CAAKvoG,SAAS,GAAG,IAAI;IACrBuoG,OAAA,CAAKtoG,aAAa,GAAG3kC,qBAAqB;IAC1CitI,OAAA,CAAKroG,WAAW,GAAG,IAAIv7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtC4jI,OAAA,CAAKpoG,eAAe,GAAG,IAAI;IAC3BooG,OAAA,CAAKnoG,iBAAiB,GAAG,CAAC;IAC1BmoG,OAAA,CAAKloG,gBAAgB,GAAG,CAAC;IAEzBkoG,OAAA,CAAK1mG,SAAS,GAAG,KAAK;IACtB0mG,OAAA,CAAKzmG,kBAAkB,GAAG,CAAC;IAE3BymG,OAAA,CAAKtmG,WAAW,GAAG,KAAK;IAExBsmG,OAAA,CAAK5qG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAqxG,OAAA;EAE9B;EAACr3I,YAAA,CAAA0nF,kBAAA;IAAAvwF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA4zC,kBAAA,CAAA5wF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACqsB,OAAO,GAAGrsB,MAAM,CAACqsB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGtsB,MAAM,CAACssB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGvsB,MAAM,CAACusB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAGxsB,MAAM,CAACwsB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC56B,IAAI,CAAEmO,MAAM,CAACysB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG3sB,MAAM,CAAC2sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG5sB,MAAM,CAAC4sB,gBAAgB;MAE/C,IAAI,CAACwB,SAAS,GAAGpuB,MAAM,CAACouB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGruB,MAAM,CAACquB,kBAAkB;MAEnD,IAAI,CAACG,WAAW,GAAGxuB,MAAM,CAACwuB,WAAW;MAErC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA22C,kBAAA;AAAA,EApD+Bh+C,QAAQ;AAAA/yC,OAAA,CAAA+wF,kBAAA,GAAAA,kBAAA;AAAA,IAwDnCC,mBAAmB,0BAAA2vD,WAAA;EAAA/1H,SAAA,CAAAomE,mBAAA,EAAA2vD,WAAA;EAAA,IAAAC,SAAA,GAAA91H,YAAA,CAAAkmE,mBAAA;EAExB,SAAAA,oBAAa3hD,UAAU,EAAG;IAAA,IAAAwxG,OAAA;IAAAh4I,eAAA,OAAAmoF,mBAAA;IAEzB6vD,OAAA,GAAAD,SAAA,CAAAp+I,IAAA;IAEAq+I,OAAA,CAAKp9B,qBAAqB,GAAG,IAAI;IAEjCo9B,OAAA,CAAKt+I,IAAI,GAAG,qBAAqB;IAEjCs+I,OAAA,CAAK75H,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;;IAEpCimG,OAAA,CAAKnpG,GAAG,GAAG,IAAI;IAEfmpG,OAAA,CAAKhpG,QAAQ,GAAG,IAAI;IACpBgpG,OAAA,CAAK/oG,iBAAiB,GAAG,GAAG;IAE5B+oG,OAAA,CAAK9oG,KAAK,GAAG,IAAI;IACjB8oG,OAAA,CAAK7oG,cAAc,GAAG,GAAG;IAEzB6oG,OAAA,CAAKtqG,QAAQ,GAAG,IAAIqE,KAAK,CAAE,QAAS,CAAC;IACrCimG,OAAA,CAAKrqG,iBAAiB,GAAG,GAAG;IAC5BqqG,OAAA,CAAKloG,WAAW,GAAG,IAAI;IAEvBkoG,OAAA,CAAK5oG,OAAO,GAAG,IAAI;IACnB4oG,OAAA,CAAK3oG,SAAS,GAAG,CAAC;IAElB2oG,OAAA,CAAK1oG,SAAS,GAAG,IAAI;IACrB0oG,OAAA,CAAKzoG,aAAa,GAAG3kC,qBAAqB;IAC1CotI,OAAA,CAAKxoG,WAAW,GAAG,IAAIv7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtC+jI,OAAA,CAAKvoG,eAAe,GAAG,IAAI;IAC3BuoG,OAAA,CAAKtoG,iBAAiB,GAAG,CAAC;IAC1BsoG,OAAA,CAAKroG,gBAAgB,GAAG,CAAC;IAEzBqoG,OAAA,CAAKjoG,WAAW,GAAG,IAAI;IAEvBioG,OAAA,CAAKjpG,QAAQ,GAAG,IAAI;IAEpBipG,OAAA,CAAK9nG,MAAM,GAAG,IAAI;IAClB8nG,OAAA,CAAK7nG,OAAO,GAAG3rC,iBAAiB;IAChCwzI,OAAA,CAAK3nG,YAAY,GAAG,CAAC;IACrB2nG,OAAA,CAAK1nG,eAAe,GAAG,IAAI;IAE3B0nG,OAAA,CAAK7mG,SAAS,GAAG,KAAK;IACtB6mG,OAAA,CAAK5mG,kBAAkB,GAAG,CAAC;IAC3B4mG,OAAA,CAAK3mG,gBAAgB,GAAG,OAAO;IAC/B2mG,OAAA,CAAK1mG,iBAAiB,GAAG,OAAO;IAEhC0mG,OAAA,CAAKzmG,WAAW,GAAG,KAAK;IAExBymG,OAAA,CAAKxmG,GAAG,GAAG,IAAI;IAEfwmG,OAAA,CAAK/qG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAAwxG,OAAA;EAE9B;EAACx3I,YAAA,CAAA2nF,mBAAA;IAAAxwF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA6zC,mBAAA,CAAA7wF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC5E,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAE/B,IAAI,CAAC0wB,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGjsB,MAAM,CAACisB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGlsB,MAAM,CAACksB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGnsB,MAAM,CAACmsB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGpsB,MAAM,CAACosB,cAAc;MAE3C,IAAI,CAACzB,QAAQ,CAAC94B,IAAI,CAAEmO,MAAM,CAAC2qB,QAAS,CAAC;MACrC,IAAI,CAACoC,WAAW,GAAG/sB,MAAM,CAAC+sB,WAAW;MACrC,IAAI,CAACnC,iBAAiB,GAAG5qB,MAAM,CAAC4qB,iBAAiB;MAEjD,IAAI,CAACyB,OAAO,GAAGrsB,MAAM,CAACqsB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGtsB,MAAM,CAACssB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGvsB,MAAM,CAACusB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAGxsB,MAAM,CAACwsB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC56B,IAAI,CAAEmO,MAAM,CAACysB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG3sB,MAAM,CAAC2sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG5sB,MAAM,CAAC4sB,gBAAgB;MAE/C,IAAI,CAACI,WAAW,GAAGhtB,MAAM,CAACgtB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGntB,MAAM,CAACmtB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGptB,MAAM,CAACotB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAGttB,MAAM,CAACstB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAGvtB,MAAM,CAACutB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGpuB,MAAM,CAACouB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGruB,MAAM,CAACquB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAGtuB,MAAM,CAACsuB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAGvuB,MAAM,CAACuuB,iBAAiB;MAEjD,IAAI,CAACC,WAAW,GAAGxuB,MAAM,CAACwuB,WAAW;MAErC,IAAI,CAACC,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA22C,mBAAA;AAAA,EA1GgCj+C,QAAQ;AAAA/yC,OAAA,CAAAgxF,mBAAA,GAAAA,mBAAA;AAAA,IA8GpCK,kBAAkB,0BAAAyvD,WAAA;EAAAl2H,SAAA,CAAAymE,kBAAA,EAAAyvD,WAAA;EAAA,IAAAC,SAAA,GAAAj2H,YAAA,CAAAumE,kBAAA;EAEvB,SAAAA,mBAAahiD,UAAU,EAAG;IAAA,IAAA2xG,OAAA;IAAAn4I,eAAA,OAAAwoF,kBAAA;IAEzB2vD,OAAA,GAAAD,SAAA,CAAAv+I,IAAA;IAEAw+I,OAAA,CAAK/8B,oBAAoB,GAAG,IAAI;IAEhC+8B,OAAA,CAAKv1F,OAAO,GAAG;MAAE,QAAQ,EAAE;IAAG,CAAC;IAE/Bu1F,OAAA,CAAKz+I,IAAI,GAAG,oBAAoB;IAEhCy+I,OAAA,CAAKh6H,KAAK,GAAG,IAAI4zB,KAAK,CAAE,QAAS,CAAC,CAAC,CAAC;;IAEpComG,OAAA,CAAKrpG,MAAM,GAAG,IAAI;IAElBqpG,OAAA,CAAKtpG,GAAG,GAAG,IAAI;IAEfspG,OAAA,CAAK/oG,OAAO,GAAG,IAAI;IACnB+oG,OAAA,CAAK9oG,SAAS,GAAG,CAAC;IAElB8oG,OAAA,CAAK7oG,SAAS,GAAG,IAAI;IACrB6oG,OAAA,CAAK5oG,aAAa,GAAG3kC,qBAAqB;IAC1CutI,OAAA,CAAK3oG,WAAW,GAAG,IAAIv7B,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAEtCkkI,OAAA,CAAK1oG,eAAe,GAAG,IAAI;IAC3B0oG,OAAA,CAAKzoG,iBAAiB,GAAG,CAAC;IAC1ByoG,OAAA,CAAKxoG,gBAAgB,GAAG,CAAC;IAEzBwoG,OAAA,CAAKppG,QAAQ,GAAG,IAAI;IAEpBopG,OAAA,CAAK5mG,WAAW,GAAG,KAAK;IAExB4mG,OAAA,CAAK3mG,GAAG,GAAG,IAAI;IAEf2mG,OAAA,CAAKlrG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA2xG,OAAA;EAE9B;EAAC33I,YAAA,CAAAgoF,kBAAA;IAAA7wF,GAAA;IAAAE,KAAA,EAGD,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAk0C,kBAAA,CAAAlxF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC6/B,OAAO,GAAG;QAAE,QAAQ,EAAE;MAAG,CAAC;MAE/B,IAAI,CAACzkC,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAE/B,IAAI,CAAC2wB,MAAM,GAAG/rB,MAAM,CAAC+rB,MAAM;MAE3B,IAAI,CAACD,GAAG,GAAG9rB,MAAM,CAAC8rB,GAAG;MAErB,IAAI,CAACO,OAAO,GAAGrsB,MAAM,CAACqsB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAGtsB,MAAM,CAACssB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAGvsB,MAAM,CAACusB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAGxsB,MAAM,CAACwsB,aAAa;MACzC,IAAI,CAACC,WAAW,CAAC56B,IAAI,CAAEmO,MAAM,CAACysB,WAAY,CAAC;MAE3C,IAAI,CAACC,eAAe,GAAG1sB,MAAM,CAAC0sB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG3sB,MAAM,CAAC2sB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAG5sB,MAAM,CAAC4sB,gBAAgB;MAE/C,IAAI,CAACZ,QAAQ,GAAGhsB,MAAM,CAACgsB,QAAQ;MAE/B,IAAI,CAACwC,WAAW,GAAGxuB,MAAM,CAACwuB,WAAW;MAErC,IAAI,CAACC,GAAG,GAAGzuB,MAAM,CAACyuB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAg3C,kBAAA;AAAA,EAvE+Bt+C,QAAQ;AAAA/yC,OAAA,CAAAqxF,kBAAA,GAAAA,kBAAA;AAAA,IA2EnCE,kBAAkB,0BAAA0vD,kBAAA;EAAAr2H,SAAA,CAAA2mE,kBAAA,EAAA0vD,kBAAA;EAAA,IAAAC,SAAA,GAAAp2H,YAAA,CAAAymE,kBAAA;EAEvB,SAAAA,mBAAaliD,UAAU,EAAG;IAAA,IAAA8xG,OAAA;IAAAt4I,eAAA,OAAA0oF,kBAAA;IAEzB4vD,OAAA,GAAAD,SAAA,CAAA1+I,IAAA;IAEA2+I,OAAA,CAAK58B,oBAAoB,GAAG,IAAI;IAEhC48B,OAAA,CAAK5+I,IAAI,GAAG,oBAAoB;IAEhC4+I,OAAA,CAAK/7H,KAAK,GAAG,CAAC;IACd+7H,OAAA,CAAKtnG,QAAQ,GAAG,CAAC;IACjBsnG,OAAA,CAAKrnG,OAAO,GAAG,CAAC;IAEhBqnG,OAAA,CAAKrrG,SAAS,CAAEzG,UAAW,CAAC;IAAC,OAAA8xG,OAAA;EAE9B;EAAC93I,YAAA,CAAAkoF,kBAAA;IAAA/wF,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAo0C,kBAAA,CAAApxF,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACxG,KAAK,GAAGwG,MAAM,CAACxG,KAAK;MACzB,IAAI,CAACy0B,QAAQ,GAAGjuB,MAAM,CAACiuB,QAAQ;MAC/B,IAAI,CAACC,OAAO,GAAGluB,MAAM,CAACkuB,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAy3C,kBAAA;AAAA,EA5B+BD,iBAAiB,GAgClD;AAAAtxF,OAAA,CAAAuxF,kBAAA,GAAAA,kBAAA;AACA,SAAS6vD,UAAUA,CAAEjqI,KAAK,EAAEqT,IAAI,EAAEs6D,EAAE,EAAG;EAEtC,IAAKu8D,YAAY,CAAElqI,KAAM,CAAC,EAAG;IAE5B;IACA;IACA,OAAO,IAAIA,KAAK,CAACxQ,WAAW,CAAEwQ,KAAK,CAACi/C,QAAQ,CAAE5rC,IAAI,EAAEs6D,EAAE,KAAK//E,SAAS,GAAG+/E,EAAE,GAAG3tE,KAAK,CAAC9Q,MAAO,CAAE,CAAC;EAE7F;EAEA,OAAO8Q,KAAK,CAACvP,KAAK,CAAE4iB,IAAI,EAAEs6D,EAAG,CAAC;AAE/B;;AAEA;AACA,SAASw8D,YAAYA,CAAEnqI,KAAK,EAAE5U,IAAI,EAAEg/I,UAAU,EAAG;EAEhD,IAAK,CAAEpqI,KAAK;EAAI;EACf,CAAEoqI,UAAU,IAAIpqI,KAAK,CAACxQ,WAAW,KAAKpE,IAAI,EAAG,OAAO4U,KAAK;EAE1D,IAAK,OAAO5U,IAAI,CAAC0zD,iBAAiB,KAAK,QAAQ,EAAG;IAEjD,OAAO,IAAI1zD,IAAI,CAAE4U,KAAM,CAAC,CAAC,CAAC;EAE3B;;EAEA,OAAOiT,KAAK,CAACjqB,SAAS,CAACyH,KAAK,CAACpF,IAAI,CAAE2U,KAAM,CAAC,CAAC,CAAC;AAE7C;;AAEA,SAASkqI,YAAYA,CAAE/5I,MAAM,EAAG;EAE/B,OAAOg2C,WAAW,CAACkkG,MAAM,CAAEl6I,MAAO,CAAC,IAClC,EAAIA,MAAM,YAAYm6I,QAAQ,CAAE;AAElC;;AAEA;AACA,SAASC,gBAAgBA,CAAEC,KAAK,EAAG;EAElC,SAASC,WAAWA,CAAEt7I,CAAC,EAAEg4B,CAAC,EAAG;IAE5B,OAAOqjH,KAAK,CAAEr7I,CAAC,CAAE,GAAGq7I,KAAK,CAAErjH,CAAC,CAAE;EAE/B;EAEA,IAAM/lB,CAAC,GAAGopI,KAAK,CAACt7I,MAAM;EACtB,IAAMzC,MAAM,GAAG,IAAIwmB,KAAK,CAAE7R,CAAE,CAAC;EAC7B,KAAM,IAAIjS,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG1C,MAAM,CAAE0C,CAAC,CAAE,GAAGA,CAAC;EAEhD1C,MAAM,CAAC+4E,IAAI,CAAEilE,WAAY,CAAC;EAE1B,OAAOh+I,MAAM;AAEd;;AAEA;AACA,SAASi+I,WAAWA,CAAE7+I,MAAM,EAAE8iD,MAAM,EAAEzqC,KAAK,EAAG;EAE7C,IAAMymI,OAAO,GAAG9+I,MAAM,CAACqD,MAAM;EAC7B,IAAMzC,MAAM,GAAG,IAAIZ,MAAM,CAAC2D,WAAW,CAAEm7I,OAAQ,CAAC;EAEhD,KAAM,IAAIx7I,CAAC,GAAG,CAAC,EAAEyvB,SAAS,GAAG,CAAC,EAAEA,SAAS,KAAK+rH,OAAO,EAAE,EAAGx7I,CAAC,EAAG;IAE7D,IAAMy7I,SAAS,GAAG1mI,KAAK,CAAE/U,CAAC,CAAE,GAAGw/C,MAAM;IAErC,KAAM,IAAIxnB,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKwnB,MAAM,EAAE,EAAGxnB,CAAC,EAAG;MAErC16B,MAAM,CAAEmyB,SAAS,EAAG,CAAE,GAAG/yB,MAAM,CAAE++I,SAAS,GAAGzjH,CAAC,CAAE;IAEjD;EAED;EAEA,OAAO16B,MAAM;AAEd;;AAEA;AACA,SAASo+I,WAAWA,CAAEC,QAAQ,EAAEN,KAAK,EAAE3+I,MAAM,EAAEk/I,iBAAiB,EAAG;EAElE,IAAI57I,CAAC,GAAG,CAAC;IAAE9F,GAAG,GAAGyhJ,QAAQ,CAAE,CAAC,CAAE;EAE9B,OAAQzhJ,GAAG,KAAKuE,SAAS,IAAIvE,GAAG,CAAE0hJ,iBAAiB,CAAE,KAAKn9I,SAAS,EAAG;IAErEvE,GAAG,GAAGyhJ,QAAQ,CAAE37I,CAAC,EAAG,CAAE;EAEvB;EAEA,IAAK9F,GAAG,KAAKuE,SAAS,EAAG,OAAO,CAAC;;EAEjC,IAAIrE,KAAK,GAAGF,GAAG,CAAE0hJ,iBAAiB,CAAE;EACpC,IAAKxhJ,KAAK,KAAKqE,SAAS,EAAG,OAAO,CAAC;;EAEnC,IAAKqlB,KAAK,CAACC,OAAO,CAAE3pB,KAAM,CAAC,EAAG;IAE7B,GAAG;MAEFA,KAAK,GAAGF,GAAG,CAAE0hJ,iBAAiB,CAAE;MAEhC,IAAKxhJ,KAAK,KAAKqE,SAAS,EAAG;QAE1B48I,KAAK,CAAC77I,IAAI,CAAEtF,GAAG,CAACg0D,IAAK,CAAC;QACtBxxD,MAAM,CAAC8C,IAAI,CAAC+mC,KAAK,CAAE7pC,MAAM,EAAEtC,KAAM,CAAC,CAAC,CAAC;MAErC;;MAEAF,GAAG,GAAGyhJ,QAAQ,CAAE37I,CAAC,EAAG,CAAE;IAEvB,CAAC,QAAS9F,GAAG,KAAKuE,SAAS;EAE5B,CAAC,MAAM,IAAKrE,KAAK,CAAC8f,OAAO,KAAKzb,SAAS,EAAG;IAEzC;;IAEA,GAAG;MAEFrE,KAAK,GAAGF,GAAG,CAAE0hJ,iBAAiB,CAAE;MAEhC,IAAKxhJ,KAAK,KAAKqE,SAAS,EAAG;QAE1B48I,KAAK,CAAC77I,IAAI,CAAEtF,GAAG,CAACg0D,IAAK,CAAC;QACtB9zD,KAAK,CAAC8f,OAAO,CAAExd,MAAM,EAAEA,MAAM,CAACqD,MAAO,CAAC;MAEvC;MAEA7F,GAAG,GAAGyhJ,QAAQ,CAAE37I,CAAC,EAAG,CAAE;IAEvB,CAAC,QAAS9F,GAAG,KAAKuE,SAAS;EAE5B,CAAC,MAAM;IAEN;;IAEA,GAAG;MAEFrE,KAAK,GAAGF,GAAG,CAAE0hJ,iBAAiB,CAAE;MAEhC,IAAKxhJ,KAAK,KAAKqE,SAAS,EAAG;QAE1B48I,KAAK,CAAC77I,IAAI,CAAEtF,GAAG,CAACg0D,IAAK,CAAC;QACtBxxD,MAAM,CAAC8C,IAAI,CAAEpF,KAAM,CAAC;MAErB;MAEAF,GAAG,GAAGyhJ,QAAQ,CAAE37I,CAAC,EAAG,CAAE;IAEvB,CAAC,QAAS9F,GAAG,KAAKuE,SAAS;EAE5B;AAED;AAEA,SAASo9I,OAAOA,CAAEC,UAAU,EAAEx7I,IAAI,EAAEy7I,UAAU,EAAEC,QAAQ,EAAEC,GAAG,GAAG,EAAE,EAAG;EAEpE,IAAMC,IAAI,GAAGJ,UAAU,CAAC5kI,KAAK,CAAC,CAAC;EAE/BglI,IAAI,CAAC57I,IAAI,GAAGA,IAAI;EAEhB,IAAM67I,MAAM,GAAG,EAAE;EAEjB,KAAM,IAAIn8I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk8I,IAAI,CAACC,MAAM,CAACp8I,MAAM,EAAE,EAAGC,CAAC,EAAG;IAE/C,IAAMo8I,KAAK,GAAGF,IAAI,CAACC,MAAM,CAAEn8I,CAAC,CAAE;IAC9B,IAAMq8I,SAAS,GAAGD,KAAK,CAACE,YAAY,CAAC,CAAC;IAEtC,IAAMjB,KAAK,GAAG,EAAE;IAChB,IAAM3+I,MAAM,GAAG,EAAE;IAEjB,KAAM,IAAIs7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGokH,KAAK,CAACf,KAAK,CAACt7I,MAAM,EAAE,EAAGi4B,CAAC,EAAG;MAE/C,IAAMm2B,KAAK,GAAGiuF,KAAK,CAACf,KAAK,CAAErjH,CAAC,CAAE,GAAGikH,GAAG;MAEpC,IAAK9tF,KAAK,GAAG4tF,UAAU,IAAI5tF,KAAK,IAAI6tF,QAAQ,EAAG;MAE/CX,KAAK,CAAC77I,IAAI,CAAE48I,KAAK,CAACf,KAAK,CAAErjH,CAAC,CAAG,CAAC;MAE9B,KAAM,IAAIugE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8jD,SAAS,EAAE,EAAG9jD,CAAC,EAAG;QAEtC77F,MAAM,CAAC8C,IAAI,CAAE48I,KAAK,CAAC1/I,MAAM,CAAEs7B,CAAC,GAAGqkH,SAAS,GAAG9jD,CAAC,CAAG,CAAC;MAEjD;IAED;IAEA,IAAK8iD,KAAK,CAACt7I,MAAM,KAAK,CAAC,EAAG;IAE1Bq8I,KAAK,CAACf,KAAK,GAAGL,YAAY,CAAEK,KAAK,EAAEe,KAAK,CAACf,KAAK,CAACh7I,WAAY,CAAC;IAC5D+7I,KAAK,CAAC1/I,MAAM,GAAGs+I,YAAY,CAAEt+I,MAAM,EAAE0/I,KAAK,CAAC1/I,MAAM,CAAC2D,WAAY,CAAC;IAE/D87I,MAAM,CAAC38I,IAAI,CAAE48I,KAAM,CAAC;EAErB;EAEAF,IAAI,CAACC,MAAM,GAAGA,MAAM;;EAEpB;;EAEA,IAAII,YAAY,GAAGroH,QAAQ;EAE3B,KAAM,IAAIl0B,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGk8I,IAAI,CAACC,MAAM,CAACp8I,MAAM,EAAE,EAAGC,IAAC,EAAG;IAE/C,IAAKu8I,YAAY,GAAGL,IAAI,CAACC,MAAM,CAAEn8I,IAAC,CAAE,CAACq7I,KAAK,CAAE,CAAC,CAAE,EAAG;MAEjDkB,YAAY,GAAGL,IAAI,CAACC,MAAM,CAAEn8I,IAAC,CAAE,CAACq7I,KAAK,CAAE,CAAC,CAAE;IAE3C;EAED;;EAEA;;EAEA,KAAM,IAAIr7I,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGk8I,IAAI,CAACC,MAAM,CAACp8I,MAAM,EAAE,EAAGC,IAAC,EAAG;IAE/Ck8I,IAAI,CAACC,MAAM,CAAEn8I,IAAC,CAAE,CAACikH,KAAK,CAAE,CAAE,CAAC,GAAGs4B,YAAa,CAAC;EAE7C;EAEAL,IAAI,CAACM,aAAa,CAAC,CAAC;EAEpB,OAAON,IAAI;AAEZ;AAEA,SAASO,gBAAgBA,CAAEC,UAAU,EAAEC,cAAc,GAAG,CAAC,EAAEC,aAAa,GAAGF,UAAU,EAAET,GAAG,GAAG,EAAE,EAAG;EAEjG,IAAKA,GAAG,IAAI,CAAC,EAAGA,GAAG,GAAG,EAAE;EAExB,IAAMY,SAAS,GAAGD,aAAa,CAACT,MAAM,CAACp8I,MAAM;EAC7C,IAAM+8I,aAAa,GAAGH,cAAc,GAAGV,GAAG;;EAE1C;EAAA,IAAAc,KAAA,YAAAA,MAAA,EACuC;MAEtC,IAAMC,cAAc,GAAGJ,aAAa,CAACT,MAAM,CAAEn8I,CAAC,CAAE;MAChD,IAAMi9I,kBAAkB,GAAGD,cAAc,CAACE,aAAa;;MAEvD;MACA,IAAKD,kBAAkB,KAAK,MAAM,IAAIA,kBAAkB,KAAK,QAAQ;;MAErE;MACA,IAAME,WAAW,GAAGT,UAAU,CAACP,MAAM,CAACiB,IAAI,CAAE,UAAWhB,KAAK,EAAG;QAE9D,OAAOA,KAAK,CAAC97I,IAAI,KAAK08I,cAAc,CAAC18I,IAAI,IACrC87I,KAAK,CAACc,aAAa,KAAKD,kBAAkB;MAE/C,CAAE,CAAC;MAEH,IAAKE,WAAW,KAAK1+I,SAAS;MAE9B,IAAI4+I,eAAe,GAAG,CAAC;MACvB,IAAMC,kBAAkB,GAAGN,cAAc,CAACV,YAAY,CAAC,CAAC;MAExD,IAAKU,cAAc,CAACO,iBAAiB,CAACC,yCAAyC,EAAG;QAEjFH,eAAe,GAAGC,kBAAkB,GAAG,CAAC;MAEzC;MAEA,IAAIG,YAAY,GAAG,CAAC;MACpB,IAAMC,eAAe,GAAGP,WAAW,CAACb,YAAY,CAAC,CAAC;MAElD,IAAKa,WAAW,CAACI,iBAAiB,CAACC,yCAAyC,EAAG;QAE9EC,YAAY,GAAGC,eAAe,GAAG,CAAC;MAEnC;MAEA,IAAMxgE,SAAS,GAAG8/D,cAAc,CAAC3B,KAAK,CAACt7I,MAAM,GAAG,CAAC;MACjD,IAAI49I,cAAc;;MAElB;MACA,IAAKb,aAAa,IAAIE,cAAc,CAAC3B,KAAK,CAAE,CAAC,CAAE,EAAG;QAEjD;QACA,IAAMuC,UAAU,GAAGP,eAAe;QAClC,IAAMQ,QAAQ,GAAGP,kBAAkB,GAAGD,eAAe;QACrDM,cAAc,GAAG7C,UAAU,CAAEkC,cAAc,CAACtgJ,MAAM,EAAEkhJ,UAAU,EAAEC,QAAS,CAAC;MAE3E,CAAC,MAAM,IAAKf,aAAa,IAAIE,cAAc,CAAC3B,KAAK,CAAEn+D,SAAS,CAAE,EAAG;QAEhE;QACA,IAAM0gE,WAAU,GAAG1gE,SAAS,GAAGogE,kBAAkB,GAAGD,eAAe;QACnE,IAAMQ,SAAQ,GAAGD,WAAU,GAAGN,kBAAkB,GAAGD,eAAe;QAClEM,cAAc,GAAG7C,UAAU,CAAEkC,cAAc,CAACtgJ,MAAM,EAAEkhJ,WAAU,EAAEC,SAAS,CAAC;MAE3E,CAAC,MAAM;QAEN;QACA,IAAMC,WAAW,GAAGd,cAAc,CAACO,iBAAiB,CAAC,CAAC;QACtD,IAAMK,YAAU,GAAGP,eAAe;QAClC,IAAMQ,UAAQ,GAAGP,kBAAkB,GAAGD,eAAe;QACrDS,WAAW,CAACC,QAAQ,CAAEjB,aAAc,CAAC;QACrCa,cAAc,GAAG7C,UAAU,CAAEgD,WAAW,CAACE,YAAY,EAAEJ,YAAU,EAAEC,UAAS,CAAC;MAE9E;;MAEA;MACA,IAAKZ,kBAAkB,KAAK,YAAY,EAAG;QAE1C,IAAMgB,aAAa,GAAG,IAAIlyH,UAAU,CAAC,CAAC,CAAC/R,SAAS,CAAE2jI,cAAe,CAAC,CAACtnI,SAAS,CAAC,CAAC,CAACuX,SAAS,CAAC,CAAC;QAC1FqwH,aAAa,CAAC/jI,OAAO,CAAEyjI,cAAe,CAAC;MAExC;;MAEA;;MAEA,IAAMO,QAAQ,GAAGf,WAAW,CAAC9B,KAAK,CAACt7I,MAAM;MACzC,KAAM,IAAIi4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkmH,QAAQ,EAAE,EAAGlmH,CAAC,EAAG;QAErC,IAAMmmH,UAAU,GAAGnmH,CAAC,GAAG0lH,eAAe,GAAGD,YAAY;QAErD,IAAKR,kBAAkB,KAAK,YAAY,EAAG;UAE1C;UACAlxH,UAAU,CAAC2E,uBAAuB,CACjCysH,WAAW,CAACzgJ,MAAM,EAClByhJ,UAAU,EACVR,cAAc,EACd,CAAC,EACDR,WAAW,CAACzgJ,MAAM,EAClByhJ,UACD,CAAC;QAEF,CAAC,MAAM;UAEN,IAAMC,QAAQ,GAAGV,eAAe,GAAGD,YAAY,GAAG,CAAC;;UAEnD;UACA,KAAM,IAAIllD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6lD,QAAQ,EAAE,EAAG7lD,CAAC,EAAG;YAErC4kD,WAAW,CAACzgJ,MAAM,CAAEyhJ,UAAU,GAAG5lD,CAAC,CAAE,IAAIolD,cAAc,CAAEplD,CAAC,CAAE;UAE5D;QAED;MAED;IAED,CAAC;IAAA8lD,IAAA;EA3GD,KAAM,IAAIr+I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG68I,SAAS,EAAE,EAAG78I,CAAC;IAAAq+I,IAAA,GAAAtB,KAAA;IAAA,IAAAsB,IAAA,QAMqC;EAAS;EAuGlF3B,UAAU,CAAC4B,SAAS,GAAG3xI,0BAA0B;EAEjD,OAAO+vI,UAAU;AAElB;AAEA,IAAM6B,cAAc,GAAG;EACtBzD,UAAU,EAAEA,UAAU;EACtBE,YAAY,EAAEA,YAAY;EAC1BD,YAAY,EAAEA,YAAY;EAC1BK,gBAAgB,EAAEA,gBAAgB;EAClCG,WAAW,EAAEA,WAAW;EACxBG,WAAW,EAAEA,WAAW;EACxBG,OAAO,EAAEA,OAAO;EAChBY,gBAAgB,EAAEA;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA/iJ,OAAA,CAAA6kJ,cAAA,GAAAA,cAAA;AAAA,IAqBMC,WAAW;EAEhB,SAAAA,YAAaC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAAz7I,eAAA,OAAAi8I,WAAA;IAEzE,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACG,YAAY,GAAG,CAAC;IAErB,IAAI,CAACZ,YAAY,GAAGA,YAAY,KAAKv/I,SAAS,GAC7Cu/I,YAAY,GAAG,IAAIU,YAAY,CAACr+I,WAAW,CAAEs+I,UAAW,CAAC;IAC1D,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACrC,SAAS,GAAGsC,UAAU;IAE3B,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;EAE3B;EAAC/7I,YAAA,CAAAy7I,WAAA;IAAAtkJ,GAAA;IAAAE,KAAA,EAED,SAAA2jJ,SAAUnrI,CAAC,EAAG;MAEb,IAAMmsI,EAAE,GAAG,IAAI,CAACN,kBAAkB;MAClC,IAAIh0G,EAAE,GAAG,IAAI,CAACm0G,YAAY;QACzB7jH,EAAE,GAAGgkH,EAAE,CAAEt0G,EAAE,CAAE;QACb3P,EAAE,GAAGikH,EAAE,CAAEt0G,EAAE,GAAG,CAAC,CAAE;MAElBu0G,iBAAiB,EAAE;QAElBC,IAAI,EAAE;UAEL,IAAIn+G,KAAK;UAETo+G,WAAW,EAAE;YAEZ;YACA;YACA;YACA;YACAC,YAAY,EAAE,IAAK,EAAIvsI,CAAC,GAAGmoB,EAAE,CAAE,EAAG;cAEjC,KAAM,IAAIqkH,QAAQ,GAAG30G,EAAE,GAAG,CAAC,IAAM;gBAEhC,IAAK1P,EAAE,KAAKt8B,SAAS,EAAG;kBAEvB,IAAKmU,CAAC,GAAGkoB,EAAE,EAAG,MAAMqkH,YAAY;;kBAEhC;;kBAEA10G,EAAE,GAAGs0G,EAAE,CAACh/I,MAAM;kBACd,IAAI,CAAC6+I,YAAY,GAAGn0G,EAAE;kBACtB,OAAO,IAAI,CAAC40G,gBAAgB,CAAE50G,EAAE,GAAG,CAAE,CAAC;gBAEvC;gBAEA,IAAKA,EAAE,KAAK20G,QAAQ,EAAG,MAAM,CAAC;;gBAE9BtkH,EAAE,GAAGC,EAAE;gBACPA,EAAE,GAAGgkH,EAAE,CAAE,EAAGt0G,EAAE,CAAE;gBAEhB,IAAK73B,CAAC,GAAGmoB,EAAE,EAAG;kBAEb;kBACA,MAAMkkH,IAAI;gBAEX;cAED;;cAEA;cACAn+G,KAAK,GAAGi+G,EAAE,CAACh/I,MAAM;cACjB,MAAMm/I,WAAW;YAElB;;YAEA;YACA;YACA,IAAK,EAAItsI,CAAC,IAAIkoB,EAAE,CAAE,EAAG;cAEpB;;cAEA,IAAMwkH,QAAQ,GAAGP,EAAE,CAAE,CAAC,CAAE;cAExB,IAAKnsI,CAAC,GAAG0sI,QAAQ,EAAG;gBAEnB70G,EAAE,GAAG,CAAC,CAAC,CAAC;gBACR3P,EAAE,GAAGwkH,QAAQ;cAEd;;cAEA;;cAEA,KAAM,IAAIF,SAAQ,GAAG30G,EAAE,GAAG,CAAC,IAAM;gBAEhC,IAAK3P,EAAE,KAAKr8B,SAAS,EAAG;kBAEvB;;kBAEA,IAAI,CAACmgJ,YAAY,GAAG,CAAC;kBACrB,OAAO,IAAI,CAACS,gBAAgB,CAAE,CAAE,CAAC;gBAElC;gBAEA,IAAK50G,EAAE,KAAK20G,SAAQ,EAAG,MAAM,CAAC;;gBAE9BrkH,EAAE,GAAGD,EAAE;gBACPA,EAAE,GAAGikH,EAAE,CAAE,EAAGt0G,EAAE,GAAG,CAAC,CAAE;gBAEpB,IAAK73B,CAAC,IAAIkoB,EAAE,EAAG;kBAEd;kBACA,MAAMmkH,IAAI;gBAEX;cAED;;cAEA;cACAn+G,KAAK,GAAG2J,EAAE;cACVA,EAAE,GAAG,CAAC;cACN,MAAMy0G,WAAW;YAElB;;YAEA;;YAEA,MAAMF,iBAAiB;UAExB,CAAC,CAAC;;UAEF;;UAEA,OAAQv0G,EAAE,GAAG3J,KAAK,EAAG;YAEpB,IAAMy+G,GAAG,GAAK90G,EAAE,GAAG3J,KAAK,KAAO,CAAC;YAEhC,IAAKluB,CAAC,GAAGmsI,EAAE,CAAEQ,GAAG,CAAE,EAAG;cAEpBz+G,KAAK,GAAGy+G,GAAG;YAEZ,CAAC,MAAM;cAEN90G,EAAE,GAAG80G,GAAG,GAAG,CAAC;YAEb;UAED;UAEAxkH,EAAE,GAAGgkH,EAAE,CAAEt0G,EAAE,CAAE;UACb3P,EAAE,GAAGikH,EAAE,CAAEt0G,EAAE,GAAG,CAAC,CAAE;;UAEjB;;UAEA,IAAK3P,EAAE,KAAKr8B,SAAS,EAAG;YAEvB,IAAI,CAACmgJ,YAAY,GAAG,CAAC;YACrB,OAAO,IAAI,CAACS,gBAAgB,CAAE,CAAE,CAAC;UAElC;UAEA,IAAKtkH,EAAE,KAAKt8B,SAAS,EAAG;YAEvBgsC,EAAE,GAAGs0G,EAAE,CAACh/I,MAAM;YACd,IAAI,CAAC6+I,YAAY,GAAGn0G,EAAE;YACtB,OAAO,IAAI,CAAC40G,gBAAgB,CAAE50G,EAAE,GAAG,CAAE,CAAC;UAEvC;QAED,CAAC,CAAC;;QAEF,IAAI,CAACm0G,YAAY,GAAGn0G,EAAE;QAEtB,IAAI,CAAC+0G,gBAAgB,CAAE/0G,EAAE,EAAE3P,EAAE,EAAEC,EAAG,CAAC;MAEpC,CAAC,CAAC;;MAEF,OAAO,IAAI,CAAC0kH,YAAY,CAAEh1G,EAAE,EAAE3P,EAAE,EAAEloB,CAAC,EAAEmoB,EAAG,CAAC;IAE1C;EAAC;IAAA7gC,GAAA;IAAAE,KAAA,EAED,SAAAslJ,aAAA,EAAe;MAEd,OAAO,IAAI,CAACb,QAAQ,IAAI,IAAI,CAACC,gBAAgB;IAE9C;EAAC;IAAA5kJ,GAAA;IAAAE,KAAA,EAED,SAAAilJ,iBAAkB5uI,KAAK,EAAG;MAEzB;;MAEA,IAAMnT,MAAM,GAAG,IAAI,CAAC0gJ,YAAY;QAC/BthJ,MAAM,GAAG,IAAI,CAACgiJ,YAAY;QAC1Bl/F,MAAM,GAAG,IAAI,CAAC68F,SAAS;QACvBpiI,MAAM,GAAGxJ,KAAK,GAAG+uC,MAAM;MAExB,KAAM,IAAIx/C,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw/C,MAAM,EAAE,EAAGx/C,CAAC,EAAG;QAErC1C,MAAM,CAAE0C,CAAC,CAAE,GAAGtD,MAAM,CAAEud,MAAM,GAAGja,CAAC,CAAE;MAEnC;MAEA,OAAO1C,MAAM;IAEd;;IAEA;EAAA;IAAApD,GAAA;IAAAE,KAAA,EAEA,SAAAqlJ,aAAA,CAAc;IAAA,EAAsB;MAEnC,MAAM,IAAI1hJ,KAAK,CAAE,yBAA0B,CAAC;MAC5C;IAED;EAAC;IAAA7D,GAAA;IAAAE,KAAA,EAED,SAAAolJ,iBAAA,CAAkB;IAAA,EAAmB;;MAEpC;IAAA;EAEA;EAAA,OAAAhB,WAAA;AAAA;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AANA9kJ,OAAA,CAAA8kJ,WAAA,GAAAA,WAAA;AAAA,IAQMmB,gBAAgB,0BAAAC,YAAA;EAAAt7H,SAAA,CAAAq7H,gBAAA,EAAAC,YAAA;EAAA,IAAAC,SAAA,GAAAr7H,YAAA,CAAAm7H,gBAAA;EAErB,SAAAA,iBAAalB,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAA,IAAA8B,OAAA;IAAAv9I,eAAA,OAAAo9I,gBAAA;IAEzEG,OAAA,GAAAD,SAAA,CAAA3jJ,IAAA,OAAOuiJ,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;IAEjE8B,OAAA,CAAKC,WAAW,GAAG,CAAE,CAAC;IACtBD,OAAA,CAAKE,WAAW,GAAG,CAAE,CAAC;IACtBF,OAAA,CAAKG,WAAW,GAAG,CAAE,CAAC;IACtBH,OAAA,CAAKI,WAAW,GAAG,CAAE,CAAC;IAEtBJ,OAAA,CAAKhB,gBAAgB,GAAG;MAEvBqB,WAAW,EAAE5zI,mBAAmB;MAChC6zI,SAAS,EAAE7zI;IAEZ,CAAC;IAAC,OAAAuzI,OAAA;EAEH;EAAC/8I,YAAA,CAAA48I,gBAAA;IAAAzlJ,GAAA;IAAAE,KAAA,EAED,SAAAolJ,iBAAkB/0G,EAAE,EAAE3P,EAAE,EAAEC,EAAE,EAAG;MAE9B,IAAMgkH,EAAE,GAAG,IAAI,CAACN,kBAAkB;MAClC,IAAI4B,KAAK,GAAG51G,EAAE,GAAG,CAAC;QACjB61G,KAAK,GAAG71G,EAAE,GAAG,CAAC;QAEd81G,KAAK,GAAGxB,EAAE,CAAEsB,KAAK,CAAE;QACnBG,KAAK,GAAGzB,EAAE,CAAEuB,KAAK,CAAE;MAEpB,IAAKC,KAAK,KAAK9hJ,SAAS,EAAG;QAE1B,QAAS,IAAI,CAACihJ,YAAY,CAAC,CAAC,CAACS,WAAW;UAEvC,KAAK3zI,eAAe;YAEnB;YACA6zI,KAAK,GAAG51G,EAAE;YACV81G,KAAK,GAAG,CAAC,GAAGzlH,EAAE,GAAGC,EAAE;YAEnB;UAED,KAAKtuB,gBAAgB;YAEpB;YACA4zI,KAAK,GAAGtB,EAAE,CAACh/I,MAAM,GAAG,CAAC;YACrBwgJ,KAAK,GAAGzlH,EAAE,GAAGikH,EAAE,CAAEsB,KAAK,CAAE,GAAGtB,EAAE,CAAEsB,KAAK,GAAG,CAAC,CAAE;YAE1C;UAED;YAAS;;YAER;YACAA,KAAK,GAAG51G,EAAE;YACV81G,KAAK,GAAGxlH,EAAE;QAEZ;MAED;MAEA,IAAKylH,KAAK,KAAK/hJ,SAAS,EAAG;QAE1B,QAAS,IAAI,CAACihJ,YAAY,CAAC,CAAC,CAACU,SAAS;UAErC,KAAK5zI,eAAe;YAEnB;YACA8zI,KAAK,GAAG71G,EAAE;YACV+1G,KAAK,GAAG,CAAC,GAAGzlH,EAAE,GAAGD,EAAE;YAEnB;UAED,KAAKruB,gBAAgB;YAEpB;YACA6zI,KAAK,GAAG,CAAC;YACTE,KAAK,GAAGzlH,EAAE,GAAGgkH,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;YAE9B;UAED;YAAS;;YAER;YACAuB,KAAK,GAAG71G,EAAE,GAAG,CAAC;YACd+1G,KAAK,GAAG1lH,EAAE;QAEZ;MAED;MAEA,IAAM2lH,MAAM,GAAG,CAAE1lH,EAAE,GAAGD,EAAE,IAAK,GAAG;QAC/B0kB,MAAM,GAAG,IAAI,CAAC68F,SAAS;MAExB,IAAI,CAAC0D,WAAW,GAAGU,MAAM,IAAK3lH,EAAE,GAAGylH,KAAK,CAAE;MAC1C,IAAI,CAACN,WAAW,GAAGQ,MAAM,IAAKD,KAAK,GAAGzlH,EAAE,CAAE;MAC1C,IAAI,CAACilH,WAAW,GAAGK,KAAK,GAAG7gG,MAAM;MACjC,IAAI,CAAC0gG,WAAW,GAAGI,KAAK,GAAG9gG,MAAM;IAElC;EAAC;IAAAtlD,GAAA;IAAAE,KAAA,EAED,SAAAqlJ,aAAch1G,EAAE,EAAE3P,EAAE,EAAEloB,CAAC,EAAEmoB,EAAE,EAAG;MAE7B,IAAMz9B,MAAM,GAAG,IAAI,CAAC0gJ,YAAY;QAC/BthJ,MAAM,GAAG,IAAI,CAACgiJ,YAAY;QAC1Bl/F,MAAM,GAAG,IAAI,CAAC68F,SAAS;QAEvBvP,EAAE,GAAGriG,EAAE,GAAG+U,MAAM;QAAGkhG,EAAE,GAAG5T,EAAE,GAAGttF,MAAM;QACnCmhG,EAAE,GAAG,IAAI,CAACX,WAAW;QAAGY,EAAE,GAAG,IAAI,CAACV,WAAW;QAC7CW,EAAE,GAAG,IAAI,CAACd,WAAW;QAAEe,EAAE,GAAG,IAAI,CAACb,WAAW;QAE5C5+G,CAAC,GAAG,CAAEzuB,CAAC,GAAGkoB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;QAC5BikH,EAAE,GAAG19G,CAAC,GAAGA,CAAC;QACV0/G,GAAG,GAAGhC,EAAE,GAAG19G,CAAC;;MAEb;;MAEA,IAAM2/G,EAAE,GAAG,CAAEH,EAAE,GAAGE,GAAG,GAAG,CAAC,GAAGF,EAAE,GAAG9B,EAAE,GAAG8B,EAAE,GAAGx/G,CAAC;MAC5C,IAAM/G,EAAE,GAAG,CAAE,CAAC,GAAGumH,EAAE,IAAKE,GAAG,GAAG,CAAE,CAAE,GAAG,GAAG,CAAC,GAAGF,EAAE,IAAK9B,EAAE,GAAG,CAAE,CAAE,GAAG,GAAG8B,EAAE,IAAKx/G,CAAC,GAAG,CAAC;MAC9E,IAAMvU,EAAE,GAAG,CAAE,CAAE,CAAC,GAAGg0H,EAAE,IAAKC,GAAG,GAAG,CAAE,GAAG,GAAGD,EAAE,IAAK/B,EAAE,GAAG,GAAG,GAAG19G,CAAC;MAC3D,IAAM4/G,EAAE,GAAGH,EAAE,GAAGC,GAAG,GAAGD,EAAE,GAAG/B,EAAE;;MAE7B;;MAEA,KAAM,IAAI/+I,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw/C,MAAM,EAAE,EAAGx/C,CAAC,EAAG;QAErC1C,MAAM,CAAE0C,CAAC,CAAE,GACTghJ,EAAE,GAAGtkJ,MAAM,CAAEikJ,EAAE,GAAG3gJ,CAAC,CAAE,GACrBs6B,EAAE,GAAG59B,MAAM,CAAEgkJ,EAAE,GAAG1gJ,CAAC,CAAE,GACrB8sB,EAAE,GAAGpwB,MAAM,CAAEowI,EAAE,GAAG9sI,CAAC,CAAE,GACrBihJ,EAAE,GAAGvkJ,MAAM,CAAEkkJ,EAAE,GAAG5gJ,CAAC,CAAE;MAExB;MAEA,OAAO1C,MAAM;IAEd;EAAC;EAAA,OAAAqiJ,gBAAA;AAAA,EAtI6BnB,WAAW;AAAA9kJ,OAAA,CAAAimJ,gBAAA,GAAAA,gBAAA;AAAA,IA0IpCuB,iBAAiB,0BAAAC,aAAA;EAAA78H,SAAA,CAAA48H,iBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA58H,YAAA,CAAA08H,iBAAA;EAEtB,SAAAA,kBAAazC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAAz7I,eAAA,OAAA2+I,iBAAA;IAAA,OAAAE,SAAA,CAAAllJ,IAAA,OAElEuiJ,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAACj7I,YAAA,CAAAm+I,iBAAA;IAAAhnJ,GAAA;IAAAE,KAAA,EAED,SAAAqlJ,aAAch1G,EAAE,EAAE3P,EAAE,EAAEloB,CAAC,EAAEmoB,EAAE,EAAG;MAE7B,IAAMz9B,MAAM,GAAG,IAAI,CAAC0gJ,YAAY;QAC/BthJ,MAAM,GAAG,IAAI,CAACgiJ,YAAY;QAC1Bl/F,MAAM,GAAG,IAAI,CAAC68F,SAAS;QAEvBgF,OAAO,GAAG52G,EAAE,GAAG+U,MAAM;QACrB8hG,OAAO,GAAGD,OAAO,GAAG7hG,MAAM;QAE1B+hG,OAAO,GAAG,CAAE3uI,CAAC,GAAGkoB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;QAClC0mH,OAAO,GAAG,CAAC,GAAGD,OAAO;MAEtB,KAAM,IAAIvhJ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw/C,MAAM,EAAE,EAAGx/C,CAAC,EAAG;QAErC1C,MAAM,CAAE0C,CAAC,CAAE,GACTtD,MAAM,CAAE4kJ,OAAO,GAAGthJ,CAAC,CAAE,GAAGwhJ,OAAO,GAC/B9kJ,MAAM,CAAE2kJ,OAAO,GAAGrhJ,CAAC,CAAE,GAAGuhJ,OAAO;MAElC;MAEA,OAAOjkJ,MAAM;IAEd;EAAC;EAAA,OAAA4jJ,iBAAA;AAAA,EA9B8B1C,WAAW;AAkC3C;AACA;AACA;AACA;AACA;AAJA9kJ,OAAA,CAAAwnJ,iBAAA,GAAAA,iBAAA;AAAA,IAMMO,mBAAmB,0BAAAC,aAAA;EAAAp9H,SAAA,CAAAm9H,mBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAAn9H,YAAA,CAAAi9H,mBAAA;EAExB,SAAAA,oBAAahD,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAAz7I,eAAA,OAAAk/I,mBAAA;IAAA,OAAAE,SAAA,CAAAzlJ,IAAA,OAElEuiJ,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAACj7I,YAAA,CAAA0+I,mBAAA;IAAAvnJ,GAAA;IAAAE,KAAA,EAED,SAAAqlJ,aAAch1G,EAAE,CAAC,kBAAmB;MAEnC,OAAO,IAAI,CAAC40G,gBAAgB,CAAE50G,EAAE,GAAG,CAAE,CAAC;IAEvC;EAAC;EAAA,OAAAg3G,mBAAA;AAAA,EAZgCjD,WAAW;AAAA9kJ,OAAA,CAAA+nJ,mBAAA,GAAAA,mBAAA;AAAA,IAgBvCG,aAAa;EAElB,SAAAA,cAAathJ,IAAI,EAAE+6I,KAAK,EAAE3+I,MAAM,EAAEmlJ,aAAa,EAAG;IAAAt/I,eAAA,OAAAq/I,aAAA;IAEjD,IAAKthJ,IAAI,KAAK7B,SAAS,EAAG,MAAM,IAAIV,KAAK,CAAE,8CAA+C,CAAC;IAC3F,IAAKs9I,KAAK,KAAK58I,SAAS,IAAI48I,KAAK,CAACt7I,MAAM,KAAK,CAAC,EAAG,MAAM,IAAIhC,KAAK,CAAE,mDAAmD,GAAGuC,IAAK,CAAC;IAE9H,IAAI,CAACA,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAAC+6I,KAAK,GAAGL,YAAY,CAAEK,KAAK,EAAE,IAAI,CAACyG,cAAe,CAAC;IACvD,IAAI,CAACplJ,MAAM,GAAGs+I,YAAY,CAAEt+I,MAAM,EAAE,IAAI,CAACqlJ,eAAgB,CAAC;IAE1D,IAAI,CAACC,gBAAgB,CAAEH,aAAa,IAAI,IAAI,CAACI,oBAAqB,CAAC;EAEpE;;EAEA;EACA;EAAAl/I,YAAA,CAAA6+I,aAAA;IAAA1nJ,GAAA;IAAAE,KAAA,EAwCA,SAAA8nJ,iCAAkC5kJ,MAAM,EAAG;MAE1C,OAAO,IAAImkJ,mBAAmB,CAAE,IAAI,CAACpG,KAAK,EAAE,IAAI,CAAC3+I,MAAM,EAAE,IAAI,CAAC4/I,YAAY,CAAC,CAAC,EAAEh/I,MAAO,CAAC;IAEvF;EAAC;IAAApD,GAAA;IAAAE,KAAA,EAED,SAAA+nJ,+BAAgC7kJ,MAAM,EAAG;MAExC,OAAO,IAAI4jJ,iBAAiB,CAAE,IAAI,CAAC7F,KAAK,EAAE,IAAI,CAAC3+I,MAAM,EAAE,IAAI,CAAC4/I,YAAY,CAAC,CAAC,EAAEh/I,MAAO,CAAC;IAErF;EAAC;IAAApD,GAAA;IAAAE,KAAA,EAED,SAAAgoJ,+BAAgC9kJ,MAAM,EAAG;MAExC,OAAO,IAAIqiJ,gBAAgB,CAAE,IAAI,CAACtE,KAAK,EAAE,IAAI,CAAC3+I,MAAM,EAAE,IAAI,CAAC4/I,YAAY,CAAC,CAAC,EAAEh/I,MAAO,CAAC;IAEpF;EAAC;IAAApD,GAAA;IAAAE,KAAA,EAED,SAAA4nJ,iBAAkBH,aAAa,EAAG;MAEjC,IAAIQ,aAAa;MAEjB,QAASR,aAAa;QAErB,KAAKz1I,mBAAmB;UAEvBi2I,aAAa,GAAG,IAAI,CAACH,gCAAgC;UAErD;QAED,KAAK71I,iBAAiB;UAErBg2I,aAAa,GAAG,IAAI,CAACF,8BAA8B;UAEnD;QAED,KAAK71I,iBAAiB;UAErB+1I,aAAa,GAAG,IAAI,CAACD,8BAA8B;UAEnD;MAEF;MAEA,IAAKC,aAAa,KAAK5jJ,SAAS,EAAG;QAElC,IAAM2hB,OAAO,GAAG,gCAAgC,GAC/C,IAAI,CAAC88H,aAAa,GAAG,wBAAwB,GAAG,IAAI,CAAC58I,IAAI;QAE1D,IAAK,IAAI,CAACi9I,iBAAiB,KAAK9+I,SAAS,EAAG;UAE3C;UACA,IAAKojJ,aAAa,KAAK,IAAI,CAACI,oBAAoB,EAAG;YAElD,IAAI,CAACD,gBAAgB,CAAE,IAAI,CAACC,oBAAqB,CAAC;UAEnD,CAAC,MAAM;YAEN,MAAM,IAAIlkJ,KAAK,CAAEqiB,OAAQ,CAAC,CAAC,CAAC;UAE7B;QAED;;QAEAzK,OAAO,CAACC,IAAI,CAAE,sBAAsB,EAAEwK,OAAQ,CAAC;QAC/C,OAAO,IAAI;MAEZ;MAEA,IAAI,CAACm9H,iBAAiB,GAAG8E,aAAa;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAnoJ,GAAA;IAAAE,KAAA,EAED,SAAAkxC,iBAAA,EAAmB;MAElB,QAAS,IAAI,CAACiyG,iBAAiB;QAE9B,KAAK,IAAI,CAAC2E,gCAAgC;UAEzC,OAAO91I,mBAAmB;QAE3B,KAAK,IAAI,CAAC+1I,8BAA8B;UAEvC,OAAO91I,iBAAiB;QAEzB,KAAK,IAAI,CAAC+1I,8BAA8B;UAEvC,OAAO91I,iBAAiB;MAE1B;IAED;EAAC;IAAApS,GAAA;IAAAE,KAAA,EAED,SAAAkiJ,aAAA,EAAe;MAEd,OAAO,IAAI,CAAC5/I,MAAM,CAACqD,MAAM,GAAG,IAAI,CAACs7I,KAAK,CAACt7I,MAAM;IAE9C;;IAEA;EAAA;IAAA7F,GAAA;IAAAE,KAAA,EACA,SAAA6pH,MAAOq+B,UAAU,EAAG;MAEnB,IAAKA,UAAU,KAAK,GAAG,EAAG;QAEzB,IAAMjH,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,KAAM,IAAIr7I,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGopI,KAAK,CAACt7I,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;UAElDq7I,KAAK,CAAEr7I,CAAC,CAAE,IAAIsiJ,UAAU;QAEzB;MAED;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAApoJ,GAAA;IAAAE,KAAA,EACA,SAAA0kB,MAAOyjI,SAAS,EAAG;MAElB,IAAKA,SAAS,KAAK,GAAG,EAAG;QAExB,IAAMlH,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,KAAM,IAAIr7I,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGopI,KAAK,CAACt7I,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;UAElDq7I,KAAK,CAAEr7I,CAAC,CAAE,IAAIuiJ,SAAS;QAExB;MAED;MAEA,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAAroJ,GAAA;IAAAE,KAAA,EACA,SAAA6kF,KAAMujE,SAAS,EAAEC,OAAO,EAAG;MAE1B,IAAMpH,KAAK,GAAG,IAAI,CAACA,KAAK;QACvBqH,KAAK,GAAGrH,KAAK,CAACt7I,MAAM;MAErB,IAAImkB,IAAI,GAAG,CAAC;QACXs6D,EAAE,GAAGkkE,KAAK,GAAG,CAAC;MAEf,OAAQx+H,IAAI,KAAKw+H,KAAK,IAAIrH,KAAK,CAAEn3H,IAAI,CAAE,GAAGs+H,SAAS,EAAG;QAErD,EAAGt+H,IAAI;MAER;MAEA,OAAQs6D,EAAE,KAAK,CAAE,CAAC,IAAI68D,KAAK,CAAE78D,EAAE,CAAE,GAAGikE,OAAO,EAAG;QAE7C,EAAGjkE,EAAE;MAEN;MAEA,EAAGA,EAAE,CAAC,CAAC;;MAEP,IAAKt6D,IAAI,KAAK,CAAC,IAAIs6D,EAAE,KAAKkkE,KAAK,EAAG;QAEjC;QACA,IAAKx+H,IAAI,IAAIs6D,EAAE,EAAG;UAEjBA,EAAE,GAAGttE,IAAI,CAACa,GAAG,CAAEysE,EAAE,EAAE,CAAE,CAAC;UACtBt6D,IAAI,GAAGs6D,EAAE,GAAG,CAAC;QAEd;QAEA,IAAMh/B,MAAM,GAAG,IAAI,CAAC88F,YAAY,CAAC,CAAC;QAClC,IAAI,CAACjB,KAAK,GAAGP,UAAU,CAAEO,KAAK,EAAEn3H,IAAI,EAAEs6D,EAAG,CAAC;QAC1C,IAAI,CAAC9hF,MAAM,GAAGo+I,UAAU,CAAE,IAAI,CAACp+I,MAAM,EAAEwnB,IAAI,GAAGs7B,MAAM,EAAEg/B,EAAE,GAAGh/B,MAAO,CAAC;MAEpE;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAtlD,GAAA;IAAAE,KAAA,EACA,SAAAuoJ,SAAA,EAAW;MAEV,IAAIC,KAAK,GAAG,IAAI;MAEhB,IAAMvG,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;MACrC,IAAKD,SAAS,GAAGnrI,IAAI,CAACsC,KAAK,CAAE6oI,SAAU,CAAC,KAAK,CAAC,EAAG;QAEhD1mI,OAAO,CAAChY,KAAK,CAAE,mDAAmD,EAAE,IAAK,CAAC;QAC1EilJ,KAAK,GAAG,KAAK;MAEd;MAEA,IAAMvH,KAAK,GAAG,IAAI,CAACA,KAAK;QACvB3+I,MAAM,GAAG,IAAI,CAACA,MAAM;QAEpBgmJ,KAAK,GAAGrH,KAAK,CAACt7I,MAAM;MAErB,IAAK2iJ,KAAK,KAAK,CAAC,EAAG;QAElB/sI,OAAO,CAAChY,KAAK,CAAE,sCAAsC,EAAE,IAAK,CAAC;QAC7DilJ,KAAK,GAAG,KAAK;MAEd;MAEA,IAAIC,QAAQ,GAAG,IAAI;MAEnB,KAAM,IAAI7iJ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK0iJ,KAAK,EAAE1iJ,CAAC,EAAG,EAAG;QAEpC,IAAM8iJ,QAAQ,GAAGzH,KAAK,CAAEr7I,CAAC,CAAE;QAE3B,IAAK,OAAO8iJ,QAAQ,KAAK,QAAQ,IAAIhjJ,KAAK,CAAEgjJ,QAAS,CAAC,EAAG;UAExDntI,OAAO,CAAChY,KAAK,CAAE,kDAAkD,EAAE,IAAI,EAAEqC,CAAC,EAAE8iJ,QAAS,CAAC;UACtFF,KAAK,GAAG,KAAK;UACb;QAED;QAEA,IAAKC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,GAAGC,QAAQ,EAAG;UAE/CntI,OAAO,CAAChY,KAAK,CAAE,yCAAyC,EAAE,IAAI,EAAEqC,CAAC,EAAE8iJ,QAAQ,EAAED,QAAS,CAAC;UACvFD,KAAK,GAAG,KAAK;UACb;QAED;QAEAC,QAAQ,GAAGC,QAAQ;MAEpB;MAEA,IAAKpmJ,MAAM,KAAK+B,SAAS,EAAG;QAE3B,IAAKs8I,YAAY,CAAEr+I,MAAO,CAAC,EAAG;UAE7B,KAAM,IAAIsD,IAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGvV,MAAM,CAACqD,MAAM,EAAEC,IAAC,KAAKiS,CAAC,EAAE,EAAGjS,IAAC,EAAG;YAEnD,IAAM5F,OAAK,GAAGsC,MAAM,CAAEsD,IAAC,CAAE;YAEzB,IAAKF,KAAK,CAAE1F,OAAM,CAAC,EAAG;cAErBub,OAAO,CAAChY,KAAK,CAAE,mDAAmD,EAAE,IAAI,EAAEqC,IAAC,EAAE5F,OAAM,CAAC;cACpFwoJ,KAAK,GAAG,KAAK;cACb;YAED;UAED;QAED;MAED;MAEA,OAAOA,KAAK;IAEb;;IAEA;IACA;EAAA;IAAA1oJ,GAAA;IAAAE,KAAA,EACA,SAAA2oJ,SAAA,EAAW;MAEV;MACA,IAAM1H,KAAK,GAAGP,UAAU,CAAE,IAAI,CAACO,KAAM,CAAC;QACrC3+I,MAAM,GAAGo+I,UAAU,CAAE,IAAI,CAACp+I,MAAO,CAAC;QAClC8iD,MAAM,GAAG,IAAI,CAAC88F,YAAY,CAAC,CAAC;QAE5B0G,mBAAmB,GAAG,IAAI,CAAC13G,gBAAgB,CAAC,CAAC,KAAKh/B,iBAAiB;QAEnE4wE,SAAS,GAAGm+D,KAAK,CAACt7I,MAAM,GAAG,CAAC;MAE7B,IAAIkjJ,UAAU,GAAG,CAAC;MAElB,KAAM,IAAIjjJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk9E,SAAS,EAAE,EAAGl9E,CAAC,EAAG;QAEtC,IAAIkjJ,IAAI,GAAG,KAAK;QAEhB,IAAMh1F,IAAI,GAAGmtF,KAAK,CAAEr7I,CAAC,CAAE;QACvB,IAAMmjJ,QAAQ,GAAG9H,KAAK,CAAEr7I,CAAC,GAAG,CAAC,CAAE;;QAE/B;;QAEA,IAAKkuD,IAAI,KAAKi1F,QAAQ,KAAMnjJ,CAAC,KAAK,CAAC,IAAIkuD,IAAI,KAAKmtF,KAAK,CAAE,CAAC,CAAE,CAAE,EAAG;UAE9D,IAAK,CAAE2H,mBAAmB,EAAG;YAE5B;;YAEA,IAAM/oI,MAAM,GAAGja,CAAC,GAAGw/C,MAAM;cACxB4jG,OAAO,GAAGnpI,MAAM,GAAGulC,MAAM;cACzB6jG,OAAO,GAAGppI,MAAM,GAAGulC,MAAM;YAE1B,KAAM,IAAIxnB,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKwnB,MAAM,EAAE,EAAGxnB,CAAC,EAAG;cAErC,IAAM59B,OAAK,GAAGsC,MAAM,CAAEud,MAAM,GAAG+d,CAAC,CAAE;cAElC,IAAK59B,OAAK,KAAKsC,MAAM,CAAE0mJ,OAAO,GAAGprH,CAAC,CAAE,IACnC59B,OAAK,KAAKsC,MAAM,CAAE2mJ,OAAO,GAAGrrH,CAAC,CAAE,EAAG;gBAElCkrH,IAAI,GAAG,IAAI;gBACX;cAED;YAED;UAED,CAAC,MAAM;YAENA,IAAI,GAAG,IAAI;UAEZ;QAED;;QAEA;;QAEA,IAAKA,IAAI,EAAG;UAEX,IAAKljJ,CAAC,KAAKijJ,UAAU,EAAG;YAEvB5H,KAAK,CAAE4H,UAAU,CAAE,GAAG5H,KAAK,CAAEr7I,CAAC,CAAE;YAEhC,IAAMsjJ,UAAU,GAAGtjJ,CAAC,GAAGw/C,MAAM;cAC5B+jG,WAAW,GAAGN,UAAU,GAAGzjG,MAAM;YAElC,KAAM,IAAIxnB,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKwnB,MAAM,EAAE,EAAGxnB,IAAC,EAAG;cAErCt7B,MAAM,CAAE6mJ,WAAW,GAAGvrH,IAAC,CAAE,GAAGt7B,MAAM,CAAE4mJ,UAAU,GAAGtrH,IAAC,CAAE;YAErD;UAED;UAEA,EAAGirH,UAAU;QAEd;MAED;;MAEA;;MAEA,IAAK/lE,SAAS,GAAG,CAAC,EAAG;QAEpBm+D,KAAK,CAAE4H,UAAU,CAAE,GAAG5H,KAAK,CAAEn+D,SAAS,CAAE;QAExC,KAAM,IAAIomE,WAAU,GAAGpmE,SAAS,GAAG19B,MAAM,EAAE+jG,YAAW,GAAGN,UAAU,GAAGzjG,MAAM,EAAExnB,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKwnB,MAAM,EAAE,EAAGxnB,IAAC,EAAG;UAEzGt7B,MAAM,CAAE6mJ,YAAW,GAAGvrH,IAAC,CAAE,GAAGt7B,MAAM,CAAE4mJ,WAAU,GAAGtrH,IAAC,CAAE;QAErD;QAEA,EAAGirH,UAAU;MAEd;MAEA,IAAKA,UAAU,KAAK5H,KAAK,CAACt7I,MAAM,EAAG;QAElC,IAAI,CAACs7I,KAAK,GAAGP,UAAU,CAAEO,KAAK,EAAE,CAAC,EAAE4H,UAAW,CAAC;QAC/C,IAAI,CAACvmJ,MAAM,GAAGo+I,UAAU,CAAEp+I,MAAM,EAAE,CAAC,EAAEumJ,UAAU,GAAGzjG,MAAO,CAAC;MAE3D,CAAC,MAAM;QAEN,IAAI,CAAC67F,KAAK,GAAGA,KAAK;QAClB,IAAI,CAAC3+I,MAAM,GAAGA,MAAM;MAErB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAxC,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,IAAMmkI,KAAK,GAAGP,UAAU,CAAE,IAAI,CAACO,KAAK,EAAE,CAAE,CAAC;MACzC,IAAM3+I,MAAM,GAAGo+I,UAAU,CAAE,IAAI,CAACp+I,MAAM,EAAE,CAAE,CAAC;MAE3C,IAAM8mJ,kBAAkB,GAAG,IAAI,CAACnjJ,WAAW;MAC3C,IAAM+7I,KAAK,GAAG,IAAIoH,kBAAkB,CAAE,IAAI,CAACljJ,IAAI,EAAE+6I,KAAK,EAAE3+I,MAAO,CAAC;;MAEhE;MACA0/I,KAAK,CAACmB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEhD,OAAOnB,KAAK;IAEb;EAAC;IAAAliJ,GAAA;IAAAE,KAAA,EAxaD,SAAAopB,OAAe44H,KAAK,EAAG;MAEtB,IAAMqH,SAAS,GAAGrH,KAAK,CAAC/7I,WAAW;MAEnC,IAAIoxH,IAAI;;MAER;MACA,IAAKgyB,SAAS,CAACjgI,MAAM,KAAK,IAAI,CAACA,MAAM,EAAG;QAEvCiuG,IAAI,GAAGgyB,SAAS,CAACjgI,MAAM,CAAE44H,KAAM,CAAC;MAEjC,CAAC,MAAM;QAEN;QACA3qB,IAAI,GAAG;UAEN,MAAM,EAAE2qB,KAAK,CAAC97I,IAAI;UAClB,OAAO,EAAE06I,YAAY,CAAEoB,KAAK,CAACf,KAAK,EAAEv3H,KAAM,CAAC;UAC3C,QAAQ,EAAEk3H,YAAY,CAAEoB,KAAK,CAAC1/I,MAAM,EAAEonB,KAAM;QAE7C,CAAC;QAED,IAAM+9H,aAAa,GAAGzF,KAAK,CAAC9wG,gBAAgB,CAAC,CAAC;QAE9C,IAAKu2G,aAAa,KAAKzF,KAAK,CAAC6F,oBAAoB,EAAG;UAEnDxwB,IAAI,CAACowB,aAAa,GAAGA,aAAa;QAEnC;MAED;MAEApwB,IAAI,CAACx1H,IAAI,GAAGmgJ,KAAK,CAACc,aAAa,CAAC,CAAC;;MAEjC,OAAOzrB,IAAI;IAEZ;EAAC;EAAA,OAAAmwB,aAAA;AAAA;AAAAloJ,OAAA,CAAAkoJ,aAAA,GAAAA,aAAA;AAwYFA,aAAa,CAAC/nJ,SAAS,CAACioJ,cAAc,GAAGhsI,YAAY;AACrD8rI,aAAa,CAAC/nJ,SAAS,CAACkoJ,eAAe,GAAGjsI,YAAY;AACtD8rI,aAAa,CAAC/nJ,SAAS,CAACooJ,oBAAoB,GAAG51I,iBAAiB;;AAEhE;AACA;AACA;AAFA,IAGMq3I,oBAAoB,0BAAAC,cAAA;EAAAr/H,SAAA,CAAAo/H,oBAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAp/H,YAAA,CAAAk/H,oBAAA;EAAA,SAAAA,qBAAA;IAAAnhJ,eAAA,OAAAmhJ,oBAAA;IAAA,OAAAE,SAAA,CAAAr9G,KAAA,OAAAJ,SAAA;EAAA;EAAA,OAAApjC,YAAA,CAAA2gJ,oBAAA;AAAA,EAAS9B,aAAa;AAAAloJ,OAAA,CAAAgqJ,oBAAA,GAAAA,oBAAA;AAEhDA,oBAAoB,CAAC7pJ,SAAS,CAACqjJ,aAAa,GAAG,MAAM;AACrDwG,oBAAoB,CAAC7pJ,SAAS,CAACkoJ,eAAe,GAAGj+H,KAAK;AACtD4/H,oBAAoB,CAAC7pJ,SAAS,CAACooJ,oBAAoB,GAAG71I,mBAAmB;AACzEs3I,oBAAoB,CAAC7pJ,SAAS,CAACsoJ,8BAA8B,GAAG1jJ,SAAS;AACzEilJ,oBAAoB,CAAC7pJ,SAAS,CAACuoJ,8BAA8B,GAAG3jJ,SAAS;;AAEzE;AACA;AACA;AAFA,IAGMolJ,kBAAkB,0BAAAC,eAAA;EAAAx/H,SAAA,CAAAu/H,kBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAv/H,YAAA,CAAAq/H,kBAAA;EAAA,SAAAA,mBAAA;IAAAthJ,eAAA,OAAAshJ,kBAAA;IAAA,OAAAE,SAAA,CAAAx9G,KAAA,OAAAJ,SAAA;EAAA;EAAA,OAAApjC,YAAA,CAAA8gJ,kBAAA;AAAA,EAASjC,aAAa;AAAAloJ,OAAA,CAAAmqJ,kBAAA,GAAAA,kBAAA;AAE9CA,kBAAkB,CAAChqJ,SAAS,CAACqjJ,aAAa,GAAG,OAAO;;AAEpD;AACA;AACA;AAFA,IAGM8G,mBAAmB,0BAAAC,eAAA;EAAA3/H,SAAA,CAAA0/H,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAA1/H,YAAA,CAAAw/H,mBAAA;EAAA,SAAAA,oBAAA;IAAAzhJ,eAAA,OAAAyhJ,mBAAA;IAAA,OAAAE,SAAA,CAAA39G,KAAA,OAAAJ,SAAA;EAAA;EAAA,OAAApjC,YAAA,CAAAihJ,mBAAA;AAAA,EAASpC,aAAa;AAAAloJ,OAAA,CAAAsqJ,mBAAA,GAAAA,mBAAA;AAE/CA,mBAAmB,CAACnqJ,SAAS,CAACqjJ,aAAa,GAAG,QAAQ;;AAEtD;AACA;AACA;AAFA,IAIMiH,2BAA2B,0BAAAC,aAAA;EAAA9/H,SAAA,CAAA6/H,2BAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA7/H,YAAA,CAAA2/H,2BAAA;EAEhC,SAAAA,4BAAa1F,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAAz7I,eAAA,OAAA4hJ,2BAAA;IAAA,OAAAE,SAAA,CAAAnoJ,IAAA,OAElEuiJ,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAACj7I,YAAA,CAAAohJ,2BAAA;IAAAjqJ,GAAA;IAAAE,KAAA,EAED,SAAAqlJ,aAAch1G,EAAE,EAAE3P,EAAE,EAAEloB,CAAC,EAAEmoB,EAAE,EAAG;MAE7B,IAAMz9B,MAAM,GAAG,IAAI,CAAC0gJ,YAAY;QAC/BthJ,MAAM,GAAG,IAAI,CAACgiJ,YAAY;QAC1Bl/F,MAAM,GAAG,IAAI,CAAC68F,SAAS;QAEvB1iI,KAAK,GAAG,CAAE/G,CAAC,GAAGkoB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;MAEjC,IAAI7gB,MAAM,GAAGwwB,EAAE,GAAG+U,MAAM;MAExB,KAAM,IAAIyC,GAAG,GAAGhoC,MAAM,GAAGulC,MAAM,EAAEvlC,MAAM,KAAKgoC,GAAG,EAAEhoC,MAAM,IAAI,CAAC,EAAG;QAE9D8R,UAAU,CAACwD,SAAS,CAAEjyB,MAAM,EAAE,CAAC,EAAEZ,MAAM,EAAEud,MAAM,GAAGulC,MAAM,EAAE9iD,MAAM,EAAEud,MAAM,EAAEN,KAAM,CAAC;MAElF;MAEA,OAAOrc,MAAM;IAEd;EAAC;EAAA,OAAA6mJ,2BAAA;AAAA,EA1BwC3F,WAAW;AA8BrD;AACA;AACA;AAFA9kJ,OAAA,CAAAyqJ,2BAAA,GAAAA,2BAAA;AAAA,IAGMG,uBAAuB,0BAAAC,eAAA;EAAAjgI,SAAA,CAAAggI,uBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAhgI,YAAA,CAAA8/H,uBAAA;EAAA,SAAAA,wBAAA;IAAA/hJ,eAAA,OAAA+hJ,uBAAA;IAAA,OAAAE,SAAA,CAAAj+G,KAAA,OAAAJ,SAAA;EAAA;EAAApjC,YAAA,CAAAuhJ,uBAAA;IAAApqJ,GAAA;IAAAE,KAAA,EAE5B,SAAA+nJ,+BAAgC7kJ,MAAM,EAAG;MAExC,OAAO,IAAI6mJ,2BAA2B,CAAE,IAAI,CAAC9I,KAAK,EAAE,IAAI,CAAC3+I,MAAM,EAAE,IAAI,CAAC4/I,YAAY,CAAC,CAAC,EAAEh/I,MAAO,CAAC;IAE/F;EAAC;EAAA,OAAAgnJ,uBAAA;AAAA,EANoC1C,aAAa;AAAAloJ,OAAA,CAAA4qJ,uBAAA,GAAAA,uBAAA;AAUnDA,uBAAuB,CAACzqJ,SAAS,CAACqjJ,aAAa,GAAG,YAAY;AAC9D;AACAoH,uBAAuB,CAACzqJ,SAAS,CAACooJ,oBAAoB,GAAG51I,iBAAiB;AAC1Ei4I,uBAAuB,CAACzqJ,SAAS,CAACuoJ,8BAA8B,GAAG3jJ,SAAS;;AAE5E;AACA;AACA;AAFA,IAGMgmJ,mBAAmB,0BAAAC,eAAA;EAAApgI,SAAA,CAAAmgI,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAngI,YAAA,CAAAigI,mBAAA;EAAA,SAAAA,oBAAA;IAAAliJ,eAAA,OAAAkiJ,mBAAA;IAAA,OAAAE,SAAA,CAAAp+G,KAAA,OAAAJ,SAAA;EAAA;EAAA,OAAApjC,YAAA,CAAA0hJ,mBAAA;AAAA,EAAS7C,aAAa;AAAAloJ,OAAA,CAAA+qJ,mBAAA,GAAAA,mBAAA;AAE/CA,mBAAmB,CAAC5qJ,SAAS,CAACqjJ,aAAa,GAAG,QAAQ;AACtDuH,mBAAmB,CAAC5qJ,SAAS,CAACkoJ,eAAe,GAAGj+H,KAAK;AACrD2gI,mBAAmB,CAAC5qJ,SAAS,CAACooJ,oBAAoB,GAAG71I,mBAAmB;AACxEq4I,mBAAmB,CAAC5qJ,SAAS,CAACsoJ,8BAA8B,GAAG1jJ,SAAS;AACxEgmJ,mBAAmB,CAAC5qJ,SAAS,CAACuoJ,8BAA8B,GAAG3jJ,SAAS;;AAExE;AACA;AACA;AAFA,IAGMmmJ,mBAAmB,0BAAAC,eAAA;EAAAvgI,SAAA,CAAAsgI,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAtgI,YAAA,CAAAogI,mBAAA;EAAA,SAAAA,oBAAA;IAAAriJ,eAAA,OAAAqiJ,mBAAA;IAAA,OAAAE,SAAA,CAAAv+G,KAAA,OAAAJ,SAAA;EAAA;EAAA,OAAApjC,YAAA,CAAA6hJ,mBAAA;AAAA,EAAShD,aAAa;AAAAloJ,OAAA,CAAAkrJ,mBAAA,GAAAA,mBAAA;AAE/CA,mBAAmB,CAAC/qJ,SAAS,CAACqjJ,aAAa,GAAG,QAAQ;AAAC,IAEjD6H,aAAa;EAElB,SAAAA,cAAazkJ,IAAI,EAAE0kJ,QAAQ,GAAG,CAAE,CAAC,EAAE7I,MAAM,EAAEmC,SAAS,GAAG5xI,wBAAwB,EAAG;IAAAnK,eAAA,OAAAwiJ,aAAA;IAEjF,IAAI,CAACzkJ,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC67I,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC6I,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC1G,SAAS,GAAGA,SAAS;IAE1B,IAAI,CAAC3sI,IAAI,GAAGN,YAAY,CAAC,CAAC;;IAE1B;IACA,IAAK,IAAI,CAAC2zI,QAAQ,GAAG,CAAC,EAAG;MAExB,IAAI,CAACxI,aAAa,CAAC,CAAC;IAErB;EAED;EAACz5I,YAAA,CAAAgiJ,aAAA;IAAA7qJ,GAAA;IAAAE,KAAA,EA+RD,SAAAoiJ,cAAA,EAAgB;MAEf,IAAML,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAI6I,QAAQ,GAAG,CAAC;MAEhB,KAAM,IAAIhlJ,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGkqI,MAAM,CAACp8I,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEnD,IAAMo8I,KAAK,GAAG,IAAI,CAACD,MAAM,CAAEn8I,CAAC,CAAE;QAE9BglJ,QAAQ,GAAG9zI,IAAI,CAACa,GAAG,CAAEizI,QAAQ,EAAE5I,KAAK,CAACf,KAAK,CAAEe,KAAK,CAACf,KAAK,CAACt7I,MAAM,GAAG,CAAC,CAAG,CAAC;MAEvE;MAEA,IAAI,CAACilJ,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9qJ,GAAA;IAAAE,KAAA,EAED,SAAA6kF,KAAA,EAAO;MAEN,KAAM,IAAIj/E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACm8I,MAAM,CAACp8I,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/C,IAAI,CAACm8I,MAAM,CAAEn8I,CAAC,CAAE,CAACi/E,IAAI,CAAE,CAAC,EAAE,IAAI,CAAC+lE,QAAS,CAAC;MAE1C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9qJ,GAAA;IAAAE,KAAA,EAED,SAAAuoJ,SAAA,EAAW;MAEV,IAAIC,KAAK,GAAG,IAAI;MAEhB,KAAM,IAAI5iJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACm8I,MAAM,CAACp8I,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/C4iJ,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACzG,MAAM,CAAEn8I,CAAC,CAAE,CAAC2iJ,QAAQ,CAAC,CAAC;MAE7C;MAEA,OAAOC,KAAK;IAEb;EAAC;IAAA1oJ,GAAA;IAAAE,KAAA,EAED,SAAA2oJ,SAAA,EAAW;MAEV,KAAM,IAAI/iJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACm8I,MAAM,CAACp8I,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/C,IAAI,CAACm8I,MAAM,CAAEn8I,CAAC,CAAE,CAAC+iJ,QAAQ,CAAC,CAAC;MAE5B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA7oJ,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,IAAMilI,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIn8I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACm8I,MAAM,CAACp8I,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/Cm8I,MAAM,CAAC38I,IAAI,CAAE,IAAI,CAAC28I,MAAM,CAAEn8I,CAAC,CAAE,CAACkX,KAAK,CAAC,CAAE,CAAC;MAExC;MAEA,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAAC0kJ,QAAQ,EAAE7I,MAAM,EAAE,IAAI,CAACmC,SAAU,CAAC;IAEhF;EAAC;IAAApkJ,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,OAAO,IAAI,CAACnjB,WAAW,CAACmjB,MAAM,CAAE,IAAK,CAAC;IAEvC;EAAC;IAAAtpB,GAAA;IAAAE,KAAA,EAvWD,SAAAksB,MAAcmrG,IAAI,EAAG;MAEpB,IAAM0qB,MAAM,GAAG,EAAE;QAChB8I,UAAU,GAAGxzB,IAAI,CAAC0qB,MAAM;QACxB+I,SAAS,GAAG,GAAG,IAAKzzB,IAAI,CAACwqB,GAAG,IAAI,GAAG,CAAE;MAEtC,KAAM,IAAIj8I,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGgzI,UAAU,CAACllJ,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEvDm8I,MAAM,CAAC38I,IAAI,CAAE2lJ,kBAAkB,CAAEF,UAAU,CAAEjlJ,CAAC,CAAG,CAAC,CAAC8e,KAAK,CAAEomI,SAAU,CAAE,CAAC;MAExE;MAEA,IAAMhJ,IAAI,GAAG,IAAI,IAAI,CAAEzqB,IAAI,CAACnxH,IAAI,EAAEmxH,IAAI,CAACuzB,QAAQ,EAAE7I,MAAM,EAAE1qB,IAAI,CAAC6sB,SAAU,CAAC;MACzEpC,IAAI,CAACvqI,IAAI,GAAG8/G,IAAI,CAAC9/G,IAAI;MAErB,OAAOuqI,IAAI;IAEZ;EAAC;IAAAhiJ,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAe04H,IAAI,EAAG;MAErB,IAAMC,MAAM,GAAG,EAAE;QAChBiJ,UAAU,GAAGlJ,IAAI,CAACC,MAAM;MAEzB,IAAM1qB,IAAI,GAAG;QAEZ,MAAM,EAAEyqB,IAAI,CAAC57I,IAAI;QACjB,UAAU,EAAE47I,IAAI,CAAC8I,QAAQ;QACzB,QAAQ,EAAE7I,MAAM;QAChB,MAAM,EAAED,IAAI,CAACvqI,IAAI;QACjB,WAAW,EAAEuqI,IAAI,CAACoC;MAEnB,CAAC;MAED,KAAM,IAAIt+I,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGmzI,UAAU,CAACrlJ,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEvDm8I,MAAM,CAAC38I,IAAI,CAAEoiJ,aAAa,CAACp+H,MAAM,CAAE4hI,UAAU,CAAEplJ,CAAC,CAAG,CAAE,CAAC;MAEvD;MAEA,OAAOyxH,IAAI;IAEZ;EAAC;IAAAv3H,GAAA;IAAAE,KAAA,EAED,SAAAirJ,8BAAsC/kJ,IAAI,EAAEglJ,mBAAmB,EAAErJ,GAAG,EAAEsJ,MAAM,EAAG;MAE9E,IAAMC,eAAe,GAAGF,mBAAmB,CAACvlJ,MAAM;MAClD,IAAMo8I,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIn8I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwlJ,eAAe,EAAExlJ,CAAC,EAAG,EAAG;QAE5C,IAAIq7I,KAAK,GAAG,EAAE;QACd,IAAI3+I,MAAM,GAAG,EAAE;QAEf2+I,KAAK,CAAC77I,IAAI,CACT,CAAEQ,CAAC,GAAGwlJ,eAAe,GAAG,CAAC,IAAKA,eAAe,EAC7CxlJ,CAAC,EACD,CAAEA,CAAC,GAAG,CAAC,IAAKwlJ,eAAgB,CAAC;QAE9B9oJ,MAAM,CAAC8C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QAEtB,IAAMuV,KAAK,GAAGqmI,gBAAgB,CAAEC,KAAM,CAAC;QACvCA,KAAK,GAAGE,WAAW,CAAEF,KAAK,EAAE,CAAC,EAAEtmI,KAAM,CAAC;QACtCrY,MAAM,GAAG6+I,WAAW,CAAE7+I,MAAM,EAAE,CAAC,EAAEqY,KAAM,CAAC;;QAExC;QACA;QACA,IAAK,CAAEwwI,MAAM,IAAIlK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAG;UAEnCA,KAAK,CAAC77I,IAAI,CAAEgmJ,eAAgB,CAAC;UAC7B9oJ,MAAM,CAAC8C,IAAI,CAAE9C,MAAM,CAAE,CAAC,CAAG,CAAC;QAE3B;QAEAy/I,MAAM,CAAC38I,IAAI,CACV,IAAIwkJ,mBAAmB,CACtB,yBAAyB,GAAGsB,mBAAmB,CAAEtlJ,CAAC,CAAE,CAACM,IAAI,GAAG,GAAG,EAC/D+6I,KAAK,EAAE3+I,MACR,CAAC,CAACoiB,KAAK,CAAE,GAAG,GAAGm9H,GAAI,CAAE,CAAC;MAExB;MAEA,OAAO,IAAI,IAAI,CAAE37I,IAAI,EAAE,CAAE,CAAC,EAAE67I,MAAO,CAAC;IAErC;EAAC;IAAAjiJ,GAAA;IAAAE,KAAA,EAED,SAAAqrJ,WAAmBC,iBAAiB,EAAEplJ,IAAI,EAAG;MAE5C,IAAIqlJ,SAAS,GAAGD,iBAAiB;MAEjC,IAAK,CAAE5hI,KAAK,CAACC,OAAO,CAAE2hI,iBAAkB,CAAC,EAAG;QAE3C,IAAMtN,CAAC,GAAGsN,iBAAiB;QAC3BC,SAAS,GAAGvN,CAAC,CAACtiH,QAAQ,IAAIsiH,CAAC,CAACtiH,QAAQ,CAACgP,UAAU,IAAIszG,CAAC,CAACtzG,UAAU;MAEhE;MAEA,KAAM,IAAI9kC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2lJ,SAAS,CAAC5lJ,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE7C,IAAK2lJ,SAAS,CAAE3lJ,CAAC,CAAE,CAACM,IAAI,KAAKA,IAAI,EAAG;UAEnC,OAAOqlJ,SAAS,CAAE3lJ,CAAC,CAAE;QAEtB;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAwrJ,oCAA4CrwE,YAAY,EAAE0mE,GAAG,EAAEsJ,MAAM,EAAG;MAEvE,IAAMM,uBAAuB,GAAG,CAAC,CAAC;;MAElC;MACA;MACA,IAAMC,OAAO,GAAG,oBAAoB;;MAEpC;MACA;MACA,KAAM,IAAI9lJ,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGypD,YAAY,CAACx1E,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAEzD,IAAM41E,WAAW,GAAGL,YAAY,CAAEv1E,CAAC,CAAE;QACrC,IAAM+lJ,KAAK,GAAGnwE,WAAW,CAACt1E,IAAI,CAAC68E,KAAK,CAAE2oE,OAAQ,CAAC;QAE/C,IAAKC,KAAK,IAAIA,KAAK,CAAChmJ,MAAM,GAAG,CAAC,EAAG;UAEhC,IAAMO,IAAI,GAAGylJ,KAAK,CAAE,CAAC,CAAE;UAEvB,IAAIC,qBAAqB,GAAGH,uBAAuB,CAAEvlJ,IAAI,CAAE;UAE3D,IAAK,CAAE0lJ,qBAAqB,EAAG;YAE9BH,uBAAuB,CAAEvlJ,IAAI,CAAE,GAAG0lJ,qBAAqB,GAAG,EAAE;UAE7D;UAEAA,qBAAqB,CAACxmJ,IAAI,CAAEo2E,WAAY,CAAC;QAE1C;MAED;MAEA,IAAMqwE,KAAK,GAAG,EAAE;MAEhB,KAAM,IAAM3lJ,MAAI,IAAIulJ,uBAAuB,EAAG;QAE7CI,KAAK,CAACzmJ,IAAI,CAAE,IAAI,CAAC6lJ,6BAA6B,CAAE/kJ,MAAI,EAAEulJ,uBAAuB,CAAEvlJ,MAAI,CAAE,EAAE27I,GAAG,EAAEsJ,MAAO,CAAE,CAAC;MAEvG;MAEA,OAAOU,KAAK;IAEb;;IAEA;EAAA;IAAA/rJ,GAAA;IAAAE,KAAA,EACA,SAAA8rJ,eAAuB38G,SAAS,EAAE+mF,KAAK,EAAG;MAEzC,IAAK,CAAE/mF,SAAS,EAAG;QAElB5zB,OAAO,CAAChY,KAAK,CAAE,uDAAwD,CAAC;QACxE,OAAO,IAAI;MAEZ;MAEA,IAAMwoJ,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAc1C,SAAS,EAAE2C,SAAS,EAAEC,aAAa,EAAEC,YAAY,EAAEC,UAAU,EAAG;QAEnG;QACA,IAAKF,aAAa,CAACtmJ,MAAM,KAAK,CAAC,EAAG;UAEjC,IAAMs7I,KAAK,GAAG,EAAE;UAChB,IAAM3+I,MAAM,GAAG,EAAE;UAEjBg/I,WAAW,CAAE2K,aAAa,EAAEhL,KAAK,EAAE3+I,MAAM,EAAE4pJ,YAAa,CAAC;;UAEzD;UACA,IAAKjL,KAAK,CAACt7I,MAAM,KAAK,CAAC,EAAG;YAEzBwmJ,UAAU,CAAC/mJ,IAAI,CAAE,IAAIikJ,SAAS,CAAE2C,SAAS,EAAE/K,KAAK,EAAE3+I,MAAO,CAAE,CAAC;UAE7D;QAED;MAED,CAAC;MAED,IAAMy/I,MAAM,GAAG,EAAE;MAEjB,IAAMqK,QAAQ,GAAGj9G,SAAS,CAACjpC,IAAI,IAAI,SAAS;MAC5C,IAAM27I,GAAG,GAAG1yG,SAAS,CAAC0yG,GAAG,IAAI,EAAE;MAC/B,IAAMqC,SAAS,GAAG/0G,SAAS,CAAC+0G,SAAS;;MAErC;MACA,IAAI0G,QAAQ,GAAGz7G,SAAS,CAACxpC,MAAM,IAAI,CAAE,CAAC;MAEtC,IAAM0mJ,eAAe,GAAGl9G,SAAS,CAACm9G,SAAS,IAAI,EAAE;MAEjD,KAAM,IAAIjpI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgpI,eAAe,CAAC1mJ,MAAM,EAAE0d,CAAC,EAAG,EAAG;QAEnD,IAAM4oI,aAAa,GAAGI,eAAe,CAAEhpI,CAAC,CAAE,CAAC3c,IAAI;;QAE/C;QACA,IAAK,CAAEulJ,aAAa,IAAIA,aAAa,CAACtmJ,MAAM,KAAK,CAAC,EAAG;;QAErD;QACA,IAAKsmJ,aAAa,CAAE,CAAC,CAAE,CAAC9wE,YAAY,EAAG;UAEtC;UACA,IAAMoxE,gBAAgB,GAAG,CAAC,CAAC;UAE3B,IAAIpuD,CAAC;UAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8tD,aAAa,CAACtmJ,MAAM,EAAEw4F,CAAC,EAAG,EAAG;YAE7C,IAAK8tD,aAAa,CAAE9tD,CAAC,CAAE,CAAChjB,YAAY,EAAG;cAEtC,KAAM,IAAIrjE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGm0I,aAAa,CAAE9tD,CAAC,CAAE,CAAChjB,YAAY,CAACx1E,MAAM,EAAEmS,CAAC,EAAG,EAAG;gBAEnEy0I,gBAAgB,CAAEN,aAAa,CAAE9tD,CAAC,CAAE,CAAChjB,YAAY,CAAErjE,CAAC,CAAE,CAAE,GAAG,CAAE,CAAC;cAE/D;YAED;UAED;;UAEA;UACA;UACA;UACA,KAAM,IAAM00I,eAAe,IAAID,gBAAgB,EAAG;YAEjD,IAAMtL,KAAK,GAAG,EAAE;YAChB,IAAM3+I,MAAM,GAAG,EAAE;YAEjB,KAAM,IAAIwV,EAAC,GAAG,CAAC,EAAEA,EAAC,KAAKm0I,aAAa,CAAE9tD,CAAC,CAAE,CAAChjB,YAAY,CAACx1E,MAAM,EAAE,EAAGmS,EAAC,EAAG;cAErE,IAAM20I,YAAY,GAAGR,aAAa,CAAE9tD,CAAC,CAAE;cAEvC8iD,KAAK,CAAC77I,IAAI,CAAEqnJ,YAAY,CAAC34F,IAAK,CAAC;cAC/BxxD,MAAM,CAAC8C,IAAI,CAAIqnJ,YAAY,CAACjxE,WAAW,KAAKgxE,eAAe,GAAK,CAAC,GAAG,CAAE,CAAC;YAExE;YAEAzK,MAAM,CAAC38I,IAAI,CAAE,IAAIwkJ,mBAAmB,CAAE,wBAAwB,GAAG4C,eAAe,GAAG,GAAG,EAAEvL,KAAK,EAAE3+I,MAAO,CAAE,CAAC;UAE1G;UAEAsoJ,QAAQ,GAAG2B,gBAAgB,CAAC5mJ,MAAM,GAAGk8I,GAAG;QAEzC,CAAC,MAAM;UAEN;;UAEA,IAAM6K,QAAQ,GAAG,SAAS,GAAGx2B,KAAK,CAAE7yG,CAAC,CAAE,CAACnd,IAAI,GAAG,GAAG;UAElD6lJ,gBAAgB,CACfvB,mBAAmB,EAAEkC,QAAQ,GAAG,WAAW,EAC3CT,aAAa,EAAE,KAAK,EAAElK,MAAO,CAAC;UAE/BgK,gBAAgB,CACf7B,uBAAuB,EAAEwC,QAAQ,GAAG,aAAa,EACjDT,aAAa,EAAE,KAAK,EAAElK,MAAO,CAAC;UAE/BgK,gBAAgB,CACfvB,mBAAmB,EAAEkC,QAAQ,GAAG,QAAQ,EACxCT,aAAa,EAAE,KAAK,EAAElK,MAAO,CAAC;QAEhC;MAED;MAEA,IAAKA,MAAM,CAACp8I,MAAM,KAAK,CAAC,EAAG;QAE1B,OAAO,IAAI;MAEZ;MAEA,IAAMm8I,IAAI,GAAG,IAAI,IAAI,CAAEsK,QAAQ,EAAExB,QAAQ,EAAE7I,MAAM,EAAEmC,SAAU,CAAC;MAE9D,OAAOpC,IAAI;IAEZ;EAAC;EAAA,OAAA6I,aAAA;AAAA;AAAArrJ,OAAA,CAAAqrJ,aAAA,GAAAA,aAAA;AAiFF,SAASgC,4BAA4BA,CAAEC,QAAQ,EAAG;EAEjD,QAASA,QAAQ,CAACp1I,WAAW,CAAC,CAAC;IAE9B,KAAK,QAAQ;IACb,KAAK,QAAQ;IACb,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb,KAAK,SAAS;MAEb,OAAOoyI,mBAAmB;IAE3B,KAAK,QAAQ;IACb,KAAK,SAAS;IACd,KAAK,SAAS;IACd,KAAK,SAAS;MAEb,OAAOY,mBAAmB;IAE3B,KAAK,OAAO;MAEX,OAAOf,kBAAkB;IAE1B,KAAK,YAAY;MAEhB,OAAOS,uBAAuB;IAE/B,KAAK,MAAM;IACX,KAAK,SAAS;MAEb,OAAOZ,oBAAoB;IAE5B,KAAK,QAAQ;MAEZ,OAAOe,mBAAmB;EAE5B;EAEA,MAAM,IAAI1mJ,KAAK,CAAE,6CAA6C,GAAGipJ,QAAS,CAAC;AAE5E;AAEA,SAAS7B,kBAAkBA,CAAE1zB,IAAI,EAAG;EAEnC,IAAKA,IAAI,CAACx1H,IAAI,KAAKwC,SAAS,EAAG;IAE9B,MAAM,IAAIV,KAAK,CAAE,0DAA2D,CAAC;EAE9E;EAEA,IAAM0lJ,SAAS,GAAGsD,4BAA4B,CAAEt1B,IAAI,CAACx1H,IAAK,CAAC;EAE3D,IAAKw1H,IAAI,CAAC4pB,KAAK,KAAK58I,SAAS,EAAG;IAE/B,IAAM48I,KAAK,GAAG,EAAE;MAAE3+I,MAAM,GAAG,EAAE;IAE7Bg/I,WAAW,CAAEjqB,IAAI,CAAC3wH,IAAI,EAAEu6I,KAAK,EAAE3+I,MAAM,EAAE,OAAQ,CAAC;IAEhD+0H,IAAI,CAAC4pB,KAAK,GAAGA,KAAK;IAClB5pB,IAAI,CAAC/0H,MAAM,GAAGA,MAAM;EAErB;;EAEA;EACA,IAAK+mJ,SAAS,CAACn9H,KAAK,KAAK7nB,SAAS,EAAG;IAEpC,OAAOglJ,SAAS,CAACn9H,KAAK,CAAEmrG,IAAK,CAAC;EAE/B,CAAC,MAAM;IAEN;IACA,OAAO,IAAIgyB,SAAS,CAAEhyB,IAAI,CAACnxH,IAAI,EAAEmxH,IAAI,CAAC4pB,KAAK,EAAE5pB,IAAI,CAAC/0H,MAAM,EAAE+0H,IAAI,CAACowB,aAAc,CAAC;EAE/E;AAED;AAEA,IAAMoF,KAAK,GAAG;EAEb7lI,OAAO,EAAE,KAAK;EAEd8lI,KAAK,EAAE,CAAC,CAAC;EAET7vI,GAAG,EAAE,SAAAA,IAAWnd,GAAG,EAAEitJ,IAAI,EAAG;IAE3B,IAAK,IAAI,CAAC/lI,OAAO,KAAK,KAAK,EAAG;;IAE9B;;IAEA,IAAI,CAAC8lI,KAAK,CAAEhtJ,GAAG,CAAE,GAAGitJ,IAAI;EAEzB,CAAC;EAEDxwI,GAAG,EAAE,SAAAA,IAAWzc,GAAG,EAAG;IAErB,IAAK,IAAI,CAACknB,OAAO,KAAK,KAAK,EAAG;;IAE9B;;IAEA,OAAO,IAAI,CAAC8lI,KAAK,CAAEhtJ,GAAG,CAAE;EAEzB,CAAC;EAEDksC,MAAM,EAAE,SAAAA,OAAWlsC,GAAG,EAAG;IAExB,OAAO,IAAI,CAACgtJ,KAAK,CAAEhtJ,GAAG,CAAE;EAEzB,CAAC;EAEDosC,KAAK,EAAE,SAAAA,MAAA,EAAY;IAElB,IAAI,CAAC4gH,KAAK,GAAG,CAAC,CAAC;EAEhB;AAED,CAAC;AAACxtJ,OAAA,CAAAutJ,KAAA,GAAAA,KAAA;AAAA,IAEIG,cAAc,gBAAArkJ,YAAA,CAEnB,SAAAqkJ,eAAaC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;EAAAhlJ,eAAA,OAAA6kJ,cAAA;EAE1C,IAAMvkG,KAAK,GAAG,IAAI;EAElB,IAAI2kG,SAAS,GAAG,KAAK;EACrB,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,WAAW,GAAGlpJ,SAAS;EAC3B,IAAMmpJ,QAAQ,GAAG,EAAE;;EAEnB;EACA;;EAEA,IAAI,CAACC,OAAO,GAAGppJ,SAAS;EACxB,IAAI,CAAC4oJ,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,OAAO,GAAGA,OAAO;EAEtB,IAAI,CAACO,SAAS,GAAG,UAAWjkI,GAAG,EAAG;IAEjC6jI,UAAU,EAAG;IAEb,IAAKF,SAAS,KAAK,KAAK,EAAG;MAE1B,IAAK3kG,KAAK,CAACglG,OAAO,KAAKppJ,SAAS,EAAG;QAElCokD,KAAK,CAACglG,OAAO,CAAEhkI,GAAG,EAAE4jI,WAAW,EAAEC,UAAW,CAAC;MAE9C;IAED;IAEAF,SAAS,GAAG,IAAI;EAEjB,CAAC;EAED,IAAI,CAACO,OAAO,GAAG,UAAWlkI,GAAG,EAAG;IAE/B4jI,WAAW,EAAG;IAEd,IAAK5kG,KAAK,CAACykG,UAAU,KAAK7oJ,SAAS,EAAG;MAErCokD,KAAK,CAACykG,UAAU,CAAEzjI,GAAG,EAAE4jI,WAAW,EAAEC,UAAW,CAAC;IAEjD;IAEA,IAAKD,WAAW,KAAKC,UAAU,EAAG;MAEjCF,SAAS,GAAG,KAAK;MAEjB,IAAK3kG,KAAK,CAACwkG,MAAM,KAAK5oJ,SAAS,EAAG;QAEjCokD,KAAK,CAACwkG,MAAM,CAAC,CAAC;MAEf;IAED;EAED,CAAC;EAED,IAAI,CAACW,SAAS,GAAG,UAAWnkI,GAAG,EAAG;IAEjC,IAAKg/B,KAAK,CAAC0kG,OAAO,KAAK9oJ,SAAS,EAAG;MAElCokD,KAAK,CAAC0kG,OAAO,CAAE1jI,GAAI,CAAC;IAErB;EAED,CAAC;EAED,IAAI,CAACokI,UAAU,GAAG,UAAWpkI,GAAG,EAAG;IAElC,IAAK8jI,WAAW,EAAG;MAElB,OAAOA,WAAW,CAAE9jI,GAAI,CAAC;IAE1B;IAEA,OAAOA,GAAG;EAEX,CAAC;EAED,IAAI,CAACqkI,cAAc,GAAG,UAAWjzC,SAAS,EAAG;IAE5C0yC,WAAW,GAAG1yC,SAAS;IAEvB,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAACkzC,UAAU,GAAG,UAAWC,KAAK,EAAEC,MAAM,EAAG;IAE5CT,QAAQ,CAACpoJ,IAAI,CAAE4oJ,KAAK,EAAEC,MAAO,CAAC;IAE9B,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAACC,aAAa,GAAG,UAAWF,KAAK,EAAG;IAEvC,IAAM33I,KAAK,GAAGm3I,QAAQ,CAACv3I,OAAO,CAAE+3I,KAAM,CAAC;IAEvC,IAAK33I,KAAK,KAAK,CAAE,CAAC,EAAG;MAEpBm3I,QAAQ,CAACl3I,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;IAE5B;IAEA,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAAC83I,UAAU,GAAG,UAAWpB,IAAI,EAAG;IAEnC,KAAM,IAAInnJ,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG82I,QAAQ,CAAC7nJ,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,IAAI,CAAC,EAAG;MAErD,IAAMooJ,KAAK,GAAGR,QAAQ,CAAE5nJ,CAAC,CAAE;MAC3B,IAAMqoJ,MAAM,GAAGT,QAAQ,CAAE5nJ,CAAC,GAAG,CAAC,CAAE;MAEhC,IAAKooJ,KAAK,CAACI,MAAM,EAAGJ,KAAK,CAAClrE,SAAS,GAAG,CAAC,CAAC,CAAC;;MAEzC,IAAKkrE,KAAK,CAAChmI,IAAI,CAAE+kI,IAAK,CAAC,EAAG;QAEzB,OAAOkB,MAAM;MAEd;IAED;IAEA,OAAO,IAAI;EAEZ,CAAC;AAEF,CAAC;AAAA3uJ,OAAA,CAAA0tJ,cAAA,GAAAA,cAAA;AAIF,IAAMqB,qBAAqB,GAAG,aAAc,IAAIrB,cAAc,CAAC,CAAC;AAAC1tJ,OAAA,CAAA+uJ,qBAAA,GAAAA,qBAAA;AAAA,IAE3DC,MAAM;EAEX,SAAAA,OAAaC,OAAO,EAAG;IAAApmJ,eAAA,OAAAmmJ,MAAA;IAEtB,IAAI,CAACC,OAAO,GAAKA,OAAO,KAAKlqJ,SAAS,GAAKkqJ,OAAO,GAAGF,qBAAqB;IAE1E,IAAI,CAACG,WAAW,GAAG,WAAW;IAC9B,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAC7rE,IAAI,GAAG,EAAE;IACd,IAAI,CAAC8rE,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;EAExB;EAAChmJ,YAAA,CAAA2lJ,MAAA;IAAAxuJ,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAA,CAAM,wCAAyC,CAAC;EAAC;IAAA9uJ,GAAA;IAAAE,KAAA,EAEjD,SAAA6uJ,UAAWplI,GAAG,EAAEyjI,UAAU,EAAG;MAE5B,IAAMzkG,KAAK,GAAG,IAAI;MAElB,OAAO,IAAIjiD,OAAO,CAAE,UAAWzD,OAAO,EAAEC,MAAM,EAAG;QAEhDylD,KAAK,CAACmmG,IAAI,CAAEnlI,GAAG,EAAE1mB,OAAO,EAAEmqJ,UAAU,EAAElqJ,MAAO,CAAC;MAE/C,CAAE,CAAC;IAEJ;EAAC;IAAAlD,GAAA;IAAAE,KAAA,EAED,SAAAksB,MAAA,CAAO,YAAa,CAAC;EAAC;IAAApsB,GAAA;IAAAE,KAAA,EAEtB,SAAA8uJ,eAAgBN,WAAW,EAAG;MAE7B,IAAI,CAACA,WAAW,GAAGA,WAAW;MAC9B,OAAO,IAAI;IAEZ;EAAC;IAAA1uJ,GAAA;IAAAE,KAAA,EAED,SAAA+uJ,mBAAoB/uJ,KAAK,EAAG;MAE3B,IAAI,CAACyuJ,eAAe,GAAGzuJ,KAAK;MAC5B,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAgvJ,QAASpsE,IAAI,EAAG;MAEf,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,OAAO,IAAI;IAEZ;EAAC;IAAA9iF,GAAA;IAAAE,KAAA,EAED,SAAAivJ,gBAAiBP,YAAY,EAAG;MAE/B,IAAI,CAACA,YAAY,GAAGA,YAAY;MAChC,OAAO,IAAI;IAEZ;EAAC;IAAA5uJ,GAAA;IAAAE,KAAA,EAED,SAAAkvJ,iBAAkBP,aAAa,EAAG;MAEjC,IAAI,CAACA,aAAa,GAAGA,aAAa;MAClC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAL,MAAA;AAAA;AAAAhvJ,OAAA,CAAAgvJ,MAAA,GAAAA,MAAA;AAIFA,MAAM,CAACa,qBAAqB,GAAG,WAAW;AAE1C,IAAMC,OAAO,GAAG,CAAC,CAAC;AAAC,IAEbC,SAAS,0BAAAC,MAAA;EAAAplI,SAAA,CAAAmlI,SAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAnlI,YAAA,CAAAilI,SAAA;EAEd,SAAAA,UAAarpI,OAAO,EAAEwpI,QAAQ,EAAG;IAAA,IAAAC,OAAA;IAAAtnJ,eAAA,OAAAknJ,SAAA;IAEhCI,OAAA,GAAAF,SAAA,CAAAztJ,IAAA,OAAOkkB,OAAO;IACdypI,OAAA,CAAKD,QAAQ,GAAGA,QAAQ;IAAC,OAAAC,OAAA;EAE1B;EAAC,OAAA9mJ,YAAA,CAAA0mJ,SAAA;AAAA,gBAAAK,gBAAA,CAPsB/rJ,KAAK;AAAA,IAWvBgsJ,UAAU,0BAAAC,OAAA;EAAA1lI,SAAA,CAAAylI,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAzlI,YAAA,CAAAulI,UAAA;EAEf,SAAAA,WAAapB,OAAO,EAAG;IAAApmJ,eAAA,OAAAwnJ,UAAA;IAAA,OAAAE,SAAA,CAAA/tJ,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAAgnJ,UAAA;IAAA7vJ,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAAA,IAAA2C,OAAA;MAExC,IAAKrmI,GAAG,KAAKplB,SAAS,EAAGolB,GAAG,GAAG,EAAE;MAEjC,IAAK,IAAI,CAACm5D,IAAI,KAAKv+E,SAAS,EAAGolB,GAAG,GAAG,IAAI,CAACm5D,IAAI,GAAGn5D,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAAC8kI,OAAO,CAACV,UAAU,CAAEpkI,GAAI,CAAC;MAEpC,IAAMosC,MAAM,GAAGg3F,KAAK,CAACtwI,GAAG,CAAEkN,GAAI,CAAC;MAE/B,IAAKosC,MAAM,KAAKxxD,SAAS,EAAG;QAE3B,IAAI,CAACkqJ,OAAO,CAACb,SAAS,CAAEjkI,GAAI,CAAC;QAE7BsmI,UAAU,CAAE,YAAM;UAEjB,IAAK9C,MAAM,EAAGA,MAAM,CAAEp3F,MAAO,CAAC;UAE9Bi6F,OAAI,CAACvB,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;QAE5B,CAAC,EAAE,CAAE,CAAC;QAEN,OAAOosC,MAAM;MAEd;;MAEA;;MAEA,IAAKu5F,OAAO,CAAE3lI,GAAG,CAAE,KAAKplB,SAAS,EAAG;QAEnC+qJ,OAAO,CAAE3lI,GAAG,CAAE,CAACrkB,IAAI,CAAE;UAEpB6nJ,MAAM,EAAEA,MAAM;UACdC,UAAU,EAAEA,UAAU;UACtBC,OAAO,EAAEA;QAEV,CAAE,CAAC;QAEH;MAED;;MAEA;MACAiC,OAAO,CAAE3lI,GAAG,CAAE,GAAG,EAAE;MAEnB2lI,OAAO,CAAE3lI,GAAG,CAAE,CAACrkB,IAAI,CAAE;QACpB6nJ,MAAM,EAAEA,MAAM;QACdC,UAAU,EAAEA,UAAU;QACtBC,OAAO,EAAEA;MACV,CAAE,CAAC;;MAEH;MACA,IAAM6C,GAAG,GAAG,IAAIC,OAAO,CAAExmI,GAAG,EAAE;QAC7BymI,OAAO,EAAE,IAAIC,OAAO,CAAE,IAAI,CAACxB,aAAc,CAAC;QAC1CyB,WAAW,EAAE,IAAI,CAAC3B,eAAe,GAAG,SAAS,GAAG;QAChD;MACD,CAAE,CAAC;;MAEH;MACA,IAAM4B,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;;MAEtC;MACAC,KAAK,CAAEP,GAAI,CAAC,CACV3sJ,IAAI,CAAE,UAAAmsJ,QAAQ,EAAI;QAElB,IAAKA,QAAQ,CAAChrE,MAAM,KAAK,GAAG,IAAIgrE,QAAQ,CAAChrE,MAAM,KAAK,CAAC,EAAG;UAEvD;UACA;;UAEA,IAAKgrE,QAAQ,CAAChrE,MAAM,KAAK,CAAC,EAAG;YAE5BjpE,OAAO,CAACC,IAAI,CAAE,2CAA4C,CAAC;UAE5D;;UAEA;;UAEA,IAAK,OAAOg1I,cAAc,KAAK,WAAW,IAAIhB,QAAQ,CAACiB,IAAI,KAAKpsJ,SAAS,IAAImrJ,QAAQ,CAACiB,IAAI,CAACC,SAAS,KAAKrsJ,SAAS,EAAG;YAEpH,OAAOmrJ,QAAQ;UAEhB;UAEA,IAAMmB,SAAS,GAAGvB,OAAO,CAAE3lI,GAAG,CAAE;UAChC,IAAMmnI,MAAM,GAAGpB,QAAQ,CAACiB,IAAI,CAACC,SAAS,CAAC,CAAC;;UAExC;UACA;UACA,IAAMG,aAAa,GAAGrB,QAAQ,CAACU,OAAO,CAAC3zI,GAAG,CAAE,gBAAiB,CAAC,IAAIizI,QAAQ,CAACU,OAAO,CAAC3zI,GAAG,CAAE,aAAc,CAAC;UACvG,IAAMu0I,KAAK,GAAGD,aAAa,GAAG/1G,QAAQ,CAAE+1G,aAAc,CAAC,GAAG,CAAC;UAC3D,IAAME,gBAAgB,GAAGD,KAAK,KAAK,CAAC;UACpC,IAAIE,MAAM,GAAG,CAAC;;UAEd;UACA,IAAMC,MAAM,GAAG,IAAIT,cAAc,CAAE;YAClC5uG,KAAK,WAAAA,MAAE07D,UAAU,EAAG;cAEnB4zC,QAAQ,CAAC,CAAC;cAEV,SAASA,QAAQA,CAAA,EAAG;gBAEnBN,MAAM,CAACO,IAAI,CAAC,CAAC,CAAC9tJ,IAAI,CAAE,UAAE;kBAAEO,IAAI,EAAJA,IAAI;kBAAE5D,KAAK,EAALA;gBAAM,CAAC,EAAM;kBAE1C,IAAK4D,IAAI,EAAG;oBAEX05G,UAAU,CAAC8zC,KAAK,CAAC,CAAC;kBAEnB,CAAC,MAAM;oBAENJ,MAAM,IAAIhxJ,KAAK,CAACqxJ,UAAU;oBAE1B,IAAM76I,KAAK,GAAG,IAAI86I,aAAa,CAAE,UAAU,EAAE;sBAAEP,gBAAgB,EAAhBA,gBAAgB;sBAAEC,MAAM,EAANA,MAAM;sBAAEF,KAAK,EAALA;oBAAM,CAAE,CAAC;oBAClF,KAAM,IAAIlrJ,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGi/H,SAAS,CAAChrJ,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;sBAEtD,IAAMqvB,QAAQ,GAAG07H,SAAS,CAAE/qJ,CAAC,CAAE;sBAC/B,IAAKqvB,QAAQ,CAACi4H,UAAU,EAAGj4H,QAAQ,CAACi4H,UAAU,CAAE12I,KAAM,CAAC;oBAExD;oBAEA8mG,UAAU,CAACi0C,OAAO,CAAEvxJ,KAAM,CAAC;oBAC3BkxJ,QAAQ,CAAC,CAAC;kBAEX;gBAED,CAAE,CAAC;cAEJ;YAED;UAED,CAAE,CAAC;UAEH,OAAO,IAAIM,QAAQ,CAAEP,MAAO,CAAC;QAE9B,CAAC,MAAM;UAEN,MAAM,IAAI5B,SAAS,gBAAA5nI,MAAA,CAAgB+nI,QAAQ,CAAC/lI,GAAG,wBAAAhC,MAAA,CAAoB+nI,QAAQ,CAAChrE,MAAM,QAAA/8D,MAAA,CAAK+nI,QAAQ,CAACiC,UAAU,GAAIjC,QAAS,CAAC;QAEzH;MAED,CAAE,CAAC,CACFnsJ,IAAI,CAAE,UAAAmsJ,QAAQ,EAAI;QAElB,QAASc,YAAY;UAEpB,KAAK,aAAa;YAEjB,OAAOd,QAAQ,CAACkC,WAAW,CAAC,CAAC;UAE9B,KAAK,MAAM;YAEV,OAAOlC,QAAQ,CAACmC,IAAI,CAAC,CAAC;UAEvB,KAAK,UAAU;YAEd,OAAOnC,QAAQ,CAACoC,IAAI,CAAC,CAAC,CACpBvuJ,IAAI,CAAE,UAAAuuJ,IAAI,EAAI;cAEd,IAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;cAC9B,OAAOD,MAAM,CAACE,eAAe,CAAEH,IAAI,EAAEvB,QAAS,CAAC;YAEhD,CAAE,CAAC;UAEL,KAAK,MAAM;YAEV,OAAOb,QAAQ,CAACn4B,IAAI,CAAC,CAAC;UAEvB;YAEC,IAAKg5B,QAAQ,KAAKhsJ,SAAS,EAAG;cAE7B,OAAOmrJ,QAAQ,CAACoC,IAAI,CAAC,CAAC;YAEvB,CAAC,MAAM;cAEN;cACA,IAAMI,EAAE,GAAG,yBAAyB;cACpC,IAAMp3G,IAAI,GAAGo3G,EAAE,CAACp3G,IAAI,CAAEy1G,QAAS,CAAC;cAChC,IAAM4B,KAAK,GAAGr3G,IAAI,IAAIA,IAAI,CAAE,CAAC,CAAE,GAAGA,IAAI,CAAE,CAAC,CAAE,CAACpjC,WAAW,CAAC,CAAC,GAAGnT,SAAS;cACrE,IAAM6tJ,OAAO,GAAG,IAAIC,WAAW,CAAEF,KAAM,CAAC;cACxC,OAAOzC,QAAQ,CAACkC,WAAW,CAAC,CAAC,CAACruJ,IAAI,CAAE,UAAAyhD,EAAE;gBAAA,OAAIotG,OAAO,CAACE,MAAM,CAAEttG,EAAG,CAAC;cAAA,CAAC,CAAC;YAEjE;QAEF;MAED,CAAE,CAAC,CACFzhD,IAAI,CAAE,UAAA0lB,IAAI,EAAI;QAEd;QACA;QACA8jI,KAAK,CAAC5vI,GAAG,CAAEwM,GAAG,EAAEV,IAAK,CAAC;QAEtB,IAAM4nI,SAAS,GAAGvB,OAAO,CAAE3lI,GAAG,CAAE;QAChC,OAAO2lI,OAAO,CAAE3lI,GAAG,CAAE;QAErB,KAAM,IAAI7jB,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGi/H,SAAS,CAAChrJ,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;UAEtD,IAAMqvB,QAAQ,GAAG07H,SAAS,CAAE/qJ,CAAC,CAAE;UAC/B,IAAKqvB,QAAQ,CAACg4H,MAAM,EAAGh4H,QAAQ,CAACg4H,MAAM,CAAElkI,IAAK,CAAC;QAE/C;MAED,CAAE,CAAC,CACFhhB,KAAK,CAAE,UAAAlH,GAAG,EAAI;QAEd;;QAEA,IAAM8vJ,SAAS,GAAGvB,OAAO,CAAE3lI,GAAG,CAAE;QAEhC,IAAKknI,SAAS,KAAKtsJ,SAAS,EAAG;UAE9B;UACAyrJ,OAAI,CAACvB,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;UAC7B,MAAM5oB,GAAG;QAEV;QAEA,OAAOuuJ,OAAO,CAAE3lI,GAAG,CAAE;QAErB,KAAM,IAAI7jB,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGi/H,SAAS,CAAChrJ,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;UAEtD,IAAMqvB,QAAQ,GAAG07H,SAAS,CAAE/qJ,CAAC,CAAE;UAC/B,IAAKqvB,QAAQ,CAACk4H,OAAO,EAAGl4H,QAAQ,CAACk4H,OAAO,CAAEtsJ,GAAI,CAAC;QAEhD;QAEAivJ,OAAI,CAACvB,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;MAE9B,CAAE,CAAC,CACF4oI,OAAO,CAAE,YAAM;QAEfvC,OAAI,CAACvB,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;MAE5B,CAAE,CAAC;MAEJ,IAAI,CAAC8kI,OAAO,CAACb,SAAS,CAAEjkI,GAAI,CAAC;IAE9B;EAAC;IAAA3pB,GAAA;IAAAE,KAAA,EAED,SAAAsyJ,gBAAiBtyJ,KAAK,EAAG;MAExB,IAAI,CAACswJ,YAAY,GAAGtwJ,KAAK;MACzB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAuyJ,YAAavyJ,KAAK,EAAG;MAEpB,IAAI,CAACqwJ,QAAQ,GAAGrwJ,KAAK;MACrB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA2vJ,UAAA;AAAA,EAtQuBrB,MAAM;AAAAhvJ,OAAA,CAAAqwJ,UAAA,GAAAA,UAAA;AAAA,IA0QzB6C,eAAe,0BAAAC,QAAA;EAAAvoI,SAAA,CAAAsoI,eAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAtoI,YAAA,CAAAooI,eAAA;EAEpB,SAAAA,gBAAajE,OAAO,EAAG;IAAApmJ,eAAA,OAAAqqJ,eAAA;IAAA,OAAAE,SAAA,CAAA5wJ,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAA6pJ,eAAA;IAAA1yJ,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAM1kG,KAAK,GAAG,IAAI;MAElB,IAAMwlG,MAAM,GAAG,IAAI0B,UAAU,CAAE,IAAI,CAACpB,OAAQ,CAAC;MAC7CN,MAAM,CAACe,OAAO,CAAE,IAAI,CAACpsE,IAAK,CAAC;MAC3BqrE,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAc,CAAC;MAC7CV,MAAM,CAACc,kBAAkB,CAAE,IAAI,CAACN,eAAgB,CAAC;MACjDR,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,UAAWmoI,IAAI,EAAG;QAEnC,IAAI;UAEH3E,MAAM,CAAExkG,KAAK,CAACv8B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0lI,IAAK,CAAE,CAAE,CAAC;QAE5C,CAAC,CAAC,OAAQ/zI,CAAC,EAAG;UAEb,IAAKsvI,OAAO,EAAG;YAEdA,OAAO,CAAEtvI,CAAE,CAAC;UAEb,CAAC,MAAM;YAENtC,OAAO,CAAChY,KAAK,CAAEsa,CAAE,CAAC;UAEnB;UAEA4qC,KAAK,CAAC8lG,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;QAE/B;MAED,CAAC,EAAEyjI,UAAU,EAAEC,OAAQ,CAAC;IAEzB;EAAC;IAAArtJ,GAAA;IAAAE,KAAA,EAED,SAAAksB,MAAOmrG,IAAI,EAAG;MAEb,IAAM3sF,UAAU,GAAG,EAAE;MAErB,KAAM,IAAI9kC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyxH,IAAI,CAAC1xH,MAAM,EAAEC,CAAC,EAAG,EAAG;QAExC,IAAMk8I,IAAI,GAAG6I,aAAa,CAACz+H,KAAK,CAAEmrG,IAAI,CAAEzxH,CAAC,CAAG,CAAC;QAE7C8kC,UAAU,CAACtlC,IAAI,CAAE08I,IAAK,CAAC;MAExB;MAEA,OAAOp3G,UAAU;IAElB;EAAC;EAAA,OAAA8nH,eAAA;AAAA,EAxD4BlE,MAAM;AA4DpC;AACA;AACA;AACA;AACA;AAJAhvJ,OAAA,CAAAkzJ,eAAA,GAAAA,eAAA;AAAA,IAMMG,uBAAuB,0BAAAC,QAAA;EAAA1oI,SAAA,CAAAyoI,uBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAzoI,YAAA,CAAAuoI,uBAAA;EAE5B,SAAAA,wBAAapE,OAAO,EAAG;IAAApmJ,eAAA,OAAAwqJ,uBAAA;IAAA,OAAAE,SAAA,CAAA/wJ,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAAgqJ,uBAAA;IAAA7yJ,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAM1kG,KAAK,GAAG,IAAI;MAElB,IAAMl/B,MAAM,GAAG,EAAE;MAEjB,IAAM4F,OAAO,GAAG,IAAIutG,iBAAiB,CAAC,CAAC;MAEvC,IAAMuxB,MAAM,GAAG,IAAI0B,UAAU,CAAE,IAAI,CAACpB,OAAQ,CAAC;MAC7CN,MAAM,CAACe,OAAO,CAAE,IAAI,CAACpsE,IAAK,CAAC;MAC3BqrE,MAAM,CAACqE,eAAe,CAAE,aAAc,CAAC;MACvCrE,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAc,CAAC;MAC7CV,MAAM,CAACc,kBAAkB,CAAEtmG,KAAK,CAACgmG,eAAgB,CAAC;MAElD,IAAIuC,MAAM,GAAG,CAAC;MAEd,SAAS8B,WAAWA,CAAEltJ,CAAC,EAAG;QAEzBqoJ,MAAM,CAACW,IAAI,CAAEnlI,GAAG,CAAE7jB,CAAC,CAAE,EAAE,UAAW2f,MAAM,EAAG;UAE1C,IAAMwtI,QAAQ,GAAGtqG,KAAK,CAACv8B,KAAK,CAAE3G,MAAM,EAAE,IAAK,CAAC;UAE5CgE,MAAM,CAAE3jB,CAAC,CAAE,GAAG;YACbuiB,KAAK,EAAE4qI,QAAQ,CAAC5qI,KAAK;YACrBC,MAAM,EAAE2qI,QAAQ,CAAC3qI,MAAM;YACvBwC,MAAM,EAAEmoI,QAAQ,CAACnoI,MAAM;YACvBO,OAAO,EAAE4nI,QAAQ,CAAC5nI;UACnB,CAAC;UAED6lI,MAAM,IAAI,CAAC;UAEX,IAAKA,MAAM,KAAK,CAAC,EAAG;YAEnB,IAAK+B,QAAQ,CAACC,WAAW,KAAK,CAAC,EAAG7jI,OAAO,CAACxE,SAAS,GAAGzc,YAAY;YAElEihB,OAAO,CAACpH,KAAK,GAAGwB,MAAM;YACtB4F,OAAO,CAACvE,MAAM,GAAGmoI,QAAQ,CAACnoI,MAAM;YAChCuE,OAAO,CAAC/C,WAAW,GAAG,IAAI;YAE1B,IAAK6gI,MAAM,EAAGA,MAAM,CAAE99H,OAAQ,CAAC;UAEhC;QAED,CAAC,EAAE+9H,UAAU,EAAEC,OAAQ,CAAC;MAEzB;MAEA,IAAKzjI,KAAK,CAACC,OAAO,CAAEF,GAAI,CAAC,EAAG;QAE3B,KAAM,IAAI7jB,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGjI,GAAG,CAAC9jB,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE,EAAG9rB,CAAC,EAAG;UAEhDktJ,WAAW,CAAEltJ,CAAE,CAAC;QAEjB;MAED,CAAC,MAAM;QAEN;;QAEAqoJ,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,UAAWlE,MAAM,EAAG;UAErC,IAAMwtI,QAAQ,GAAGtqG,KAAK,CAACv8B,KAAK,CAAE3G,MAAM,EAAE,IAAK,CAAC;UAE5C,IAAKwtI,QAAQ,CAACE,SAAS,EAAG;YAEzB,IAAMzf,KAAK,GAAGuf,QAAQ,CAAC5nI,OAAO,CAACxlB,MAAM,GAAGotJ,QAAQ,CAACC,WAAW;YAE5D,KAAM,IAAI7vI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqwH,KAAK,EAAErwH,CAAC,EAAG,EAAG;cAElCoG,MAAM,CAAEpG,CAAC,CAAE,GAAG;gBAAEgI,OAAO,EAAE;cAAG,CAAC;cAE7B,KAAM,IAAIvlB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGmtJ,QAAQ,CAACC,WAAW,EAAEptJ,IAAC,EAAG,EAAG;gBAEjD2jB,MAAM,CAAEpG,CAAC,CAAE,CAACgI,OAAO,CAAC/lB,IAAI,CAAE2tJ,QAAQ,CAAC5nI,OAAO,CAAEhI,CAAC,GAAG4vI,QAAQ,CAACC,WAAW,GAAGptJ,IAAC,CAAG,CAAC;gBAC5E2jB,MAAM,CAAEpG,CAAC,CAAE,CAACyH,MAAM,GAAGmoI,QAAQ,CAACnoI,MAAM;gBACpCrB,MAAM,CAAEpG,CAAC,CAAE,CAACgF,KAAK,GAAG4qI,QAAQ,CAAC5qI,KAAK;gBAClCoB,MAAM,CAAEpG,CAAC,CAAE,CAACiF,MAAM,GAAG2qI,QAAQ,CAAC3qI,MAAM;cAErC;YAED;YAEA+G,OAAO,CAACpH,KAAK,GAAGwB,MAAM;UAEvB,CAAC,MAAM;YAEN4F,OAAO,CAACpH,KAAK,CAACI,KAAK,GAAG4qI,QAAQ,CAAC5qI,KAAK;YACpCgH,OAAO,CAACpH,KAAK,CAACK,MAAM,GAAG2qI,QAAQ,CAAC3qI,MAAM;YACtC+G,OAAO,CAAChE,OAAO,GAAG4nI,QAAQ,CAAC5nI,OAAO;UAEnC;UAEA,IAAK4nI,QAAQ,CAACC,WAAW,KAAK,CAAC,EAAG;YAEjC7jI,OAAO,CAACxE,SAAS,GAAGzc,YAAY;UAEjC;UAEAihB,OAAO,CAACvE,MAAM,GAAGmoI,QAAQ,CAACnoI,MAAM;UAChCuE,OAAO,CAAC/C,WAAW,GAAG,IAAI;UAE1B,IAAK6gI,MAAM,EAAGA,MAAM,CAAE99H,OAAQ,CAAC;QAEhC,CAAC,EAAE+9H,UAAU,EAAEC,OAAQ,CAAC;MAEzB;MAEA,OAAOh+H,OAAO;IAEf;EAAC;EAAA,OAAAwjI,uBAAA;AAAA,EArHoCrE,MAAM;AAAAhvJ,OAAA,CAAAqzJ,uBAAA,GAAAA,uBAAA;AAAA,IAyHtCO,WAAW,0BAAAC,QAAA;EAAAjpI,SAAA,CAAAgpI,WAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAhpI,YAAA,CAAA8oI,WAAA;EAEhB,SAAAA,YAAa3E,OAAO,EAAG;IAAApmJ,eAAA,OAAA+qJ,WAAA;IAAA,OAAAE,SAAA,CAAAtxJ,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAAuqJ,WAAA;IAAApzJ,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAK,IAAI,CAACvqE,IAAI,KAAKv+E,SAAS,EAAGolB,GAAG,GAAG,IAAI,CAACm5D,IAAI,GAAGn5D,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAAC8kI,OAAO,CAACV,UAAU,CAAEpkI,GAAI,CAAC;MAEpC,IAAMg/B,KAAK,GAAG,IAAI;MAElB,IAAMoN,MAAM,GAAGg3F,KAAK,CAACtwI,GAAG,CAAEkN,GAAI,CAAC;MAE/B,IAAKosC,MAAM,KAAKxxD,SAAS,EAAG;QAE3BokD,KAAK,CAAC8lG,OAAO,CAACb,SAAS,CAAEjkI,GAAI,CAAC;QAE9BsmI,UAAU,CAAE,YAAY;UAEvB,IAAK9C,MAAM,EAAGA,MAAM,CAAEp3F,MAAO,CAAC;UAE9BpN,KAAK,CAAC8lG,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;QAE7B,CAAC,EAAE,CAAE,CAAC;QAEN,OAAOosC,MAAM;MAEd;MAEA,IAAM9tC,KAAK,GAAGvC,eAAe,CAAE,KAAM,CAAC;MAEtC,SAAS6tI,WAAWA,CAAA,EAAG;QAEtBC,oBAAoB,CAAC,CAAC;QAEtBzG,KAAK,CAAC5vI,GAAG,CAAEwM,GAAG,EAAE,IAAK,CAAC;QAEtB,IAAKwjI,MAAM,EAAGA,MAAM,CAAE,IAAK,CAAC;QAE5BxkG,KAAK,CAAC8lG,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;MAE7B;MAEA,SAAS8pI,YAAYA,CAAE/8I,KAAK,EAAG;QAE9B88I,oBAAoB,CAAC,CAAC;QAEtB,IAAKnG,OAAO,EAAGA,OAAO,CAAE32I,KAAM,CAAC;QAE/BiyC,KAAK,CAAC8lG,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;QAC9Bg/B,KAAK,CAAC8lG,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;MAE7B;MAEA,SAAS6pI,oBAAoBA,CAAA,EAAG;QAE/BvrI,KAAK,CAAC5R,mBAAmB,CAAE,MAAM,EAAEk9I,WAAW,EAAE,KAAM,CAAC;QACvDtrI,KAAK,CAAC5R,mBAAmB,CAAE,OAAO,EAAEo9I,YAAY,EAAE,KAAM,CAAC;MAE1D;MAEAxrI,KAAK,CAAClS,gBAAgB,CAAE,MAAM,EAAEw9I,WAAW,EAAE,KAAM,CAAC;MACpDtrI,KAAK,CAAClS,gBAAgB,CAAE,OAAO,EAAE09I,YAAY,EAAE,KAAM,CAAC;MAEtD,IAAK9pI,GAAG,CAACviB,KAAK,CAAE,CAAC,EAAE,CAAE,CAAC,KAAK,OAAO,EAAG;QAEpC,IAAK,IAAI,CAACsnJ,WAAW,KAAKnqJ,SAAS,EAAG0jB,KAAK,CAACymI,WAAW,GAAG,IAAI,CAACA,WAAW;MAE3E;MAEA/lG,KAAK,CAAC8lG,OAAO,CAACb,SAAS,CAAEjkI,GAAI,CAAC;MAE9B1B,KAAK,CAACE,GAAG,GAAGwB,GAAG;MAEf,OAAO1B,KAAK;IAEb;EAAC;EAAA,OAAAmrI,WAAA;AAAA,EAjFwB5E,MAAM;AAAAhvJ,OAAA,CAAA4zJ,WAAA,GAAAA,WAAA;AAAA,IAqF1BM,iBAAiB,0BAAAC,QAAA;EAAAvpI,SAAA,CAAAspI,iBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAtpI,YAAA,CAAAopI,iBAAA;EAEtB,SAAAA,kBAAajF,OAAO,EAAG;IAAApmJ,eAAA,OAAAqrJ,iBAAA;IAAA,OAAAE,SAAA,CAAA5xJ,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAA6qJ,iBAAA;IAAA1zJ,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAM+E,IAAI,EAAE1G,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAEzC,IAAMh+H,OAAO,GAAG,IAAIwgC,WAAW,CAAC,CAAC;MACjCxgC,OAAO,CAAChI,UAAU,GAAGjU,cAAc;MAEnC,IAAM+6I,MAAM,GAAG,IAAIiF,WAAW,CAAE,IAAI,CAAC3E,OAAQ,CAAC;MAC9CN,MAAM,CAACa,cAAc,CAAE,IAAI,CAACN,WAAY,CAAC;MACzCP,MAAM,CAACe,OAAO,CAAE,IAAI,CAACpsE,IAAK,CAAC;MAE3B,IAAIouE,MAAM,GAAG,CAAC;MAEd,SAAS8B,WAAWA,CAAEltJ,CAAC,EAAG;QAEzBqoJ,MAAM,CAACW,IAAI,CAAE+E,IAAI,CAAE/tJ,CAAC,CAAE,EAAE,UAAWmiB,KAAK,EAAG;UAE1CoH,OAAO,CAAC5F,MAAM,CAAE3jB,CAAC,CAAE,GAAGmiB,KAAK;UAE3BipI,MAAM,EAAG;UAET,IAAKA,MAAM,KAAK,CAAC,EAAG;YAEnB7hI,OAAO,CAAC/C,WAAW,GAAG,IAAI;YAE1B,IAAK6gI,MAAM,EAAGA,MAAM,CAAE99H,OAAQ,CAAC;UAEhC;QAED,CAAC,EAAE9qB,SAAS,EAAE8oJ,OAAQ,CAAC;MAExB;MAEA,KAAM,IAAIvnJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+tJ,IAAI,CAAChuJ,MAAM,EAAE,EAAGC,CAAC,EAAG;QAExCktJ,WAAW,CAAEltJ,CAAE,CAAC;MAEjB;MAEA,OAAOupB,OAAO;IAEf;EAAC;EAAA,OAAAqkI,iBAAA;AAAA,EA/C8BlF,MAAM;AAmDtC;AACA;AACA;AACA;AACA;AAJAhvJ,OAAA,CAAAk0J,iBAAA,GAAAA,iBAAA;AAAA,IAMMI,iBAAiB,0BAAAC,QAAA;EAAA3pI,SAAA,CAAA0pI,iBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAA1pI,YAAA,CAAAwpI,iBAAA;EAEtB,SAAAA,kBAAarF,OAAO,EAAG;IAAApmJ,eAAA,OAAAyrJ,iBAAA;IAAA,OAAAE,SAAA,CAAAhyJ,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAAirJ,iBAAA;IAAA9zJ,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAM1kG,KAAK,GAAG,IAAI;MAElB,IAAMt5B,OAAO,GAAG,IAAIunG,WAAW,CAAC,CAAC;MAEjC,IAAMu3B,MAAM,GAAG,IAAI0B,UAAU,CAAE,IAAI,CAACpB,OAAQ,CAAC;MAC7CN,MAAM,CAACqE,eAAe,CAAE,aAAc,CAAC;MACvCrE,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAc,CAAC;MAC7CV,MAAM,CAACe,OAAO,CAAE,IAAI,CAACpsE,IAAK,CAAC;MAC3BqrE,MAAM,CAACc,kBAAkB,CAAEtmG,KAAK,CAACgmG,eAAgB,CAAC;MAClDR,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,UAAWlE,MAAM,EAAG;QAErC,IAAIwuI,OAAO;QAEX,IAAI;UAEHA,OAAO,GAAGtrG,KAAK,CAACv8B,KAAK,CAAE3G,MAAO,CAAC;QAEhC,CAAC,CAAC,OAAQhiB,KAAK,EAAG;UAEjB,IAAK4pJ,OAAO,KAAK9oJ,SAAS,EAAG;YAE5B8oJ,OAAO,CAAE5pJ,KAAM,CAAC;UAEjB,CAAC,MAAM;YAENgY,OAAO,CAAChY,KAAK,CAAEA,KAAM,CAAC;YACtB;UAED;QAED;QAEA,IAAKwwJ,OAAO,CAAChsI,KAAK,KAAK1jB,SAAS,EAAG;UAElC8qB,OAAO,CAACpH,KAAK,GAAGgsI,OAAO,CAAChsI,KAAK;QAE9B,CAAC,MAAM,IAAKgsI,OAAO,CAAChrI,IAAI,KAAK1kB,SAAS,EAAG;UAExC8qB,OAAO,CAACpH,KAAK,CAACI,KAAK,GAAG4rI,OAAO,CAAC5rI,KAAK;UACnCgH,OAAO,CAACpH,KAAK,CAACK,MAAM,GAAG2rI,OAAO,CAAC3rI,MAAM;UACrC+G,OAAO,CAACpH,KAAK,CAACgB,IAAI,GAAGgrI,OAAO,CAAChrI,IAAI;QAElC;QAEAoG,OAAO,CAAC3E,KAAK,GAAGupI,OAAO,CAACvpI,KAAK,KAAKnmB,SAAS,GAAG0vJ,OAAO,CAACvpI,KAAK,GAAG7c,mBAAmB;QACjFwhB,OAAO,CAAC1E,KAAK,GAAGspI,OAAO,CAACtpI,KAAK,KAAKpmB,SAAS,GAAG0vJ,OAAO,CAACtpI,KAAK,GAAG9c,mBAAmB;QAEjFwhB,OAAO,CAACzE,SAAS,GAAGqpI,OAAO,CAACrpI,SAAS,KAAKrmB,SAAS,GAAG0vJ,OAAO,CAACrpI,SAAS,GAAGxc,YAAY;QACtFihB,OAAO,CAACxE,SAAS,GAAGopI,OAAO,CAACppI,SAAS,KAAKtmB,SAAS,GAAG0vJ,OAAO,CAACppI,SAAS,GAAGzc,YAAY;QAEtFihB,OAAO,CAACtE,UAAU,GAAGkpI,OAAO,CAAClpI,UAAU,KAAKxmB,SAAS,GAAG0vJ,OAAO,CAAClpI,UAAU,GAAG,CAAC;QAE9E,IAAKkpI,OAAO,CAAC5sI,UAAU,KAAK9iB,SAAS,EAAG;UAEvC8qB,OAAO,CAAChI,UAAU,GAAG4sI,OAAO,CAAC5sI,UAAU;QAExC,CAAC,MAAM,IAAK4sI,OAAO,CAACrnI,QAAQ,KAAKroB,SAAS,EAAG;UAAE;;UAE9C8qB,OAAO,CAACzC,QAAQ,GAAGqnI,OAAO,CAACrnI,QAAQ;QAEpC;QAEA,IAAKqnI,OAAO,CAACroI,KAAK,KAAKrnB,SAAS,EAAG;UAElC8qB,OAAO,CAACzD,KAAK,GAAGqoI,OAAO,CAACroI,KAAK;QAE9B;QAEA,IAAKqoI,OAAO,CAACnpI,MAAM,KAAKvmB,SAAS,EAAG;UAEnC8qB,OAAO,CAACvE,MAAM,GAAGmpI,OAAO,CAACnpI,MAAM;QAEhC;QAEA,IAAKmpI,OAAO,CAAClyJ,IAAI,KAAKwC,SAAS,EAAG;UAEjC8qB,OAAO,CAACttB,IAAI,GAAGkyJ,OAAO,CAAClyJ,IAAI;QAE5B;QAEA,IAAKkyJ,OAAO,CAAC5oI,OAAO,KAAK9mB,SAAS,EAAG;UAEpC8qB,OAAO,CAAChE,OAAO,GAAG4oI,OAAO,CAAC5oI,OAAO;UACjCgE,OAAO,CAACxE,SAAS,GAAGtc,wBAAwB,CAAC,CAAC;QAE/C;;QAEA,IAAK0lJ,OAAO,CAACf,WAAW,KAAK,CAAC,EAAG;UAEhC7jI,OAAO,CAACxE,SAAS,GAAGzc,YAAY;QAEjC;QAEA,IAAK6lJ,OAAO,CAACvoI,eAAe,KAAKnnB,SAAS,EAAG;UAE5C8qB,OAAO,CAAC3D,eAAe,GAAGuoI,OAAO,CAACvoI,eAAe;QAElD;QAEA2D,OAAO,CAAC/C,WAAW,GAAG,IAAI;QAE1B,IAAK6gI,MAAM,EAAGA,MAAM,CAAE99H,OAAO,EAAE4kI,OAAQ,CAAC;MAEzC,CAAC,EAAE7G,UAAU,EAAEC,OAAQ,CAAC;MAGxB,OAAOh+H,OAAO;IAEf;EAAC;EAAA,OAAAykI,iBAAA;AAAA,EAtH8BtF,MAAM;AAAAhvJ,OAAA,CAAAs0J,iBAAA,GAAAA,iBAAA;AAAA,IA0HhCI,aAAa,0BAAAC,QAAA;EAAA/pI,SAAA,CAAA8pI,aAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAA9pI,YAAA,CAAA4pI,aAAA;EAElB,SAAAA,cAAazF,OAAO,EAAG;IAAApmJ,eAAA,OAAA6rJ,aAAA;IAAA,OAAAE,SAAA,CAAApyJ,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAAqrJ,aAAA;IAAAl0J,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMh+H,OAAO,GAAG,IAAInF,OAAO,CAAC,CAAC;MAE7B,IAAMikI,MAAM,GAAG,IAAIiF,WAAW,CAAE,IAAI,CAAC3E,OAAQ,CAAC;MAC9CN,MAAM,CAACa,cAAc,CAAE,IAAI,CAACN,WAAY,CAAC;MACzCP,MAAM,CAACe,OAAO,CAAE,IAAI,CAACpsE,IAAK,CAAC;MAE3BqrE,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,UAAW1B,KAAK,EAAG;QAEpCoH,OAAO,CAACpH,KAAK,GAAGA,KAAK;QACrBoH,OAAO,CAAC/C,WAAW,GAAG,IAAI;QAE1B,IAAK6gI,MAAM,KAAK5oJ,SAAS,EAAG;UAE3B4oJ,MAAM,CAAE99H,OAAQ,CAAC;QAElB;MAED,CAAC,EAAE+9H,UAAU,EAAEC,OAAQ,CAAC;MAExB,OAAOh+H,OAAO;IAEf;EAAC;EAAA,OAAA6kI,aAAA;AAAA,EA/B0B1F,MAAM;AAAAhvJ,OAAA,CAAA00J,aAAA,GAAAA,aAAA;AAAA,IAmC5BG,KAAK,0BAAAC,WAAA;EAAAlqI,SAAA,CAAAiqI,KAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAjqI,YAAA,CAAA+pI,KAAA;EAEV,SAAAA,MAAa7tI,KAAK,EAAE2xE,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAq8D,OAAA;IAAAnsJ,eAAA,OAAAgsJ,KAAA;IAEnCG,OAAA,GAAAD,SAAA,CAAAvyJ,IAAA;IAEAwyJ,OAAA,CAAKxoH,OAAO,GAAG,IAAI;IAEnBwoH,OAAA,CAAKzyJ,IAAI,GAAG,OAAO;IAEnByyJ,OAAA,CAAKhuI,KAAK,GAAG,IAAI4zB,KAAK,CAAE5zB,KAAM,CAAC;IAC/BguI,OAAA,CAAKr8D,SAAS,GAAGA,SAAS;IAAC,OAAAq8D,OAAA;EAE5B;EAAC3rJ,YAAA,CAAAwrJ,KAAA;IAAAr0J,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;;MAET;IAAA;EAEA;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA03G,KAAA,CAAA10J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAAChpB,KAAK,CAACvJ,IAAI,CAAEmO,MAAM,CAAC5E,KAAM,CAAC;MAC/B,IAAI,CAAC2xE,SAAS,GAAG/sE,MAAM,CAAC+sE,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAn4F,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA03G,KAAA,CAAA10J,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjCN,IAAI,CAACniB,MAAM,CAAC0f,KAAK,GAAG,IAAI,CAACA,KAAK,CAACivB,MAAM,CAAC,CAAC;MACvCxsB,IAAI,CAACniB,MAAM,CAACqxF,SAAS,GAAG,IAAI,CAACA,SAAS;MAEtC,IAAK,IAAI,CAACnzB,WAAW,KAAKzgE,SAAS,EAAG0kB,IAAI,CAACniB,MAAM,CAACk+D,WAAW,GAAG,IAAI,CAACA,WAAW,CAACvvB,MAAM,CAAC,CAAC;MAEzF,IAAK,IAAI,CAAChK,QAAQ,KAAKlnC,SAAS,EAAG0kB,IAAI,CAACniB,MAAM,CAAC2kC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MACvE,IAAK,IAAI,CAAC5sB,KAAK,KAAKta,SAAS,EAAG0kB,IAAI,CAACniB,MAAM,CAAC+X,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9D,IAAK,IAAI,CAACslD,KAAK,KAAK5/D,SAAS,EAAG0kB,IAAI,CAACniB,MAAM,CAACq9D,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9D,IAAK,IAAI,CAAC20B,QAAQ,KAAKv0F,SAAS,EAAG0kB,IAAI,CAACniB,MAAM,CAACgyF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAEvE,IAAK,IAAI,CAACryB,MAAM,KAAKliE,SAAS,EAAG0kB,IAAI,CAACniB,MAAM,CAAC2/D,MAAM,GAAG,IAAI,CAACA,MAAM,CAACn9C,MAAM,CAAC,CAAC;MAE1E,OAAOL,IAAI;IAEZ;EAAC;EAAA,OAAAorI,KAAA;AAAA,EAlDkB9qH,QAAQ;AAAA/pC,OAAA,CAAA60J,KAAA,GAAAA,KAAA;AAAA,IAsDtBI,eAAe,0BAAAC,MAAA;EAAAtqI,SAAA,CAAAqqI,eAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAArqI,YAAA,CAAAmqI,eAAA;EAEpB,SAAAA,gBAAa1vF,QAAQ,EAAEC,WAAW,EAAEmzB,SAAS,EAAG;IAAA,IAAAy8D,OAAA;IAAAvsJ,eAAA,OAAAosJ,eAAA;IAE/CG,OAAA,GAAAD,SAAA,CAAA3yJ,IAAA,OAAO+iE,QAAQ,EAAEozB,SAAS;IAE1By8D,OAAA,CAAK17D,iBAAiB,GAAG,IAAI;IAE7B07D,OAAA,CAAK7yJ,IAAI,GAAG,iBAAiB;IAE7B6yJ,OAAA,CAAK94H,QAAQ,CAAC7e,IAAI,CAAEssB,QAAQ,CAACM,UAAW,CAAC;IACzC+qH,OAAA,CAAK1oI,YAAY,CAAC,CAAC;IAEnB0oI,OAAA,CAAK5vF,WAAW,GAAG,IAAI5qB,KAAK,CAAE4qB,WAAY,CAAC;IAAC,OAAA4vF,OAAA;EAE7C;EAAC/rJ,YAAA,CAAA4rJ,eAAA;IAAAz0J,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA83G,eAAA,CAAA90J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAACw1B,WAAW,CAAC/nD,IAAI,CAAEmO,MAAM,CAAC45C,WAAY,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAyvF,eAAA;AAAA,EAzB4BJ,KAAK;AAAA70J,OAAA,CAAAi1J,eAAA,GAAAA,eAAA;AA6BnC,IAAMI,mBAAmB,GAAG,aAAc,IAAI3yH,OAAO,CAAC,CAAC;AACvD,IAAM4yH,qBAAqB,GAAG,aAAc,IAAIr+H,OAAO,CAAC,CAAC;AACzD,IAAMs+H,aAAa,GAAG,aAAc,IAAIt+H,OAAO,CAAC,CAAC;AAAC,IAE5Cu+H,WAAW;EAEhB,SAAAA,YAAar9H,MAAM,EAAG;IAAAtvB,eAAA,OAAA2sJ,WAAA;IAErB,IAAI,CAACr9H,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAAC+gE,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACz/D,MAAM,GAAG,CAAC;IACf,IAAI,CAACukE,WAAW,GAAG,CAAC;IAEpB,IAAI,CAAC7E,OAAO,GAAG,IAAIt8E,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;IAEtC,IAAI,CAAC46B,GAAG,GAAG,IAAI;IACf,IAAI,CAACwmD,OAAO,GAAG,IAAI;IACnB,IAAI,CAACv4E,MAAM,GAAG,IAAI+c,OAAO,CAAC,CAAC;IAE3B,IAAI,CAACg6D,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC5vE,WAAW,GAAG,KAAK;IAExB,IAAI,CAAC4uE,QAAQ,GAAG,IAAIjpC,OAAO,CAAC,CAAC;IAC7B,IAAI,CAACgjG,aAAa,GAAG,IAAI34I,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAExC,IAAI,CAAC44I,cAAc,GAAG,CAAC;IAEvB,IAAI,CAACC,UAAU,GAAG,CAEjB,IAAItoI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAEzB;EAEF;EAAChkB,YAAA,CAAAmsJ,WAAA;IAAAh1J,GAAA;IAAAE,KAAA,EAED,SAAAg9F,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACg4D,cAAc;IAE3B;EAAC;IAAAl1J,GAAA;IAAAE,KAAA,EAED,SAAAm9F,WAAA,EAAa;MAEZ,OAAO,IAAI,CAACnC,QAAQ;IAErB;EAAC;IAAAl7F,GAAA;IAAAE,KAAA,EAED,SAAA64F,eAAgB3C,KAAK,EAAG;MAEvB,IAAMgI,YAAY,GAAG,IAAI,CAACzmE,MAAM;MAChC,IAAMy9H,YAAY,GAAG,IAAI,CAACjwI,MAAM;MAEhC2vI,qBAAqB,CAACv7H,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;MAChEomE,YAAY,CAACtiE,QAAQ,CAAC7e,IAAI,CAAE63I,qBAAsB,CAAC;MAEnDC,aAAa,CAACx7H,qBAAqB,CAAE68D,KAAK,CAAC3tF,MAAM,CAACuvB,WAAY,CAAC;MAC/DomE,YAAY,CAAC3+D,MAAM,CAAEs1H,aAAc,CAAC;MACpC32D,YAAY,CAAC7wD,iBAAiB,CAAC,CAAC;MAEhCsnH,mBAAmB,CAAChzI,gBAAgB,CAAEu8E,YAAY,CAACvmE,gBAAgB,EAAEumE,YAAY,CAACxmE,kBAAmB,CAAC;MACtG,IAAI,CAACsjE,QAAQ,CAAC5oC,uBAAuB,CAAEuiG,mBAAoB,CAAC;MAE5DO,YAAY,CAAC55I,GAAG,CACf,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAChB,CAAC;MAED45I,YAAY,CAAC13I,QAAQ,CAAEm3I,mBAAoB,CAAC;IAE7C;EAAC;IAAA70J,GAAA;IAAAE,KAAA,EAED,SAAAk9F,YAAai4D,aAAa,EAAG;MAE5B,OAAO,IAAI,CAACF,UAAU,CAAEE,aAAa,CAAE;IAExC;EAAC;IAAAr1J,GAAA;IAAAE,KAAA,EAED,SAAA68F,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAACk4D,aAAa;IAE1B;EAAC;IAAAj1J,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAK,IAAI,CAACyqB,GAAG,EAAG;QAEf,IAAI,CAACA,GAAG,CAACzqB,OAAO,CAAC,CAAC;MAEnB;MAEA,IAAK,IAAI,CAACixE,OAAO,EAAG;QAEnB,IAAI,CAACA,OAAO,CAACjxE,OAAO,CAAC,CAAC;MAEvB;IAED;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAACuM,MAAM,GAAGvM,MAAM,CAACuM,MAAM,CAAC3a,KAAK,CAAC,CAAC;MAEnC,IAAI,CAAC07E,IAAI,GAAGttE,MAAM,CAACstE,IAAI;MACvB,IAAI,CAACx/D,MAAM,GAAG9N,MAAM,CAAC8N,MAAM;MAE3B,IAAI,CAAC0/D,OAAO,CAAC37E,IAAI,CAAEmO,MAAM,CAACwtE,OAAQ,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAA54F,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAMxiB,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAK,IAAI,CAAC4xF,IAAI,KAAK,CAAC,EAAG5xF,MAAM,CAAC4xF,IAAI,GAAG,IAAI,CAACA,IAAI;MAC9C,IAAK,IAAI,CAACC,UAAU,KAAK,CAAC,EAAG7xF,MAAM,CAAC6xF,UAAU,GAAG,IAAI,CAACA,UAAU;MAChE,IAAK,IAAI,CAACz/D,MAAM,KAAK,CAAC,EAAGpyB,MAAM,CAACoyB,MAAM,GAAG,IAAI,CAACA,MAAM;MACpD,IAAK,IAAI,CAAC0/D,OAAO,CAAC1gF,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC0gF,OAAO,CAACpgF,CAAC,KAAK,GAAG,EAAG1R,MAAM,CAAC8xF,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC54E,OAAO,CAAC,CAAC;MAE/FlZ,MAAM,CAAC6wB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACrO,MAAM,CAAE,KAAM,CAAC,CAACxiB,MAAM;MAClD,OAAOA,MAAM,CAAC6wB,MAAM,CAACxS,MAAM;MAE3B,OAAOre,MAAM;IAEd;EAAC;EAAA,OAAAkuJ,WAAA;AAAA;AAAA,IAIIM,eAAe,0BAAAC,YAAA;EAAAnrI,SAAA,CAAAkrI,eAAA,EAAAC,YAAA;EAAA,IAAAC,SAAA,GAAAlrI,YAAA,CAAAgrI,eAAA;EAEpB,SAAAA,gBAAA,EAAc;IAAA,IAAAG,OAAA;IAAAptJ,eAAA,OAAAitJ,eAAA;IAEbG,OAAA,GAAAD,SAAA,CAAAxzJ,IAAA,OAAO,IAAIqqD,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC;IAE/CopG,OAAA,CAAKC,iBAAiB,GAAG,IAAI;IAE7BD,OAAA,CAAK5oG,KAAK,GAAG,CAAC;IAAC,OAAA4oG,OAAA;EAEhB;EAAC5sJ,YAAA,CAAAysJ,eAAA;IAAAt1J,GAAA;IAAAE,KAAA,EAED,SAAA64F,eAAgB3C,KAAK,EAAG;MAEvB,IAAMz+D,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAM60B,GAAG,GAAGt1C,OAAO,GAAG,CAAC,GAAGk/E,KAAK,CAACv3E,KAAK,GAAG,IAAI,CAACguC,KAAK;MAClD,IAAMJ,MAAM,GAAG,IAAI,CAACmsC,OAAO,CAACvwE,KAAK,GAAG,IAAI,CAACuwE,OAAO,CAACtwE,MAAM;MACvD,IAAM0e,GAAG,GAAGovD,KAAK,CAAC3qD,QAAQ,IAAI9T,MAAM,CAACqP,GAAG;MAExC,IAAKwlB,GAAG,KAAK70B,MAAM,CAAC60B,GAAG,IAAIC,MAAM,KAAK90B,MAAM,CAAC80B,MAAM,IAAIzlB,GAAG,KAAKrP,MAAM,CAACqP,GAAG,EAAG;QAE3ErP,MAAM,CAAC60B,GAAG,GAAGA,GAAG;QAChB70B,MAAM,CAAC80B,MAAM,GAAGA,MAAM;QACtB90B,MAAM,CAACqP,GAAG,GAAGA,GAAG;QAChBrP,MAAM,CAACs1B,sBAAsB,CAAC,CAAC;MAEhC;MAEAvQ,IAAA,CAAAC,eAAA,CAAA24G,eAAA,CAAA31J,SAAA,2BAAAqC,IAAA,OAAsBo0F,KAAK;IAE5B;EAAC;IAAAp2F,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA24G,eAAA,CAAA31J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACyhC,KAAK,GAAGzhC,MAAM,CAACyhC,KAAK;MAEzB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAyoG,eAAA;AAAA,EAzC4BN,WAAW;AAAA,IA6CnCW,SAAS,0BAAAC,OAAA;EAAAxrI,SAAA,CAAAurI,SAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAvrI,YAAA,CAAAqrI,SAAA;EAEd,SAAAA,UAAanvI,KAAK,EAAE2xE,SAAS,EAAE1sD,QAAQ,GAAG,CAAC,EAAE5sB,KAAK,GAAG7H,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE6hF,QAAQ,GAAG,CAAC,EAAE30B,KAAK,GAAG,CAAC,EAAG;IAAA,IAAA2xF,QAAA;IAAAztJ,eAAA,OAAAstJ,SAAA;IAE3FG,QAAA,GAAAD,SAAA,CAAA7zJ,IAAA,OAAOwkB,KAAK,EAAE2xE,SAAS;IAEvB29D,QAAA,CAAKj9D,WAAW,GAAG,IAAI;IAEvBi9D,QAAA,CAAK/zJ,IAAI,GAAG,WAAW;IAEvB+zJ,QAAA,CAAKh6H,QAAQ,CAAC7e,IAAI,CAAEssB,QAAQ,CAACM,UAAW,CAAC;IACzCisH,QAAA,CAAK5pI,YAAY,CAAC,CAAC;IAEnB4pI,QAAA,CAAKrtJ,MAAM,GAAG,IAAI8gC,QAAQ,CAAC,CAAC;IAE5BusH,QAAA,CAAKrqH,QAAQ,GAAGA,QAAQ;IACxBqqH,QAAA,CAAKj3I,KAAK,GAAGA,KAAK;IAClBi3I,QAAA,CAAKh9D,QAAQ,GAAGA,QAAQ;IACxBg9D,QAAA,CAAK3xF,KAAK,GAAGA,KAAK;IAElB2xF,QAAA,CAAK5+G,GAAG,GAAG,IAAI;IAEf4+G,QAAA,CAAKrvF,MAAM,GAAG,IAAI6uF,eAAe,CAAC,CAAC;IAAC,OAAAQ,QAAA;EAErC;EAACjtJ,YAAA,CAAA8sJ,SAAA;IAAA31J,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA;MACA,OAAO,IAAI,CAAC07E,SAAS,GAAGnhF,IAAI,CAACC,EAAE;IAEhC,CAAC;IAAAuE,GAAA,EAED,SAAAA,IAAWu6I,KAAK,EAAG;MAElB;MACA,IAAI,CAAC59D,SAAS,GAAG49D,KAAK,GAAG/+I,IAAI,CAACC,EAAE;IAEjC;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACg6C,MAAM,CAACh6C,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAAg5G,SAAA,CAAAh2J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAAC/D,QAAQ,GAAGrgB,MAAM,CAACqgB,QAAQ;MAC/B,IAAI,CAAC5sB,KAAK,GAAGuM,MAAM,CAACvM,KAAK;MACzB,IAAI,CAACi6E,QAAQ,GAAG1tE,MAAM,CAAC0tE,QAAQ;MAC/B,IAAI,CAAC30B,KAAK,GAAG/4C,MAAM,CAAC+4C,KAAK;MAEzB,IAAI,CAAC17D,MAAM,GAAG2iB,MAAM,CAAC3iB,MAAM,CAACuU,KAAK,CAAC,CAAC;MAEnC,IAAI,CAACypD,MAAM,GAAGr7C,MAAM,CAACq7C,MAAM,CAACzpD,KAAK,CAAC,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA24I,SAAA;AAAA,EA9DsBtB,KAAK;AAAA70J,OAAA,CAAAm2J,SAAA,GAAAA,SAAA;AAkE7B,IAAMxsC,iBAAiB,GAAG,aAAc,IAAIjnF,OAAO,CAAC,CAAC;AACrD,IAAM8zH,mBAAmB,GAAG,aAAc,IAAIv/H,OAAO,CAAC,CAAC;AACvD,IAAMw/H,WAAW,GAAG,aAAc,IAAIx/H,OAAO,CAAC,CAAC;AAAC,IAE1Cy/H,gBAAgB,0BAAAC,aAAA;EAAA/rI,SAAA,CAAA8rI,gBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA9rI,YAAA,CAAA4rI,gBAAA;EAErB,SAAAA,iBAAA,EAAc;IAAA,IAAAG,QAAA;IAAAhuJ,eAAA,OAAA6tJ,gBAAA;IAEbG,QAAA,GAAAD,SAAA,CAAAp0J,IAAA,OAAO,IAAIqqD,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC;IAE/CgqG,QAAA,CAAK94D,kBAAkB,GAAG,IAAI;IAE9B84D,QAAA,CAAKpB,aAAa,GAAG,IAAI34I,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC;IAExC+5I,QAAA,CAAKnB,cAAc,GAAG,CAAC;IAEvBmB,QAAA,CAAKlB,UAAU,GAAG;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,IAAItoI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CACzB;IAEDwpI,QAAA,CAAKC,eAAe,GAAG,CACtB,IAAI7/H,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACxE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAC1E;IAED4/H,QAAA,CAAKE,QAAQ,GAAG,CACf,IAAI9/H,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EACtE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CACxE;IAAC,OAAA4/H,QAAA;EAEH;EAACxtJ,YAAA,CAAAqtJ,gBAAA;IAAAl2J,GAAA;IAAAE,KAAA,EAED,SAAA64F,eAAgB3C,KAAK,EAAEi/D,aAAa,GAAG,CAAC,EAAG;MAE1C,IAAM19H,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMy9H,YAAY,GAAG,IAAI,CAACjwI,MAAM;MAEhC,IAAM6hB,GAAG,GAAGovD,KAAK,CAAC3qD,QAAQ,IAAI9T,MAAM,CAACqP,GAAG;MAExC,IAAKA,GAAG,KAAKrP,MAAM,CAACqP,GAAG,EAAG;QAEzBrP,MAAM,CAACqP,GAAG,GAAGA,GAAG;QAChBrP,MAAM,CAACs1B,sBAAsB,CAAC,CAAC;MAEhC;MAEA+oG,mBAAmB,CAACz8H,qBAAqB,CAAE68D,KAAK,CAACp+D,WAAY,CAAC;MAC9DL,MAAM,CAACmE,QAAQ,CAAC7e,IAAI,CAAE+4I,mBAAoB,CAAC;MAE3CC,WAAW,CAACh5I,IAAI,CAAE0a,MAAM,CAACmE,QAAS,CAAC;MACnCm6H,WAAW,CAAC94I,GAAG,CAAE,IAAI,CAACm5I,eAAe,CAAEjB,aAAa,CAAG,CAAC;MACxD19H,MAAM,CAACwM,EAAE,CAAClnB,IAAI,CAAE,IAAI,CAACs5I,QAAQ,CAAElB,aAAa,CAAG,CAAC;MAChD19H,MAAM,CAAC8H,MAAM,CAAEw2H,WAAY,CAAC;MAC5Bt+H,MAAM,CAAC4V,iBAAiB,CAAC,CAAC;MAE1B6nH,YAAY,CAAClwI,eAAe,CAAE,CAAE8wI,mBAAmB,CAAC99I,CAAC,EAAE,CAAE89I,mBAAmB,CAACx9I,CAAC,EAAE,CAAEw9I,mBAAmB,CAACjpI,CAAE,CAAC;MAEzGo8F,iBAAiB,CAACtnG,gBAAgB,CAAE8V,MAAM,CAACE,gBAAgB,EAAEF,MAAM,CAACC,kBAAmB,CAAC;MACxF,IAAI,CAACsjE,QAAQ,CAAC5oC,uBAAuB,CAAE62D,iBAAkB,CAAC;IAE3D;EAAC;EAAA,OAAA+sC,gBAAA;AAAA,EAhF6BlB,WAAW;AAAA,IAoFpCwB,UAAU,0BAAAC,OAAA;EAAArsI,SAAA,CAAAosI,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAApsI,YAAA,CAAAksI,UAAA;EAEf,SAAAA,WAAahwI,KAAK,EAAE2xE,SAAS,EAAE1sD,QAAQ,GAAG,CAAC,EAAE04B,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAwyF,QAAA;IAAAtuJ,eAAA,OAAAmuJ,UAAA;IAExDG,QAAA,GAAAD,SAAA,CAAA10J,IAAA,OAAOwkB,KAAK,EAAE2xE,SAAS;IAEvBw+D,QAAA,CAAK19D,YAAY,GAAG,IAAI;IAExB09D,QAAA,CAAK50J,IAAI,GAAG,YAAY;IAExB40J,QAAA,CAAKlrH,QAAQ,GAAGA,QAAQ;IACxBkrH,QAAA,CAAKxyF,KAAK,GAAGA,KAAK;IAElBwyF,QAAA,CAAKlwF,MAAM,GAAG,IAAIyvF,gBAAgB,CAAC,CAAC;IAAC,OAAAS,QAAA;EAEtC;EAAC9tJ,YAAA,CAAA2tJ,UAAA;IAAAx2J,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA;MACA,OAAO,IAAI,CAAC07E,SAAS,GAAG,CAAC,GAAGnhF,IAAI,CAACC,EAAE;IAEpC,CAAC;IAAAuE,GAAA,EAED,SAAAA,IAAWu6I,KAAK,EAAG;MAElB;MACA,IAAI,CAAC59D,SAAS,GAAG49D,KAAK,IAAK,CAAC,GAAG/+I,IAAI,CAACC,EAAE,CAAE;IAEzC;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACg6C,MAAM,CAACh6C,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA65G,UAAA,CAAA72J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAAC/D,QAAQ,GAAGrgB,MAAM,CAACqgB,QAAQ;MAC/B,IAAI,CAAC04B,KAAK,GAAG/4C,MAAM,CAAC+4C,KAAK;MAEzB,IAAI,CAACsC,MAAM,GAAGr7C,MAAM,CAACq7C,MAAM,CAACzpD,KAAK,CAAC,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAw5I,UAAA;AAAA,EAjDuBnC,KAAK;AAAA70J,OAAA,CAAAg3J,UAAA,GAAAA,UAAA;AAAA,IAqDxBI,sBAAsB,0BAAAC,aAAA;EAAAzsI,SAAA,CAAAwsI,sBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAAxsI,YAAA,CAAAssI,sBAAA;EAE3B,SAAAA,uBAAA,EAAc;IAAA,IAAAG,QAAA;IAAA1uJ,eAAA,OAAAuuJ,sBAAA;IAEbG,QAAA,GAAAD,SAAA,CAAA90J,IAAA,OAAO,IAAIowE,kBAAkB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC;IAEzD2kF,QAAA,CAAKC,wBAAwB,GAAG,IAAI;IAAC,OAAAD,QAAA;EAEtC;EAAC,OAAAluJ,YAAA,CAAA+tJ,sBAAA;AAAA,EARmC5B,WAAW;AAAA,IAY1CiC,gBAAgB,0BAAAC,OAAA;EAAA9sI,SAAA,CAAA6sI,gBAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAA7sI,YAAA,CAAA2sI,gBAAA;EAErB,SAAAA,iBAAazwI,KAAK,EAAE2xE,SAAS,EAAG;IAAA,IAAAi/D,QAAA;IAAA/uJ,eAAA,OAAA4uJ,gBAAA;IAE/BG,QAAA,GAAAD,SAAA,CAAAn1J,IAAA,OAAOwkB,KAAK,EAAE2xE,SAAS;IAEvBi/D,QAAA,CAAK5+D,kBAAkB,GAAG,IAAI;IAE9B4+D,QAAA,CAAKr1J,IAAI,GAAG,kBAAkB;IAE9Bq1J,QAAA,CAAKt7H,QAAQ,CAAC7e,IAAI,CAAEssB,QAAQ,CAACM,UAAW,CAAC;IACzCutH,QAAA,CAAKlrI,YAAY,CAAC,CAAC;IAEnBkrI,QAAA,CAAK3uJ,MAAM,GAAG,IAAI8gC,QAAQ,CAAC,CAAC;IAE5B6tH,QAAA,CAAK3wF,MAAM,GAAG,IAAImwF,sBAAsB,CAAC,CAAC;IAAC,OAAAQ,QAAA;EAE5C;EAACvuJ,YAAA,CAAAouJ,gBAAA;IAAAj3J,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACg6C,MAAM,CAACh6C,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAAs6G,gBAAA,CAAAt3J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC3iB,MAAM,GAAG2iB,MAAM,CAAC3iB,MAAM,CAACuU,KAAK,CAAC,CAAC;MACnC,IAAI,CAACypD,MAAM,GAAGr7C,MAAM,CAACq7C,MAAM,CAACzpD,KAAK,CAAC,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAi6I,gBAAA;AAAA,EAlC6B5C,KAAK;AAAA70J,OAAA,CAAAy3J,gBAAA,GAAAA,gBAAA;AAAA,IAsC9BI,YAAY,0BAAAC,OAAA;EAAAltI,SAAA,CAAAitI,YAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAjtI,YAAA,CAAA+sI,YAAA;EAEjB,SAAAA,aAAa7wI,KAAK,EAAE2xE,SAAS,EAAG;IAAA,IAAAq/D,QAAA;IAAAnvJ,eAAA,OAAAgvJ,YAAA;IAE/BG,QAAA,GAAAD,SAAA,CAAAv1J,IAAA,OAAOwkB,KAAK,EAAE2xE,SAAS;IAEvBq/D,QAAA,CAAKp/D,cAAc,GAAG,IAAI;IAE1Bo/D,QAAA,CAAKz1J,IAAI,GAAG,cAAc;IAAC,OAAAy1J,QAAA;EAE5B;EAAC,OAAA3uJ,YAAA,CAAAwuJ,YAAA;AAAA,EAVyBhD,KAAK;AAAA70J,OAAA,CAAA63J,YAAA,GAAAA,YAAA;AAAA,IAc1BI,aAAa,0BAAAC,OAAA;EAAAttI,SAAA,CAAAqtI,aAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAArtI,YAAA,CAAAmtI,aAAA;EAElB,SAAAA,cAAajxI,KAAK,EAAE2xE,SAAS,EAAE9vE,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,EAAG;IAAA,IAAAsvI,QAAA;IAAAvvJ,eAAA,OAAAovJ,aAAA;IAExDG,QAAA,GAAAD,SAAA,CAAA31J,IAAA,OAAOwkB,KAAK,EAAE2xE,SAAS;IAEvBy/D,QAAA,CAAK5+D,eAAe,GAAG,IAAI;IAE3B4+D,QAAA,CAAK71J,IAAI,GAAG,eAAe;IAE3B61J,QAAA,CAAKvvI,KAAK,GAAGA,KAAK;IAClBuvI,QAAA,CAAKtvI,MAAM,GAAGA,MAAM;IAAC,OAAAsvI,QAAA;EAEtB;EAAC/uJ,YAAA,CAAA4uJ,aAAA;IAAAz3J,GAAA;IAAAyc,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA,OAAO,IAAI,CAAC07E,SAAS,GAAG,IAAI,CAAC9vE,KAAK,GAAG,IAAI,CAACC,MAAM,GAAGtR,IAAI,CAACC,EAAE;IAE3D,CAAC;IAAAuE,GAAA,EAED,SAAAA,IAAWu6I,KAAK,EAAG;MAElB;MACA,IAAI,CAAC59D,SAAS,GAAG49D,KAAK,IAAK,IAAI,CAAC1tI,KAAK,GAAG,IAAI,CAACC,MAAM,GAAGtR,IAAI,CAACC,EAAE,CAAE;IAEhE;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA86G,aAAA,CAAA93J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC/C,KAAK,GAAG+C,MAAM,CAAC/C,KAAK;MACzB,IAAI,CAACC,MAAM,GAAG8C,MAAM,CAAC9C,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAtoB,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA86G,aAAA,CAAA93J,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjCN,IAAI,CAACniB,MAAM,CAACuhB,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9BY,IAAI,CAACniB,MAAM,CAACwhB,MAAM,GAAG,IAAI,CAACA,MAAM;MAEhC,OAAOW,IAAI;IAEZ;EAAC;EAAA,OAAAwuI,aAAA;AAAA,EAjD0BpD,KAAK;AAqDjC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA70J,OAAA,CAAAi4J,aAAA,GAAAA,aAAA;AAAA,IAEMI,mBAAmB;EAExB,SAAAA,oBAAA,EAAc;IAAAxvJ,eAAA,OAAAwvJ,mBAAA;IAEb,IAAI,CAACC,qBAAqB,GAAG,IAAI;IAEjC,IAAI,CAACv/D,YAAY,GAAG,EAAE;IAEtB,KAAM,IAAIzyF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;MAE9B,IAAI,CAACyyF,YAAY,CAACjzF,IAAI,CAAE,IAAImxB,OAAO,CAAC,CAAE,CAAC;IAExC;EAED;EAAC5tB,YAAA,CAAAgvJ,mBAAA;IAAA73J,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK+8E,YAAY,EAAG;MAEnB,KAAM,IAAIzyF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACyyF,YAAY,CAAEzyF,CAAC,CAAE,CAACmX,IAAI,CAAEs7E,YAAY,CAAEzyF,CAAC,CAAG,CAAC;MAEjD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA63J,KAAA,EAAO;MAEN,KAAM,IAAIjyJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACyyF,YAAY,CAAEzyF,CAAC,CAAE,CAAC0V,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtC;MAEA,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAAxb,GAAA;IAAAE,KAAA,EACA,SAAA83J,MAAOl/H,MAAM,EAAErwB,MAAM,EAAG;MAEvB;;MAEA,IAAMyP,CAAC,GAAG4gB,MAAM,CAAC5gB,CAAC;QAAEM,CAAC,GAAGsgB,MAAM,CAACtgB,CAAC;QAAEuU,CAAC,GAAG+L,MAAM,CAAC/L,CAAC;MAE9C,IAAMkrI,KAAK,GAAG,IAAI,CAAC1/D,YAAY;;MAE/B;MACA9vF,MAAM,CAACwU,IAAI,CAAEg7I,KAAK,CAAE,CAAC,CAAG,CAAC,CAACt6I,cAAc,CAAE,QAAS,CAAC;;MAEpD;MACAlV,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGz/I,CAAE,CAAC;MAClD/P,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGlrI,CAAE,CAAC;MAClDtkB,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAG//I,CAAE,CAAC;;MAElD;MACAzP,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK//I,CAAC,GAAGM,CAAC,CAAG,CAAC;MAC1D/P,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAKz/I,CAAC,GAAGuU,CAAC,CAAG,CAAC;MAC1DtkB,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK,GAAG,GAAGlrI,CAAC,GAAGA,CAAC,GAAG,GAAG,CAAG,CAAC;MACtEtkB,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK//I,CAAC,GAAG6U,CAAC,CAAG,CAAC;MAC1DtkB,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK//I,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAG,CAAC;MAElE,OAAO/P,MAAM;IAEd;;IAEA;IACA;IACA;EAAA;IAAAzI,GAAA;IAAAE,KAAA,EACA,SAAAg4J,gBAAiBp/H,MAAM,EAAErwB,MAAM,EAAG;MAEjC;;MAEA,IAAMyP,CAAC,GAAG4gB,MAAM,CAAC5gB,CAAC;QAAEM,CAAC,GAAGsgB,MAAM,CAACtgB,CAAC;QAAEuU,CAAC,GAAG+L,MAAM,CAAC/L,CAAC;MAE9C,IAAMkrI,KAAK,GAAG,IAAI,CAAC1/D,YAAY;;MAE/B;MACA9vF,MAAM,CAACwU,IAAI,CAAEg7I,KAAK,CAAE,CAAC,CAAG,CAAC,CAACt6I,cAAc,CAAE,QAAS,CAAC,CAAC,CAAC;;MAEtD;MACAlV,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGz/I,CAAE,CAAC,CAAC,CAAC;MAC1D/P,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGlrI,CAAE,CAAC;MACxDtkB,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG//I,CAAE,CAAC;;MAExD;MACAzP,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG//I,CAAC,GAAGM,CAAE,CAAC,CAAC,CAAC;MAC9D/P,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGz/I,CAAC,GAAGuU,CAAE,CAAC;MAC5DtkB,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGlrI,CAAC,GAAGA,CAAC,GAAG,QAAS,CAAC,CAAC,CAAC;MACnEtkB,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG//I,CAAC,GAAG6U,CAAE,CAAC;MAC5DtkB,MAAM,CAAC6U,eAAe,CAAE26I,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK//I,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAG,CAAC,CAAC,CAAC;;MAEpE,OAAO/P,MAAM;IAEd;EAAC;IAAAzI,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAKm7E,EAAE,EAAG;MAET,KAAM,IAAIxyF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACyyF,YAAY,CAAEzyF,CAAC,CAAE,CAACqX,GAAG,CAAEm7E,EAAE,CAACC,YAAY,CAAEzyF,CAAC,CAAG,CAAC;MAEnD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAi4J,YAAa7/D,EAAE,EAAE3+E,CAAC,EAAG;MAEpB,KAAM,IAAI7T,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACyyF,YAAY,CAAEzyF,CAAC,CAAE,CAACwX,eAAe,CAAEg7E,EAAE,CAACC,YAAY,CAAEzyF,CAAC,CAAE,EAAE6T,CAAE,CAAC;MAElE;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAA0kB,MAAOjL,CAAC,EAAG;MAEV,KAAM,IAAI7T,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACyyF,YAAY,CAAEzyF,CAAC,CAAE,CAAC6X,cAAc,CAAEhE,CAAE,CAAC;MAE3C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAuY,KAAM6/E,EAAE,EAAE74E,KAAK,EAAG;MAEjB,KAAM,IAAI3Z,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACyyF,YAAY,CAAEzyF,CAAC,CAAE,CAAC2S,IAAI,CAAE6/E,EAAE,CAACC,YAAY,CAAEzyF,CAAC,CAAE,EAAE2Z,KAAM,CAAC;MAE3D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAzf,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQy4E,EAAE,EAAG;MAEZ,KAAM,IAAIxyF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK,CAAE,IAAI,CAACyyF,YAAY,CAAEzyF,CAAC,CAAE,CAAC+Z,MAAM,CAAEy4E,EAAE,CAACC,YAAY,CAAEzyF,CAAC,CAAG,CAAC,EAAG;UAE9D,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMq7E,EAAE,EAAG;MAEV,OAAO,IAAI,CAAC98E,GAAG,CAAE88E,EAAE,CAACC,YAAa,CAAC;IAEnC;EAAC;IAAAv4F,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA4f,UAAWnJ,KAAK,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAMw4E,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAIzyF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9ByyF,YAAY,CAAEzyF,CAAC,CAAE,CAACga,SAAS,CAAEnJ,KAAK,EAAEoJ,MAAM,GAAKja,CAAC,GAAG,CAAI,CAAC;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA8f,QAASrJ,KAAK,GAAG,EAAE,EAAEoJ,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMw4E,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAIzyF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9ByyF,YAAY,CAAEzyF,CAAC,CAAE,CAACka,OAAO,CAAErJ,KAAK,EAAEoJ,MAAM,GAAKja,CAAC,GAAG,CAAI,CAAC;MAEvD;MAEA,OAAO6Q,KAAK;IAEb;;IAEA;IACA;EAAA;IAAA3W,GAAA;IAAAE,KAAA,EACA,SAAAk4J,WAAmBt/H,MAAM,EAAEu/H,OAAO,EAAG;MAEpC;;MAEA,IAAMngJ,CAAC,GAAG4gB,MAAM,CAAC5gB,CAAC;QAAEM,CAAC,GAAGsgB,MAAM,CAACtgB,CAAC;QAAEuU,CAAC,GAAG+L,MAAM,CAAC/L,CAAC;;MAE9C;MACAsrI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ;;MAEvB;MACAA,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG7/I,CAAC;MAC3B6/I,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGtrI,CAAC;MAC3BsrI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGngJ,CAAC;;MAE3B;MACAmgJ,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGngJ,CAAC,GAAGM,CAAC;MAC/B6/I,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG7/I,CAAC,GAAGuU,CAAC;MAC/BsrI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,IAAK,CAAC,GAAGtrI,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAE;MAC3CsrI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGngJ,CAAC,GAAG6U,CAAC;MAC/BsrI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,IAAKngJ,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAE;IAE5C;EAAC;EAAA,OAAAq/I,mBAAA;AAAA;AAAAr4J,OAAA,CAAAq4J,mBAAA,GAAAA,mBAAA;AAAA,IAIIS,UAAU,0BAAAC,OAAA;EAAAnuI,SAAA,CAAAkuI,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAluI,YAAA,CAAAguI,UAAA;EAEf,SAAAA,WAAahgE,EAAE,GAAG,IAAIu/D,mBAAmB,CAAC,CAAC,EAAE1/D,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAsgE,QAAA;IAAApwJ,eAAA,OAAAiwJ,UAAA;IAE5DG,QAAA,GAAAD,SAAA,CAAAx2J,IAAA,OAAOuC,SAAS,EAAE4zF,SAAS;IAE3BsgE,QAAA,CAAKpgE,YAAY,GAAG,IAAI;IAExBogE,QAAA,CAAKngE,EAAE,GAAGA,EAAE;IAAC,OAAAmgE,QAAA;EAEd;EAAC5vJ,YAAA,CAAAyvJ,UAAA;IAAAt4J,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA27G,UAAA,CAAA34J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACktE,EAAE,CAACr7E,IAAI,CAAEmO,MAAM,CAACktE,EAAG,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAt4F,GAAA;IAAAE,KAAA,EAED,SAAA2pD,SAAU0tE,IAAI,EAAG;MAEhB,IAAI,CAACp/B,SAAS,GAAGo/B,IAAI,CAACp/B,SAAS,CAAC,CAAC;MACjC,IAAI,CAACG,EAAE,CAACx4E,SAAS,CAAEy3G,IAAI,CAACj/B,EAAG,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAt4F,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQC,IAAI,EAAG;MAEd,IAAMN,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA27G,UAAA,CAAA34J,SAAA,mBAAAqC,IAAA,OAAiBunB,IAAI,CAAE;MAEjCN,IAAI,CAACniB,MAAM,CAACwxF,EAAE,GAAG,IAAI,CAACA,EAAE,CAACt4E,OAAO,CAAC,CAAC;MAElC,OAAOiJ,IAAI;IAEZ;EAAC;EAAA,OAAAqvI,UAAA;AAAA,EAvCuBjE,KAAK;AAAA70J,OAAA,CAAA84J,UAAA,GAAAA,UAAA;AAAA,IA2CxBI,cAAc,0BAAAC,QAAA;EAAAvuI,SAAA,CAAAsuI,cAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAtuI,YAAA,CAAAouI,cAAA;EAEnB,SAAAA,eAAajK,OAAO,EAAG;IAAA,IAAAoK,QAAA;IAAAxwJ,eAAA,OAAAqwJ,cAAA;IAEtBG,QAAA,GAAAD,SAAA,CAAA52J,IAAA,OAAOysJ,OAAO;IACdoK,QAAA,CAAKtsI,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAAssI,QAAA;EAEpB;EAAChwJ,YAAA,CAAA6vJ,cAAA;IAAA14J,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAM1kG,KAAK,GAAG,IAAI;MAElB,IAAMwlG,MAAM,GAAG,IAAI0B,UAAU,CAAElnG,KAAK,CAAC8lG,OAAQ,CAAC;MAC9CN,MAAM,CAACe,OAAO,CAAEvmG,KAAK,CAACm6B,IAAK,CAAC;MAC5BqrE,MAAM,CAACiB,gBAAgB,CAAEzmG,KAAK,CAACkmG,aAAc,CAAC;MAC9CV,MAAM,CAACc,kBAAkB,CAAEtmG,KAAK,CAACgmG,eAAgB,CAAC;MAClDR,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,UAAWmoI,IAAI,EAAG;QAEnC,IAAI;UAEH3E,MAAM,CAAExkG,KAAK,CAACv8B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0lI,IAAK,CAAE,CAAE,CAAC;QAE5C,CAAC,CAAC,OAAQ/zI,CAAC,EAAG;UAEb,IAAKsvI,OAAO,EAAG;YAEdA,OAAO,CAAEtvI,CAAE,CAAC;UAEb,CAAC,MAAM;YAENtC,OAAO,CAAChY,KAAK,CAAEsa,CAAE,CAAC;UAEnB;UAEA4qC,KAAK,CAAC8lG,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;QAE/B;MAED,CAAC,EAAEyjI,UAAU,EAAEC,OAAQ,CAAC;IAEzB;EAAC;IAAArtJ,GAAA;IAAAE,KAAA,EAED,SAAAksB,MAAOmrG,IAAI,EAAG;MAEb,IAAMhrG,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,SAASusI,UAAUA,CAAE1yJ,IAAI,EAAG;QAE3B,IAAKmmB,QAAQ,CAAEnmB,IAAI,CAAE,KAAK7B,SAAS,EAAG;UAErCkX,OAAO,CAACC,IAAI,CAAE,yCAAyC,EAAEtV,IAAK,CAAC;QAEhE;QAEA,OAAOmmB,QAAQ,CAAEnmB,IAAI,CAAE;MAExB;MAEA,IAAM+oC,QAAQ,GAAGupH,cAAc,CAACK,sBAAsB,CAAExhC,IAAI,CAACx1H,IAAK,CAAC;MAEnE,IAAKw1H,IAAI,CAAC9/G,IAAI,KAAKlT,SAAS,EAAG4qC,QAAQ,CAAC13B,IAAI,GAAG8/G,IAAI,CAAC9/G,IAAI;MACxD,IAAK8/G,IAAI,CAACnxH,IAAI,KAAK7B,SAAS,EAAG4qC,QAAQ,CAAC/oC,IAAI,GAAGmxH,IAAI,CAACnxH,IAAI;MACxD,IAAKmxH,IAAI,CAAC/wG,KAAK,KAAKjiB,SAAS,IAAI4qC,QAAQ,CAAC3oB,KAAK,KAAKjiB,SAAS,EAAG4qC,QAAQ,CAAC3oB,KAAK,CAAC8zB,MAAM,CAAEi9E,IAAI,CAAC/wG,KAAM,CAAC;MACnG,IAAK+wG,IAAI,CAAC7hF,SAAS,KAAKnxC,SAAS,EAAG4qC,QAAQ,CAACuG,SAAS,GAAG6hF,IAAI,CAAC7hF,SAAS;MACvE,IAAK6hF,IAAI,CAAC5hF,SAAS,KAAKpxC,SAAS,EAAG4qC,QAAQ,CAACwG,SAAS,GAAG4hF,IAAI,CAAC5hF,SAAS;MACvE,IAAK4hF,IAAI,CAAC3hF,KAAK,KAAKrxC,SAAS,EAAG4qC,QAAQ,CAACyG,KAAK,GAAG2hF,IAAI,CAAC3hF,KAAK;MAC3D,IAAK2hF,IAAI,CAAC1hF,UAAU,KAAKtxC,SAAS,EAAG4qC,QAAQ,CAAC0G,UAAU,GAAG,IAAIuE,KAAK,CAAC,CAAC,CAACE,MAAM,CAAEi9E,IAAI,CAAC1hF,UAAW,CAAC;MAChG,IAAK0hF,IAAI,CAACzhF,cAAc,KAAKvxC,SAAS,EAAG4qC,QAAQ,CAAC2G,cAAc,GAAGyhF,IAAI,CAACzhF,cAAc;MACtF,IAAKyhF,IAAI,CAACxhF,QAAQ,KAAKxxC,SAAS,IAAI4qC,QAAQ,CAAC4G,QAAQ,KAAKxxC,SAAS,EAAG4qC,QAAQ,CAAC4G,QAAQ,CAACuE,MAAM,CAAEi9E,IAAI,CAACxhF,QAAS,CAAC;MAC/G,IAAKwhF,IAAI,CAACthF,QAAQ,KAAK1xC,SAAS,IAAI4qC,QAAQ,CAAC8G,QAAQ,KAAK1xC,SAAS,EAAG4qC,QAAQ,CAAC8G,QAAQ,CAACqE,MAAM,CAAEi9E,IAAI,CAACthF,QAAS,CAAC;MAC/G,IAAKshF,IAAI,CAACrhF,iBAAiB,KAAK3xC,SAAS,EAAG4qC,QAAQ,CAAC+G,iBAAiB,GAAGqhF,IAAI,CAACrhF,iBAAiB;MAC/F,IAAKqhF,IAAI,CAACphF,aAAa,KAAK5xC,SAAS,IAAI4qC,QAAQ,CAACgH,aAAa,KAAK5xC,SAAS,EAAG4qC,QAAQ,CAACgH,aAAa,CAACmE,MAAM,CAAEi9E,IAAI,CAACphF,aAAc,CAAC;MACnI,IAAKohF,IAAI,CAACnhF,SAAS,KAAK7xC,SAAS,EAAG4qC,QAAQ,CAACiH,SAAS,GAAGmhF,IAAI,CAACnhF,SAAS;MACvE,IAAKmhF,IAAI,CAAClhF,SAAS,KAAK9xC,SAAS,EAAG4qC,QAAQ,CAACkH,SAAS,GAAGkhF,IAAI,CAAClhF,SAAS;MACvE,IAAKkhF,IAAI,CAACjhF,kBAAkB,KAAK/xC,SAAS,EAAG4qC,QAAQ,CAACmH,kBAAkB,GAAGihF,IAAI,CAACjhF,kBAAkB;MAClG,IAAKihF,IAAI,CAAC5gF,WAAW,KAAKpyC,SAAS,EAAG4qC,QAAQ,CAACwH,WAAW,GAAG4gF,IAAI,CAAC5gF,WAAW;MAC7E,IAAK4gF,IAAI,CAAC3gF,cAAc,KAAKryC,SAAS,EAAG4qC,QAAQ,CAACyH,cAAc,GAAG2gF,IAAI,CAAC3gF,cAAc;MACtF,IAAK2gF,IAAI,CAAC1gF,yBAAyB,KAAKtyC,SAAS,EAAG4qC,QAAQ,CAAC0H,yBAAyB,GAAG0gF,IAAI,CAAC1gF,yBAAyB;MACvH,IAAK0gF,IAAI,CAAC1+E,YAAY,KAAKt0C,SAAS,EAAG4qC,QAAQ,CAAC0J,YAAY,GAAG0+E,IAAI,CAAC1+E,YAAY;MAChF,IAAK0+E,IAAI,CAACx+E,SAAS,KAAKx0C,SAAS,EAAG4qC,QAAQ,CAAC4J,SAAS,GAAGw+E,IAAI,CAACx+E,SAAS;MACvE,IAAKw+E,IAAI,CAACt+E,mBAAmB,KAAK10C,SAAS,EAAG4qC,QAAQ,CAAC8J,mBAAmB,GAAGs+E,IAAI,CAACt+E,mBAAmB;MACrG,IAAKs+E,IAAI,CAACr+E,gBAAgB,KAAK30C,SAAS,IAAI4qC,QAAQ,CAAC+J,gBAAgB,KAAK30C,SAAS,EAAG4qC,QAAQ,CAAC+J,gBAAgB,CAACoB,MAAM,CAAEi9E,IAAI,CAACr+E,gBAAiB,CAAC;MAC/I,IAAKq+E,IAAI,CAACxsG,UAAU,KAAKxmB,SAAS,EAAG4qC,QAAQ,CAACpkB,UAAU,GAAGwsG,IAAI,CAACxsG,UAAU;MAC1E,IAAKwsG,IAAI,CAACvgF,kBAAkB,KAAKzyC,SAAS,EAAG4qC,QAAQ,CAAC6H,kBAAkB,GAAGugF,IAAI,CAACvgF,kBAAkB;MAClG,IAAKugF,IAAI,CAAC19E,GAAG,KAAKt1C,SAAS,EAAG4qC,QAAQ,CAAC0K,GAAG,GAAG09E,IAAI,CAAC19E,GAAG;MACrD,IAAK09E,IAAI,CAAC39E,WAAW,KAAKr1C,SAAS,EAAG4qC,QAAQ,CAACyK,WAAW,GAAG29E,IAAI,CAAC39E,WAAW;MAC7E,IAAK29E,IAAI,CAAC3kF,QAAQ,KAAKruC,SAAS,EAAG4qC,QAAQ,CAACyD,QAAQ,GAAG2kF,IAAI,CAAC3kF,QAAQ;MACpE,IAAK2kF,IAAI,CAAC/+E,OAAO,KAAKj0C,SAAS,EAAG4qC,QAAQ,CAACqJ,OAAO,GAAG++E,IAAI,CAAC/+E,OAAO;MACjE,IAAK++E,IAAI,CAAC1kF,IAAI,KAAKtuC,SAAS,EAAG4qC,QAAQ,CAAC0D,IAAI,GAAG0kF,IAAI,CAAC1kF,IAAI;MACxD,IAAK0kF,IAAI,CAACjjF,UAAU,KAAK/vC,SAAS,EAAG4qC,QAAQ,CAACmF,UAAU,GAAGijF,IAAI,CAACjjF,UAAU;MAC1E,IAAKijF,IAAI,CAACxkF,OAAO,KAAKxuC,SAAS,EAAG4qC,QAAQ,CAAC4D,OAAO,GAAGwkF,IAAI,CAACxkF,OAAO;MACjE,IAAKwkF,IAAI,CAACvkF,WAAW,KAAKzuC,SAAS,EAAG4qC,QAAQ,CAAC6D,WAAW,GAAGukF,IAAI,CAACvkF,WAAW;MAC7E,IAAKukF,IAAI,CAACh+E,SAAS,KAAKh1C,SAAS,EAAG4qC,QAAQ,CAACoK,SAAS,GAAGg+E,IAAI,CAACh+E,SAAS;MACvE,IAAKg+E,IAAI,CAACtkF,SAAS,KAAK1uC,SAAS,EAAG4qC,QAAQ,CAAC8D,SAAS,GAAGskF,IAAI,CAACtkF,SAAS;MACvE,IAAKskF,IAAI,CAAC9jF,SAAS,KAAKlvC,SAAS,EAAG4qC,QAAQ,CAACsE,SAAS,GAAG8jF,IAAI,CAAC9jF,SAAS;MACvE,IAAK8jF,IAAI,CAAC7jF,UAAU,KAAKnvC,SAAS,EAAG4qC,QAAQ,CAACuE,UAAU,GAAG6jF,IAAI,CAAC7jF,UAAU;MAC1E,IAAK6jF,IAAI,CAAChjF,UAAU,KAAKhwC,SAAS,EAAG4qC,QAAQ,CAACoF,UAAU,GAAGgjF,IAAI,CAAChjF,UAAU;MAE1E,IAAKgjF,IAAI,CAACrjF,YAAY,KAAK3vC,SAAS,EAAG4qC,QAAQ,CAAC+E,YAAY,GAAGqjF,IAAI,CAACrjF,YAAY;MAChF,IAAKqjF,IAAI,CAAC5jF,gBAAgB,KAAKpvC,SAAS,EAAG4qC,QAAQ,CAACwE,gBAAgB,GAAG4jF,IAAI,CAAC5jF,gBAAgB;MAC5F,IAAK4jF,IAAI,CAAC3jF,WAAW,KAAKrvC,SAAS,EAAG4qC,QAAQ,CAACyE,WAAW,GAAG2jF,IAAI,CAAC3jF,WAAW;MAC7E,IAAK2jF,IAAI,CAAC1jF,UAAU,KAAKtvC,SAAS,EAAG4qC,QAAQ,CAAC0E,UAAU,GAAG0jF,IAAI,CAAC1jF,UAAU;MAC1E,IAAK0jF,IAAI,CAACzjF,eAAe,KAAKvvC,SAAS,EAAG4qC,QAAQ,CAAC2E,eAAe,GAAGyjF,IAAI,CAACzjF,eAAe;MACzF,IAAKyjF,IAAI,CAACxjF,WAAW,KAAKxvC,SAAS,EAAG4qC,QAAQ,CAAC4E,WAAW,GAAGwjF,IAAI,CAACxjF,WAAW;MAC7E,IAAKwjF,IAAI,CAACvjF,YAAY,KAAKzvC,SAAS,EAAG4qC,QAAQ,CAAC6E,YAAY,GAAGujF,IAAI,CAACvjF,YAAY;MAChF,IAAKujF,IAAI,CAACtjF,YAAY,KAAK1vC,SAAS,EAAG4qC,QAAQ,CAAC8E,YAAY,GAAGsjF,IAAI,CAACtjF,YAAY;MAEhF,IAAKsjF,IAAI,CAAC/9E,SAAS,KAAKj1C,SAAS,EAAG4qC,QAAQ,CAACqK,SAAS,GAAG+9E,IAAI,CAAC/9E,SAAS;MACvE,IAAK+9E,IAAI,CAAC99E,kBAAkB,KAAKl1C,SAAS,EAAG4qC,QAAQ,CAACsK,kBAAkB,GAAG89E,IAAI,CAAC99E,kBAAkB;MAClG,IAAK89E,IAAI,CAAC79E,gBAAgB,KAAKn1C,SAAS,EAAG4qC,QAAQ,CAACuK,gBAAgB,GAAG69E,IAAI,CAAC79E,gBAAgB;MAC5F,IAAK69E,IAAI,CAAC59E,iBAAiB,KAAKp1C,SAAS,EAAG4qC,QAAQ,CAACwK,iBAAiB,GAAG49E,IAAI,CAAC59E,iBAAiB;MAE/F,IAAK49E,IAAI,CAAC9yG,QAAQ,KAAKlgB,SAAS,EAAG4qC,QAAQ,CAAC1qB,QAAQ,GAAG8yG,IAAI,CAAC9yG,QAAQ;MAEpE,IAAK8yG,IAAI,CAACn+E,SAAS,KAAK,CAAC,EAAGjK,QAAQ,CAACiK,SAAS,GAAGm+E,IAAI,CAACn+E,SAAS;MAC/D,IAAKm+E,IAAI,CAACl+E,QAAQ,KAAK90C,SAAS,EAAG4qC,QAAQ,CAACkK,QAAQ,GAAGk+E,IAAI,CAACl+E,QAAQ;MACpE,IAAKk+E,IAAI,CAACj+E,OAAO,KAAK/0C,SAAS,EAAG4qC,QAAQ,CAACmK,OAAO,GAAGi+E,IAAI,CAACj+E,OAAO;MACjE,IAAKi+E,IAAI,CAAC3yG,KAAK,KAAKrgB,SAAS,EAAG4qC,QAAQ,CAACvqB,KAAK,GAAG2yG,IAAI,CAAC3yG,KAAK;MAE3D,IAAK2yG,IAAI,CAAC9iF,aAAa,KAAKlwC,SAAS,EAAG4qC,QAAQ,CAACsF,aAAa,GAAG8iF,IAAI,CAAC9iF,aAAa;MACnF,IAAK8iF,IAAI,CAAC7iF,mBAAmB,KAAKnwC,SAAS,EAAG4qC,QAAQ,CAACuF,mBAAmB,GAAG6iF,IAAI,CAAC7iF,mBAAmB;MACrG,IAAK6iF,IAAI,CAAC5iF,kBAAkB,KAAKpwC,SAAS,EAAG4qC,QAAQ,CAACwF,kBAAkB,GAAG4iF,IAAI,CAAC5iF,kBAAkB;MAElG,IAAK4iF,IAAI,CAAC3iF,SAAS,KAAKrwC,SAAS,EAAG4qC,QAAQ,CAACyF,SAAS,GAAG2iF,IAAI,CAAC3iF,SAAS;MAEvE,IAAK2iF,IAAI,CAAC1iF,eAAe,KAAKtwC,SAAS,EAAG4qC,QAAQ,CAAC0F,eAAe,GAAG0iF,IAAI,CAAC1iF,eAAe;MACzF,IAAK0iF,IAAI,CAACziF,kBAAkB,KAAKvwC,SAAS,EAAG4qC,QAAQ,CAAC2F,kBAAkB,GAAGyiF,IAAI,CAACziF,kBAAkB;MAClG,IAAKyiF,IAAI,CAACxiF,eAAe,KAAKxwC,SAAS,EAAG4qC,QAAQ,CAAC4F,eAAe,GAAGwiF,IAAI,CAACxiF,eAAe;MAEzF,IAAKwiF,IAAI,CAAChtF,OAAO,KAAKhmC,SAAS,EAAG4qC,QAAQ,CAAC5E,OAAO,GAAGgtF,IAAI,CAAChtF,OAAO;MAEjE,IAAKgtF,IAAI,CAACviF,UAAU,KAAKzwC,SAAS,EAAG4qC,QAAQ,CAAC6F,UAAU,GAAGuiF,IAAI,CAACviF,UAAU;MAE1E,IAAKuiF,IAAI,CAACzrG,QAAQ,KAAKvnB,SAAS,EAAG4qC,QAAQ,CAACrjB,QAAQ,GAAGyrG,IAAI,CAACzrG,QAAQ;MAEpE,IAAKyrG,IAAI,CAACzkF,YAAY,KAAKvuC,SAAS,EAAG;QAEtC,IAAK,OAAOgzH,IAAI,CAACzkF,YAAY,KAAK,QAAQ,EAAG;UAE5C3D,QAAQ,CAAC2D,YAAY,GAAKykF,IAAI,CAACzkF,YAAY,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;QAEjE,CAAC,MAAM;UAEN3D,QAAQ,CAAC2D,YAAY,GAAGykF,IAAI,CAACzkF,YAAY;QAE1C;MAED;;MAEA;;MAEA,IAAKykF,IAAI,CAACttE,QAAQ,KAAK1lD,SAAS,EAAG;QAElC,KAAM,IAAM6B,IAAI,IAAImxH,IAAI,CAACttE,QAAQ,EAAG;UAEnC,IAAM+B,OAAO,GAAGurE,IAAI,CAACttE,QAAQ,CAAE7jD,IAAI,CAAE;UAErC+oC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,GAAG,CAAC,CAAC;UAE9B,QAAS4lD,OAAO,CAACjqD,IAAI;YAEpB,KAAK,GAAG;cACPotC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,CAAClG,KAAK,GAAG44J,UAAU,CAAE9sG,OAAO,CAAC9rD,KAAM,CAAC;cAC7D;YAED,KAAK,GAAG;cACPivC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,CAAClG,KAAK,GAAG,IAAIk6C,KAAK,CAAC,CAAC,CAACE,MAAM,CAAE0R,OAAO,CAAC9rD,KAAM,CAAC;cACrE;YAED,KAAK,IAAI;cACRivC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,CAAClG,KAAK,GAAG,IAAIoc,OAAO,CAAC,CAAC,CAACwD,SAAS,CAAEksC,OAAO,CAAC9rD,KAAM,CAAC;cAC1E;YAED,KAAK,IAAI;cACRivC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,CAAClG,KAAK,GAAG,IAAIu2B,OAAO,CAAC,CAAC,CAAC3W,SAAS,CAAEksC,OAAO,CAAC9rD,KAAM,CAAC;cAC1E;YAED,KAAK,IAAI;cACRivC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,CAAClG,KAAK,GAAG,IAAI2sB,OAAO,CAAC,CAAC,CAAC/M,SAAS,CAAEksC,OAAO,CAAC9rD,KAAM,CAAC;cAC1E;YAED,KAAK,IAAI;cACRivC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,CAAClG,KAAK,GAAG,IAAIugB,OAAO,CAAC,CAAC,CAACX,SAAS,CAAEksC,OAAO,CAAC9rD,KAAM,CAAC;cAC1E;YAED,KAAK,IAAI;cACRivC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,CAAClG,KAAK,GAAG,IAAIgiC,OAAO,CAAC,CAAC,CAACpiB,SAAS,CAAEksC,OAAO,CAAC9rD,KAAM,CAAC;cAC1E;YAED;cACCivC,QAAQ,CAAC8a,QAAQ,CAAE7jD,IAAI,CAAE,CAAClG,KAAK,GAAG8rD,OAAO,CAAC9rD,KAAK;UAEjD;QAED;MAED;MAEA,IAAKq3H,IAAI,CAACtsE,OAAO,KAAK1mD,SAAS,EAAG4qC,QAAQ,CAAC8b,OAAO,GAAGssE,IAAI,CAACtsE,OAAO;MACjE,IAAKssE,IAAI,CAACpsE,YAAY,KAAK5mD,SAAS,EAAG4qC,QAAQ,CAACgc,YAAY,GAAGosE,IAAI,CAACpsE,YAAY;MAChF,IAAKosE,IAAI,CAACnsE,cAAc,KAAK7mD,SAAS,EAAG4qC,QAAQ,CAACic,cAAc,GAAGmsE,IAAI,CAACnsE,cAAc;MACtF,IAAKmsE,IAAI,CAACxrE,WAAW,KAAKxnD,SAAS,EAAG4qC,QAAQ,CAAC4c,WAAW,GAAGwrE,IAAI,CAACxrE,WAAW;MAE7E,IAAKwrE,IAAI,CAAChsE,UAAU,KAAKhnD,SAAS,EAAG;QAEpC,KAAM,IAAMvE,GAAG,IAAIu3H,IAAI,CAAChsE,UAAU,EAAG;UAEpCpc,QAAQ,CAACoc,UAAU,CAAEvrD,GAAG,CAAE,GAAGu3H,IAAI,CAAChsE,UAAU,CAAEvrD,GAAG,CAAE;QAEpD;MAED;MAEA,IAAKu3H,IAAI,CAAClsE,MAAM,KAAK9mD,SAAS,EAAG4qC,QAAQ,CAACkc,MAAM,GAAGksE,IAAI,CAAClsE,MAAM;MAC9D,IAAKksE,IAAI,CAACjsE,QAAQ,KAAK/mD,SAAS,EAAG4qC,QAAQ,CAACmc,QAAQ,GAAGisE,IAAI,CAACjsE,QAAQ;;MAEpE;;MAEA,IAAKisE,IAAI,CAAC78F,IAAI,KAAKn2B,SAAS,EAAG4qC,QAAQ,CAACzU,IAAI,GAAG68F,IAAI,CAAC78F,IAAI;MACxD,IAAK68F,IAAI,CAACp+E,eAAe,KAAK50C,SAAS,EAAG4qC,QAAQ,CAACgK,eAAe,GAAGo+E,IAAI,CAACp+E,eAAe;;MAEzF;;MAEA,IAAKo+E,IAAI,CAACrgF,GAAG,KAAK3yC,SAAS,EAAG4qC,QAAQ,CAAC+H,GAAG,GAAG4hH,UAAU,CAAEvhC,IAAI,CAACrgF,GAAI,CAAC;MACnE,IAAKqgF,IAAI,CAACpgF,MAAM,KAAK5yC,SAAS,EAAG4qC,QAAQ,CAACgI,MAAM,GAAG2hH,UAAU,CAAEvhC,IAAI,CAACpgF,MAAO,CAAC;MAE5E,IAAKogF,IAAI,CAACngF,QAAQ,KAAK7yC,SAAS,EAAG4qC,QAAQ,CAACiI,QAAQ,GAAG0hH,UAAU,CAAEvhC,IAAI,CAACngF,QAAS,CAAC;MAElF,IAAKmgF,IAAI,CAAC9/E,OAAO,KAAKlzC,SAAS,EAAG4qC,QAAQ,CAACsI,OAAO,GAAGqhH,UAAU,CAAEvhC,IAAI,CAAC9/E,OAAQ,CAAC;MAC/E,IAAK8/E,IAAI,CAAC7/E,SAAS,KAAKnzC,SAAS,EAAG4qC,QAAQ,CAACuI,SAAS,GAAG6/E,IAAI,CAAC7/E,SAAS;MAEvE,IAAK6/E,IAAI,CAAC5/E,SAAS,KAAKpzC,SAAS,EAAG4qC,QAAQ,CAACwI,SAAS,GAAGmhH,UAAU,CAAEvhC,IAAI,CAAC5/E,SAAU,CAAC;MACrF,IAAK4/E,IAAI,CAAC3/E,aAAa,KAAKrzC,SAAS,EAAG4qC,QAAQ,CAACyI,aAAa,GAAG2/E,IAAI,CAAC3/E,aAAa;MACnF,IAAK2/E,IAAI,CAAC1/E,WAAW,KAAKtzC,SAAS,EAAG;QAErC,IAAIszC,WAAW,GAAG0/E,IAAI,CAAC1/E,WAAW;QAElC,IAAKjuB,KAAK,CAACC,OAAO,CAAEguB,WAAY,CAAC,KAAK,KAAK,EAAG;UAE7C;;UAEAA,WAAW,GAAG,CAAEA,WAAW,EAAEA,WAAW,CAAE;QAE3C;QAEA1I,QAAQ,CAAC0I,WAAW,GAAG,IAAIv7B,OAAO,CAAC,CAAC,CAACwD,SAAS,CAAE+3B,WAAY,CAAC;MAE9D;MAEA,IAAK0/E,IAAI,CAACz/E,eAAe,KAAKvzC,SAAS,EAAG4qC,QAAQ,CAAC2I,eAAe,GAAGghH,UAAU,CAAEvhC,IAAI,CAACz/E,eAAgB,CAAC;MACvG,IAAKy/E,IAAI,CAACx/E,iBAAiB,KAAKxzC,SAAS,EAAG4qC,QAAQ,CAAC4I,iBAAiB,GAAGw/E,IAAI,CAACx/E,iBAAiB;MAC/F,IAAKw/E,IAAI,CAACv/E,gBAAgB,KAAKzzC,SAAS,EAAG4qC,QAAQ,CAAC6I,gBAAgB,GAAGu/E,IAAI,CAACv/E,gBAAgB;MAE5F,IAAKu/E,IAAI,CAACt/E,YAAY,KAAK1zC,SAAS,EAAG4qC,QAAQ,CAAC8I,YAAY,GAAG6gH,UAAU,CAAEvhC,IAAI,CAACt/E,YAAa,CAAC;MAC9F,IAAKs/E,IAAI,CAACr/E,YAAY,KAAK3zC,SAAS,EAAG4qC,QAAQ,CAAC+I,YAAY,GAAG4gH,UAAU,CAAEvhC,IAAI,CAACr/E,YAAa,CAAC;MAE9F,IAAKq/E,IAAI,CAACp/E,WAAW,KAAK5zC,SAAS,EAAG4qC,QAAQ,CAACgJ,WAAW,GAAG2gH,UAAU,CAAEvhC,IAAI,CAACp/E,WAAY,CAAC;MAC3F,IAAKo/E,IAAI,CAACvhF,iBAAiB,KAAKzxC,SAAS,EAAG4qC,QAAQ,CAAC6G,iBAAiB,GAAGuhF,IAAI,CAACvhF,iBAAiB;MAE/F,IAAKuhF,IAAI,CAACn/E,WAAW,KAAK7zC,SAAS,EAAG4qC,QAAQ,CAACiJ,WAAW,GAAG0gH,UAAU,CAAEvhC,IAAI,CAACn/E,WAAY,CAAC;MAC3F,IAAKm/E,IAAI,CAACl/E,oBAAoB,KAAK9zC,SAAS,EAAG4qC,QAAQ,CAACkJ,oBAAoB,GAAGygH,UAAU,CAAEvhC,IAAI,CAACl/E,oBAAqB,CAAC;MACtH,IAAKk/E,IAAI,CAACj/E,gBAAgB,KAAK/zC,SAAS,EAAG4qC,QAAQ,CAACmJ,gBAAgB,GAAGwgH,UAAU,CAAEvhC,IAAI,CAACj/E,gBAAiB,CAAC;MAE1G,IAAKi/E,IAAI,CAACh/E,MAAM,KAAKh0C,SAAS,EAAG4qC,QAAQ,CAACoJ,MAAM,GAAGugH,UAAU,CAAEvhC,IAAI,CAACh/E,MAAO,CAAC;MAC5E,IAAKg/E,IAAI,CAAC9+E,eAAe,KAAKl0C,SAAS,EAAG4qC,QAAQ,CAACsJ,eAAe,GAAG8+E,IAAI,CAAC9+E,eAAe;MAEzF,IAAK8+E,IAAI,CAAC7+E,YAAY,KAAKn0C,SAAS,EAAG4qC,QAAQ,CAACuJ,YAAY,GAAG6+E,IAAI,CAAC7+E,YAAY;MAChF,IAAK6+E,IAAI,CAAC5+E,eAAe,KAAKp0C,SAAS,EAAG4qC,QAAQ,CAACwJ,eAAe,GAAG4+E,IAAI,CAAC5+E,eAAe;MAEzF,IAAK4+E,IAAI,CAAClgF,QAAQ,KAAK9yC,SAAS,EAAG4qC,QAAQ,CAACkI,QAAQ,GAAGyhH,UAAU,CAAEvhC,IAAI,CAAClgF,QAAS,CAAC;MAClF,IAAKkgF,IAAI,CAACjgF,iBAAiB,KAAK/yC,SAAS,EAAG4qC,QAAQ,CAACmI,iBAAiB,GAAGigF,IAAI,CAACjgF,iBAAiB;MAE/F,IAAKigF,IAAI,CAAChgF,KAAK,KAAKhzC,SAAS,EAAG4qC,QAAQ,CAACoI,KAAK,GAAGuhH,UAAU,CAAEvhC,IAAI,CAAChgF,KAAM,CAAC;MACzE,IAAKggF,IAAI,CAAC//E,cAAc,KAAKjzC,SAAS,EAAG4qC,QAAQ,CAACqI,cAAc,GAAG+/E,IAAI,CAAC//E,cAAc;MAEtF,IAAK+/E,IAAI,CAAC3+E,WAAW,KAAKr0C,SAAS,EAAG4qC,QAAQ,CAACyJ,WAAW,GAAGkgH,UAAU,CAAEvhC,IAAI,CAAC3+E,WAAY,CAAC;MAE3F,IAAK2+E,IAAI,CAAChhF,YAAY,KAAKhyC,SAAS,EAAG4qC,QAAQ,CAACoH,YAAY,GAAGuiH,UAAU,CAAEvhC,IAAI,CAAChhF,YAAa,CAAC;MAC9F,IAAKghF,IAAI,CAAC/gF,qBAAqB,KAAKjyC,SAAS,EAAG4qC,QAAQ,CAACqH,qBAAqB,GAAGsiH,UAAU,CAAEvhC,IAAI,CAAC/gF,qBAAsB,CAAC;MACzH,IAAK+gF,IAAI,CAAC9gF,kBAAkB,KAAKlyC,SAAS,EAAG4qC,QAAQ,CAACsH,kBAAkB,GAAGqiH,UAAU,CAAEvhC,IAAI,CAAC9gF,kBAAmB,CAAC;MAChH,IAAK8gF,IAAI,CAAC7gF,oBAAoB,KAAKnyC,SAAS,EAAG4qC,QAAQ,CAACuH,oBAAoB,GAAG,IAAIp6B,OAAO,CAAC,CAAC,CAACwD,SAAS,CAAEy3G,IAAI,CAAC7gF,oBAAqB,CAAC;MAEnI,IAAK6gF,IAAI,CAACzgF,cAAc,KAAKvyC,SAAS,EAAG4qC,QAAQ,CAAC2H,cAAc,GAAGgiH,UAAU,CAAEvhC,IAAI,CAACzgF,cAAe,CAAC;MACpG,IAAKygF,IAAI,CAACxgF,uBAAuB,KAAKxyC,SAAS,EAAG4qC,QAAQ,CAAC4H,uBAAuB,GAAG+hH,UAAU,CAAEvhC,IAAI,CAACxgF,uBAAwB,CAAC;MAE/H,IAAKwgF,IAAI,CAACz+E,eAAe,KAAKv0C,SAAS,EAAG4qC,QAAQ,CAAC2J,eAAe,GAAGggH,UAAU,CAAEvhC,IAAI,CAACz+E,eAAgB,CAAC;MACvG,IAAKy+E,IAAI,CAACv+E,YAAY,KAAKz0C,SAAS,EAAG4qC,QAAQ,CAAC6J,YAAY,GAAG8/G,UAAU,CAAEvhC,IAAI,CAACv+E,YAAa,CAAC;MAE9F,IAAKu+E,IAAI,CAACtgF,aAAa,KAAK1yC,SAAS,EAAG4qC,QAAQ,CAAC8H,aAAa,GAAG6hH,UAAU,CAAEvhC,IAAI,CAACtgF,aAAc,CAAC;MAEjG,IAAKsgF,IAAI,CAACrwD,aAAa,KAAK3iE,SAAS,EAAG4qC,QAAQ,CAAC+3B,aAAa,GAAG4xF,UAAU,CAAEvhC,IAAI,CAACrwD,aAAc,CAAC;MACjG,IAAKqwD,IAAI,CAACnwD,iBAAiB,KAAK7iE,SAAS,EAAG4qC,QAAQ,CAACi4B,iBAAiB,GAAG0xF,UAAU,CAAEvhC,IAAI,CAACnwD,iBAAkB,CAAC;MAE7G,OAAOj4B,QAAQ;IAEhB;EAAC;IAAAnvC,GAAA;IAAAE,KAAA,EAED,SAAA84J,YAAa94J,KAAK,EAAG;MAEpB,IAAI,CAACqsB,QAAQ,GAAGrsB,KAAK;MACrB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA64J,uBAA+Bh3J,IAAI,EAAG;MAErC,IAAMk3J,WAAW,GAAG;QACnBhoE,cAAc,EAAdA,cAAc;QACdC,cAAc,EAAdA,cAAc;QACdytD,iBAAiB,EAAjBA,iBAAiB;QACjB/zF,cAAc,EAAdA,cAAc;QACdomC,cAAc,EAAdA,cAAc;QACdJ,oBAAoB,EAApBA,oBAAoB;QACpBD,oBAAoB,EAApBA,oBAAoB;QACpBF,iBAAiB,EAAjBA,iBAAiB;QACjBC,gBAAgB,EAAhBA,gBAAgB;QAChBH,kBAAkB,EAAlBA,kBAAkB;QAClBC,mBAAmB,EAAnBA,mBAAmB;QACnBH,iBAAiB,EAAjBA,iBAAiB;QACjBC,oBAAoB,EAApBA,oBAAoB;QACpBj0C,iBAAiB,EAAjBA,iBAAiB;QACjBw0C,kBAAkB,EAAlBA,kBAAkB;QAClBE,kBAAkB,EAAlBA,kBAAkB;QAClBD,iBAAiB,EAAjBA,iBAAiB;QACjBv+C,QAAQ,EAARA;MACD,CAAC;MAED,OAAO,IAAI0mH,WAAW,CAAEl3J,IAAI,CAAE,CAAC,CAAC;IAEjC;EAAC;EAAA,OAAA22J,cAAA;AAAA,EA1U2BlK,MAAM;AAAAhvJ,OAAA,CAAAk5J,cAAA,GAAAA,cAAA;AAAA,IA8U7BQ,WAAW;EAAA,SAAAA,YAAA;IAAA7wJ,eAAA,OAAA6wJ,WAAA;EAAA;EAAArwJ,YAAA,CAAAqwJ,WAAA;IAAAl5J,GAAA;IAAAE,KAAA,EAEhB,SAAAi5J,WAAmBxiJ,KAAK,EAAG;MAE1B,IAAK,OAAO07I,WAAW,KAAK,WAAW,EAAG;QAEzC,OAAO,IAAIA,WAAW,CAAC,CAAC,CAACC,MAAM,CAAE37I,KAAM,CAAC;MAEzC;;MAEA;MACA;;MAEA,IAAIgD,CAAC,GAAG,EAAE;MAEV,KAAM,IAAI7T,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGjb,KAAK,CAAC9Q,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAElD;QACA6T,CAAC,IAAI1Q,MAAM,CAACmwJ,YAAY,CAAEziJ,KAAK,CAAE7Q,CAAC,CAAG,CAAC;MAEvC;MAEA,IAAI;QAEH;;QAEA,OAAOuzJ,kBAAkB,CAAEC,MAAM,CAAE3/I,CAAE,CAAE,CAAC;MAEzC,CAAC,CAAC,OAAQoE,CAAC,EAAG;QAAE;;QAEf,OAAOpE,CAAC;MAET;IAED;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAq5J,eAAuB5vI,GAAG,EAAG;MAE5B,IAAMpT,KAAK,GAAGoT,GAAG,CAAC6vI,WAAW,CAAE,GAAI,CAAC;MAEpC,IAAKjjJ,KAAK,KAAK,CAAE,CAAC,EAAG,OAAO,IAAI;MAEhC,OAAOoT,GAAG,CAACviB,KAAK,CAAE,CAAC,EAAEmP,KAAK,GAAG,CAAE,CAAC;IAEjC;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAA6tJ,WAAmBpkI,GAAG,EAAEm5D,IAAI,EAAG;MAE9B;MACA,IAAK,OAAOn5D,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,EAAE,EAAG,OAAO,EAAE;;MAEtD;MACA,IAAK,eAAe,CAACzB,IAAI,CAAE46D,IAAK,CAAC,IAAI,KAAK,CAAC56D,IAAI,CAAEyB,GAAI,CAAC,EAAG;QAExDm5D,IAAI,GAAGA,IAAI,CAACoE,OAAO,CAAE,yBAAyB,EAAE,IAAK,CAAC;MAEvD;;MAEA;MACA,IAAK,kBAAkB,CAACh/D,IAAI,CAAEyB,GAAI,CAAC,EAAG,OAAOA,GAAG;;MAEhD;MACA,IAAK,eAAe,CAACzB,IAAI,CAAEyB,GAAI,CAAC,EAAG,OAAOA,GAAG;;MAE7C;MACA,IAAK,YAAY,CAACzB,IAAI,CAAEyB,GAAI,CAAC,EAAG,OAAOA,GAAG;;MAE1C;MACA,OAAOm5D,IAAI,GAAGn5D,GAAG;IAElB;EAAC;EAAA,OAAAuvI,WAAA;AAAA;AAAA15J,OAAA,CAAA05J,WAAA,GAAAA,WAAA;AAAA,IAIIO,uBAAuB,0BAAAC,iBAAA;EAAAtvI,SAAA,CAAAqvI,uBAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAArvI,YAAA,CAAAmvI,uBAAA;EAE5B,SAAAA,wBAAA,EAAc;IAAA,IAAAG,QAAA;IAAAvxJ,eAAA,OAAAoxJ,uBAAA;IAEbG,QAAA,GAAAD,SAAA,CAAA33J,IAAA;IAEA43J,QAAA,CAAK/sF,yBAAyB,GAAG,IAAI;IAErC+sF,QAAA,CAAK73J,IAAI,GAAG,yBAAyB;IACrC63J,QAAA,CAAK3/E,aAAa,GAAGjgD,QAAQ;IAAC,OAAA4/H,QAAA;EAE/B;EAAC/wJ,YAAA,CAAA4wJ,uBAAA;IAAAz5J,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA88G,uBAAA,CAAA95J,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAAC6uD,aAAa,GAAG7uD,MAAM,CAAC6uD,aAAa;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAj6E,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAA,EAAS;MAER,IAAML,IAAI,GAAAyzB,IAAA,CAAAC,eAAA,CAAA88G,uBAAA,CAAA95J,SAAA,mBAAAqC,IAAA,MAAiB;MAE3BinB,IAAI,CAACgxD,aAAa,GAAG,IAAI,CAACA,aAAa;MAEvChxD,IAAI,CAAC4jD,yBAAyB,GAAG,IAAI;MAErC,OAAO5jD,IAAI;IAEZ;EAAC;EAAA,OAAAwwI,uBAAA;AAAA,EAjCoCr4G,cAAc;AAAA5hD,OAAA,CAAAi6J,uBAAA,GAAAA,uBAAA;AAAA,IAqC9CI,oBAAoB,0BAAAC,QAAA;EAAA1vI,SAAA,CAAAyvI,oBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAzvI,YAAA,CAAAuvI,oBAAA;EAEzB,SAAAA,qBAAapL,OAAO,EAAG;IAAApmJ,eAAA,OAAAwxJ,oBAAA;IAAA,OAAAE,SAAA,CAAA/3J,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAAgxJ,oBAAA;IAAA75J,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAM1kG,KAAK,GAAG,IAAI;MAElB,IAAMwlG,MAAM,GAAG,IAAI0B,UAAU,CAAElnG,KAAK,CAAC8lG,OAAQ,CAAC;MAC9CN,MAAM,CAACe,OAAO,CAAEvmG,KAAK,CAACm6B,IAAK,CAAC;MAC5BqrE,MAAM,CAACiB,gBAAgB,CAAEzmG,KAAK,CAACkmG,aAAc,CAAC;MAC9CV,MAAM,CAACc,kBAAkB,CAAEtmG,KAAK,CAACgmG,eAAgB,CAAC;MAClDR,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,UAAWmoI,IAAI,EAAG;QAEnC,IAAI;UAEH3E,MAAM,CAAExkG,KAAK,CAACv8B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE0lI,IAAK,CAAE,CAAE,CAAC;QAE5C,CAAC,CAAC,OAAQ/zI,CAAC,EAAG;UAEb,IAAKsvI,OAAO,EAAG;YAEdA,OAAO,CAAEtvI,CAAE,CAAC;UAEb,CAAC,MAAM;YAENtC,OAAO,CAAChY,KAAK,CAAEsa,CAAE,CAAC;UAEnB;UAEA4qC,KAAK,CAAC8lG,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;QAE/B;MAED,CAAC,EAAEyjI,UAAU,EAAEC,OAAQ,CAAC;IAEzB;EAAC;IAAArtJ,GAAA;IAAAE,KAAA,EAED,SAAAksB,MAAOmrG,IAAI,EAAG;MAEb,IAAMyiC,oBAAoB,GAAG,CAAC,CAAC;MAC/B,IAAMC,cAAc,GAAG,CAAC,CAAC;MAEzB,SAASC,oBAAoBA,CAAE3iC,IAAI,EAAE9/G,IAAI,EAAG;QAE3C,IAAKuiJ,oBAAoB,CAAEviJ,IAAI,CAAE,KAAKlT,SAAS,EAAG,OAAOy1J,oBAAoB,CAAEviJ,IAAI,CAAE;QAErF,IAAMm7G,kBAAkB,GAAG2E,IAAI,CAAC3E,kBAAkB;QAClD,IAAMD,iBAAiB,GAAGC,kBAAkB,CAAEn7G,IAAI,CAAE;QAEpD,IAAMgO,MAAM,GAAG00I,cAAc,CAAE5iC,IAAI,EAAE5E,iBAAiB,CAACltG,MAAO,CAAC;QAE/D,IAAM9O,KAAK,GAAG6O,aAAa,CAAEmtG,iBAAiB,CAAC5wH,IAAI,EAAE0jB,MAAO,CAAC;QAC7D,IAAM+sG,EAAE,GAAG,IAAIJ,iBAAiB,CAAEz7G,KAAK,EAAEg8G,iBAAiB,CAACrtE,MAAO,CAAC;QACnEktE,EAAE,CAAC/6G,IAAI,GAAGk7G,iBAAiB,CAACl7G,IAAI;QAEhCuiJ,oBAAoB,CAAEviJ,IAAI,CAAE,GAAG+6G,EAAE;QAEjC,OAAOA,EAAE;MAEV;MAEA,SAAS2nC,cAAcA,CAAE5iC,IAAI,EAAE9/G,IAAI,EAAG;QAErC,IAAKwiJ,cAAc,CAAExiJ,IAAI,CAAE,KAAKlT,SAAS,EAAG,OAAO01J,cAAc,CAAExiJ,IAAI,CAAE;QAEzE,IAAM66G,YAAY,GAAGiF,IAAI,CAACjF,YAAY;QACtC,IAAMs/B,WAAW,GAAGt/B,YAAY,CAAE76G,IAAI,CAAE;QAExC,IAAMutC,EAAE,GAAG,IAAInpC,WAAW,CAAE+1I,WAAY,CAAC,CAACnsI,MAAM;QAEhDw0I,cAAc,CAAExiJ,IAAI,CAAE,GAAGutC,EAAE;QAE3B,OAAOA,EAAE;MAEV;MAEA,IAAMppB,QAAQ,GAAG27F,IAAI,CAAC1qD,yBAAyB,GAAG,IAAI4sF,uBAAuB,CAAC,CAAC,GAAG,IAAIr4G,cAAc,CAAC,CAAC;MAEtG,IAAM7qC,KAAK,GAAGghH,IAAI,CAACtuG,IAAI,CAAC1S,KAAK;MAE7B,IAAKA,KAAK,KAAKhS,SAAS,EAAG;QAE1B,IAAM61J,UAAU,GAAG50I,aAAa,CAAEjP,KAAK,CAACxU,IAAI,EAAEwU,KAAK,CAACI,KAAM,CAAC;QAC3DilB,QAAQ,CAAComB,QAAQ,CAAE,IAAIrE,eAAe,CAAEy8G,UAAU,EAAE,CAAE,CAAE,CAAC;MAE1D;MAEA,IAAMv+H,UAAU,GAAG07F,IAAI,CAACtuG,IAAI,CAAC4S,UAAU;MAEvC,KAAM,IAAM77B,GAAG,IAAI67B,UAAU,EAAG;QAE/B,IAAM3b,SAAS,GAAG2b,UAAU,CAAE77B,GAAG,CAAE;QACnC,IAAIq6J,eAAe;QAEnB,IAAKn6I,SAAS,CAACmlC,4BAA4B,EAAG;UAE7C,IAAMstE,iBAAiB,GAAGunC,oBAAoB,CAAE3iC,IAAI,CAACtuG,IAAI,EAAE/I,SAAS,CAAC+I,IAAK,CAAC;UAC3EoxI,eAAe,GAAG,IAAI3nC,0BAA0B,CAAEC,iBAAiB,EAAEzyG,SAAS,CAAC09B,QAAQ,EAAE19B,SAAS,CAACH,MAAM,EAAEG,SAAS,CAAC29B,UAAW,CAAC;QAElI,CAAC,MAAM;UAEN,IAAMu8G,WAAU,GAAG50I,aAAa,CAAEtF,SAAS,CAACne,IAAI,EAAEme,SAAS,CAACvJ,KAAM,CAAC;UACnE,IAAM2jJ,qBAAqB,GAAGp6I,SAAS,CAACitD,0BAA0B,GAAGsqD,wBAAwB,GAAG95E,eAAe;UAC/G08G,eAAe,GAAG,IAAIC,qBAAqB,CAAEF,WAAU,EAAEl6I,SAAS,CAAC09B,QAAQ,EAAE19B,SAAS,CAAC29B,UAAW,CAAC;QAEpG;QAEA,IAAK39B,SAAS,CAAC9Z,IAAI,KAAK7B,SAAS,EAAG81J,eAAe,CAACj0J,IAAI,GAAG8Z,SAAS,CAAC9Z,IAAI;QACzE,IAAK8Z,SAAS,CAAC69B,KAAK,KAAKx5C,SAAS,EAAG81J,eAAe,CAACl8G,QAAQ,CAAEj+B,SAAS,CAAC69B,KAAM,CAAC;QAEhF,IAAK79B,SAAS,CAAC89B,WAAW,KAAKz5C,SAAS,EAAG;UAE1C81J,eAAe,CAACr8G,WAAW,CAACj+B,MAAM,GAAGG,SAAS,CAAC89B,WAAW,CAACj+B,MAAM;UACjEs6I,eAAe,CAACr8G,WAAW,CAACvsB,KAAK,GAAGvR,SAAS,CAAC89B,WAAW,CAACvsB,KAAK;QAEhE;QAEAmK,QAAQ,CAACsmB,YAAY,CAAEliD,GAAG,EAAEq6J,eAAgB,CAAC;MAE9C;MAEA,IAAM54G,eAAe,GAAG81E,IAAI,CAACtuG,IAAI,CAACw4B,eAAe;MAEjD,IAAKA,eAAe,EAAG;QAEtB,KAAM,IAAMzhD,KAAG,IAAIyhD,eAAe,EAAG;UAEpC,IAAMkE,cAAc,GAAGlE,eAAe,CAAEzhD,KAAG,CAAE;UAE7C,IAAM2W,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI7Q,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG+zB,cAAc,CAAC9/C,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;YAE3D,IAAMoa,WAAS,GAAGylC,cAAc,CAAE7/C,CAAC,CAAE;YACrC,IAAIu0J,gBAAe;YAEnB,IAAKn6I,WAAS,CAACmlC,4BAA4B,EAAG;cAE7C,IAAMstE,kBAAiB,GAAGunC,oBAAoB,CAAE3iC,IAAI,CAACtuG,IAAI,EAAE/I,WAAS,CAAC+I,IAAK,CAAC;cAC3EoxI,gBAAe,GAAG,IAAI3nC,0BAA0B,CAAEC,kBAAiB,EAAEzyG,WAAS,CAAC09B,QAAQ,EAAE19B,WAAS,CAACH,MAAM,EAAEG,WAAS,CAAC29B,UAAW,CAAC;YAElI,CAAC,MAAM;cAEN,IAAMu8G,YAAU,GAAG50I,aAAa,CAAEtF,WAAS,CAACne,IAAI,EAAEme,WAAS,CAACvJ,KAAM,CAAC;cACnE0jJ,gBAAe,GAAG,IAAI18G,eAAe,CAAEy8G,YAAU,EAAEl6I,WAAS,CAAC09B,QAAQ,EAAE19B,WAAS,CAAC29B,UAAW,CAAC;YAE9F;YAEA,IAAK39B,WAAS,CAAC9Z,IAAI,KAAK7B,SAAS,EAAG81J,gBAAe,CAACj0J,IAAI,GAAG8Z,WAAS,CAAC9Z,IAAI;YACzEuQ,KAAK,CAACrR,IAAI,CAAE+0J,gBAAgB,CAAC;UAE9B;UAEAz+H,QAAQ,CAAC6lB,eAAe,CAAEzhD,KAAG,CAAE,GAAG2W,KAAK;QAExC;MAED;MAEA,IAAM+qC,oBAAoB,GAAG61E,IAAI,CAACtuG,IAAI,CAACy4B,oBAAoB;MAE3D,IAAKA,oBAAoB,EAAG;QAE3B9lB,QAAQ,CAAC8lB,oBAAoB,GAAG,IAAI;MAErC;MAEA,IAAMC,MAAM,GAAG41E,IAAI,CAACtuG,IAAI,CAAC04B,MAAM,IAAI41E,IAAI,CAACtuG,IAAI,CAACsxI,SAAS,IAAIhjC,IAAI,CAACtuG,IAAI,CAACuxI,OAAO;MAE3E,IAAK74G,MAAM,KAAKp9C,SAAS,EAAG;QAE3B,KAAM,IAAIuB,IAAC,GAAG,CAAC,EAAEiS,CAAC,GAAG4pC,MAAM,CAAC97C,MAAM,EAAEC,IAAC,KAAKiS,CAAC,EAAE,EAAGjS,IAAC,EAAG;UAEnD,IAAMo+C,KAAK,GAAGvC,MAAM,CAAE77C,IAAC,CAAE;UAEzB81B,QAAQ,CAACymB,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACzyB,KAAK,EAAEyyB,KAAK,CAAC5B,aAAc,CAAC;QAEnE;MAED;MAEA,IAAMV,cAAc,GAAG21E,IAAI,CAACtuG,IAAI,CAAC24B,cAAc;MAE/C,IAAKA,cAAc,KAAKr9C,SAAS,EAAG;QAEnC,IAAM+b,MAAM,GAAG,IAAImW,OAAO,CAAC,CAAC;QAE5B,IAAKmrB,cAAc,CAACthC,MAAM,KAAK/b,SAAS,EAAG;UAE1C+b,MAAM,CAACR,SAAS,CAAE8hC,cAAc,CAACthC,MAAO,CAAC;QAE1C;QAEAsb,QAAQ,CAACgmB,cAAc,GAAG,IAAIvjB,MAAM,CAAE/d,MAAM,EAAEshC,cAAc,CAAC1oB,MAAO,CAAC;MAEtE;MAEA,IAAKq+F,IAAI,CAACnxH,IAAI,EAAGw1B,QAAQ,CAACx1B,IAAI,GAAGmxH,IAAI,CAACnxH,IAAI;MAC1C,IAAKmxH,IAAI,CAACzrG,QAAQ,EAAG8P,QAAQ,CAAC9P,QAAQ,GAAGyrG,IAAI,CAACzrG,QAAQ;MAEtD,OAAO8P,QAAQ;IAEhB;EAAC;EAAA,OAAAi+H,oBAAA;AAAA,EA/MiCrL,MAAM;AAAAhvJ,OAAA,CAAAq6J,oBAAA,GAAAA,oBAAA;AAAA,IAmNnCY,YAAY,0BAAAC,SAAA;EAAAtwI,SAAA,CAAAqwI,YAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAArwI,YAAA,CAAAmwI,YAAA;EAEjB,SAAAA,aAAahM,OAAO,EAAG;IAAApmJ,eAAA,OAAAoyJ,YAAA;IAAA,OAAAE,SAAA,CAAA34J,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAA4xJ,YAAA;IAAAz6J,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAM1kG,KAAK,GAAG,IAAI;MAElB,IAAMm6B,IAAI,GAAK,IAAI,CAACA,IAAI,KAAK,EAAE,GAAKo2E,WAAW,CAACK,cAAc,CAAE5vI,GAAI,CAAC,GAAG,IAAI,CAACm5D,IAAI;MACjF,IAAI,CAAC8rE,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI9rE,IAAI;MAE7C,IAAMqrE,MAAM,GAAG,IAAI0B,UAAU,CAAE,IAAI,CAACpB,OAAQ,CAAC;MAC7CN,MAAM,CAACe,OAAO,CAAE,IAAI,CAACpsE,IAAK,CAAC;MAC3BqrE,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAc,CAAC;MAC7CV,MAAM,CAACc,kBAAkB,CAAE,IAAI,CAACN,eAAgB,CAAC;MACjDR,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,UAAWmoI,IAAI,EAAG;QAEnC,IAAIv6B,IAAI,GAAG,IAAI;QAEf,IAAI;UAEHA,IAAI,GAAGprG,IAAI,CAACC,KAAK,CAAE0lI,IAAK,CAAC;QAE1B,CAAC,CAAC,OAAQruJ,KAAK,EAAG;UAEjB,IAAK4pJ,OAAO,KAAK9oJ,SAAS,EAAG8oJ,OAAO,CAAE5pJ,KAAM,CAAC;UAE7CgY,OAAO,CAAChY,KAAK,CAAE,mCAAmC,GAAGkmB,GAAG,GAAG,GAAG,EAAElmB,KAAK,CAACyiB,OAAQ,CAAC;UAE/E;QAED;QAEA,IAAMsG,QAAQ,GAAG+qG,IAAI,CAAC/qG,QAAQ;QAE9B,IAAKA,QAAQ,KAAKjoB,SAAS,IAAIioB,QAAQ,CAACzqB,IAAI,KAAKwC,SAAS,IAAIioB,QAAQ,CAACzqB,IAAI,CAAC2V,WAAW,CAAC,CAAC,KAAK,UAAU,EAAG;UAE1G,IAAK21I,OAAO,KAAK9oJ,SAAS,EAAG8oJ,OAAO,CAAE,IAAIxpJ,KAAK,CAAE,kCAAkC,GAAG8lB,GAAI,CAAE,CAAC;UAE7FlO,OAAO,CAAChY,KAAK,CAAE,kCAAkC,GAAGkmB,GAAI,CAAC;UACzD;QAED;QAEAg/B,KAAK,CAACv8B,KAAK,CAAEmrG,IAAI,EAAE41B,MAAO,CAAC;MAE5B,CAAC,EAAEC,UAAU,EAAEC,OAAQ,CAAC;IAEzB;EAAC;IAAArtJ,GAAA;IAAAE,KAAA;MAAA,IAAA06J,UAAA,GAAAl8C,iBAAA,eAAAn/G,mBAAA,GAAA8G,IAAA,CAED,SAAAw0J,SAAiBlxI,GAAG,EAAEyjI,UAAU;QAAA,IAAAzkG,KAAA,EAAAm6B,IAAA,EAAAqrE,MAAA,EAAA2D,IAAA,EAAAv6B,IAAA,EAAA/qG,QAAA;QAAA,OAAAjtB,mBAAA,GAAAyB,IAAA,UAAA85J,UAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA7zJ,IAAA,GAAA6zJ,UAAA,CAAAn2J,IAAA;YAAA;cAEzB+jD,KAAK,GAAG,IAAI;cAEZm6B,IAAI,GAAK,IAAI,CAACA,IAAI,KAAK,EAAE,GAAKo2E,WAAW,CAACK,cAAc,CAAE5vI,GAAI,CAAC,GAAG,IAAI,CAACm5D,IAAI;cACjF,IAAI,CAAC8rE,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI9rE,IAAI;cAEvCqrE,MAAM,GAAG,IAAI0B,UAAU,CAAE,IAAI,CAACpB,OAAQ,CAAC;cAC7CN,MAAM,CAACe,OAAO,CAAE,IAAI,CAACpsE,IAAK,CAAC;cAC3BqrE,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAc,CAAC;cAC7CV,MAAM,CAACc,kBAAkB,CAAE,IAAI,CAACN,eAAgB,CAAC;cAACoM,UAAA,CAAAn2J,IAAA;cAAA,OAE/BupJ,MAAM,CAACY,SAAS,CAAEplI,GAAG,EAAEyjI,UAAW,CAAC;YAAA;cAAhD0E,IAAI,GAAAiJ,UAAA,CAAA72J,IAAA;cAEJqzH,IAAI,GAAGprG,IAAI,CAACC,KAAK,CAAE0lI,IAAK,CAAC;cAEzBtlI,QAAQ,GAAG+qG,IAAI,CAAC/qG,QAAQ;cAAA,MAEzBA,QAAQ,KAAKjoB,SAAS,IAAIioB,QAAQ,CAACzqB,IAAI,KAAKwC,SAAS,IAAIioB,QAAQ,CAACzqB,IAAI,CAAC2V,WAAW,CAAC,CAAC,KAAK,UAAU;gBAAAqjJ,UAAA,CAAAn2J,IAAA;gBAAA;cAAA;cAAA,MAEjG,IAAIf,KAAK,CAAE,kCAAkC,GAAG8lB,GAAI,CAAC;YAAA;cAAAoxI,UAAA,CAAAn2J,IAAA;cAAA,OAI/C+jD,KAAK,CAACqyG,UAAU,CAAEzjC,IAAK,CAAC;YAAA;cAAA,OAAAwjC,UAAA,CAAA12J,MAAA,WAAA02J,UAAA,CAAA72J,IAAA;YAAA;YAAA;cAAA,OAAA62J,UAAA,CAAA1zJ,IAAA;UAAA;QAAA,GAAAwzJ,QAAA;MAAA,CAErC;MAAA,SAAA9L,UAAAkM,GAAA,EAAAC,GAAA;QAAA,OAAAN,UAAA,CAAAvuH,KAAA,OAAAJ,SAAA;MAAA;MAAA,OAAA8iH,SAAA;IAAA;EAAA;IAAA/uJ,GAAA;IAAAE,KAAA,EAED,SAAAksB,MAAOmrG,IAAI,EAAE41B,MAAM,EAAG;MAErB,IAAMviH,UAAU,GAAG,IAAI,CAACuwH,eAAe,CAAE5jC,IAAI,CAAC3sF,UAAW,CAAC;MAC1D,IAAMiD,MAAM,GAAG,IAAI,CAACutH,WAAW,CAAE7jC,IAAI,CAAC1pF,MAAO,CAAC;MAC9C,IAAMF,UAAU,GAAG,IAAI,CAAC0tH,eAAe,CAAE9jC,IAAI,CAAC5pF,UAAU,EAAEE,MAAO,CAAC;MAElE,IAAMpkB,MAAM,GAAG,IAAI,CAAC6xI,WAAW,CAAE/jC,IAAI,CAAC9tG,MAAM,EAAE,YAAY;QAEzD,IAAK0jI,MAAM,KAAK5oJ,SAAS,EAAG4oJ,MAAM,CAAErmJ,MAAO,CAAC;MAE7C,CAAE,CAAC;MAEH,IAAMylB,QAAQ,GAAG,IAAI,CAACgvI,aAAa,CAAEhkC,IAAI,CAAChrG,QAAQ,EAAE9C,MAAO,CAAC;MAC5D,IAAMmkB,SAAS,GAAG,IAAI,CAAC4tH,cAAc,CAAEjkC,IAAI,CAAC3pF,SAAS,EAAErhB,QAAS,CAAC;MAEjE,IAAMzlB,MAAM,GAAG,IAAI,CAAC20J,WAAW,CAAElkC,IAAI,CAACzwH,MAAM,EAAE6mC,UAAU,EAAEC,SAAS,EAAErhB,QAAQ,EAAEqe,UAAW,CAAC;MAC3F,IAAMkD,SAAS,GAAG,IAAI,CAAC4tH,cAAc,CAAEnkC,IAAI,CAACzpF,SAAS,EAAEhnC,MAAO,CAAC;MAE/D,IAAI,CAAC60J,aAAa,CAAE70J,MAAM,EAAEgnC,SAAU,CAAC;;MAEvC;;MAEA,IAAKq/G,MAAM,KAAK5oJ,SAAS,EAAG;QAE3B,IAAIq3J,SAAS,GAAG,KAAK;QAErB,KAAM,IAAMnkJ,IAAI,IAAIgS,MAAM,EAAG;UAE5B,IAAKA,MAAM,CAAEhS,IAAI,CAAE,CAACwR,IAAI,YAAYJ,gBAAgB,EAAG;YAEtD+yI,SAAS,GAAG,IAAI;YAChB;UAED;QAED;QAEA,IAAKA,SAAS,KAAK,KAAK,EAAGzO,MAAM,CAAErmJ,MAAO,CAAC;MAE5C;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAA9G,GAAA;IAAAE,KAAA;MAAA,IAAA27J,WAAA,GAAAn9C,iBAAA,eAAAn/G,mBAAA,GAAA8G,IAAA,CAED,SAAAy1J,SAAkBvkC,IAAI;QAAA,IAAA3sF,UAAA,EAAAiD,MAAA,EAAAF,UAAA,EAAAlkB,MAAA,EAAA8C,QAAA,EAAAqhB,SAAA,EAAA9mC,MAAA,EAAAgnC,SAAA;QAAA,OAAAvuC,mBAAA,GAAAyB,IAAA,UAAA+6J,UAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA90J,IAAA,GAAA80J,UAAA,CAAAp3J,IAAA;YAAA;cAEfgmC,UAAU,GAAG,IAAI,CAACuwH,eAAe,CAAE5jC,IAAI,CAAC3sF,UAAW,CAAC;cACpDiD,MAAM,GAAG,IAAI,CAACutH,WAAW,CAAE7jC,IAAI,CAAC1pF,MAAO,CAAC;cACxCF,UAAU,GAAG,IAAI,CAAC0tH,eAAe,CAAE9jC,IAAI,CAAC5pF,UAAU,EAAEE,MAAO,CAAC;cAAAmuH,UAAA,CAAAp3J,IAAA;cAAA,OAE7C,IAAI,CAACq3J,gBAAgB,CAAE1kC,IAAI,CAAC9tG,MAAO,CAAC;YAAA;cAAnDA,MAAM,GAAAuyI,UAAA,CAAA93J,IAAA;cAENqoB,QAAQ,GAAG,IAAI,CAACgvI,aAAa,CAAEhkC,IAAI,CAAChrG,QAAQ,EAAE9C,MAAO,CAAC;cACtDmkB,SAAS,GAAG,IAAI,CAAC4tH,cAAc,CAAEjkC,IAAI,CAAC3pF,SAAS,EAAErhB,QAAS,CAAC;cAE3DzlB,MAAM,GAAG,IAAI,CAAC20J,WAAW,CAAElkC,IAAI,CAACzwH,MAAM,EAAE6mC,UAAU,EAAEC,SAAS,EAAErhB,QAAQ,EAAEqe,UAAW,CAAC;cACrFkD,SAAS,GAAG,IAAI,CAAC4tH,cAAc,CAAEnkC,IAAI,CAACzpF,SAAS,EAAEhnC,MAAO,CAAC;cAE/D,IAAI,CAAC60J,aAAa,CAAE70J,MAAM,EAAEgnC,SAAU,CAAC;cAAC,OAAAkuH,UAAA,CAAA33J,MAAA,WAEjCyC,MAAM;YAAA;YAAA;cAAA,OAAAk1J,UAAA,CAAA30J,IAAA;UAAA;QAAA,GAAAy0J,QAAA;MAAA,CAEb;MAAA,SAAAd,WAAAkB,GAAA;QAAA,OAAAL,WAAA,CAAAxvH,KAAA,OAAAJ,SAAA;MAAA;MAAA,OAAA+uH,UAAA;IAAA;EAAA;IAAAh7J,GAAA;IAAAE,KAAA,EAED,SAAAk7J,YAAa7jC,IAAI,EAAG;MAEnB,IAAM1pF,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAK0pF,IAAI,KAAKhzH,SAAS,EAAG;QAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAAC1xH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE/C,IAAMgpC,KAAK,GAAG,IAAIs/F,KAAK,CAAC,CAAC,CAACvkF,QAAQ,CAAE0tE,IAAI,CAAEzxH,CAAC,CAAG,CAAC;UAE/C+nC,MAAM,CAAEiB,KAAK,CAACr3B,IAAI,CAAE,GAAGq3B,KAAK;QAE7B;MAED;MAEA,OAAOjB,MAAM;IAEd;EAAC;IAAA7tC,GAAA;IAAAE,KAAA,EAED,SAAAw7J,eAAgBnkC,IAAI,EAAEzwH,MAAM,EAAG;MAE9B,IAAMgnC,SAAS,GAAG,CAAC,CAAC;MACpB,IAAMsoF,KAAK,GAAG,CAAC,CAAC;;MAEhB;;MAEAtvH,MAAM,CAACsmC,QAAQ,CAAE,UAAWR,KAAK,EAAG;QAEnC,IAAKA,KAAK,CAAC+pF,MAAM,EAAGP,KAAK,CAAExpF,KAAK,CAACn1B,IAAI,CAAE,GAAGm1B,KAAK;MAEhD,CAAE,CAAC;;MAEH;;MAEA,IAAK2qF,IAAI,KAAKhzH,SAAS,EAAG;QAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAAC1xH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE/C,IAAMopC,QAAQ,GAAG,IAAIgoF,QAAQ,CAAC,CAAC,CAACrtE,QAAQ,CAAE0tE,IAAI,CAAEzxH,CAAC,CAAE,EAAEswH,KAAM,CAAC;UAE5DtoF,SAAS,CAAEoB,QAAQ,CAACz3B,IAAI,CAAE,GAAGy3B,QAAQ;QAEtC;MAED;MAEA,OAAOpB,SAAS;IAEjB;EAAC;IAAA9tC,GAAA;IAAAE,KAAA,EAED,SAAAm7J,gBAAiB9jC,IAAI,EAAE1pF,MAAM,EAAG;MAE/B,IAAMF,UAAU,GAAG,CAAC,CAAC;MAErB,IAAK4pF,IAAI,KAAKhzH,SAAS,EAAG;QAEzB,IAAM43J,oBAAoB,GAAG,IAAItC,oBAAoB,CAAC,CAAC;QAEvD,KAAM,IAAI/zJ,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAAC1xH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE/C,IAAI81B,QAAQ;UACZ,IAAM3S,IAAI,GAAGsuG,IAAI,CAAEzxH,CAAC,CAAE;UAEtB,QAASmjB,IAAI,CAAClnB,IAAI;YAEjB,KAAK,gBAAgB;YACrB,KAAK,yBAAyB;cAE7B65B,QAAQ,GAAGugI,oBAAoB,CAAC/vI,KAAK,CAAEnD,IAAK,CAAC;cAC7C;YAED;cAEC,IAAKA,IAAI,CAAClnB,IAAI,IAAIw8I,UAAU,EAAG;gBAE9B3iH,QAAQ,GAAG2iH,UAAU,CAAEt1H,IAAI,CAAClnB,IAAI,CAAE,CAAC8nD,QAAQ,CAAE5gC,IAAI,EAAE4kB,MAAO,CAAC;cAE5D,CAAC,MAAM;gBAENpyB,OAAO,CAACC,IAAI,oDAAAiM,MAAA,CAAqDsB,IAAI,CAAClnB,IAAI,OAAK,CAAC;cAEjF;UAEF;UAEA65B,QAAQ,CAACnkB,IAAI,GAAGwR,IAAI,CAACxR,IAAI;UAEzB,IAAKwR,IAAI,CAAC7iB,IAAI,KAAK7B,SAAS,EAAGq3B,QAAQ,CAACx1B,IAAI,GAAG6iB,IAAI,CAAC7iB,IAAI;UACxD,IAAK6iB,IAAI,CAAC6C,QAAQ,KAAKvnB,SAAS,EAAGq3B,QAAQ,CAAC9P,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;UAEpE6hB,UAAU,CAAE1kB,IAAI,CAACxR,IAAI,CAAE,GAAGmkB,QAAQ;QAEnC;MAED;MAEA,OAAO+R,UAAU;IAElB;EAAC;IAAA3tC,GAAA;IAAAE,KAAA,EAED,SAAAs7J,eAAgBjkC,IAAI,EAAEhrG,QAAQ,EAAG;MAEhC,IAAMgjB,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;MAClB,IAAM3B,SAAS,GAAG,CAAC,CAAC;MAEpB,IAAK2pF,IAAI,KAAKhzH,SAAS,EAAG;QAEzB,IAAM4pJ,MAAM,GAAG,IAAIuK,cAAc,CAAC,CAAC;QACnCvK,MAAM,CAAC6K,WAAW,CAAEzsI,QAAS,CAAC;QAE9B,KAAM,IAAIzmB,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAAC1xH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE/C,IAAMmjB,IAAI,GAAGsuG,IAAI,CAAEzxH,CAAC,CAAE;UAEtB,IAAKypC,KAAK,CAAEtmB,IAAI,CAACxR,IAAI,CAAE,KAAKlT,SAAS,EAAG;YAEvCgrC,KAAK,CAAEtmB,IAAI,CAACxR,IAAI,CAAE,GAAG02I,MAAM,CAAC/hI,KAAK,CAAEnD,IAAK,CAAC;UAE1C;UAEA2kB,SAAS,CAAE3kB,IAAI,CAACxR,IAAI,CAAE,GAAG83B,KAAK,CAAEtmB,IAAI,CAACxR,IAAI,CAAE;QAE5C;MAED;MAEA,OAAOm2B,SAAS;IAEjB;EAAC;IAAA5tC,GAAA;IAAAE,KAAA,EAED,SAAAi7J,gBAAiB5jC,IAAI,EAAG;MAEvB,IAAM3sF,UAAU,GAAG,CAAC,CAAC;MAErB,IAAK2sF,IAAI,KAAKhzH,SAAS,EAAG;QAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyxH,IAAI,CAAC1xH,MAAM,EAAEC,CAAC,EAAG,EAAG;UAExC,IAAMmjB,IAAI,GAAGsuG,IAAI,CAAEzxH,CAAC,CAAE;UAEtB,IAAMk8I,IAAI,GAAG6I,aAAa,CAACz+H,KAAK,CAAEnD,IAAK,CAAC;UAExC2hB,UAAU,CAAEo3G,IAAI,CAACvqI,IAAI,CAAE,GAAGuqI,IAAI;QAE/B;MAED;MAEA,OAAOp3G,UAAU;IAElB;EAAC;IAAA5qC,GAAA;IAAAE,KAAA,EAED,SAAAo7J,YAAa/jC,IAAI,EAAE41B,MAAM,EAAG;MAE3B,IAAMxkG,KAAK,GAAG,IAAI;MAClB,IAAMl/B,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAI0kI,MAAM;MAEV,SAASiO,SAASA,CAAEzyI,GAAG,EAAG;QAEzBg/B,KAAK,CAAC8lG,OAAO,CAACb,SAAS,CAAEjkI,GAAI,CAAC;QAE9B,OAAOwkI,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,YAAY;UAEpCg/B,KAAK,CAAC8lG,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;QAE7B,CAAC,EAAEplB,SAAS,EAAE,YAAY;UAEzBokD,KAAK,CAAC8lG,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;UAC9Bg/B,KAAK,CAAC8lG,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;QAE7B,CAAE,CAAC;MAEJ;MAEA,SAAS0yI,gBAAgBA,CAAEp0I,KAAK,EAAG;QAElC,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;UAEhC,IAAM0B,GAAG,GAAG1B,KAAK;UAEjB,IAAM66D,IAAI,GAAG,2BAA2B,CAAC56D,IAAI,CAAEyB,GAAI,CAAC,GAAGA,GAAG,GAAGg/B,KAAK,CAACimG,YAAY,GAAGjlI,GAAG;UAErF,OAAOyyI,SAAS,CAAEt5E,IAAK,CAAC;QAEzB,CAAC,MAAM;UAEN,IAAK76D,KAAK,CAACgB,IAAI,EAAG;YAEjB,OAAO;cACNA,IAAI,EAAEzD,aAAa,CAAEyC,KAAK,CAAClmB,IAAI,EAAEkmB,KAAK,CAACgB,IAAK,CAAC;cAC7CZ,KAAK,EAAEJ,KAAK,CAACI,KAAK;cAClBC,MAAM,EAAEL,KAAK,CAACK;YACf,CAAC;UAEF,CAAC,MAAM;YAEN,OAAO,IAAI;UAEZ;QAED;MAED;MAEA,IAAKivG,IAAI,KAAKhzH,SAAS,IAAIgzH,IAAI,CAAC1xH,MAAM,GAAG,CAAC,EAAG;QAE5C,IAAM4oJ,OAAO,GAAG,IAAIvB,cAAc,CAAEC,MAAO,CAAC;QAE5CgB,MAAM,GAAG,IAAIiF,WAAW,CAAE3E,OAAQ,CAAC;QACnCN,MAAM,CAACa,cAAc,CAAE,IAAI,CAACN,WAAY,CAAC;QAEzC,KAAM,IAAI5oJ,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG2lG,IAAI,CAAC1xH,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;UAEjD,IAAMmiB,KAAK,GAAGsvG,IAAI,CAAEzxH,CAAC,CAAE;UACvB,IAAM6jB,GAAG,GAAG1B,KAAK,CAAC0B,GAAG;UAErB,IAAKC,KAAK,CAACC,OAAO,CAAEF,GAAI,CAAC,EAAG;YAE3B;;YAEA,IAAM2yI,UAAU,GAAG,EAAE;YAErB,KAAM,IAAIx+H,CAAC,GAAG,CAAC,EAAEglB,EAAE,GAAGn5B,GAAG,CAAC9jB,MAAM,EAAEi4B,CAAC,GAAGglB,EAAE,EAAEhlB,CAAC,EAAG,EAAG;cAEhD,IAAMy+H,UAAU,GAAG5yI,GAAG,CAAEmU,CAAC,CAAE;cAE3B,IAAM0+H,iBAAiB,GAAGH,gBAAgB,CAAEE,UAAW,CAAC;cAExD,IAAKC,iBAAiB,KAAK,IAAI,EAAG;gBAEjC,IAAKA,iBAAiB,YAAY3zI,gBAAgB,EAAG;kBAEpDyzI,UAAU,CAACh3J,IAAI,CAAEk3J,iBAAkB,CAAC;gBAErC,CAAC,MAAM;kBAEN;;kBAEAF,UAAU,CAACh3J,IAAI,CAAE,IAAIsxH,WAAW,CAAE4lC,iBAAiB,CAACvzI,IAAI,EAAEuzI,iBAAiB,CAACn0I,KAAK,EAAEm0I,iBAAiB,CAACl0I,MAAO,CAAE,CAAC;gBAEhH;cAED;YAED;YAEAmB,MAAM,CAAExB,KAAK,CAACxQ,IAAI,CAAE,GAAG,IAAI0R,MAAM,CAAEmzI,UAAW,CAAC;UAEhD,CAAC,MAAM;YAEN;;YAEA,IAAME,kBAAiB,GAAGH,gBAAgB,CAAEp0I,KAAK,CAAC0B,GAAI,CAAC;YACvDF,MAAM,CAAExB,KAAK,CAACxQ,IAAI,CAAE,GAAG,IAAI0R,MAAM,CAAEqzI,kBAAkB,CAAC;UAGvD;QAED;MAED;MAEA,OAAO/yI,MAAM;IAEd;EAAC;IAAAzpB,GAAA;IAAAE,KAAA;MAAA,IAAAu8J,iBAAA,GAAA/9C,iBAAA,eAAAn/G,mBAAA,GAAA8G,IAAA,CAED,SAAAq2J,SAAwBnlC,IAAI;QAAA,IAAA5uE,KAAA,EAAAl/B,MAAA,EAAA0kI,MAAA,EAOZkO,gBAAgB,EAAAM,iBAAA,EAAA72J,CAAA,EAAA8rB,EAAA,EAAA3J,KAAA,EAAA0B,GAAA,EAAA2yI,UAAA,EAAAx+H,CAAA,EAAAglB,EAAA,EAAAy5G,UAAA,EAAAC,iBAAA,EAAAI,mBAAA;QAAA,OAAAr9J,mBAAA,GAAAyB,IAAA,UAAA67J,UAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA51J,IAAA,GAAA41J,UAAA,CAAAl4J,IAAA;YAAA;cAAA+3J,iBAAA,YAAAI,mBAAA;gBAAAJ,iBAAA,GAAAj+C,iBAAA,eAAAn/G,mBAAA,GAAA8G,IAAA,CAA/B,SAAA22J,SAAiC/0I,KAAK;kBAAA,IAAAg1I,IAAA,EAAAn6E,IAAA;kBAAA,OAAAvjF,mBAAA,GAAAyB,IAAA,UAAAk8J,UAAAC,UAAA;oBAAA,kBAAAA,UAAA,CAAAj2J,IAAA,GAAAi2J,UAAA,CAAAv4J,IAAA;sBAAA;wBAAA,MAEhC,OAAOqjB,KAAK,KAAK,QAAQ;0BAAAk1I,UAAA,CAAAv4J,IAAA;0BAAA;wBAAA;wBAEvB+kB,IAAG,GAAG1B,KAAK;wBAEX66D,IAAI,GAAG,2BAA2B,CAAC56D,IAAI,CAAEyB,IAAI,CAAC,GAAGA,IAAG,GAAGg/B,KAAK,CAACimG,YAAY,GAAGjlI,IAAG;wBAAAwzI,UAAA,CAAAv4J,IAAA;wBAAA,OAExEupJ,MAAM,CAACY,SAAS,CAAEjsE,IAAK,CAAC;sBAAA;wBAAA,OAAAq6E,UAAA,CAAA94J,MAAA,WAAA84J,UAAA,CAAAj5J,IAAA;sBAAA;wBAAA,KAIhC+jB,KAAK,CAACgB,IAAI;0BAAAk0I,UAAA,CAAAv4J,IAAA;0BAAA;wBAAA;wBAAA,OAAAu4J,UAAA,CAAA94J,MAAA,WAEP;0BACN4kB,IAAI,EAAEzD,aAAa,CAAEyC,KAAK,CAAClmB,IAAI,EAAEkmB,KAAK,CAACgB,IAAK,CAAC;0BAC7CZ,KAAK,EAAEJ,KAAK,CAACI,KAAK;0BAClBC,MAAM,EAAEL,KAAK,CAACK;wBACf,CAAC;sBAAA;wBAAA,OAAA60I,UAAA,CAAA94J,MAAA,WAIM,IAAI;sBAAA;sBAAA;wBAAA,OAAA84J,UAAA,CAAA91J,IAAA;oBAAA;kBAAA,GAAA21J,QAAA;gBAAA,CAMb;gBAAA,OAAAL,iBAAA,CAAAtwH,KAAA,OAAAJ,SAAA;cAAA;cA5BcowH,gBAAgB,YAAAe,mBAAAC,IAAA;gBAAA,OAAAV,iBAAA,CAAAtwH,KAAA,OAAAJ,SAAA;cAAA;cALzB0c,KAAK,GAAG,IAAI;cACZl/B,MAAM,GAAG,CAAC,CAAC;cAAA,MAkCZ8tG,IAAI,KAAKhzH,SAAS,IAAIgzH,IAAI,CAAC1xH,MAAM,GAAG,CAAC;gBAAAi3J,UAAA,CAAAl4J,IAAA;gBAAA;cAAA;cAEzCupJ,MAAM,GAAG,IAAIiF,WAAW,CAAE,IAAI,CAAC3E,OAAQ,CAAC;cACxCN,MAAM,CAACa,cAAc,CAAE,IAAI,CAACN,WAAY,CAAC;cAE/B5oJ,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG2lG,IAAI,CAAC1xH,MAAM;YAAA;cAAA,MAAEC,CAAC,GAAG8rB,EAAE;gBAAAkrI,UAAA,CAAAl4J,IAAA;gBAAA;cAAA;cAElCqjB,KAAK,GAAGsvG,IAAI,CAAEzxH,CAAC,CAAE;cACjB6jB,GAAG,GAAG1B,KAAK,CAAC0B,GAAG;cAAA,KAEhBC,KAAK,CAACC,OAAO,CAAEF,GAAI,CAAC;gBAAAmzI,UAAA,CAAAl4J,IAAA;gBAAA;cAAA;cAExB;cAEM03J,UAAU,GAAG,EAAE;cAEXx+H,CAAC,GAAG,CAAC,EAAEglB,EAAE,GAAGn5B,GAAG,CAAC9jB,MAAM;YAAA;cAAA,MAAEi4B,CAAC,GAAGglB,EAAE;gBAAAg6G,UAAA,CAAAl4J,IAAA;gBAAA;cAAA;cAEjC23J,UAAU,GAAG5yI,GAAG,CAAEmU,CAAC,CAAE;cAAAg/H,UAAA,CAAAl4J,IAAA;cAAA,OAEKy3J,gBAAgB,CAAEE,UAAW,CAAC;YAAA;cAAxDC,iBAAiB,GAAAM,UAAA,CAAA54J,IAAA;cAEvB,IAAKs4J,iBAAiB,KAAK,IAAI,EAAG;gBAEjC,IAAKA,iBAAiB,YAAY3zI,gBAAgB,EAAG;kBAEpDyzI,UAAU,CAACh3J,IAAI,CAAEk3J,iBAAkB,CAAC;gBAErC,CAAC,MAAM;kBAEN;;kBAEAF,UAAU,CAACh3J,IAAI,CAAE,IAAIsxH,WAAW,CAAE4lC,iBAAiB,CAACvzI,IAAI,EAAEuzI,iBAAiB,CAACn0I,KAAK,EAAEm0I,iBAAiB,CAACl0I,MAAO,CAAE,CAAC;gBAEhH;cAED;YAAC;cApBwCwV,CAAC,EAAG;cAAAg/H,UAAA,CAAAl4J,IAAA;cAAA;YAAA;cAwB9C6kB,MAAM,CAAExB,KAAK,CAACxQ,IAAI,CAAE,GAAG,IAAI0R,MAAM,CAAEmzI,UAAW,CAAC;cAACQ,UAAA,CAAAl4J,IAAA;cAAA;YAAA;cAAAk4J,UAAA,CAAAl4J,IAAA;cAAA,OAMhBy3J,gBAAgB,CAAEp0I,KAAK,CAAC0B,GAAI,CAAC;YAAA;cAAvD6yI,mBAAiB,GAAAM,UAAA,CAAA54J,IAAA;cACvBulB,MAAM,CAAExB,KAAK,CAACxQ,IAAI,CAAE,GAAG,IAAI0R,MAAM,CAAEqzI,mBAAkB,CAAC;YAAC;cA1Cd12J,CAAC,EAAG;cAAAg3J,UAAA,CAAAl4J,IAAA;cAAA;YAAA;cAAA,OAAAk4J,UAAA,CAAAz4J,MAAA,WAkDzColB,MAAM;YAAA;YAAA;cAAA,OAAAqzI,UAAA,CAAAz1J,IAAA;UAAA;QAAA,GAAAq1J,QAAA;MAAA,CAEb;MAAA,SAAAT,iBAAAqB,IAAA;QAAA,OAAAb,iBAAA,CAAApwH,KAAA,OAAAJ,SAAA;MAAA;MAAA,OAAAgwH,gBAAA;IAAA;EAAA;IAAAj8J,GAAA;IAAAE,KAAA,EAED,SAAAq7J,cAAehkC,IAAI,EAAE9tG,MAAM,EAAG;MAE7B,SAAS8zI,aAAaA,CAAEr9J,KAAK,EAAE6B,IAAI,EAAG;QAErC,IAAK,OAAO7B,KAAK,KAAK,QAAQ,EAAG,OAAOA,KAAK;QAE7Cub,OAAO,CAACC,IAAI,CAAE,sEAAsE,EAAExb,KAAM,CAAC;QAE7F,OAAO6B,IAAI,CAAE7B,KAAK,CAAE;MAErB;MAEA,IAAMqsB,QAAQ,GAAG,CAAC,CAAC;MAEnB,IAAKgrG,IAAI,KAAKhzH,SAAS,EAAG;QAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG2gH,IAAI,CAAC1xH,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAE/C,IAAMmjB,IAAI,GAAGsuG,IAAI,CAAEzxH,CAAC,CAAE;UAEtB,IAAKmjB,IAAI,CAAChB,KAAK,KAAK1jB,SAAS,EAAG;YAE/BkX,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAEuN,IAAI,CAACxR,IAAK,CAAC;UAE1E;UAEA,IAAKgS,MAAM,CAAER,IAAI,CAAChB,KAAK,CAAE,KAAK1jB,SAAS,EAAG;YAEzCkX,OAAO,CAACC,IAAI,CAAE,qCAAqC,EAAEuN,IAAI,CAAChB,KAAM,CAAC;UAElE;UAEA,IAAMmD,MAAM,GAAG3B,MAAM,CAAER,IAAI,CAAChB,KAAK,CAAE;UACnC,IAAMA,KAAK,GAAGmD,MAAM,CAACnC,IAAI;UAEzB,IAAIoG,OAAO;UAEX,IAAKzF,KAAK,CAACC,OAAO,CAAE5B,KAAM,CAAC,EAAG;YAE7BoH,OAAO,GAAG,IAAIwgC,WAAW,CAAC,CAAC;YAE3B,IAAK5nC,KAAK,CAACpiB,MAAM,KAAK,CAAC,EAAGwpB,OAAO,CAAC/C,WAAW,GAAG,IAAI;UAErD,CAAC,MAAM;YAEN,IAAKrE,KAAK,IAAIA,KAAK,CAACgB,IAAI,EAAG;cAE1BoG,OAAO,GAAG,IAAIunG,WAAW,CAAC,CAAC;YAE5B,CAAC,MAAM;cAENvnG,OAAO,GAAG,IAAInF,OAAO,CAAC,CAAC;YAExB;YAEA,IAAKjC,KAAK,EAAGoH,OAAO,CAAC/C,WAAW,GAAG,IAAI,CAAC,CAAC;UAE1C;;UAEA+C,OAAO,CAACjE,MAAM,GAAGA,MAAM;UAEvBiE,OAAO,CAAC5X,IAAI,GAAGwR,IAAI,CAACxR,IAAI;UAExB,IAAKwR,IAAI,CAAC7iB,IAAI,KAAK7B,SAAS,EAAG8qB,OAAO,CAACjpB,IAAI,GAAG6iB,IAAI,CAAC7iB,IAAI;UAEvD,IAAK6iB,IAAI,CAACuB,OAAO,KAAKjmB,SAAS,EAAG8qB,OAAO,CAAC7E,OAAO,GAAG+yI,aAAa,CAAEt0I,IAAI,CAACuB,OAAO,EAAEgzI,eAAgB,CAAC;UAClG,IAAKv0I,IAAI,CAACqC,OAAO,KAAK/mB,SAAS,EAAG8qB,OAAO,CAAC/D,OAAO,GAAGrC,IAAI,CAACqC,OAAO;UAEhE,IAAKrC,IAAI,CAAClJ,MAAM,KAAKxb,SAAS,EAAG8qB,OAAO,CAACtP,MAAM,CAACD,SAAS,CAAEmJ,IAAI,CAAClJ,MAAO,CAAC;UACxE,IAAKkJ,IAAI,CAACuC,MAAM,KAAKjnB,SAAS,EAAG8qB,OAAO,CAAC7D,MAAM,CAAC1L,SAAS,CAAEmJ,IAAI,CAACuC,MAAO,CAAC;UACxE,IAAKvC,IAAI,CAAC3I,MAAM,KAAK/b,SAAS,EAAG8qB,OAAO,CAAC/O,MAAM,CAACR,SAAS,CAAEmJ,IAAI,CAAC3I,MAAO,CAAC;UACxE,IAAK2I,IAAI,CAACxE,QAAQ,KAAKlgB,SAAS,EAAG8qB,OAAO,CAAC5K,QAAQ,GAAGwE,IAAI,CAACxE,QAAQ;UAEnE,IAAKwE,IAAI,CAACjoB,IAAI,KAAKuD,SAAS,EAAG;YAE9B8qB,OAAO,CAAC3E,KAAK,GAAG6yI,aAAa,CAAEt0I,IAAI,CAACjoB,IAAI,CAAE,CAAC,CAAE,EAAEy8J,gBAAiB,CAAC;YACjEpuI,OAAO,CAAC1E,KAAK,GAAG4yI,aAAa,CAAEt0I,IAAI,CAACjoB,IAAI,CAAE,CAAC,CAAE,EAAEy8J,gBAAiB,CAAC;UAElE;UAEA,IAAKx0I,IAAI,CAAC6B,MAAM,KAAKvmB,SAAS,EAAG8qB,OAAO,CAACvE,MAAM,GAAG7B,IAAI,CAAC6B,MAAM;UAC7D,IAAK7B,IAAI,CAACsC,cAAc,KAAKhnB,SAAS,EAAG8qB,OAAO,CAAC9D,cAAc,GAAGtC,IAAI,CAACsC,cAAc;UACrF,IAAKtC,IAAI,CAAClnB,IAAI,KAAKwC,SAAS,EAAG8qB,OAAO,CAACttB,IAAI,GAAGknB,IAAI,CAAClnB,IAAI;UACvD,IAAKknB,IAAI,CAAC5B,UAAU,KAAK9iB,SAAS,EAAG8qB,OAAO,CAAChI,UAAU,GAAG4B,IAAI,CAAC5B,UAAU;UACzE,IAAK4B,IAAI,CAAC2D,QAAQ,KAAKroB,SAAS,EAAG8qB,OAAO,CAACzC,QAAQ,GAAG3D,IAAI,CAAC2D,QAAQ,CAAC,CAAC;;UAErE,IAAK3D,IAAI,CAAC4B,SAAS,KAAKtmB,SAAS,EAAG8qB,OAAO,CAACxE,SAAS,GAAG0yI,aAAa,CAAEt0I,IAAI,CAAC4B,SAAS,EAAE6yI,cAAe,CAAC;UACvG,IAAKz0I,IAAI,CAAC2B,SAAS,KAAKrmB,SAAS,EAAG8qB,OAAO,CAACzE,SAAS,GAAG2yI,aAAa,CAAEt0I,IAAI,CAAC2B,SAAS,EAAE8yI,cAAe,CAAC;UACvG,IAAKz0I,IAAI,CAAC8B,UAAU,KAAKxmB,SAAS,EAAG8qB,OAAO,CAACtE,UAAU,GAAG9B,IAAI,CAAC8B,UAAU;UAEzE,IAAK9B,IAAI,CAAC2C,KAAK,KAAKrnB,SAAS,EAAG8qB,OAAO,CAACzD,KAAK,GAAG3C,IAAI,CAAC2C,KAAK;UAE1D,IAAK3C,IAAI,CAACyC,eAAe,KAAKnnB,SAAS,EAAG8qB,OAAO,CAAC3D,eAAe,GAAGzC,IAAI,CAACyC,eAAe;UACxF,IAAKzC,IAAI,CAAC0C,gBAAgB,KAAKpnB,SAAS,EAAG8qB,OAAO,CAAC1D,gBAAgB,GAAG1C,IAAI,CAAC0C,gBAAgB;UAC3F,IAAK1C,IAAI,CAAC4C,eAAe,KAAKtnB,SAAS,EAAG8qB,OAAO,CAACxD,eAAe,GAAG5C,IAAI,CAAC4C,eAAe;UACxF,IAAK5C,IAAI,CAACgmF,eAAe,KAAK1qG,SAAS,EAAG8qB,OAAO,CAAC4/E,eAAe,GAAGhmF,IAAI,CAACgmF,eAAe;UAExF,IAAKhmF,IAAI,CAAC6C,QAAQ,KAAKvnB,SAAS,EAAG8qB,OAAO,CAACvD,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;UAEnES,QAAQ,CAAEtD,IAAI,CAACxR,IAAI,CAAE,GAAG4X,OAAO;QAEhC;MAED;MAEA,OAAO9C,QAAQ;IAEhB;EAAC;IAAAvsB,GAAA;IAAAE,KAAA,EAED,SAAAu7J,YAAaxyI,IAAI,EAAE0kB,UAAU,EAAEC,SAAS,EAAErhB,QAAQ,EAAEqe,UAAU,EAAG;MAEhE,IAAI9jC,MAAM;MAEV,SAAS62J,WAAWA,CAAEv3J,IAAI,EAAG;QAE5B,IAAKunC,UAAU,CAAEvnC,IAAI,CAAE,KAAK7B,SAAS,EAAG;UAEvCkX,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAEtV,IAAK,CAAC;QAE/D;QAEA,OAAOunC,UAAU,CAAEvnC,IAAI,CAAE;MAE1B;MAEA,SAASw3J,WAAWA,CAAEx3J,IAAI,EAAG;QAE5B,IAAKA,IAAI,KAAK7B,SAAS,EAAG,OAAOA,SAAS;QAE1C,IAAKqlB,KAAK,CAACC,OAAO,CAAEzjB,IAAK,CAAC,EAAG;UAE5B,IAAMuQ,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI7Q,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGxQ,IAAI,CAACP,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;YAE/C,IAAM2R,IAAI,GAAGrR,IAAI,CAAEN,CAAC,CAAE;YAEtB,IAAK8nC,SAAS,CAAEn2B,IAAI,CAAE,KAAKlT,SAAS,EAAG;cAEtCkX,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAEjE,IAAK,CAAC;YAE/D;YAEAd,KAAK,CAACrR,IAAI,CAAEsoC,SAAS,CAAEn2B,IAAI,CAAG,CAAC;UAEhC;UAEA,OAAOd,KAAK;QAEb;QAEA,IAAKi3B,SAAS,CAAExnC,IAAI,CAAE,KAAK7B,SAAS,EAAG;UAEtCkX,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAEtV,IAAK,CAAC;QAE/D;QAEA,OAAOwnC,SAAS,CAAExnC,IAAI,CAAE;MAEzB;MAEA,SAAS0yJ,UAAUA,CAAErhJ,IAAI,EAAG;QAE3B,IAAK8U,QAAQ,CAAE9U,IAAI,CAAE,KAAKlT,SAAS,EAAG;UAErCkX,OAAO,CAACC,IAAI,CAAE,uCAAuC,EAAEjE,IAAK,CAAC;QAE9D;QAEA,OAAO8U,QAAQ,CAAE9U,IAAI,CAAE;MAExB;MAEA,IAAImkB,QAAQ,EAAEuT,QAAQ;MAEtB,QAASlmB,IAAI,CAAClnB,IAAI;QAEjB,KAAK,OAAO;UAEX+E,MAAM,GAAG,IAAIkrH,KAAK,CAAC,CAAC;UAEpB,IAAK/oG,IAAI,CAACslB,UAAU,KAAKhqC,SAAS,EAAG;YAEpC,IAAKgF,MAAM,CAACs0J,SAAS,CAAE50I,IAAI,CAACslB,UAAW,CAAC,EAAG;cAE1CznC,MAAM,CAACynC,UAAU,GAAG,IAAI6L,KAAK,CAAEnxB,IAAI,CAACslB,UAAW,CAAC;YAEjD,CAAC,MAAM;cAENznC,MAAM,CAACynC,UAAU,GAAGuqH,UAAU,CAAE7vI,IAAI,CAACslB,UAAW,CAAC;YAElD;UAED;UAEA,IAAKtlB,IAAI,CAACwlB,WAAW,KAAKlqC,SAAS,EAAG;YAErCuC,MAAM,CAAC2nC,WAAW,GAAGqqH,UAAU,CAAE7vI,IAAI,CAACwlB,WAAY,CAAC;UAEpD;UAEA,IAAKxlB,IAAI,CAAC4wB,GAAG,KAAKt1C,SAAS,EAAG;YAE7B,IAAK0kB,IAAI,CAAC4wB,GAAG,CAAC93C,IAAI,KAAK,KAAK,EAAG;cAE9B+E,MAAM,CAAC+yC,GAAG,GAAG,IAAIk4E,GAAG,CAAE9oG,IAAI,CAAC4wB,GAAG,CAACrzB,KAAK,EAAEyC,IAAI,CAAC4wB,GAAG,CAAC9S,IAAI,EAAE9d,IAAI,CAAC4wB,GAAG,CAAC7S,GAAI,CAAC;YAEpE,CAAC,MAAM,IAAK/d,IAAI,CAAC4wB,GAAG,CAAC93C,IAAI,KAAK,SAAS,EAAG;cAEzC+E,MAAM,CAAC+yC,GAAG,GAAG,IAAIi4E,OAAO,CAAE7oG,IAAI,CAAC4wB,GAAG,CAACrzB,KAAK,EAAEyC,IAAI,CAAC4wB,GAAG,CAAC+oE,OAAQ,CAAC;YAE7D;UAED;UAEA,IAAK35F,IAAI,CAAC+8C,oBAAoB,KAAKzhE,SAAS,EAAGuC,MAAM,CAACk/D,oBAAoB,GAAG/8C,IAAI,CAAC+8C,oBAAoB;UACtG,IAAK/8C,IAAI,CAAC68C,mBAAmB,KAAKvhE,SAAS,EAAGuC,MAAM,CAACg/D,mBAAmB,GAAG78C,IAAI,CAAC68C,mBAAmB;UAEnG;QAED,KAAK,mBAAmB;UAEvBh/D,MAAM,GAAG,IAAIulD,iBAAiB,CAAEpjC,IAAI,CAACujC,GAAG,EAAEvjC,IAAI,CAACwjC,MAAM,EAAExjC,IAAI,CAAC8d,IAAI,EAAE9d,IAAI,CAAC+d,GAAI,CAAC;UAE5E,IAAK/d,IAAI,CAAC4jC,KAAK,KAAKtoD,SAAS,EAAGuC,MAAM,CAAC+lD,KAAK,GAAG5jC,IAAI,CAAC4jC,KAAK;UACzD,IAAK5jC,IAAI,CAAC2jC,IAAI,KAAKroD,SAAS,EAAGuC,MAAM,CAAC8lD,IAAI,GAAG3jC,IAAI,CAAC2jC,IAAI;UACtD,IAAK3jC,IAAI,CAAC8jC,SAAS,KAAKxoD,SAAS,EAAGuC,MAAM,CAACimD,SAAS,GAAG9jC,IAAI,CAAC8jC,SAAS;UACrE,IAAK9jC,IAAI,CAAC+jC,UAAU,KAAKzoD,SAAS,EAAGuC,MAAM,CAACkmD,UAAU,GAAG/jC,IAAI,CAAC+jC,UAAU;UACxE,IAAK/jC,IAAI,CAAC6jC,IAAI,KAAKvoD,SAAS,EAAGuC,MAAM,CAACgmD,IAAI,GAAGptD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAE1G,IAAI,CAAC6jC,IAAK,CAAC;UAE3E;QAED,KAAK,oBAAoB;UAExBhmD,MAAM,GAAG,IAAIsrE,kBAAkB,CAAEnpD,IAAI,CAAC0d,IAAI,EAAE1d,IAAI,CAAC2d,KAAK,EAAE3d,IAAI,CAAC4d,GAAG,EAAE5d,IAAI,CAAC6d,MAAM,EAAE7d,IAAI,CAAC8d,IAAI,EAAE9d,IAAI,CAAC+d,GAAI,CAAC;UAEpG,IAAK/d,IAAI,CAAC2jC,IAAI,KAAKroD,SAAS,EAAGuC,MAAM,CAAC8lD,IAAI,GAAG3jC,IAAI,CAAC2jC,IAAI;UACtD,IAAK3jC,IAAI,CAAC6jC,IAAI,KAAKvoD,SAAS,EAAGuC,MAAM,CAACgmD,IAAI,GAAGptD,MAAM,CAACiwB,MAAM,CAAE,CAAC,CAAC,EAAE1G,IAAI,CAAC6jC,IAAK,CAAC;UAE3E;QAED,KAAK,cAAc;UAElBhmD,MAAM,GAAG,IAAIuwJ,YAAY,CAAEpuI,IAAI,CAACzC,KAAK,EAAEyC,IAAI,CAACkvE,SAAU,CAAC;UAEvD;QAED,KAAK,kBAAkB;UAEtBrxF,MAAM,GAAG,IAAImwJ,gBAAgB,CAAEhuI,IAAI,CAACzC,KAAK,EAAEyC,IAAI,CAACkvE,SAAU,CAAC;UAE3D;QAED,KAAK,YAAY;UAEhBrxF,MAAM,GAAG,IAAI0vJ,UAAU,CAAEvtI,IAAI,CAACzC,KAAK,EAAEyC,IAAI,CAACkvE,SAAS,EAAElvE,IAAI,CAACwiB,QAAQ,EAAExiB,IAAI,CAACk7C,KAAM,CAAC;UAEhF;QAED,KAAK,eAAe;UAEnBr9D,MAAM,GAAG,IAAI2wJ,aAAa,CAAExuI,IAAI,CAACzC,KAAK,EAAEyC,IAAI,CAACkvE,SAAS,EAAElvE,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAO,CAAC;UAEjF;QAED,KAAK,WAAW;UAEfxhB,MAAM,GAAG,IAAI6uJ,SAAS,CAAE1sI,IAAI,CAACzC,KAAK,EAAEyC,IAAI,CAACkvE,SAAS,EAAElvE,IAAI,CAACwiB,QAAQ,EAAExiB,IAAI,CAACpK,KAAK,EAAEoK,IAAI,CAAC6vE,QAAQ,EAAE7vE,IAAI,CAACk7C,KAAM,CAAC;UAE1G;QAED,KAAK,iBAAiB;UAErBr9D,MAAM,GAAG,IAAI2tJ,eAAe,CAAExrI,IAAI,CAACzC,KAAK,EAAEyC,IAAI,CAAC+7C,WAAW,EAAE/7C,IAAI,CAACkvE,SAAU,CAAC;UAE5E;QAED,KAAK,YAAY;UAEhBrxF,MAAM,GAAG,IAAIwxJ,UAAU,CAAC,CAAC,CAACzuG,QAAQ,CAAE5gC,IAAK,CAAC;UAE1C;QAED,KAAK,aAAa;UAEjB2S,QAAQ,GAAG+hI,WAAW,CAAE10I,IAAI,CAAC2S,QAAS,CAAC;UACtCuT,QAAQ,GAAGyuH,WAAW,CAAE30I,IAAI,CAACkmB,QAAS,CAAC;UAExCroC,MAAM,GAAG,IAAI2uH,WAAW,CAAE75F,QAAQ,EAAEuT,QAAS,CAAC;UAE9C,IAAKlmB,IAAI,CAAC+lB,QAAQ,KAAKzqC,SAAS,EAAGuC,MAAM,CAACkoC,QAAQ,GAAG/lB,IAAI,CAAC+lB,QAAQ;UAClE,IAAK/lB,IAAI,CAACgmB,UAAU,KAAK1qC,SAAS,EAAGuC,MAAM,CAACmoC,UAAU,CAACnvB,SAAS,CAAEmJ,IAAI,CAACgmB,UAAW,CAAC;UACnF,IAAKhmB,IAAI,CAACimB,QAAQ,KAAK3qC,SAAS,EAAGuC,MAAM,CAACooC,QAAQ,GAAGjmB,IAAI,CAACimB,QAAQ;UAElE;QAED,KAAK,MAAM;UAEVtT,QAAQ,GAAG+hI,WAAW,CAAE10I,IAAI,CAAC2S,QAAS,CAAC;UACvCuT,QAAQ,GAAGyuH,WAAW,CAAE30I,IAAI,CAACkmB,QAAS,CAAC;UAEvCroC,MAAM,GAAG,IAAI+/C,IAAI,CAAEjrB,QAAQ,EAAEuT,QAAS,CAAC;UAEvC;QAED,KAAK,eAAe;UAEnBvT,QAAQ,GAAG+hI,WAAW,CAAE10I,IAAI,CAAC2S,QAAS,CAAC;UACvCuT,QAAQ,GAAGyuH,WAAW,CAAE30I,IAAI,CAACkmB,QAAS,CAAC;UACvC,IAAM1d,KAAK,GAAGxI,IAAI,CAACwI,KAAK;UACxB,IAAMwc,cAAc,GAAGhlB,IAAI,CAACglB,cAAc;UAC1C,IAAMC,aAAa,GAAGjlB,IAAI,CAACilB,aAAa;UAExCpnC,MAAM,GAAG,IAAIsxH,aAAa,CAAEx8F,QAAQ,EAAEuT,QAAQ,EAAE1d,KAAM,CAAC;UACvD3qB,MAAM,CAACmnC,cAAc,GAAG,IAAIwpF,wBAAwB,CAAE,IAAI77G,YAAY,CAAEqyB,cAAc,CAACt3B,KAAM,CAAC,EAAE,EAAG,CAAC;UACpG,IAAKu3B,aAAa,KAAK3pC,SAAS,EAAGuC,MAAM,CAAConC,aAAa,GAAG,IAAIupF,wBAAwB,CAAE,IAAI77G,YAAY,CAAEsyB,aAAa,CAACv3B,KAAM,CAAC,EAAEu3B,aAAa,CAAC0P,QAAS,CAAC;UAEzJ;QAED,KAAK,KAAK;UAET92C,MAAM,GAAG,IAAIytH,GAAG,CAAC,CAAC;UAElB;QAED,KAAK,MAAM;UAEVztH,MAAM,GAAG,IAAI0yH,IAAI,CAAEmkC,WAAW,CAAE10I,IAAI,CAAC2S,QAAS,CAAC,EAAEgiI,WAAW,CAAE30I,IAAI,CAACkmB,QAAS,CAAE,CAAC;UAE/E;QAED,KAAK,UAAU;UAEdroC,MAAM,GAAG,IAAI6zH,QAAQ,CAAEgjC,WAAW,CAAE10I,IAAI,CAAC2S,QAAS,CAAC,EAAEgiI,WAAW,CAAE30I,IAAI,CAACkmB,QAAS,CAAE,CAAC;UAEnF;QAED,KAAK,cAAc;UAElBroC,MAAM,GAAG,IAAIyzH,YAAY,CAAEojC,WAAW,CAAE10I,IAAI,CAAC2S,QAAS,CAAC,EAAEgiI,WAAW,CAAE30I,IAAI,CAACkmB,QAAS,CAAE,CAAC;UAEvF;QAED,KAAK,YAAY;QACjB,KAAK,QAAQ;UAEZroC,MAAM,GAAG,IAAIw0H,MAAM,CAAEqiC,WAAW,CAAE10I,IAAI,CAAC2S,QAAS,CAAC,EAAEgiI,WAAW,CAAE30I,IAAI,CAACkmB,QAAS,CAAE,CAAC;UAEjF;QAED,KAAK,QAAQ;UAEZroC,MAAM,GAAG,IAAI+sH,MAAM,CAAE+pC,WAAW,CAAE30I,IAAI,CAACkmB,QAAS,CAAE,CAAC;UAEnD;QAED,KAAK,OAAO;UAEXroC,MAAM,GAAG,IAAIwxG,KAAK,CAAC,CAAC;UAEpB;QAED,KAAK,MAAM;UAEVxxG,MAAM,GAAG,IAAIyvH,IAAI,CAAC,CAAC;UAEnB;QAED;UAECzvH,MAAM,GAAG,IAAIyiC,QAAQ,CAAC,CAAC;MAEzB;MAEAziC,MAAM,CAAC2Q,IAAI,GAAGwR,IAAI,CAACxR,IAAI;MAEvB,IAAKwR,IAAI,CAAC7iB,IAAI,KAAK7B,SAAS,EAAGuC,MAAM,CAACV,IAAI,GAAG6iB,IAAI,CAAC7iB,IAAI;MAEtD,IAAK6iB,IAAI,CAAC9D,MAAM,KAAK5gB,SAAS,EAAG;QAEhCuC,MAAM,CAACqe,MAAM,CAACrF,SAAS,CAAEmJ,IAAI,CAAC9D,MAAO,CAAC;QAEtC,IAAK8D,IAAI,CAACwC,gBAAgB,KAAKlnB,SAAS,EAAGuC,MAAM,CAAC2kB,gBAAgB,GAAGxC,IAAI,CAACwC,gBAAgB;QAC1F,IAAK3kB,MAAM,CAAC2kB,gBAAgB,EAAG3kB,MAAM,CAACqe,MAAM,CAACkhB,SAAS,CAAEv/B,MAAM,CAACg1B,QAAQ,EAAEh1B,MAAM,CAACurB,UAAU,EAAEvrB,MAAM,CAAC8d,KAAM,CAAC;MAE3G,CAAC,MAAM;QAEN,IAAKqE,IAAI,CAAC6S,QAAQ,KAAKv3B,SAAS,EAAGuC,MAAM,CAACg1B,QAAQ,CAAChc,SAAS,CAAEmJ,IAAI,CAAC6S,QAAS,CAAC;QAC7E,IAAK7S,IAAI,CAACxE,QAAQ,KAAKlgB,SAAS,EAAGuC,MAAM,CAAC2d,QAAQ,CAAC3E,SAAS,CAAEmJ,IAAI,CAACxE,QAAS,CAAC;QAC7E,IAAKwE,IAAI,CAACoJ,UAAU,KAAK9tB,SAAS,EAAGuC,MAAM,CAACurB,UAAU,CAACvS,SAAS,CAAEmJ,IAAI,CAACoJ,UAAW,CAAC;QACnF,IAAKpJ,IAAI,CAACrE,KAAK,KAAKrgB,SAAS,EAAGuC,MAAM,CAAC8d,KAAK,CAAC9E,SAAS,CAAEmJ,IAAI,CAACrE,KAAM,CAAC;MAErE;MAEA,IAAKqE,IAAI,CAACkb,EAAE,KAAK5/B,SAAS,EAAGuC,MAAM,CAACq9B,EAAE,CAACrkB,SAAS,CAAEmJ,IAAI,CAACkb,EAAG,CAAC;MAE3D,IAAKlb,IAAI,CAACuhB,UAAU,KAAKjmC,SAAS,EAAGuC,MAAM,CAAC0jC,UAAU,GAAGvhB,IAAI,CAACuhB,UAAU;MACxE,IAAKvhB,IAAI,CAACwhB,aAAa,KAAKlmC,SAAS,EAAGuC,MAAM,CAAC2jC,aAAa,GAAGxhB,IAAI,CAACwhB,aAAa;MAEjF,IAAKxhB,IAAI,CAACw9C,MAAM,EAAG;QAElB,IAAKx9C,IAAI,CAACw9C,MAAM,CAACiyB,IAAI,KAAKn0F,SAAS,EAAGuC,MAAM,CAAC2/D,MAAM,CAACiyB,IAAI,GAAGzvE,IAAI,CAACw9C,MAAM,CAACiyB,IAAI;QAC3E,IAAKzvE,IAAI,CAACw9C,MAAM,CAACkyB,UAAU,KAAKp0F,SAAS,EAAGuC,MAAM,CAAC2/D,MAAM,CAACkyB,UAAU,GAAG1vE,IAAI,CAACw9C,MAAM,CAACkyB,UAAU;QAC7F,IAAK1vE,IAAI,CAACw9C,MAAM,CAACvtC,MAAM,KAAK30B,SAAS,EAAGuC,MAAM,CAAC2/D,MAAM,CAACvtC,MAAM,GAAGjQ,IAAI,CAACw9C,MAAM,CAACvtC,MAAM;QACjF,IAAKjQ,IAAI,CAACw9C,MAAM,CAACmyB,OAAO,KAAKr0F,SAAS,EAAGuC,MAAM,CAAC2/D,MAAM,CAACmyB,OAAO,CAAC94E,SAAS,CAAEmJ,IAAI,CAACw9C,MAAM,CAACmyB,OAAQ,CAAC;QAC/F,IAAK3vE,IAAI,CAACw9C,MAAM,CAAC9uC,MAAM,KAAKpzB,SAAS,EAAGuC,MAAM,CAAC2/D,MAAM,CAAC9uC,MAAM,GAAG,IAAI,CAAC8jI,WAAW,CAAExyI,IAAI,CAACw9C,MAAM,CAAC9uC,MAAO,CAAC;MAEtG;MAEA,IAAK1O,IAAI,CAACshB,OAAO,KAAKhmC,SAAS,EAAGuC,MAAM,CAACyjC,OAAO,GAAGthB,IAAI,CAACshB,OAAO;MAC/D,IAAKthB,IAAI,CAACyhB,aAAa,KAAKnmC,SAAS,EAAGuC,MAAM,CAAC4jC,aAAa,GAAGzhB,IAAI,CAACyhB,aAAa;MACjF,IAAKzhB,IAAI,CAAC0hB,WAAW,KAAKpmC,SAAS,EAAGuC,MAAM,CAAC6jC,WAAW,GAAG1hB,IAAI,CAAC0hB,WAAW;MAC3E,IAAK1hB,IAAI,CAAC6C,QAAQ,KAAKvnB,SAAS,EAAGuC,MAAM,CAACglB,QAAQ,GAAG7C,IAAI,CAAC6C,QAAQ;MAClE,IAAK7C,IAAI,CAACuf,MAAM,KAAKjkC,SAAS,EAAGuC,MAAM,CAAC0hC,MAAM,CAACN,IAAI,GAAGjf,IAAI,CAACuf,MAAM;MAEjE,IAAKvf,IAAI,CAAC8S,QAAQ,KAAKx3B,SAAS,EAAG;QAElC,IAAMw3B,QAAQ,GAAG9S,IAAI,CAAC8S,QAAQ;QAE9B,KAAM,IAAIj2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi2B,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE5CgB,MAAM,CAACqW,GAAG,CAAE,IAAI,CAACs+I,WAAW,CAAE1/H,QAAQ,CAAEj2B,CAAC,CAAE,EAAE6nC,UAAU,EAAEC,SAAS,EAAErhB,QAAQ,EAAEqe,UAAW,CAAE,CAAC;QAE7F;MAED;MAEA,IAAK3hB,IAAI,CAAC2hB,UAAU,KAAKrmC,SAAS,EAAG;QAEpC,IAAMu5J,gBAAgB,GAAG70I,IAAI,CAAC2hB,UAAU;QAExC,KAAM,IAAI9kC,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGg4J,gBAAgB,CAACj4J,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEpD,IAAM2R,IAAI,GAAGqmJ,gBAAgB,CAAEh4J,IAAC,CAAE;UAElCgB,MAAM,CAAC8jC,UAAU,CAACtlC,IAAI,CAAEslC,UAAU,CAAEnzB,IAAI,CAAG,CAAC;QAE7C;MAED;MAEA,IAAKwR,IAAI,CAAClnB,IAAI,KAAK,KAAK,EAAG;QAE1B,IAAKknB,IAAI,CAACizE,UAAU,KAAK33F,SAAS,EAAGuC,MAAM,CAACo1F,UAAU,GAAGjzE,IAAI,CAACizE,UAAU;QAExE,IAAMsU,MAAM,GAAGvnF,IAAI,CAACunF,MAAM;QAE1B,KAAM,IAAI55F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG45F,MAAM,CAAC3qG,MAAM,EAAE+Q,CAAC,EAAG,EAAG;UAE1C,IAAMq2F,KAAK,GAAGuD,MAAM,CAAE55F,CAAC,CAAE;UACzB,IAAMg2B,KAAK,GAAG9lC,MAAM,CAAC4lC,mBAAmB,CAAE,MAAM,EAAEugE,KAAK,CAACnmG,MAAO,CAAC;UAEhE,IAAK8lC,KAAK,KAAKroC,SAAS,EAAG;YAE1BuC,MAAM,CAAC8tH,QAAQ,CAAEhoF,KAAK,EAAEqgE,KAAK,CAACxhE,QAAQ,EAAEwhE,KAAK,CAAC4nB,UAAW,CAAC;UAE3D;QAED;MAED;MAEA,OAAO/tH,MAAM;IAEd;EAAC;IAAA9G,GAAA;IAAAE,KAAA,EAED,SAAAy7J,cAAe70J,MAAM,EAAEgnC,SAAS,EAAG;MAElC,IAAKpuC,MAAM,CAACkH,IAAI,CAAEknC,SAAU,CAAC,CAACjoC,MAAM,KAAK,CAAC,EAAG;MAE7CiB,MAAM,CAACsmC,QAAQ,CAAE,UAAWR,KAAK,EAAG;QAEnC,IAAKA,KAAK,CAACmC,aAAa,KAAK,IAAI,IAAInC,KAAK,CAACsC,QAAQ,KAAK3qC,SAAS,EAAG;UAEnE,IAAM2qC,QAAQ,GAAGpB,SAAS,CAAElB,KAAK,CAACsC,QAAQ,CAAE;UAE5C,IAAKA,QAAQ,KAAK3qC,SAAS,EAAG;YAE7BkX,OAAO,CAACC,IAAI,CAAE,kDAAkD,EAAEkxB,KAAK,CAACsC,QAAS,CAAC;UAEnF,CAAC,MAAM;YAENtC,KAAK,CAAC+3E,IAAI,CAAEz1E,QAAQ,EAAEtC,KAAK,CAACqC,UAAW,CAAC;UAEzC;QAED;MAED,CAAE,CAAC;IAEJ;EAAC;EAAA,OAAAwrH,YAAA;AAAA,EA1+ByBjM,MAAM;AAAAhvJ,OAAA,CAAAi7J,YAAA,GAAAA,YAAA;AA8+BjC,IAAM+C,eAAe,GAAG;EACvBlwJ,SAAS,EAAEA,SAAS;EACpBC,qBAAqB,EAAEA,qBAAqB;EAC5CC,qBAAqB,EAAEA,qBAAqB;EAC5CC,gCAAgC,EAAEA,gCAAgC;EAClEC,gCAAgC,EAAEA,gCAAgC;EAClEC,uBAAuB,EAAEA;AAC1B,CAAC;AAED,IAAM8vJ,gBAAgB,GAAG;EACxB7vJ,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,sBAAsB,EAAEA;AACzB,CAAC;AAED,IAAM4vJ,cAAc,GAAG;EACtB3vJ,aAAa,EAAEA,aAAa;EAC5BC,0BAA0B,EAAEA,0BAA0B;EACtDE,yBAAyB,EAAEA,yBAAyB;EACpDE,YAAY,EAAEA,YAAY;EAC1BC,yBAAyB,EAAEA,yBAAyB;EACpDE,wBAAwB,EAAEA;AAC3B,CAAC;AAAC,IAEIwvJ,iBAAiB,0BAAAC,SAAA;EAAA5zI,SAAA,CAAA2zI,iBAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAA3zI,YAAA,CAAAyzI,iBAAA;EAEtB,SAAAA,kBAAatP,OAAO,EAAG;IAAA,IAAAyP,QAAA;IAAA71J,eAAA,OAAA01J,iBAAA;IAEtBG,QAAA,GAAAD,SAAA,CAAAj8J,IAAA,OAAOysJ,OAAO;IAEdyP,QAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/B,IAAK,OAAOC,iBAAiB,KAAK,WAAW,EAAG;MAE/C3iJ,OAAO,CAACC,IAAI,CAAE,6DAA8D,CAAC;IAE9E;IAEA,IAAK,OAAO+0I,KAAK,KAAK,WAAW,EAAG;MAEnCh1I,OAAO,CAACC,IAAI,CAAE,iDAAkD,CAAC;IAElE;IAEAwiJ,QAAA,CAAKpvI,OAAO,GAAG;MAAEnD,gBAAgB,EAAE;IAAO,CAAC;IAAC,OAAAuyI,QAAA;EAE7C;EAACr1J,YAAA,CAAAk1J,iBAAA;IAAA/9J,GAAA;IAAAE,KAAA,EAED,SAAAm+J,WAAYvvI,OAAO,EAAG;MAErB,IAAI,CAACA,OAAO,GAAGA,OAAO;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA9uB,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAK1jI,GAAG,KAAKplB,SAAS,EAAGolB,GAAG,GAAG,EAAE;MAEjC,IAAK,IAAI,CAACm5D,IAAI,KAAKv+E,SAAS,EAAGolB,GAAG,GAAG,IAAI,CAACm5D,IAAI,GAAGn5D,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAAC8kI,OAAO,CAACV,UAAU,CAAEpkI,GAAI,CAAC;MAEpC,IAAMg/B,KAAK,GAAG,IAAI;MAElB,IAAMoN,MAAM,GAAGg3F,KAAK,CAACtwI,GAAG,CAAEkN,GAAI,CAAC;MAE/B,IAAKosC,MAAM,KAAKxxD,SAAS,EAAG;QAE3BokD,KAAK,CAAC8lG,OAAO,CAACb,SAAS,CAAEjkI,GAAI,CAAC;QAE9BsmI,UAAU,CAAE,YAAY;UAEvB,IAAK9C,MAAM,EAAGA,MAAM,CAAEp3F,MAAO,CAAC;UAE9BpN,KAAK,CAAC8lG,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;QAE7B,CAAC,EAAE,CAAE,CAAC;QAEN,OAAOosC,MAAM;MAEd;MAEA,IAAMuoG,YAAY,GAAG,CAAC,CAAC;MACvBA,YAAY,CAAChO,WAAW,GAAK,IAAI,CAAC5B,WAAW,KAAK,WAAW,GAAK,aAAa,GAAG,SAAS;MAC3F4P,YAAY,CAAClO,OAAO,GAAG,IAAI,CAACvB,aAAa;MAEzC4B,KAAK,CAAE9mI,GAAG,EAAE20I,YAAa,CAAC,CAAC/6J,IAAI,CAAE,UAAW+F,GAAG,EAAG;QAEjD,OAAOA,GAAG,CAACuoJ,IAAI,CAAC,CAAC;MAElB,CAAE,CAAC,CAACtuJ,IAAI,CAAE,UAAWsuJ,IAAI,EAAG;QAE3B,OAAOuM,iBAAiB,CAAEvM,IAAI,EAAEnyJ,MAAM,CAACiwB,MAAM,CAAEg5B,KAAK,CAAC75B,OAAO,EAAE;UAAEyvI,oBAAoB,EAAE;QAAO,CAAE,CAAE,CAAC;MAEnG,CAAE,CAAC,CAACh7J,IAAI,CAAE,UAAWi7J,WAAW,EAAG;QAElCzR,KAAK,CAAC5vI,GAAG,CAAEwM,GAAG,EAAE60I,WAAY,CAAC;QAE7B,IAAKrR,MAAM,EAAGA,MAAM,CAAEqR,WAAY,CAAC;QAEnC71G,KAAK,CAAC8lG,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;MAE7B,CAAE,CAAC,CAAC1hB,KAAK,CAAE,UAAW8V,CAAC,EAAG;QAEzB,IAAKsvI,OAAO,EAAGA,OAAO,CAAEtvI,CAAE,CAAC;QAE3B4qC,KAAK,CAAC8lG,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;QAC9Bg/B,KAAK,CAAC8lG,OAAO,CAACZ,OAAO,CAAElkI,GAAI,CAAC;MAE7B,CAAE,CAAC;MAEHg/B,KAAK,CAAC8lG,OAAO,CAACb,SAAS,CAAEjkI,GAAI,CAAC;IAE/B;EAAC;EAAA,OAAAo0I,iBAAA;AAAA,EA3F8BvP,MAAM;AAAAhvJ,OAAA,CAAAu+J,iBAAA,GAAAA,iBAAA;AA+FtC,IAAIU,QAAQ;AAAC,IAEPC,YAAY;EAAA,SAAAA,aAAA;IAAAr2J,eAAA,OAAAq2J,YAAA;EAAA;EAAA71J,YAAA,CAAA61J,YAAA;IAAA1+J,GAAA;IAAAE,KAAA,EAEjB,SAAAqoB,WAAA,EAAoB;MAEnB,IAAKk2I,QAAQ,KAAKl6J,SAAS,EAAG;QAE7Bk6J,QAAQ,GAAG,KAAME,MAAM,CAACD,YAAY,IAAIC,MAAM,CAACC,kBAAkB,EAAG,CAAC;MAEtE;MAEA,OAAOH,QAAQ;IAEhB;EAAC;IAAAz+J,GAAA;IAAAE,KAAA,EAED,SAAAm0D,WAAmBn0D,KAAK,EAAG;MAE1Bu+J,QAAQ,GAAGv+J,KAAK;IAEjB;EAAC;EAAA,OAAAw+J,YAAA;AAAA;AAAAl/J,OAAA,CAAAk/J,YAAA,GAAAA,YAAA;AAAA,IAIIG,WAAW,0BAAAC,SAAA;EAAA10I,SAAA,CAAAy0I,WAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAAz0I,YAAA,CAAAu0I,WAAA;EAEhB,SAAAA,YAAapQ,OAAO,EAAG;IAAApmJ,eAAA,OAAAw2J,WAAA;IAAA,OAAAE,SAAA,CAAA/8J,IAAA,OAEfysJ,OAAO;EAEf;EAAC5lJ,YAAA,CAAAg2J,WAAA;IAAA7+J,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,KAAMnlI,GAAG,EAAEwjI,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAM1kG,KAAK,GAAG,IAAI;MAElB,IAAMwlG,MAAM,GAAG,IAAI0B,UAAU,CAAE,IAAI,CAACpB,OAAQ,CAAC;MAC7CN,MAAM,CAACqE,eAAe,CAAE,aAAc,CAAC;MACvCrE,MAAM,CAACe,OAAO,CAAE,IAAI,CAACpsE,IAAK,CAAC;MAC3BqrE,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAc,CAAC;MAC7CV,MAAM,CAACc,kBAAkB,CAAE,IAAI,CAACN,eAAgB,CAAC;MACjDR,MAAM,CAACW,IAAI,CAAEnlI,GAAG,EAAE,UAAWlE,MAAM,EAAG;QAErC,IAAI;UAEH;UACA;UACA,IAAMu5I,UAAU,GAAGv5I,MAAM,CAACre,KAAK,CAAE,CAAE,CAAC;UAEpC,IAAM3F,OAAO,GAAGi9J,YAAY,CAACn2I,UAAU,CAAC,CAAC;UACzC9mB,OAAO,CAACw9J,eAAe,CAAED,UAAU,EAAE,UAAWE,WAAW,EAAG;YAE7D/R,MAAM,CAAE+R,WAAY,CAAC;UAEtB,CAAC,EAAEC,WAAY,CAAC;QAEjB,CAAC,CAAC,OAAQphJ,CAAC,EAAG;UAEbohJ,WAAW,CAAEphJ,CAAE,CAAC;QAEjB;MAED,CAAC,EAAEqvI,UAAU,EAAEC,OAAQ,CAAC;MAExB,SAAS8R,WAAWA,CAAEphJ,CAAC,EAAG;QAEzB,IAAKsvI,OAAO,EAAG;UAEdA,OAAO,CAAEtvI,CAAE,CAAC;QAEb,CAAC,MAAM;UAENtC,OAAO,CAAChY,KAAK,CAAEsa,CAAE,CAAC;QAEnB;QAEA4qC,KAAK,CAAC8lG,OAAO,CAACX,SAAS,CAAEnkI,GAAI,CAAC;MAE/B;IAED;EAAC;EAAA,OAAAk1I,WAAA;AAAA,EAxDwBrQ,MAAM;AAAAhvJ,OAAA,CAAAq/J,WAAA,GAAAA,WAAA;AAAA,IA4D1BO,oBAAoB,0BAAAC,WAAA;EAAAj1I,SAAA,CAAAg1I,oBAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAh1I,YAAA,CAAA80I,oBAAA;EAEzB,SAAAA,qBAAar6F,QAAQ,EAAEC,WAAW,EAAEmzB,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAonE,QAAA;IAAAl3J,eAAA,OAAA+2J,oBAAA;IAEnDG,QAAA,GAAAD,SAAA,CAAAt9J,IAAA,OAAOuC,SAAS,EAAE4zF,SAAS;IAE3BonE,QAAA,CAAKC,sBAAsB,GAAG,IAAI;IAElC,IAAMzjH,MAAM,GAAG,IAAI3B,KAAK,CAAC,CAAC,CAAC5+B,GAAG,CAAEupD,QAAS,CAAC;IAC1C,IAAM/oB,MAAM,GAAG,IAAI5B,KAAK,CAAC,CAAC,CAAC5+B,GAAG,CAAEwpD,WAAY,CAAC;IAE7C,IAAMy6F,GAAG,GAAG,IAAIhpI,OAAO,CAAEslB,MAAM,CAAC53B,CAAC,EAAE43B,MAAM,CAACz4B,CAAC,EAAEy4B,MAAM,CAACphC,CAAE,CAAC;IACvD,IAAM+kJ,MAAM,GAAG,IAAIjpI,OAAO,CAAEulB,MAAM,CAAC73B,CAAC,EAAE63B,MAAM,CAAC14B,CAAC,EAAE04B,MAAM,CAACrhC,CAAE,CAAC;;IAE1D;IACA,IAAM8mH,EAAE,GAAGzqH,IAAI,CAAC2H,IAAI,CAAE3H,IAAI,CAACC,EAAG,CAAC;IAC/B,IAAMyb,EAAE,GAAG+uG,EAAE,GAAGzqH,IAAI,CAAC2H,IAAI,CAAE,IAAK,CAAC;IAEjC4gJ,QAAA,CAAKjnE,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAACt7E,IAAI,CAAEwiJ,GAAI,CAAC,CAACtiJ,GAAG,CAAEuiJ,MAAO,CAAC,CAAC/hJ,cAAc,CAAE8jH,EAAG,CAAC;IACxE89B,QAAA,CAAKjnE,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAACt7E,IAAI,CAAEwiJ,GAAI,CAAC,CAACliJ,GAAG,CAAEmiJ,MAAO,CAAC,CAAC/hJ,cAAc,CAAE+U,EAAG,CAAC;IAAC,OAAA6sI,QAAA;EAE1E;EAAC,OAAA12J,YAAA,CAAAu2J,oBAAA;AAAA,EArBiC9G,UAAU;AAAA94J,OAAA,CAAA4/J,oBAAA,GAAAA,oBAAA;AAAA,IAyBvCO,iBAAiB,0BAAAC,YAAA;EAAAx1I,SAAA,CAAAu1I,iBAAA,EAAAC,YAAA;EAAA,IAAAC,SAAA,GAAAv1I,YAAA,CAAAq1I,iBAAA;EAEtB,SAAAA,kBAAan5I,KAAK,EAAE2xE,SAAS,GAAG,CAAC,EAAG;IAAA,IAAA2nE,QAAA;IAAAz3J,eAAA,OAAAs3J,iBAAA;IAEnCG,QAAA,GAAAD,SAAA,CAAA79J,IAAA,OAAOuC,SAAS,EAAE4zF,SAAS;IAE3B2nE,QAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/B,IAAMhkH,MAAM,GAAG,IAAI3B,KAAK,CAAC,CAAC,CAAC5+B,GAAG,CAAEgL,KAAM,CAAC;;IAEvC;IACAs5I,QAAA,CAAKxnE,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAAC/8E,GAAG,CAAEugC,MAAM,CAAC53B,CAAC,EAAE43B,MAAM,CAACz4B,CAAC,EAAEy4B,MAAM,CAACphC,CAAE,CAAC,CAACgD,cAAc,CAAE,CAAC,GAAG3G,IAAI,CAAC2H,IAAI,CAAE3H,IAAI,CAACC,EAAG,CAAE,CAAC;IAAC,OAAA6oJ,QAAA;EAE1G;EAAC,OAAAj3J,YAAA,CAAA82J,iBAAA;AAAA,EAb8BrH,UAAU;AAAA94J,OAAA,CAAAmgK,iBAAA,GAAAA,iBAAA;AAiB1C,IAAMK,SAAS,GAAG,aAAc,IAAI99H,OAAO,CAAC,CAAC;AAC7C,IAAM+9H,QAAQ,GAAG,aAAc,IAAI/9H,OAAO,CAAC,CAAC;AAC5C,IAAMg+H,iBAAiB,GAAG,aAAc,IAAIh+H,OAAO,CAAC,CAAC;AAAC,IAEhDi+H,YAAY;EAEjB,SAAAA,aAAA,EAAc;IAAA93J,eAAA,OAAA83J,YAAA;IAEb,IAAI,CAACp+J,IAAI,GAAG,cAAc;IAE1B,IAAI,CAAC0qD,MAAM,GAAG,CAAC;IAEf,IAAI,CAAC2zG,MAAM,GAAG,KAAK;IAEnB,IAAI,CAACpjD,OAAO,GAAG,IAAI3wD,iBAAiB,CAAC,CAAC;IACtC,IAAI,CAAC2wD,OAAO,CAACx0E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC/B,IAAI,CAAC60E,OAAO,CAACvxF,gBAAgB,GAAG,KAAK;IAErC,IAAI,CAACwxF,OAAO,GAAG,IAAI5wD,iBAAiB,CAAC,CAAC;IACtC,IAAI,CAAC4wD,OAAO,CAACz0E,MAAM,CAACL,MAAM,CAAE,CAAE,CAAC;IAC/B,IAAI,CAAC80E,OAAO,CAACxxF,gBAAgB,GAAG,KAAK;IAErC,IAAI,CAACzF,MAAM,GAAG;MACb6mC,KAAK,EAAE,IAAI;MACXL,GAAG,EAAE,IAAI;MACTC,MAAM,EAAE,IAAI;MACZ1lB,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,IAAI;MACT4lB,IAAI,EAAE,IAAI;MACVwzG,MAAM,EAAE;IACT,CAAC;EAEF;EAACv3J,YAAA,CAAAs3J,YAAA;IAAAngK,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAQmF,MAAM,EAAG;MAEhB,IAAM4X,KAAK,GAAG,IAAI,CAACvpB,MAAM;MAEzB,IAAMsG,WAAW,GAAGijB,KAAK,CAACsd,KAAK,KAAKl1B,MAAM,CAACk1B,KAAK,IAAItd,KAAK,CAACid,GAAG,KAAK70B,MAAM,CAAC60B,GAAG,IAC3Ejd,KAAK,CAACkd,MAAM,KAAK90B,MAAM,CAAC80B,MAAM,GAAG,IAAI,CAACA,MAAM,IAAIld,KAAK,CAACxI,IAAI,KAAKpP,MAAM,CAACoP,IAAI,IAC1EwI,KAAK,CAACvI,GAAG,KAAKrP,MAAM,CAACqP,GAAG,IAAIuI,KAAK,CAACqd,IAAI,KAAKj1B,MAAM,CAACi1B,IAAI,IAAIrd,KAAK,CAAC6wH,MAAM,KAAK,IAAI,CAACA,MAAM;MAEvF,IAAK9zI,WAAW,EAAG;QAElBijB,KAAK,CAACsd,KAAK,GAAGl1B,MAAM,CAACk1B,KAAK;QAC1Btd,KAAK,CAACid,GAAG,GAAG70B,MAAM,CAAC60B,GAAG;QACtBjd,KAAK,CAACkd,MAAM,GAAG90B,MAAM,CAAC80B,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1Cld,KAAK,CAACxI,IAAI,GAAGpP,MAAM,CAACoP,IAAI;QACxBwI,KAAK,CAACvI,GAAG,GAAGrP,MAAM,CAACqP,GAAG;QACtBuI,KAAK,CAACqd,IAAI,GAAGj1B,MAAM,CAACi1B,IAAI;QACxBrd,KAAK,CAAC6wH,MAAM,GAAG,IAAI,CAACA,MAAM;;QAE1B;QACA;;QAEAF,iBAAiB,CAACjjJ,IAAI,CAAE0a,MAAM,CAACE,gBAAiB,CAAC;QACjD,IAAMwoI,UAAU,GAAG9wH,KAAK,CAAC6wH,MAAM,GAAG,CAAC;QACnC,IAAME,kBAAkB,GAAGD,UAAU,GAAG9wH,KAAK,CAACxI,IAAI,GAAGwI,KAAK,CAACsd,KAAK;QAChE,IAAM0zG,IAAI,GAAKhxH,KAAK,CAACxI,IAAI,GAAG/vB,IAAI,CAACw2C,GAAG,CAAEz2C,OAAO,GAAGw4B,KAAK,CAACid,GAAG,GAAG,GAAI,CAAC,GAAKjd,KAAK,CAACqd,IAAI;QAChF,IAAI4zG,IAAI,EAAEC,IAAI;;QAEd;;QAEAR,QAAQ,CAACjiJ,QAAQ,CAAE,EAAE,CAAE,GAAG,CAAEqiJ,UAAU;QACtCL,SAAS,CAAChiJ,QAAQ,CAAE,EAAE,CAAE,GAAGqiJ,UAAU;;QAErC;;QAEAG,IAAI,GAAG,CAAED,IAAI,GAAGhxH,KAAK,CAACkd,MAAM,GAAG6zG,kBAAkB;QACjDG,IAAI,GAAGF,IAAI,GAAGhxH,KAAK,CAACkd,MAAM,GAAG6zG,kBAAkB;QAE/CJ,iBAAiB,CAACliJ,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGuxB,KAAK,CAACxI,IAAI,IAAK05H,IAAI,GAAGD,IAAI,CAAE;QAClEN,iBAAiB,CAACliJ,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAEyiJ,IAAI,GAAGD,IAAI,KAAOC,IAAI,GAAGD,IAAI,CAAE;QAEnE,IAAI,CAACxjD,OAAO,CAACnlF,gBAAgB,CAAC5a,IAAI,CAAEijJ,iBAAkB,CAAC;;QAEvD;;QAEAM,IAAI,GAAG,CAAED,IAAI,GAAGhxH,KAAK,CAACkd,MAAM,GAAG6zG,kBAAkB;QACjDG,IAAI,GAAGF,IAAI,GAAGhxH,KAAK,CAACkd,MAAM,GAAG6zG,kBAAkB;QAE/CJ,iBAAiB,CAACliJ,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGuxB,KAAK,CAACxI,IAAI,IAAK05H,IAAI,GAAGD,IAAI,CAAE;QAClEN,iBAAiB,CAACliJ,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAEyiJ,IAAI,GAAGD,IAAI,KAAOC,IAAI,GAAGD,IAAI,CAAE;QAEnE,IAAI,CAACvjD,OAAO,CAACplF,gBAAgB,CAAC5a,IAAI,CAAEijJ,iBAAkB,CAAC;MAExD;MAEA,IAAI,CAACljD,OAAO,CAAChlF,WAAW,CAAC/a,IAAI,CAAE0a,MAAM,CAACK,WAAY,CAAC,CAACta,QAAQ,CAAEuiJ,QAAS,CAAC;MACxE,IAAI,CAAChjD,OAAO,CAACjlF,WAAW,CAAC/a,IAAI,CAAE0a,MAAM,CAACK,WAAY,CAAC,CAACta,QAAQ,CAAEsiJ,SAAU,CAAC;IAE1E;EAAC;EAAA,OAAAG,YAAA;AAAA;AAAA3gK,OAAA,CAAA2gK,YAAA,GAAAA,YAAA;AAAA,IAIIO,KAAK;EAEV,SAAAA,MAAaC,SAAS,GAAG,IAAI,EAAG;IAAAt4J,eAAA,OAAAq4J,KAAA;IAE/B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAE1B,IAAI,CAACrY,SAAS,GAAG,CAAC;IAClB,IAAI,CAACsY,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,WAAW,GAAG,CAAC;IAEpB,IAAI,CAACC,OAAO,GAAG,KAAK;EAErB;EAACj4J,YAAA,CAAA63J,KAAA;IAAA1gK,GAAA;IAAAE,KAAA,EAED,SAAA4hD,MAAA,EAAQ;MAEP,IAAI,CAACwmG,SAAS,GAAGyY,GAAG,CAAC,CAAC;MAEtB,IAAI,CAACH,OAAO,GAAG,IAAI,CAACtY,SAAS;MAC7B,IAAI,CAACuY,WAAW,GAAG,CAAC;MACpB,IAAI,CAACC,OAAO,GAAG,IAAI;IAEpB;EAAC;IAAA9gK,GAAA;IAAAE,KAAA,EAED,SAAAmH,KAAA,EAAO;MAEN,IAAI,CAAC25J,cAAc,CAAC,CAAC;MACrB,IAAI,CAACF,OAAO,GAAG,KAAK;MACpB,IAAI,CAACH,SAAS,GAAG,KAAK;IAEvB;EAAC;IAAA3gK,GAAA;IAAAE,KAAA,EAED,SAAA8gK,eAAA,EAAiB;MAEhB,IAAI,CAACC,QAAQ,CAAC,CAAC;MACf,OAAO,IAAI,CAACJ,WAAW;IAExB;EAAC;IAAA7gK,GAAA;IAAAE,KAAA,EAED,SAAA+gK,SAAA,EAAW;MAEV,IAAIz6B,IAAI,GAAG,CAAC;MAEZ,IAAK,IAAI,CAACm6B,SAAS,IAAI,CAAE,IAAI,CAACG,OAAO,EAAG;QAEvC,IAAI,CAACh/G,KAAK,CAAC,CAAC;QACZ,OAAO,CAAC;MAET;MAEA,IAAK,IAAI,CAACg/G,OAAO,EAAG;QAEnB,IAAMI,OAAO,GAAGH,GAAG,CAAC,CAAC;QAErBv6B,IAAI,GAAG,CAAE06B,OAAO,GAAG,IAAI,CAACN,OAAO,IAAK,IAAI;QACxC,IAAI,CAACA,OAAO,GAAGM,OAAO;QAEtB,IAAI,CAACL,WAAW,IAAIr6B,IAAI;MAEzB;MAEA,OAAOA,IAAI;IAEZ;EAAC;EAAA,OAAAk6B,KAAA;AAAA;AAAAlhK,OAAA,CAAAkhK,KAAA,GAAAA,KAAA;AAIF,SAASK,GAAGA,CAAA,EAAG;EAEd,OAAO,CAAE,OAAOI,WAAW,KAAK,WAAW,GAAGC,IAAI,GAAGD,WAAW,EAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC;AAE3E;;AAEA,IAAMM,WAAW,GAAG,aAAc,IAAI5qI,OAAO,CAAC,CAAC;AAC/C,IAAM6qI,aAAa,GAAG,aAAc,IAAIzvI,UAAU,CAAC,CAAC;AACpD,IAAM0vI,QAAQ,GAAG,aAAc,IAAI9qI,OAAO,CAAC,CAAC;AAC5C,IAAM+qI,cAAc,GAAG,aAAc,IAAI/qI,OAAO,CAAC,CAAC;AAAC,IAE7CgrI,aAAa,0BAAAC,WAAA;EAAAt3I,SAAA,CAAAq3I,aAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAr3I,YAAA,CAAAm3I,aAAA;EAElB,SAAAA,cAAA,EAAc;IAAA,IAAAG,QAAA;IAAAv5J,eAAA,OAAAo5J,aAAA;IAEbG,QAAA,GAAAD,SAAA,CAAA3/J,IAAA;IAEA4/J,QAAA,CAAK7/J,IAAI,GAAG,eAAe;IAE3B6/J,QAAA,CAAKngK,OAAO,GAAGi9J,YAAY,CAACn2I,UAAU,CAAC,CAAC;IAExCq5I,QAAA,CAAKC,IAAI,GAAGD,QAAA,CAAKngK,OAAO,CAACqgK,UAAU,CAAC,CAAC;IACrCF,QAAA,CAAKC,IAAI,CAACnoD,OAAO,CAAEkoD,QAAA,CAAKngK,OAAO,CAACsgK,WAAY,CAAC;IAE7CH,QAAA,CAAKz7E,MAAM,GAAG,IAAI;IAElBy7E,QAAA,CAAKI,SAAS,GAAG,CAAC;;IAElB;;IAEAJ,QAAA,CAAKK,MAAM,GAAG,IAAIvB,KAAK,CAAC,CAAC;IAAC,OAAAkB,QAAA;EAE3B;EAAC/4J,YAAA,CAAA44J,aAAA;IAAAzhK,GAAA;IAAAE,KAAA,EAED,SAAAgiK,SAAA,EAAW;MAEV,OAAO,IAAI,CAACL,IAAI;IAEjB;EAAC;IAAA7hK,GAAA;IAAAE,KAAA,EAED,SAAAiiK,aAAA,EAAe;MAEd,IAAK,IAAI,CAACh8E,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAAC07E,IAAI,CAAC5nD,UAAU,CAAE,IAAI,CAAC9zB,MAAO,CAAC;QACnC,IAAI,CAACA,MAAM,CAAC8zB,UAAU,CAAE,IAAI,CAACx4G,OAAO,CAACsgK,WAAY,CAAC;QAClD,IAAI,CAACF,IAAI,CAACnoD,OAAO,CAAE,IAAI,CAACj4G,OAAO,CAACsgK,WAAY,CAAC;QAC7C,IAAI,CAAC57E,MAAM,GAAG,IAAI;MAEnB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAnmF,GAAA;IAAAE,KAAA,EAED,SAAAkiK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACj8E,MAAM;IAEnB;EAAC;IAAAnmF,GAAA;IAAAE,KAAA,EAED,SAAAmiK,UAAWniK,KAAK,EAAG;MAElB,IAAK,IAAI,CAACimF,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAAC07E,IAAI,CAAC5nD,UAAU,CAAE,IAAI,CAAC9zB,MAAO,CAAC;QACnC,IAAI,CAACA,MAAM,CAAC8zB,UAAU,CAAE,IAAI,CAACx4G,OAAO,CAACsgK,WAAY,CAAC;MAEnD,CAAC,MAAM;QAEN,IAAI,CAACF,IAAI,CAAC5nD,UAAU,CAAE,IAAI,CAACx4G,OAAO,CAACsgK,WAAY,CAAC;MAEjD;MAEA,IAAI,CAAC57E,MAAM,GAAGjmF,KAAK;MACnB,IAAI,CAAC2hK,IAAI,CAACnoD,OAAO,CAAE,IAAI,CAACvzB,MAAO,CAAC;MAChC,IAAI,CAACA,MAAM,CAACuzB,OAAO,CAAE,IAAI,CAACj4G,OAAO,CAACsgK,WAAY,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAA/hK,GAAA;IAAAE,KAAA,EAED,SAAAoiK,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAACT,IAAI,CAACA,IAAI,CAAC3hK,KAAK;IAE5B;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAqiK,gBAAiBriK,KAAK,EAAG;MAExB,IAAI,CAAC2hK,IAAI,CAACA,IAAI,CAACW,eAAe,CAAEtiK,KAAK,EAAE,IAAI,CAACuB,OAAO,CAACghK,WAAW,EAAE,IAAK,CAAC;MAEvE,OAAO,IAAI;IAEZ;EAAC;IAAAziK,GAAA;IAAAE,KAAA,EAED,SAAAqtC,kBAAmBC,KAAK,EAAG;MAE1BkP,IAAA,CAAAC,eAAA,CAAA8kH,aAAA,CAAA9hK,SAAA,8BAAAqC,IAAA,OAAyBwrC,KAAK;MAE9B,IAAMx3B,QAAQ,GAAG,IAAI,CAACvU,OAAO,CAACuU,QAAQ;MACtC,IAAMmuB,EAAE,GAAG,IAAI,CAACA,EAAE;MAElB,IAAI,CAAC69H,SAAS,GAAG,IAAI,CAACC,MAAM,CAAChB,QAAQ,CAAC,CAAC;MAEvC,IAAI,CAACjpI,WAAW,CAACqO,SAAS,CAAEg7H,WAAW,EAAEC,aAAa,EAAEC,QAAS,CAAC;MAElEC,cAAc,CAAChmJ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CAACsb,eAAe,CAAEwqI,aAAc,CAAC;MAEhE,IAAKtrJ,QAAQ,CAAC0sJ,SAAS,EAAG;QAEzB;;QAEA,IAAMna,OAAO,GAAG,IAAI,CAAC9mJ,OAAO,CAACghK,WAAW,GAAG,IAAI,CAACT,SAAS;QAEzDhsJ,QAAQ,CAAC0sJ,SAAS,CAACC,uBAAuB,CAAEtB,WAAW,CAACnpJ,CAAC,EAAEqwI,OAAQ,CAAC;QACpEvyI,QAAQ,CAAC4sJ,SAAS,CAACD,uBAAuB,CAAEtB,WAAW,CAAC7oJ,CAAC,EAAE+vI,OAAQ,CAAC;QACpEvyI,QAAQ,CAAC6sJ,SAAS,CAACF,uBAAuB,CAAEtB,WAAW,CAACt0I,CAAC,EAAEw7H,OAAQ,CAAC;QACpEvyI,QAAQ,CAAC8sJ,QAAQ,CAACH,uBAAuB,CAAEnB,cAAc,CAACtpJ,CAAC,EAAEqwI,OAAQ,CAAC;QACtEvyI,QAAQ,CAAC+sJ,QAAQ,CAACJ,uBAAuB,CAAEnB,cAAc,CAAChpJ,CAAC,EAAE+vI,OAAQ,CAAC;QACtEvyI,QAAQ,CAACgtJ,QAAQ,CAACL,uBAAuB,CAAEnB,cAAc,CAACz0I,CAAC,EAAEw7H,OAAQ,CAAC;QACtEvyI,QAAQ,CAACitJ,GAAG,CAACN,uBAAuB,CAAEx+H,EAAE,CAACjsB,CAAC,EAAEqwI,OAAQ,CAAC;QACrDvyI,QAAQ,CAACktJ,GAAG,CAACP,uBAAuB,CAAEx+H,EAAE,CAAC3rB,CAAC,EAAE+vI,OAAQ,CAAC;QACrDvyI,QAAQ,CAACmtJ,GAAG,CAACR,uBAAuB,CAAEx+H,EAAE,CAACpX,CAAC,EAAEw7H,OAAQ,CAAC;MAEtD,CAAC,MAAM;QAENvyI,QAAQ,CAACkvB,WAAW,CAAEm8H,WAAW,CAACnpJ,CAAC,EAAEmpJ,WAAW,CAAC7oJ,CAAC,EAAE6oJ,WAAW,CAACt0I,CAAE,CAAC;QACnE/W,QAAQ,CAACotJ,cAAc,CAAE5B,cAAc,CAACtpJ,CAAC,EAAEspJ,cAAc,CAAChpJ,CAAC,EAAEgpJ,cAAc,CAACz0I,CAAC,EAAEoX,EAAE,CAACjsB,CAAC,EAAEisB,EAAE,CAAC3rB,CAAC,EAAE2rB,EAAE,CAACpX,CAAE,CAAC;MAElG;IAED;EAAC;EAAA,OAAA00I,aAAA;AAAA,EAzH0Bl4H,QAAQ;AAAA/pC,OAAA,CAAAiiK,aAAA,GAAAA,aAAA;AAAA,IA6H9B4B,KAAK,0BAAAC,WAAA;EAAAl5I,SAAA,CAAAi5I,KAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAj5I,YAAA,CAAA+4I,KAAA;EAEV,SAAAA,MAAartJ,QAAQ,EAAG;IAAA,IAAAwtJ,QAAA;IAAAn7J,eAAA,OAAAg7J,KAAA;IAEvBG,QAAA,GAAAD,SAAA,CAAAvhK,IAAA;IAEAwhK,QAAA,CAAKzhK,IAAI,GAAG,OAAO;IAEnByhK,QAAA,CAAKxtJ,QAAQ,GAAGA,QAAQ;IACxBwtJ,QAAA,CAAK/hK,OAAO,GAAGuU,QAAQ,CAACvU,OAAO;IAE/B+hK,QAAA,CAAK3B,IAAI,GAAG2B,QAAA,CAAK/hK,OAAO,CAACqgK,UAAU,CAAC,CAAC;IACrC0B,QAAA,CAAK3B,IAAI,CAACnoD,OAAO,CAAE1jG,QAAQ,CAACksJ,QAAQ,CAAC,CAAE,CAAC;IAExCsB,QAAA,CAAKC,QAAQ,GAAG,KAAK;IAErBD,QAAA,CAAK/9I,MAAM,GAAG,IAAI;IAClB+9I,QAAA,CAAKE,MAAM,GAAG,CAAC;IACfF,QAAA,CAAKG,IAAI,GAAG,KAAK;IACjBH,QAAA,CAAKI,SAAS,GAAG,CAAC;IAClBJ,QAAA,CAAKK,OAAO,GAAG,CAAC;IAChBL,QAAA,CAAKzjJ,MAAM,GAAG,CAAC;IACfyjJ,QAAA,CAAK1Y,QAAQ,GAAGvmJ,SAAS;IACzBi/J,QAAA,CAAKM,YAAY,GAAG,CAAC;IACrBN,QAAA,CAAKO,SAAS,GAAG,KAAK;IACtBP,QAAA,CAAKQ,kBAAkB,GAAG,IAAI;IAC9BR,QAAA,CAAKp4I,MAAM,GAAG,IAAI;IAClBo4I,QAAA,CAAKS,UAAU,GAAG,OAAO;IAEzBT,QAAA,CAAKU,UAAU,GAAG,CAAC;IACnBV,QAAA,CAAKW,SAAS,GAAG,CAAC;IAClBX,QAAA,CAAKY,UAAU,GAAG,KAAK;IAEvBZ,QAAA,CAAKa,OAAO,GAAG,EAAE;IAAC,OAAAb,QAAA;EAEnB;EAAC36J,YAAA,CAAAw6J,KAAA;IAAArjK,GAAA;IAAAE,KAAA,EAED,SAAAokK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACzC,IAAI;IAEjB;EAAC;IAAA7hK,GAAA;IAAAE,KAAA,EAED,SAAAqkK,cAAeC,SAAS,EAAG;MAE1B,IAAI,CAACR,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,WAAW;MAC7B,IAAI,CAAC74I,MAAM,GAAGo5I,SAAS;MACvB,IAAI,CAAC9qD,OAAO,CAAC,CAAC;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAA15G,GAAA;IAAAE,KAAA,EAED,SAAAukK,sBAAuBC,YAAY,EAAG;MAErC,IAAI,CAACV,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,WAAW;MAC7B,IAAI,CAAC74I,MAAM,GAAG,IAAI,CAAC3pB,OAAO,CAACkjK,wBAAwB,CAAED,YAAa,CAAC;MACnE,IAAI,CAAChrD,OAAO,CAAC,CAAC;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAA15G,GAAA;IAAAE,KAAA,EAED,SAAA0kK,qBAAsBC,WAAW,EAAG;MAEnC,IAAI,CAACb,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,iBAAiB;MACnC,IAAI,CAAC74I,MAAM,GAAG,IAAI,CAAC3pB,OAAO,CAACqjK,uBAAuB,CAAED,WAAY,CAAC;MACjE,IAAI,CAACnrD,OAAO,CAAC,CAAC;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAA15G,GAAA;IAAAE,KAAA,EAED,SAAA6kK,UAAW7F,WAAW,EAAG;MAExB,IAAI,CAACz5I,MAAM,GAAGy5I,WAAW;MACzB,IAAI,CAAC+E,UAAU,GAAG,QAAQ;MAE1B,IAAK,IAAI,CAACR,QAAQ,EAAG,IAAI,CAACuB,IAAI,CAAC,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAhlK,GAAA;IAAAE,KAAA,EAED,SAAA8kK,KAAMC,KAAK,GAAG,CAAC,EAAG;MAEjB,IAAK,IAAI,CAAClB,SAAS,KAAK,IAAI,EAAG;QAE9BtoJ,OAAO,CAACC,IAAI,CAAE,wCAAyC,CAAC;QACxD;MAED;MAEA,IAAK,IAAI,CAACsoJ,kBAAkB,KAAK,KAAK,EAAG;QAExCvoJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAI,CAACwoJ,UAAU,GAAG,IAAI,CAACziK,OAAO,CAACghK,WAAW,GAAGwC,KAAK;MAElD,IAAM75I,MAAM,GAAG,IAAI,CAAC3pB,OAAO,CAACyjK,kBAAkB,CAAC,CAAC;MAChD95I,MAAM,CAAC3F,MAAM,GAAG,IAAI,CAACA,MAAM;MAC3B2F,MAAM,CAACu4I,IAAI,GAAG,IAAI,CAACA,IAAI;MACvBv4I,MAAM,CAACw4I,SAAS,GAAG,IAAI,CAACA,SAAS;MACjCx4I,MAAM,CAACy4I,OAAO,GAAG,IAAI,CAACA,OAAO;MAC7Bz4I,MAAM,CAAC+5I,OAAO,GAAG,IAAI,CAACC,OAAO,CAACzgD,IAAI,CAAE,IAAK,CAAC;MAC1Cv5F,MAAM,CAAC02B,KAAK,CAAE,IAAI,CAACoiH,UAAU,EAAE,IAAI,CAACC,SAAS,GAAG,IAAI,CAACpkJ,MAAM,EAAE,IAAI,CAAC+qI,QAAS,CAAC;MAE5E,IAAI,CAACiZ,SAAS,GAAG,IAAI;MAErB,IAAI,CAAC34I,MAAM,GAAGA,MAAM;MAEpB,IAAI,CAACi6I,SAAS,CAAE,IAAI,CAAC3B,MAAO,CAAC;MAC7B,IAAI,CAAC4B,eAAe,CAAE,IAAI,CAACxB,YAAa,CAAC;MAEzC,OAAO,IAAI,CAACpqD,OAAO,CAAC,CAAC;IAEtB;EAAC;IAAA15G,GAAA;IAAAE,KAAA,EAED,SAAAqlK,MAAA,EAAQ;MAEP,IAAK,IAAI,CAACvB,kBAAkB,KAAK,KAAK,EAAG;QAExCvoJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAK,IAAI,CAACqoJ,SAAS,KAAK,IAAI,EAAG;QAE9B;;QAEA,IAAI,CAACI,SAAS,IAAIntJ,IAAI,CAACa,GAAG,CAAE,IAAI,CAACpW,OAAO,CAACghK,WAAW,GAAG,IAAI,CAACyB,UAAU,EAAE,CAAE,CAAC,GAAG,IAAI,CAACJ,YAAY;QAE/F,IAAK,IAAI,CAACH,IAAI,KAAK,IAAI,EAAG;UAEzB;;UAEA,IAAI,CAACQ,SAAS,GAAG,IAAI,CAACA,SAAS,IAAK,IAAI,CAACrZ,QAAQ,IAAI,IAAI,CAACrlI,MAAM,CAACqlI,QAAQ,CAAE;QAE5E;QAEA,IAAI,CAAC1/H,MAAM,CAAC/jB,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC+jB,MAAM,CAAC+5I,OAAO,GAAG,IAAI;QAE1B,IAAI,CAACpB,SAAS,GAAG,KAAK;MAEvB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/jK,GAAA;IAAAE,KAAA,EAED,SAAAmH,KAAA,EAAO;MAEN,IAAK,IAAI,CAAC28J,kBAAkB,KAAK,KAAK,EAAG;QAExCvoJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAI,CAACyoJ,SAAS,GAAG,CAAC;MAElB,IAAK,IAAI,CAAC/4I,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACA,MAAM,CAAC/jB,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC+jB,MAAM,CAAC+5I,OAAO,GAAG,IAAI;MAE3B;MAEA,IAAI,CAACpB,SAAS,GAAG,KAAK;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA/jK,GAAA;IAAAE,KAAA,EAED,SAAAw5G,QAAA,EAAU;MAET,IAAK,IAAI,CAAC2qD,OAAO,CAACx+J,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACulB,MAAM,CAACsuF,OAAO,CAAE,IAAI,CAAC2qD,OAAO,CAAE,CAAC,CAAG,CAAC;QAExC,KAAM,IAAIv+J,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAACytJ,OAAO,CAACx+J,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAEvD,IAAI,CAACu+J,OAAO,CAAEv+J,CAAC,GAAG,CAAC,CAAE,CAAC4zG,OAAO,CAAE,IAAI,CAAC2qD,OAAO,CAAEv+J,CAAC,CAAG,CAAC;QAEnD;QAEA,IAAI,CAACu+J,OAAO,CAAE,IAAI,CAACA,OAAO,CAACx+J,MAAM,GAAG,CAAC,CAAE,CAAC6zG,OAAO,CAAE,IAAI,CAAC4qD,SAAS,CAAC,CAAE,CAAC;MAEpE,CAAC,MAAM;QAEN,IAAI,CAACl5I,MAAM,CAACsuF,OAAO,CAAE,IAAI,CAAC4qD,SAAS,CAAC,CAAE,CAAC;MAExC;MAEA,IAAI,CAACF,UAAU,GAAG,IAAI;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAApkK,GAAA;IAAAE,KAAA,EAED,SAAA+5G,WAAA,EAAa;MAEZ,IAAK,IAAI,CAACmqD,UAAU,KAAK,KAAK,EAAG;QAEhC;MAED;MAEA,IAAK,IAAI,CAACC,OAAO,CAACx+J,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAACulB,MAAM,CAAC6uF,UAAU,CAAE,IAAI,CAACoqD,OAAO,CAAE,CAAC,CAAG,CAAC;QAE3C,KAAM,IAAIv+J,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG,IAAI,CAACytJ,OAAO,CAACx+J,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAEvD,IAAI,CAACu+J,OAAO,CAAEv+J,CAAC,GAAG,CAAC,CAAE,CAACm0G,UAAU,CAAE,IAAI,CAACoqD,OAAO,CAAEv+J,CAAC,CAAG,CAAC;QAEtD;QAEA,IAAI,CAACu+J,OAAO,CAAE,IAAI,CAACA,OAAO,CAACx+J,MAAM,GAAG,CAAC,CAAE,CAACo0G,UAAU,CAAE,IAAI,CAACqqD,SAAS,CAAC,CAAE,CAAC;MAEvE,CAAC,MAAM;QAEN,IAAI,CAACl5I,MAAM,CAAC6uF,UAAU,CAAE,IAAI,CAACqqD,SAAS,CAAC,CAAE,CAAC;MAE3C;MAEA,IAAI,CAACF,UAAU,GAAG,KAAK;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAApkK,GAAA;IAAAE,KAAA,EAED,SAAAslK,WAAA,EAAa;MAEZ,OAAO,IAAI,CAACnB,OAAO;IAEpB;EAAC;IAAArkK,GAAA;IAAAE,KAAA,EAED,SAAAulK,WAAYvlK,KAAK,EAAG;MAEnB,IAAK,CAAEA,KAAK,EAAGA,KAAK,GAAG,EAAE;MAEzB,IAAK,IAAI,CAACkkK,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACnqD,UAAU,CAAC,CAAC;QACjB,IAAI,CAACoqD,OAAO,GAAGnkK,KAAK,CAACkH,KAAK,CAAC,CAAC;QAC5B,IAAI,CAACsyG,OAAO,CAAC,CAAC;MAEf,CAAC,MAAM;QAEN,IAAI,CAAC2qD,OAAO,GAAGnkK,KAAK,CAACkH,KAAK,CAAC,CAAC;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAApH,GAAA;IAAAE,KAAA,EAED,SAAAmlK,UAAWnlK,KAAK,EAAG;MAElB,IAAI,CAACwjK,MAAM,GAAGxjK,KAAK;MAEnB,IAAK,IAAI,CAACkrB,MAAM,CAACs4I,MAAM,KAAKn/J,SAAS,EAAG,OAAO,CAAC;;MAEhD,IAAK,IAAI,CAACw/J,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC34I,MAAM,CAACs4I,MAAM,CAAClB,eAAe,CAAE,IAAI,CAACkB,MAAM,EAAE,IAAI,CAACjiK,OAAO,CAACghK,WAAW,EAAE,IAAK,CAAC;MAElF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAziK,GAAA;IAAAE,KAAA,EAED,SAAAwlK,UAAA,EAAY;MAEX,OAAO,IAAI,CAAChC,MAAM;IAEnB;EAAC;IAAA1jK,GAAA;IAAAE,KAAA,EAED,SAAAkiK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACoD,UAAU,CAAC,CAAC,CAAE,CAAC,CAAE;IAE9B;EAAC;IAAAxlK,GAAA;IAAAE,KAAA,EAED,SAAAmiK,UAAWl8E,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACs/E,UAAU,CAAEt/E,MAAM,GAAG,CAAEA,MAAM,CAAE,GAAG,EAAG,CAAC;IAEnD;EAAC;IAAAnmF,GAAA;IAAAE,KAAA,EAED,SAAAolK,gBAAiBplK,KAAK,EAAG;MAExB,IAAK,IAAI,CAAC8jK,kBAAkB,KAAK,KAAK,EAAG;QAExCvoJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAI,CAACooJ,YAAY,GAAG5jK,KAAK;MAEzB,IAAK,IAAI,CAAC6jK,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC34I,MAAM,CAAC04I,YAAY,CAACtB,eAAe,CAAE,IAAI,CAACsB,YAAY,EAAE,IAAI,CAACriK,OAAO,CAACghK,WAAW,EAAE,IAAK,CAAC;MAE9F;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAziK,GAAA;IAAAE,KAAA,EAED,SAAAylK,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAAC7B,YAAY;IAEzB;EAAC;IAAA9jK,GAAA;IAAAE,KAAA,EAED,SAAAklK,QAAA,EAAU;MAET,IAAI,CAACrB,SAAS,GAAG,KAAK;IAEvB;EAAC;IAAA/jK,GAAA;IAAAE,KAAA,EAED,SAAA0lK,QAAA,EAAU;MAET,IAAK,IAAI,CAAC5B,kBAAkB,KAAK,KAAK,EAAG;QAExCvoJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE,OAAO,KAAK;MAEb;MAEA,OAAO,IAAI,CAACioJ,IAAI;IAEjB;EAAC;IAAA3jK,GAAA;IAAAE,KAAA,EAED,SAAA2lK,QAAS3lK,KAAK,EAAG;MAEhB,IAAK,IAAI,CAAC8jK,kBAAkB,KAAK,KAAK,EAAG;QAExCvoJ,OAAO,CAACC,IAAI,CAAE,kDAAmD,CAAC;QAClE;MAED;MAEA,IAAI,CAACioJ,IAAI,GAAGzjK,KAAK;MAEjB,IAAK,IAAI,CAAC6jK,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC34I,MAAM,CAACu4I,IAAI,GAAG,IAAI,CAACA,IAAI;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3jK,GAAA;IAAAE,KAAA,EAED,SAAA4lK,aAAc5lK,KAAK,EAAG;MAErB,IAAI,CAAC0jK,SAAS,GAAG1jK,KAAK;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA6lK,WAAY7lK,KAAK,EAAG;MAEnB,IAAI,CAAC2jK,OAAO,GAAG3jK,KAAK;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA8lK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACnE,IAAI,CAACA,IAAI,CAAC3hK,KAAK;IAE5B;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA+lK,UAAW/lK,KAAK,EAAG;MAElB,IAAI,CAAC2hK,IAAI,CAACA,IAAI,CAACW,eAAe,CAAEtiK,KAAK,EAAE,IAAI,CAACuB,OAAO,CAACghK,WAAW,EAAE,IAAK,CAAC;MAEvE,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAY,KAAA;AAAA,EA3YkB95H,QAAQ;AAAA/pC,OAAA,CAAA6jK,KAAA,GAAAA,KAAA;AA+Y5B,IAAM6C,SAAS,GAAG,aAAc,IAAIzvI,OAAO,CAAC,CAAC;AAC7C,IAAM0vI,WAAW,GAAG,aAAc,IAAIt0I,UAAU,CAAC,CAAC;AAClD,IAAMu0I,MAAM,GAAG,aAAc,IAAI3vI,OAAO,CAAC,CAAC;AAC1C,IAAM4vI,YAAY,GAAG,aAAc,IAAI5vI,OAAO,CAAC,CAAC;AAAC,IAE3C6vI,eAAe,0BAAAC,MAAA;EAAAn8I,SAAA,CAAAk8I,eAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAl8I,YAAA,CAAAg8I,eAAA;EAEpB,SAAAA,gBAAatwJ,QAAQ,EAAG;IAAA,IAAAywJ,QAAA;IAAAp+J,eAAA,OAAAi+J,eAAA;IAEvBG,QAAA,GAAAD,SAAA,CAAAxkK,IAAA,OAAOgU,QAAQ;IAEfywJ,QAAA,CAAKC,MAAM,GAAGD,QAAA,CAAKhlK,OAAO,CAACklK,YAAY,CAAC,CAAC;IACzCF,QAAA,CAAKC,MAAM,CAACE,YAAY,GAAG,MAAM;IACjCH,QAAA,CAAKC,MAAM,CAAChtD,OAAO,CAAE+sD,QAAA,CAAK5E,IAAK,CAAC;IAAC,OAAA4E,QAAA;EAElC;EAAC59J,YAAA,CAAAy9J,eAAA;IAAAtmK,GAAA;IAAAE,KAAA,EAED,SAAAw5G,QAAA,EAAU;MAETh9D,IAAA,CAAAC,eAAA,CAAA2pH,eAAA,CAAA3mK,SAAA,oBAAAqC,IAAA;MAEA,IAAI,CAAC0kK,MAAM,CAAChtD,OAAO,CAAE,IAAI,CAACmoD,IAAK,CAAC;IAEjC;EAAC;IAAA7hK,GAAA;IAAAE,KAAA,EAED,SAAA+5G,WAAA,EAAa;MAEZv9D,IAAA,CAAAC,eAAA,CAAA2pH,eAAA,CAAA3mK,SAAA,uBAAAqC,IAAA;MAEA,IAAI,CAAC0kK,MAAM,CAACzsD,UAAU,CAAE,IAAI,CAAC4nD,IAAK,CAAC;IAEpC;EAAC;IAAA7hK,GAAA;IAAAE,KAAA,EAED,SAAAokK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACoC,MAAM;IAEnB;EAAC;IAAA1mK,GAAA;IAAAE,KAAA,EAED,SAAA2mK,eAAA,EAAiB;MAEhB,OAAO,IAAI,CAACH,MAAM,CAACI,WAAW;IAE/B;EAAC;IAAA9mK,GAAA;IAAAE,KAAA,EAED,SAAA6mK,eAAgB7mK,KAAK,EAAG;MAEvB,IAAI,CAACwmK,MAAM,CAACI,WAAW,GAAG5mK,KAAK;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA8mK,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACN,MAAM,CAACO,aAAa;IAEjC;EAAC;IAAAjnK,GAAA;IAAAE,KAAA,EAED,SAAAgnK,iBAAkBhnK,KAAK,EAAG;MAEzB,IAAI,CAACwmK,MAAM,CAACO,aAAa,GAAG/mK,KAAK;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAinK,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACT,MAAM,CAACU,aAAa;IAEjC;EAAC;IAAApnK,GAAA;IAAAE,KAAA,EAED,SAAAmnK,iBAAkBnnK,KAAK,EAAG;MAEzB,IAAI,CAACwmK,MAAM,CAACU,aAAa,GAAGlnK,KAAK;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAonK,eAAA,EAAiB;MAEhB,OAAO,IAAI,CAACZ,MAAM,CAACa,WAAW;IAE/B;EAAC;IAAAvnK,GAAA;IAAAE,KAAA,EAED,SAAAsnK,eAAgBtnK,KAAK,EAAG;MAEvB,IAAI,CAACwmK,MAAM,CAACa,WAAW,GAAGrnK,KAAK;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAunK,mBAAoBC,cAAc,EAAEC,cAAc,EAAEC,aAAa,EAAG;MAEnE,IAAI,CAAClB,MAAM,CAACgB,cAAc,GAAGA,cAAc;MAC3C,IAAI,CAAChB,MAAM,CAACiB,cAAc,GAAGA,cAAc;MAC3C,IAAI,CAACjB,MAAM,CAACkB,aAAa,GAAGA,aAAa;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAA5nK,GAAA;IAAAE,KAAA,EAED,SAAAqtC,kBAAmBC,KAAK,EAAG;MAE1BkP,IAAA,CAAAC,eAAA,CAAA2pH,eAAA,CAAA3mK,SAAA,8BAAAqC,IAAA,OAAyBwrC,KAAK;MAE9B,IAAK,IAAI,CAACw2H,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAACD,SAAS,KAAK,KAAK,EAAG;MAEpE,IAAI,CAAC/rI,WAAW,CAACqO,SAAS,CAAE6/H,SAAS,EAAEC,WAAW,EAAEC,MAAO,CAAC;MAE5DC,YAAY,CAAC7qJ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAACsb,eAAe,CAAEqvI,WAAY,CAAC;MAE1D,IAAMO,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAChE,SAAS,EAAG;QAEvB;;QAEA,IAAMna,OAAO,GAAG,IAAI,CAAC9mJ,OAAO,CAACghK,WAAW,GAAG,IAAI,CAACzsJ,QAAQ,CAACgsJ,SAAS;QAElE0E,MAAM,CAAChE,SAAS,CAACC,uBAAuB,CAAEuD,SAAS,CAAChuJ,CAAC,EAAEqwI,OAAQ,CAAC;QAChEme,MAAM,CAAC9D,SAAS,CAACD,uBAAuB,CAAEuD,SAAS,CAAC1tJ,CAAC,EAAE+vI,OAAQ,CAAC;QAChEme,MAAM,CAAC7D,SAAS,CAACF,uBAAuB,CAAEuD,SAAS,CAACn5I,CAAC,EAAEw7H,OAAQ,CAAC;QAChEme,MAAM,CAACmB,YAAY,CAAClF,uBAAuB,CAAE0D,YAAY,CAACnuJ,CAAC,EAAEqwI,OAAQ,CAAC;QACtEme,MAAM,CAACoB,YAAY,CAACnF,uBAAuB,CAAE0D,YAAY,CAAC7tJ,CAAC,EAAE+vI,OAAQ,CAAC;QACtEme,MAAM,CAACqB,YAAY,CAACpF,uBAAuB,CAAE0D,YAAY,CAACt5I,CAAC,EAAEw7H,OAAQ,CAAC;MAEvE,CAAC,MAAM;QAENme,MAAM,CAACxhI,WAAW,CAAEghI,SAAS,CAAChuJ,CAAC,EAAEguJ,SAAS,CAAC1tJ,CAAC,EAAE0tJ,SAAS,CAACn5I,CAAE,CAAC;QAC3D25I,MAAM,CAACtD,cAAc,CAAEiD,YAAY,CAACnuJ,CAAC,EAAEmuJ,YAAY,CAAC7tJ,CAAC,EAAE6tJ,YAAY,CAACt5I,CAAE,CAAC;MAExE;IAED;EAAC;EAAA,OAAAu5I,eAAA;AAAA,EApI4BjD,KAAK;AAAA7jK,OAAA,CAAA8mK,eAAA,GAAAA,eAAA;AAAA,IAwI7B0B,aAAa;EAElB,SAAAA,cAAaC,KAAK,EAAEC,OAAO,GAAG,IAAI,EAAG;IAAA7/J,eAAA,OAAA2/J,aAAA;IAEpC,IAAI,CAACG,QAAQ,GAAGF,KAAK,CAACxmK,OAAO,CAAC2mK,cAAc,CAAC,CAAC;IAC9C,IAAI,CAACD,QAAQ,CAACD,OAAO,GAAGA,OAAO;IAE/B,IAAI,CAACj/I,IAAI,GAAG,IAAIlN,UAAU,CAAE,IAAI,CAACosJ,QAAQ,CAACE,iBAAkB,CAAC;IAE7DJ,KAAK,CAAC3D,SAAS,CAAC,CAAC,CAAC5qD,OAAO,CAAE,IAAI,CAACyuD,QAAS,CAAC;EAE3C;EAACt/J,YAAA,CAAAm/J,aAAA;IAAAhoK,GAAA;IAAAE,KAAA,EAGD,SAAAooK,iBAAA,EAAmB;MAElB,IAAI,CAACH,QAAQ,CAACI,oBAAoB,CAAE,IAAI,CAACt/I,IAAK,CAAC;MAE/C,OAAO,IAAI,CAACA,IAAI;IAEjB;EAAC;IAAAjpB,GAAA;IAAAE,KAAA,EAED,SAAAsoK,oBAAA,EAAsB;MAErB,IAAItoK,KAAK,GAAG,CAAC;MACb,IAAM+oB,IAAI,GAAG,IAAI,CAACq/I,gBAAgB,CAAC,CAAC;MAEpC,KAAM,IAAIxiK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmjB,IAAI,CAACpjB,MAAM,EAAEC,CAAC,EAAG,EAAG;QAExC5F,KAAK,IAAI+oB,IAAI,CAAEnjB,CAAC,CAAE;MAEnB;MAEA,OAAO5F,KAAK,GAAG+oB,IAAI,CAACpjB,MAAM;IAE3B;EAAC;EAAA,OAAAmiK,aAAA;AAAA;AAAAxoK,OAAA,CAAAwoK,aAAA,GAAAA,aAAA;AAAA,IAIIS,aAAa;EAElB,SAAAA,cAAaC,OAAO,EAAE5b,QAAQ,EAAE3K,SAAS,EAAG;IAAA95I,eAAA,OAAAogK,aAAA;IAE3C,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACvmB,SAAS,GAAGA,SAAS;IAE1B,IAAIwmB,WAAW,EACdC,mBAAmB,EACnBC,WAAW;;IAEZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,QAAS/b,QAAQ;MAEhB,KAAK,YAAY;QAChB6b,WAAW,GAAG,IAAI,CAACG,MAAM;QACzBF,mBAAmB,GAAG,IAAI,CAACG,cAAc;QACzCF,WAAW,GAAG,IAAI,CAACG,8BAA8B;QAEjD,IAAI,CAACvjJ,MAAM,GAAG,IAAIF,YAAY,CAAE48H,SAAS,GAAG,CAAE,CAAC;QAC/C,IAAI,CAAC8mB,UAAU,GAAG,CAAC;QACnB;MAED,KAAK,QAAQ;MACb,KAAK,MAAM;QACVN,WAAW,GAAG,IAAI,CAACO,OAAO;;QAE1B;QACA;QACAN,mBAAmB,GAAG,IAAI,CAACM,OAAO;QAElCL,WAAW,GAAG,IAAI,CAACM,yBAAyB;QAE5C,IAAI,CAAC1jJ,MAAM,GAAG,IAAImE,KAAK,CAAEu4H,SAAS,GAAG,CAAE,CAAC;QACxC;MAED;QACCwmB,WAAW,GAAG,IAAI,CAACS,KAAK;QACxBR,mBAAmB,GAAG,IAAI,CAACS,aAAa;QACxCR,WAAW,GAAG,IAAI,CAACS,2BAA2B;QAE9C,IAAI,CAAC7jJ,MAAM,GAAG,IAAIF,YAAY,CAAE48H,SAAS,GAAG,CAAE,CAAC;IAEjD;IAEA,IAAI,CAAConB,gBAAgB,GAAGZ,WAAW;IACnC,IAAI,CAACa,wBAAwB,GAAGZ,mBAAmB;IACnD,IAAI,CAACa,YAAY,GAAGZ,WAAW;IAC/B,IAAI,CAACa,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC;IAElB,IAAI,CAACC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;IAEjC,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,cAAc,GAAG,CAAC;EAExB;;EAEA;EAAAlhK,YAAA,CAAA4/J,aAAA;IAAAzoK,GAAA;IAAAE,KAAA,EACA,SAAA8pK,WAAYC,SAAS,EAAExyF,MAAM,EAAG;MAE/B;MACA;;MAEA,IAAMhyD,MAAM,GAAG,IAAI,CAACA,MAAM;QACzB6/B,MAAM,GAAG,IAAI,CAAC68F,SAAS;QACvBpiI,MAAM,GAAGkqJ,SAAS,GAAG3kH,MAAM,GAAGA,MAAM;MAErC,IAAI4kH,aAAa,GAAG,IAAI,CAACN,gBAAgB;MAEzC,IAAKM,aAAa,KAAK,CAAC,EAAG;QAE1B;;QAEA,KAAM,IAAIpkK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw/C,MAAM,EAAE,EAAGx/C,CAAC,EAAG;UAErC2f,MAAM,CAAE1F,MAAM,GAAGja,CAAC,CAAE,GAAG2f,MAAM,CAAE3f,CAAC,CAAE;QAEnC;QAEAokK,aAAa,GAAGzyF,MAAM;MAEvB,CAAC,MAAM;QAEN;;QAEAyyF,aAAa,IAAIzyF,MAAM;QACvB,IAAM0yF,GAAG,GAAG1yF,MAAM,GAAGyyF,aAAa;QAClC,IAAI,CAACX,gBAAgB,CAAE9jJ,MAAM,EAAE1F,MAAM,EAAE,CAAC,EAAEoqJ,GAAG,EAAE7kH,MAAO,CAAC;MAExD;MAEA,IAAI,CAACskH,gBAAgB,GAAGM,aAAa;IAEtC;;IAEA;EAAA;IAAAlqK,GAAA;IAAAE,KAAA,EACA,SAAAkqK,mBAAoB3yF,MAAM,EAAG;MAE5B,IAAMhyD,MAAM,GAAG,IAAI,CAACA,MAAM;QACzB6/B,MAAM,GAAG,IAAI,CAAC68F,SAAS;QACvBpiI,MAAM,GAAGulC,MAAM,GAAG,IAAI,CAACqkH,SAAS;MAEjC,IAAK,IAAI,CAACE,wBAAwB,KAAK,CAAC,EAAG;QAE1C;;QAEA,IAAI,CAACJ,YAAY,CAAC,CAAC;MAEpB;;MAEA;;MAEA,IAAI,CAACD,wBAAwB,CAAE/jJ,MAAM,EAAE1F,MAAM,EAAE,CAAC,EAAE03D,MAAM,EAAEnyB,MAAO,CAAC;MAClE,IAAI,CAACukH,wBAAwB,IAAIpyF,MAAM;IAExC;;IAEA;EAAA;IAAAz3E,GAAA;IAAAE,KAAA,EACA,SAAAmsC,MAAO49H,SAAS,EAAG;MAElB,IAAM3kH,MAAM,GAAG,IAAI,CAAC68F,SAAS;QAC5B18H,MAAM,GAAG,IAAI,CAACA,MAAM;QACpB1F,MAAM,GAAGkqJ,SAAS,GAAG3kH,MAAM,GAAGA,MAAM;QAEpCmyB,MAAM,GAAG,IAAI,CAACmyF,gBAAgB;QAC9BS,cAAc,GAAG,IAAI,CAACR,wBAAwB;QAE9CnB,OAAO,GAAG,IAAI,CAACA,OAAO;MAEvB,IAAI,CAACkB,gBAAgB,GAAG,CAAC;MACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;MAEjC,IAAKpyF,MAAM,GAAG,CAAC,EAAG;QAEjB;;QAEA,IAAM6yF,mBAAmB,GAAGhlH,MAAM,GAAG,IAAI,CAACokH,UAAU;QAEpD,IAAI,CAACH,gBAAgB,CACpB9jJ,MAAM,EAAE1F,MAAM,EAAEuqJ,mBAAmB,EAAE,CAAC,GAAG7yF,MAAM,EAAEnyB,MAAO,CAAC;MAE3D;MAEA,IAAK+kH,cAAc,GAAG,CAAC,EAAG;QAEzB;;QAEA,IAAI,CAACb,wBAAwB,CAAE/jJ,MAAM,EAAE1F,MAAM,EAAE,IAAI,CAAC4pJ,SAAS,GAAGrkH,MAAM,EAAE,CAAC,EAAEA,MAAO,CAAC;MAEpF;MAEA,KAAM,IAAIx/C,CAAC,GAAGw/C,MAAM,EAAEvnC,CAAC,GAAGunC,MAAM,GAAGA,MAAM,EAAEx/C,CAAC,KAAKiY,CAAC,EAAE,EAAGjY,CAAC,EAAG;QAE1D,IAAK2f,MAAM,CAAE3f,CAAC,CAAE,KAAK2f,MAAM,CAAE3f,CAAC,GAAGw/C,MAAM,CAAE,EAAG;UAE3C;;UAEAojH,OAAO,CAACzsF,QAAQ,CAAEx2D,MAAM,EAAE1F,MAAO,CAAC;UAClC;QAED;MAED;IAED;;IAEA;EAAA;IAAA/f,GAAA;IAAAE,KAAA,EACA,SAAAqqK,kBAAA,EAAoB;MAEnB,IAAM7B,OAAO,GAAG,IAAI,CAACA,OAAO;MAE5B,IAAMjjJ,MAAM,GAAG,IAAI,CAACA,MAAM;QACzB6/B,MAAM,GAAG,IAAI,CAAC68F,SAAS;QAEvBmoB,mBAAmB,GAAGhlH,MAAM,GAAG,IAAI,CAACokH,UAAU;MAE/ChB,OAAO,CAAC8B,QAAQ,CAAE/kJ,MAAM,EAAE6kJ,mBAAoB,CAAC;;MAE/C;MACA,KAAM,IAAIxkK,CAAC,GAAGw/C,MAAM,EAAEvnC,CAAC,GAAGusJ,mBAAmB,EAAExkK,CAAC,KAAKiY,CAAC,EAAE,EAAGjY,CAAC,EAAG;QAE9D2f,MAAM,CAAE3f,CAAC,CAAE,GAAG2f,MAAM,CAAE6kJ,mBAAmB,GAAKxkK,CAAC,GAAGw/C,MAAQ,CAAE;MAE7D;;MAEA;MACA,IAAI,CAACmkH,YAAY,CAAC,CAAC;MAEnB,IAAI,CAACG,gBAAgB,GAAG,CAAC;MACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;IAElC;;IAEA;EAAA;IAAA7pK,GAAA;IAAAE,KAAA,EACA,SAAAuqK,qBAAA,EAAuB;MAEtB,IAAMH,mBAAmB,GAAG,IAAI,CAACnoB,SAAS,GAAG,CAAC;MAC9C,IAAI,CAACumB,OAAO,CAACzsF,QAAQ,CAAE,IAAI,CAACx2D,MAAM,EAAE6kJ,mBAAoB,CAAC;IAE1D;EAAC;IAAAtqK,GAAA;IAAAE,KAAA,EAED,SAAAopK,4BAAA,EAA8B;MAE7B,IAAM5lB,UAAU,GAAG,IAAI,CAACimB,SAAS,GAAG,IAAI,CAACxnB,SAAS;MAClD,IAAMwB,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACvB,SAAS;MAE5C,KAAM,IAAIr8I,CAAC,GAAG49I,UAAU,EAAE59I,CAAC,GAAG69I,QAAQ,EAAE79I,CAAC,EAAG,EAAG;QAE9C,IAAI,CAAC2f,MAAM,CAAE3f,CAAC,CAAE,GAAG,CAAC;MAErB;IAED;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA8oK,+BAAA,EAAiC;MAEhC,IAAI,CAACM,2BAA2B,CAAC,CAAC;MAClC,IAAI,CAAC7jJ,MAAM,CAAE,IAAI,CAACkkJ,SAAS,GAAG,IAAI,CAACxnB,SAAS,GAAG,CAAC,CAAE,GAAG,CAAC;IAEvD;EAAC;IAAAniJ,GAAA;IAAAE,KAAA,EAED,SAAAipK,0BAAA,EAA4B;MAE3B,IAAMzlB,UAAU,GAAG,IAAI,CAACgmB,UAAU,GAAG,IAAI,CAACvnB,SAAS;MACnD,IAAMuoB,WAAW,GAAG,IAAI,CAACf,SAAS,GAAG,IAAI,CAACxnB,SAAS;MAEnD,KAAM,IAAIr8I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACq8I,SAAS,EAAEr8I,CAAC,EAAG,EAAG;QAE3C,IAAI,CAAC2f,MAAM,CAAEilJ,WAAW,GAAG5kK,CAAC,CAAE,GAAG,IAAI,CAAC2f,MAAM,CAAEi+H,UAAU,GAAG59I,CAAC,CAAE;MAE/D;IAED;;IAGA;EAAA;IAAA9F,GAAA;IAAAE,KAAA,EAEA,SAAAgpK,QAASzjJ,MAAM,EAAE8P,SAAS,EAAEgsH,SAAS,EAAE7oI,CAAC,EAAE4sC,MAAM,EAAG;MAElD,IAAK5sC,CAAC,IAAI,GAAG,EAAG;QAEf,KAAM,IAAI5S,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw/C,MAAM,EAAE,EAAGx/C,CAAC,EAAG;UAErC2f,MAAM,CAAE8P,SAAS,GAAGzvB,CAAC,CAAE,GAAG2f,MAAM,CAAE87H,SAAS,GAAGz7I,CAAC,CAAE;QAElD;MAED;IAED;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA4oK,OAAQrjJ,MAAM,EAAE8P,SAAS,EAAEgsH,SAAS,EAAE7oI,CAAC,EAAG;MAEzCmZ,UAAU,CAACwD,SAAS,CAAE5P,MAAM,EAAE8P,SAAS,EAAE9P,MAAM,EAAE8P,SAAS,EAAE9P,MAAM,EAAE87H,SAAS,EAAE7oI,CAAE,CAAC;IAEnF;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAA6oK,eAAgBtjJ,MAAM,EAAE8P,SAAS,EAAEgsH,SAAS,EAAE7oI,CAAC,EAAE4sC,MAAM,EAAG;MAEzD,IAAMqlH,UAAU,GAAG,IAAI,CAAC1B,UAAU,GAAG3jH,MAAM;;MAE3C;MACAzzB,UAAU,CAAC2E,uBAAuB,CAAE/Q,MAAM,EAAEklJ,UAAU,EAAEllJ,MAAM,EAAE8P,SAAS,EAAE9P,MAAM,EAAE87H,SAAU,CAAC;;MAE9F;MACA1vH,UAAU,CAACwD,SAAS,CAAE5P,MAAM,EAAE8P,SAAS,EAAE9P,MAAM,EAAE8P,SAAS,EAAE9P,MAAM,EAAEklJ,UAAU,EAAEjyJ,CAAE,CAAC;IAEpF;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAAkpK,MAAO3jJ,MAAM,EAAE8P,SAAS,EAAEgsH,SAAS,EAAE7oI,CAAC,EAAE4sC,MAAM,EAAG;MAEhD,IAAM3rC,CAAC,GAAG,CAAC,GAAGjB,CAAC;MAEf,KAAM,IAAI5S,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw/C,MAAM,EAAE,EAAGx/C,CAAC,EAAG;QAErC,IAAMg4B,CAAC,GAAGvI,SAAS,GAAGzvB,CAAC;QAEvB2f,MAAM,CAAEqY,CAAC,CAAE,GAAGrY,MAAM,CAAEqY,CAAC,CAAE,GAAGnkB,CAAC,GAAG8L,MAAM,CAAE87H,SAAS,GAAGz7I,CAAC,CAAE,GAAG4S,CAAC;MAE5D;IAED;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAAmpK,cAAe5jJ,MAAM,EAAE8P,SAAS,EAAEgsH,SAAS,EAAE7oI,CAAC,EAAE4sC,MAAM,EAAG;MAExD,KAAM,IAAIx/C,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw/C,MAAM,EAAE,EAAGx/C,CAAC,EAAG;QAErC,IAAMg4B,CAAC,GAAGvI,SAAS,GAAGzvB,CAAC;QAEvB2f,MAAM,CAAEqY,CAAC,CAAE,GAAGrY,MAAM,CAAEqY,CAAC,CAAE,GAAGrY,MAAM,CAAE87H,SAAS,GAAGz7I,CAAC,CAAE,GAAG4S,CAAC;MAExD;IAED;EAAC;EAAA,OAAA+vJ,aAAA;AAAA,KAIF;AAAAjpK,OAAA,CAAAipK,aAAA,GAAAA,aAAA;AACA,IAAMmC,kBAAkB,GAAG,eAAe;AAC1C,IAAMC,WAAW,GAAG,IAAIC,MAAM,CAAE,GAAG,GAAGF,kBAAkB,GAAG,GAAG,EAAE,GAAI,CAAC;;AAErE;AACA;AACA;AACA,IAAMG,SAAS,GAAG,IAAI,GAAGH,kBAAkB,GAAG,GAAG;AACjD,IAAMI,cAAc,GAAG,IAAI,GAAGJ,kBAAkB,CAAC1jF,OAAO,CAAE,KAAK,EAAE,EAAG,CAAC,GAAG,GAAG;;AAE3E;AACA;AACA,IAAM+jF,YAAY,GAAG,aAAc,kBAAiB,CAAC7/I,MAAM,CAAC87D,OAAO,CAAE,IAAI,EAAE6jF,SAAU,CAAC;;AAEtF;AACA,IAAMG,OAAO,GAAG,aAAc,WAAU,CAAC9/I,MAAM,CAAC87D,OAAO,CAAE,MAAM,EAAE8jF,cAAe,CAAC;;AAEjF;AACA;AACA,IAAMG,SAAS,GAAG,aAAc,4BAA2B,CAAC//I,MAAM,CAAC87D,OAAO,CAAE,IAAI,EAAE6jF,SAAU,CAAC;;AAE7F;AACA;AACA,IAAMK,WAAW,GAAG,aAAc,uBAAsB,CAAChgJ,MAAM,CAAC87D,OAAO,CAAE,IAAI,EAAE6jF,SAAU,CAAC;AAE1F,IAAMM,QAAQ,GAAG,IAAIP,MAAM,CAAE,EAAE,GAC5B,GAAG,GACHG,YAAY,GACZC,OAAO,GACPC,SAAS,GACTC,WAAW,GACX,GACH,CAAC;AAED,IAAME,qBAAqB,GAAG,CAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,CAAE;AAAC,IAEpEC,SAAS;EAEd,SAAAA,UAAaC,WAAW,EAAE1oF,IAAI,EAAE2oF,kBAAkB,EAAG;IAAApjK,eAAA,OAAAkjK,SAAA;IAEpD,IAAMG,UAAU,GAAGD,kBAAkB,IAAIE,eAAe,CAACC,cAAc,CAAE9oF,IAAK,CAAC;IAE/E,IAAI,CAAC+oF,YAAY,GAAGL,WAAW;IAC/B,IAAI,CAACM,SAAS,GAAGN,WAAW,CAACO,UAAU,CAAEjpF,IAAI,EAAE4oF,UAAW,CAAC;EAE5D;EAAC7iK,YAAA,CAAA0iK,SAAA;IAAAvrK,GAAA;IAAAE,KAAA,EAED,SAAAsqK,SAAU7zJ,KAAK,EAAEoJ,MAAM,EAAG;MAEzB,IAAI,CAAC4kG,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEb,IAAMqnD,eAAe,GAAG,IAAI,CAACH,YAAY,CAACI,eAAe;QACxDvD,OAAO,GAAG,IAAI,CAACoD,SAAS,CAAEE,eAAe,CAAE;;MAE5C;MACA,IAAKtD,OAAO,KAAKnkK,SAAS,EAAGmkK,OAAO,CAAC8B,QAAQ,CAAE7zJ,KAAK,EAAEoJ,MAAO,CAAC;IAE/D;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA+7E,SAAUtlE,KAAK,EAAEoJ,MAAM,EAAG;MAEzB,IAAMmsJ,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAIhmK,CAAC,GAAG,IAAI,CAAC+lK,YAAY,CAACI,eAAe,EAAEl0J,CAAC,GAAGm0J,QAAQ,CAACrmK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAErFomK,QAAQ,CAAEpmK,CAAC,CAAE,CAACm2E,QAAQ,CAAEtlE,KAAK,EAAEoJ,MAAO,CAAC;MAExC;IAED;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAAykH,KAAA,EAAO;MAEN,IAAMunD,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAIhmK,CAAC,GAAG,IAAI,CAAC+lK,YAAY,CAACI,eAAe,EAAEl0J,CAAC,GAAGm0J,QAAQ,CAACrmK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAErFomK,QAAQ,CAAEpmK,CAAC,CAAE,CAAC6+G,IAAI,CAAC,CAAC;MAErB;IAED;EAAC;IAAA3kH,GAAA;IAAAE,KAAA,EAED,SAAAisK,OAAA,EAAS;MAER,IAAMD,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAIhmK,CAAC,GAAG,IAAI,CAAC+lK,YAAY,CAACI,eAAe,EAAEl0J,CAAC,GAAGm0J,QAAQ,CAACrmK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAErFomK,QAAQ,CAAEpmK,CAAC,CAAE,CAACqmK,MAAM,CAAC,CAAC;MAEvB;IAED;EAAC;EAAA,OAAAZ,SAAA;AAAA,KAIF;AACA;AACA;AACA;AACA;AAAA,IACMI,eAAe;EAEpB,SAAAA,gBAAaS,QAAQ,EAAEtpF,IAAI,EAAE4oF,UAAU,EAAG;IAAArjK,eAAA,OAAAsjK,eAAA;IAEzC,IAAI,CAAC7oF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC4oF,UAAU,GAAGA,UAAU,IAAIC,eAAe,CAACC,cAAc,CAAE9oF,IAAK,CAAC;IAEtE,IAAI,CAACupF,IAAI,GAAGV,eAAe,CAACW,QAAQ,CAAEF,QAAQ,EAAE,IAAI,CAACV,UAAU,CAACa,QAAS,CAAC;IAE1E,IAAI,CAACH,QAAQ,GAAGA,QAAQ;;IAExB;IACA,IAAI,CAAC5B,QAAQ,GAAG,IAAI,CAACgC,iBAAiB;IACtC,IAAI,CAACvwF,QAAQ,GAAG,IAAI,CAACwwF,iBAAiB;EAEvC;EAAC5jK,YAAA,CAAA8iK,eAAA;IAAA3rK,GAAA;IAAAE,KAAA;IA0ID;IACA,SAAAwsK,sBAAA,EAAwB,CAAC;EAAC;IAAA1sK,GAAA;IAAAE,KAAA,EAC1B,SAAAysK,sBAAA,EAAwB,CAAC;;IAEzB;EAAA;IAAA3sK,GAAA;IAAAE,KAAA,EAEA,SAAA0sK,iBAAkBnnJ,MAAM,EAAE1F,MAAM,EAAG;MAElC0F,MAAM,CAAE1F,MAAM,CAAE,GAAG,IAAI,CAAC8sJ,YAAY,CAAE,IAAI,CAACzgB,YAAY,CAAE;IAE1D;EAAC;IAAApsJ,GAAA;IAAAE,KAAA,EAED,SAAA4sK,gBAAiBrnJ,MAAM,EAAE1F,MAAM,EAAG;MAEjC,IAAMqL,MAAM,GAAG,IAAI,CAAC2hJ,gBAAgB;MAEpC,KAAM,IAAIjnK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGqT,MAAM,CAACvlB,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEnD2f,MAAM,CAAE1F,MAAM,EAAG,CAAE,GAAGqL,MAAM,CAAEtlB,CAAC,CAAE;MAElC;IAED;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA8sK,uBAAwBvnJ,MAAM,EAAE1F,MAAM,EAAG;MAExC0F,MAAM,CAAE1F,MAAM,CAAE,GAAG,IAAI,CAACgtJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE;IAE/D;EAAC;IAAAjtK,GAAA;IAAAE,KAAA,EAED,SAAAgtK,kBAAmBznJ,MAAM,EAAE1F,MAAM,EAAG;MAEnC,IAAI,CAACgtJ,gBAAgB,CAAC/sJ,OAAO,CAAEyF,MAAM,EAAE1F,MAAO,CAAC;IAEhD;;IAEA;EAAA;IAAA/f,GAAA;IAAAE,KAAA,EAEA,SAAAitK,iBAAkB1nJ,MAAM,EAAE1F,MAAM,EAAG;MAElC,IAAI,CAAC8sJ,YAAY,CAAE,IAAI,CAACzgB,YAAY,CAAE,GAAG3mI,MAAM,CAAE1F,MAAM,CAAE;IAE1D;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAAktK,gCAAiC3nJ,MAAM,EAAE1F,MAAM,EAAG;MAEjD,IAAI,CAAC8sJ,YAAY,CAAE,IAAI,CAACzgB,YAAY,CAAE,GAAG3mI,MAAM,CAAE1F,MAAM,CAAE;MACzD,IAAI,CAAC8sJ,YAAY,CAACvgJ,WAAW,GAAG,IAAI;IAErC;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAAmtK,2CAA4C5nJ,MAAM,EAAE1F,MAAM,EAAG;MAE5D,IAAI,CAAC8sJ,YAAY,CAAE,IAAI,CAACzgB,YAAY,CAAE,GAAG3mI,MAAM,CAAE1F,MAAM,CAAE;MACzD,IAAI,CAAC8sJ,YAAY,CAACziI,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAApqC,GAAA;IAAAE,KAAA,EAEA,SAAAotK,gBAAiB7nJ,MAAM,EAAE1F,MAAM,EAAG;MAEjC,IAAMwtJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAIjnK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGw1J,IAAI,CAAC1nK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEjDynK,IAAI,CAAEznK,CAAC,CAAE,GAAG2f,MAAM,CAAE1F,MAAM,EAAG,CAAE;MAEhC;IAED;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAAstK,+BAAgC/nJ,MAAM,EAAE1F,MAAM,EAAG;MAEhD,IAAMwtJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAIjnK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGw1J,IAAI,CAAC1nK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEjDynK,IAAI,CAAEznK,CAAC,CAAE,GAAG2f,MAAM,CAAE1F,MAAM,EAAG,CAAE;MAEhC;MAEA,IAAI,CAAC8sJ,YAAY,CAACvgJ,WAAW,GAAG,IAAI;IAErC;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAAutK,0CAA2ChoJ,MAAM,EAAE1F,MAAM,EAAG;MAE3D,IAAMwtJ,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAIjnK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGw1J,IAAI,CAAC1nK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEjDynK,IAAI,CAAEznK,CAAC,CAAE,GAAG2f,MAAM,CAAE1F,MAAM,EAAG,CAAE;MAEhC;MAEA,IAAI,CAAC8sJ,YAAY,CAACziI,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAApqC,GAAA;IAAAE,KAAA,EAEA,SAAAwtK,uBAAwBjoJ,MAAM,EAAE1F,MAAM,EAAG;MAExC,IAAI,CAACgtJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGxnJ,MAAM,CAAE1F,MAAM,CAAE;IAE/D;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAAytK,sCAAuCloJ,MAAM,EAAE1F,MAAM,EAAG;MAEvD,IAAI,CAACgtJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGxnJ,MAAM,CAAE1F,MAAM,CAAE;MAC9D,IAAI,CAAC8sJ,YAAY,CAACvgJ,WAAW,GAAG,IAAI;IAErC;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAA0tK,iDAAkDnoJ,MAAM,EAAE1F,MAAM,EAAG;MAElE,IAAI,CAACgtJ,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAGxnJ,MAAM,CAAE1F,MAAM,CAAE;MAC9D,IAAI,CAAC8sJ,YAAY,CAACziI,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAApqC,GAAA;IAAAE,KAAA,EAEA,SAAA2tK,oBAAqBpoJ,MAAM,EAAE1F,MAAM,EAAG;MAErC,IAAI,CAACgtJ,gBAAgB,CAACjtJ,SAAS,CAAE2F,MAAM,EAAE1F,MAAO,CAAC;IAElD;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA4tK,mCAAoCroJ,MAAM,EAAE1F,MAAM,EAAG;MAEpD,IAAI,CAACgtJ,gBAAgB,CAACjtJ,SAAS,CAAE2F,MAAM,EAAE1F,MAAO,CAAC;MACjD,IAAI,CAAC8sJ,YAAY,CAACvgJ,WAAW,GAAG,IAAI;IAErC;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAA6tK,8CAA+CtoJ,MAAM,EAAE1F,MAAM,EAAG;MAE/D,IAAI,CAACgtJ,gBAAgB,CAACjtJ,SAAS,CAAE2F,MAAM,EAAE1F,MAAO,CAAC;MACjD,IAAI,CAAC8sJ,YAAY,CAACziI,sBAAsB,GAAG,IAAI;IAEhD;EAAC;IAAApqC,GAAA;IAAAE,KAAA,EAED,SAAAssK,kBAAmBwB,WAAW,EAAEjuJ,MAAM,EAAG;MAExC,IAAI,CAAC4kG,IAAI,CAAC,CAAC;MACX,IAAI,CAAC6lD,QAAQ,CAAEwD,WAAW,EAAEjuJ,MAAO,CAAC;IAErC;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAAusK,kBAAmBwB,WAAW,EAAEluJ,MAAM,EAAG;MAExC,IAAI,CAAC4kG,IAAI,CAAC,CAAC;MACX,IAAI,CAAC1oC,QAAQ,CAAEgyF,WAAW,EAAEluJ,MAAO,CAAC;IAErC;;IAEA;EAAA;IAAA/f,GAAA;IAAAE,KAAA,EACA,SAAAykH,KAAA,EAAO;MAEN,IAAIkoD,YAAY,GAAG,IAAI,CAACR,IAAI;MAC5B,IAAMX,UAAU,GAAG,IAAI,CAACA,UAAU;MAElC,IAAMwC,UAAU,GAAGxC,UAAU,CAACwC,UAAU;MACxC,IAAM9hB,YAAY,GAAGsf,UAAU,CAACtf,YAAY;MAC5C,IAAI6gB,aAAa,GAAGvB,UAAU,CAACuB,aAAa;MAE5C,IAAK,CAAEJ,YAAY,EAAG;QAErBA,YAAY,GAAGlB,eAAe,CAACW,QAAQ,CAAE,IAAI,CAACF,QAAQ,EAAEV,UAAU,CAACa,QAAS,CAAC;QAE7E,IAAI,CAACF,IAAI,GAAGQ,YAAY;MAEzB;;MAEA;MACA,IAAI,CAACrC,QAAQ,GAAG,IAAI,CAACkC,qBAAqB;MAC1C,IAAI,CAACzwF,QAAQ,GAAG,IAAI,CAAC0wF,qBAAqB;;MAE1C;MACA,IAAK,CAAEE,YAAY,EAAG;QAErBpxJ,OAAO,CAACC,IAAI,CAAE,yDAAyD,GAAG,IAAI,CAAConE,IAAI,GAAG,GAAI,CAAC;QAC3F;MAED;MAEA,IAAKorF,UAAU,EAAG;QAEjB,IAAIC,WAAW,GAAGzC,UAAU,CAACyC,WAAW;;QAExC;QACA,QAASD,UAAU;UAElB,KAAK,WAAW;YAEf,IAAK,CAAErB,YAAY,CAAC19H,QAAQ,EAAG;cAE9B1zB,OAAO,CAAChY,KAAK,CAAE,mFAAmF,EAAE,IAAK,CAAC;cAC1G;YAED;YAEA,IAAK,CAAEopK,YAAY,CAAC19H,QAAQ,CAACvB,SAAS,EAAG;cAExCnyB,OAAO,CAAChY,KAAK,CAAE,6GAA6G,EAAE,IAAK,CAAC;cACpI;YAED;YAEAopK,YAAY,GAAGA,YAAY,CAAC19H,QAAQ,CAACvB,SAAS;YAE9C;UAED,KAAK,OAAO;YAEX,IAAK,CAAEi/H,YAAY,CAAC39H,QAAQ,EAAG;cAE9BzzB,OAAO,CAAChY,KAAK,CAAE,gFAAgF,EAAE,IAAK,CAAC;cACvG;YAED;;YAEA;YACA;;YAEAopK,YAAY,GAAGA,YAAY,CAAC39H,QAAQ,CAACknF,KAAK;;YAE1C;YACA,KAAM,IAAItwH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+mK,YAAY,CAAChnK,MAAM,EAAEC,CAAC,EAAG,EAAG;cAEhD,IAAK+mK,YAAY,CAAE/mK,CAAC,CAAE,CAACM,IAAI,KAAK+nK,WAAW,EAAG;gBAE7CA,WAAW,GAAGroK,CAAC;gBACf;cAED;YAED;YAEA;UAED,KAAK,KAAK;YAET,IAAK,KAAK,IAAI+mK,YAAY,EAAG;cAE5BA,YAAY,GAAGA,YAAY,CAAC31H,GAAG;cAC/B;YAED;YAEA,IAAK,CAAE21H,YAAY,CAAC19H,QAAQ,EAAG;cAE9B1zB,OAAO,CAAChY,KAAK,CAAE,mFAAmF,EAAE,IAAK,CAAC;cAC1G;YAED;YAEA,IAAK,CAAEopK,YAAY,CAAC19H,QAAQ,CAAC+H,GAAG,EAAG;cAElCz7B,OAAO,CAAChY,KAAK,CAAE,2FAA2F,EAAE,IAAK,CAAC;cAClH;YAED;YAEAopK,YAAY,GAAGA,YAAY,CAAC19H,QAAQ,CAAC+H,GAAG;YACxC;UAED;YAEC,IAAK21H,YAAY,CAAEqB,UAAU,CAAE,KAAK3pK,SAAS,EAAG;cAE/CkX,OAAO,CAAChY,KAAK,CAAE,sEAAsE,EAAE,IAAK,CAAC;cAC7F;YAED;YAEAopK,YAAY,GAAGA,YAAY,CAAEqB,UAAU,CAAE;QAE3C;QAGA,IAAKC,WAAW,KAAK5pK,SAAS,EAAG;UAEhC,IAAKsoK,YAAY,CAAEsB,WAAW,CAAE,KAAK5pK,SAAS,EAAG;YAEhDkX,OAAO,CAAChY,KAAK,CAAE,uFAAuF,EAAE,IAAI,EAAEopK,YAAa,CAAC;YAC5H;UAED;UAEAA,YAAY,GAAGA,YAAY,CAAEsB,WAAW,CAAE;QAE3C;MAED;;MAEA;MACA,IAAMC,YAAY,GAAGvB,YAAY,CAAEzgB,YAAY,CAAE;MAEjD,IAAKgiB,YAAY,KAAK7pK,SAAS,EAAG;QAEjC,IAAMgoK,QAAQ,GAAGb,UAAU,CAACa,QAAQ;QAEpC9wJ,OAAO,CAAChY,KAAK,CAAE,8DAA8D,GAAG8oK,QAAQ,GACvF,GAAG,GAAGngB,YAAY,GAAG,wBAAwB,EAAEygB,YAAa,CAAC;QAC9D;MAED;;MAEA;MACA,IAAIwB,UAAU,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI;MAErC,IAAI,CAAC1B,YAAY,GAAGA,YAAY;MAEhC,IAAKA,YAAY,CAACvgJ,WAAW,KAAK/nB,SAAS,EAAG;QAAE;;QAE/C8pK,UAAU,GAAG,IAAI,CAACC,UAAU,CAACE,WAAW;MAEzC,CAAC,MAAM,IAAK3B,YAAY,CAACziI,sBAAsB,KAAK7lC,SAAS,EAAG;QAAE;;QAEjE8pK,UAAU,GAAG,IAAI,CAACC,UAAU,CAACG,sBAAsB;MAEpD;;MAEA;MACA,IAAIC,WAAW,GAAG,IAAI,CAACC,WAAW,CAACC,MAAM;MAEzC,IAAK3B,aAAa,KAAK1oK,SAAS,EAAG;QAElC;;QAEA,IAAK6nJ,YAAY,KAAK,uBAAuB,EAAG;UAE/C;;UAEA;UACA,IAAK,CAAEygB,YAAY,CAACjxI,QAAQ,EAAG;YAE9BngB,OAAO,CAAChY,KAAK,CAAE,qGAAqG,EAAE,IAAK,CAAC;YAC5H;UAED;UAEA,IAAK,CAAEopK,YAAY,CAACjxI,QAAQ,CAAC6lB,eAAe,EAAG;YAE9ChmC,OAAO,CAAChY,KAAK,CAAE,qHAAqH,EAAE,IAAK,CAAC;YAC5I;UAED;UAEA,IAAKopK,YAAY,CAAC1lH,qBAAqB,CAAE8lH,aAAa,CAAE,KAAK1oK,SAAS,EAAG;YAExE0oK,aAAa,GAAGJ,YAAY,CAAC1lH,qBAAqB,CAAE8lH,aAAa,CAAE;UAEpE;QAED;QAEAyB,WAAW,GAAG,IAAI,CAACC,WAAW,CAACE,YAAY;QAE3C,IAAI,CAAC9B,gBAAgB,GAAGqB,YAAY;QACpC,IAAI,CAACnB,aAAa,GAAGA,aAAa;MAEnC,CAAC,MAAM,IAAKmB,YAAY,CAACtuJ,SAAS,KAAKvb,SAAS,IAAI6pK,YAAY,CAACpuJ,OAAO,KAAKzb,SAAS,EAAG;QAExF;;QAEAmqK,WAAW,GAAG,IAAI,CAACC,WAAW,CAACG,cAAc;QAE7C,IAAI,CAAC/B,gBAAgB,GAAGqB,YAAY;MAErC,CAAC,MAAM,IAAKxkJ,KAAK,CAACC,OAAO,CAAEukJ,YAAa,CAAC,EAAG;QAE3CM,WAAW,GAAG,IAAI,CAACC,WAAW,CAACI,WAAW;QAE1C,IAAI,CAAChC,gBAAgB,GAAGqB,YAAY;MAErC,CAAC,MAAM;QAEN,IAAI,CAAChiB,YAAY,GAAGA,YAAY;MAEjC;;MAEA;MACA,IAAI,CAACoe,QAAQ,GAAG,IAAI,CAACwE,mBAAmB,CAAEN,WAAW,CAAE;MACvD,IAAI,CAACzyF,QAAQ,GAAG,IAAI,CAACgzF,gCAAgC,CAAEP,WAAW,CAAE,CAAEL,UAAU,CAAE;IAEnF;EAAC;IAAAruK,GAAA;IAAAE,KAAA,EAED,SAAAisK,OAAA,EAAS;MAER,IAAI,CAACE,IAAI,GAAG,IAAI;;MAEhB;MACA;MACA,IAAI,CAAC7B,QAAQ,GAAG,IAAI,CAACgC,iBAAiB;MACtC,IAAI,CAACvwF,QAAQ,GAAG,IAAI,CAACwwF,iBAAiB;IAEvC;EAAC;IAAAzsK,GAAA;IAAAE,KAAA,EAvhBD,SAAAsB,OAAe0tK,IAAI,EAAEpsF,IAAI,EAAE4oF,UAAU,EAAG;MAEvC,IAAK,EAAIwD,IAAI,IAAIA,IAAI,CAACC,sBAAsB,CAAE,EAAG;QAEhD,OAAO,IAAIxD,eAAe,CAAEuD,IAAI,EAAEpsF,IAAI,EAAE4oF,UAAW,CAAC;MAErD,CAAC,MAAM;QAEN,OAAO,IAAIC,eAAe,CAACJ,SAAS,CAAE2D,IAAI,EAAEpsF,IAAI,EAAE4oF,UAAW,CAAC;MAE/D;IAED;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAA1rK,GAAA;IAAAE,KAAA,EAOA,SAAAkvK,iBAAyBhpK,IAAI,EAAG;MAE/B,OAAOA,IAAI,CAAC8gF,OAAO,CAAE,KAAK,EAAE,GAAI,CAAC,CAACA,OAAO,CAAE2jF,WAAW,EAAE,EAAG,CAAC;IAE7D;EAAC;IAAA7qK,GAAA;IAAAE,KAAA,EAED,SAAA0rK,eAAuB1f,SAAS,EAAG;MAElC,IAAMmjB,OAAO,GAAGhE,QAAQ,CAACvwH,IAAI,CAAEoxG,SAAU,CAAC;MAE1C,IAAKmjB,OAAO,KAAK,IAAI,EAAG;QAEvB,MAAM,IAAIxrK,KAAK,CAAE,2CAA2C,GAAGqoJ,SAAU,CAAC;MAE3E;MAEA,IAAMojB,OAAO,GAAG;QACf;QACA/C,QAAQ,EAAE8C,OAAO,CAAE,CAAC,CAAE;QACtBnB,UAAU,EAAEmB,OAAO,CAAE,CAAC,CAAE;QACxBlB,WAAW,EAAEkB,OAAO,CAAE,CAAC,CAAE;QACzBjjB,YAAY,EAAEijB,OAAO,CAAE,CAAC,CAAE;QAAE;QAC5BpC,aAAa,EAAEoC,OAAO,CAAE,CAAC;MAC1B,CAAC;MAED,IAAME,OAAO,GAAGD,OAAO,CAAC/C,QAAQ,IAAI+C,OAAO,CAAC/C,QAAQ,CAAC/S,WAAW,CAAE,GAAI,CAAC;MAEvE,IAAK+V,OAAO,KAAKhrK,SAAS,IAAIgrK,OAAO,KAAK,CAAE,CAAC,EAAG;QAE/C,IAAMrB,UAAU,GAAGoB,OAAO,CAAC/C,QAAQ,CAACiD,SAAS,CAAED,OAAO,GAAG,CAAE,CAAC;;QAE5D;QACA;QACA;QACA;QACA,IAAKjE,qBAAqB,CAACn1J,OAAO,CAAE+3J,UAAW,CAAC,KAAK,CAAE,CAAC,EAAG;UAE1DoB,OAAO,CAAC/C,QAAQ,GAAG+C,OAAO,CAAC/C,QAAQ,CAACiD,SAAS,CAAE,CAAC,EAAED,OAAQ,CAAC;UAC3DD,OAAO,CAACpB,UAAU,GAAGA,UAAU;QAEhC;MAED;MAEA,IAAKoB,OAAO,CAACljB,YAAY,KAAK,IAAI,IAAIkjB,OAAO,CAACljB,YAAY,CAACvmJ,MAAM,KAAK,CAAC,EAAG;QAEzE,MAAM,IAAIhC,KAAK,CAAE,8DAA8D,GAAGqoJ,SAAU,CAAC;MAE9F;MAEA,OAAOojB,OAAO;IAEf;EAAC;IAAAtvK,GAAA;IAAAE,KAAA,EAED,SAAAosK,SAAiB4C,IAAI,EAAE3C,QAAQ,EAAG;MAEjC,IAAKA,QAAQ,KAAKhoK,SAAS,IAAIgoK,QAAQ,KAAK,EAAE,IAAIA,QAAQ,KAAK,GAAG,IAAIA,QAAQ,KAAK,CAAE,CAAC,IAAIA,QAAQ,KAAK2C,IAAI,CAAC9oK,IAAI,IAAImmK,QAAQ,KAAK2C,IAAI,CAACz3J,IAAI,EAAG;QAE5I,OAAOy3J,IAAI;MAEZ;;MAEA;MACA,IAAKA,IAAI,CAAChgI,QAAQ,EAAG;QAEpB,IAAMmoF,IAAI,GAAG63C,IAAI,CAAChgI,QAAQ,CAACooF,aAAa,CAAEi1C,QAAS,CAAC;QAEpD,IAAKl1C,IAAI,KAAK9yH,SAAS,EAAG;UAEzB,OAAO8yH,IAAI;QAEZ;MAED;;MAEA;MACA,IAAK63C,IAAI,CAACnzI,QAAQ,EAAG;QAEpB,IAAM0zI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAc1zI,QAAQ,EAAG;UAE/C,KAAM,IAAIj2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi2B,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,EAAG,EAAG;YAE5C,IAAM4pK,SAAS,GAAG3zI,QAAQ,CAAEj2B,CAAC,CAAE;YAE/B,IAAK4pK,SAAS,CAACtpK,IAAI,KAAKmmK,QAAQ,IAAImD,SAAS,CAACj4J,IAAI,KAAK80J,QAAQ,EAAG;cAEjE,OAAOmD,SAAS;YAEjB;YAEA,IAAMtsK,MAAM,GAAGqsK,iBAAiB,CAAEC,SAAS,CAAC3zI,QAAS,CAAC;YAEtD,IAAK34B,MAAM,EAAG,OAAOA,MAAM;UAE5B;UAEA,OAAO,IAAI;QAEZ,CAAC;QAED,IAAMusK,WAAW,GAAGF,iBAAiB,CAAEP,IAAI,CAACnzI,QAAS,CAAC;QAEtD,IAAK4zI,WAAW,EAAG;UAElB,OAAOA,WAAW;QAEnB;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAhE,eAAA;AAAA;AAAAnsK,OAAA,CAAAmsK,eAAA,GAAAA,eAAA;AAsZFA,eAAe,CAACJ,SAAS,GAAGA,SAAS;AAErCI,eAAe,CAAChsK,SAAS,CAACgvK,WAAW,GAAG;EACvCC,MAAM,EAAE,CAAC;EACTG,WAAW,EAAE,CAAC;EACdF,YAAY,EAAE,CAAC;EACfC,cAAc,EAAE;AACjB,CAAC;AAEDnD,eAAe,CAAChsK,SAAS,CAAC2uK,UAAU,GAAG;EACtCC,IAAI,EAAE,CAAC;EACPC,WAAW,EAAE,CAAC;EACdC,sBAAsB,EAAE;AACzB,CAAC;AAED9C,eAAe,CAAChsK,SAAS,CAACqvK,mBAAmB,GAAG,CAE/CrD,eAAe,CAAChsK,SAAS,CAACitK,gBAAgB,EAC1CjB,eAAe,CAAChsK,SAAS,CAACmtK,eAAe,EACzCnB,eAAe,CAAChsK,SAAS,CAACqtK,sBAAsB,EAChDrB,eAAe,CAAChsK,SAAS,CAACutK,iBAAiB,CAE3C;AAEDvB,eAAe,CAAChsK,SAAS,CAACsvK,gCAAgC,GAAG,CAE5D;AACC;AACAtD,eAAe,CAAChsK,SAAS,CAACwtK,gBAAgB,EAC1CxB,eAAe,CAAChsK,SAAS,CAACytK,+BAA+B,EACzDzB,eAAe,CAAChsK,SAAS,CAAC0tK,0CAA0C,CAEpE,EAAE;AAEF;;AAEA1B,eAAe,CAAChsK,SAAS,CAAC2tK,eAAe,EACzC3B,eAAe,CAAChsK,SAAS,CAAC6tK,8BAA8B,EACxD7B,eAAe,CAAChsK,SAAS,CAAC8tK,yCAAyC,CAEnE,EAAE;AAEF;AACA9B,eAAe,CAAChsK,SAAS,CAAC+tK,sBAAsB,EAChD/B,eAAe,CAAChsK,SAAS,CAACguK,qCAAqC,EAC/DhC,eAAe,CAAChsK,SAAS,CAACiuK,gDAAgD,CAE1E,EAAE;AAEF;AACAjC,eAAe,CAAChsK,SAAS,CAACkuK,mBAAmB,EAC7ClC,eAAe,CAAChsK,SAAS,CAACmuK,kCAAkC,EAC5DnC,eAAe,CAAChsK,SAAS,CAACouK,6CAA6C,CAEvE,CAED;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,IA6BM6B,oBAAoB;EAEzB,SAAAA,qBAAA,EAAc;IAAAvnK,eAAA,OAAAunK,oBAAA;IAEb,IAAI,CAACT,sBAAsB,GAAG,IAAI;IAElC,IAAI,CAAC13J,IAAI,GAAGN,YAAY,CAAC,CAAC;;IAE1B;IACA,IAAI,CAAC4jF,QAAQ,GAAGnxE,KAAK,CAACjqB,SAAS,CAACyH,KAAK,CAACpF,IAAI,CAAEiqC,SAAU,CAAC;IAEvD,IAAI,CAACggI,eAAe,GAAG,CAAC,CAAC,CAAC;IAC1B;;IAEA,IAAMjpH,OAAO,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC6sH,cAAc,GAAG7sH,OAAO,CAAC,CAAC;;IAE/B,KAAM,IAAIl9C,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGk0B,SAAS,CAACpmC,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;MAEtDk9C,OAAO,CAAE/W,SAAS,CAAEnmC,CAAC,CAAE,CAAC2R,IAAI,CAAE,GAAG3R,CAAC;IAEnC;IAEA,IAAI,CAACgqK,MAAM,GAAG,EAAE,CAAC,CAAC;IAClB,IAAI,CAACC,YAAY,GAAG,EAAE,CAAC,CAAC;IACxB,IAAI,CAACjE,SAAS,GAAG,EAAE,CAAC,CAAC;IACrB,IAAI,CAACkE,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;;IAElC,IAAMrnH,KAAK,GAAG,IAAI;IAElB,IAAI,CAACsnH,KAAK,GAAG;MAEZ/nG,OAAO,EAAE;QACR,IAAI8oF,KAAKA,CAAA,EAAG;UAEX,OAAOroG,KAAK,CAACoyC,QAAQ,CAACl1F,MAAM;QAE7B,CAAC;QACD,IAAIqqK,KAAKA,CAAA,EAAG;UAEX,OAAO,IAAI,CAAClf,KAAK,GAAGroG,KAAK,CAACsjH,eAAe;QAE1C;MACD,CAAC;MACD,IAAIkE,iBAAiBA,CAAA,EAAG;QAEvB,OAAOxnH,KAAK,CAACmjH,SAAS,CAACjmK,MAAM;MAE9B;IAED,CAAC;EAEF;EAACgD,YAAA,CAAA+mK,oBAAA;IAAA5vK,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAA,EAAM;MAEL,IAAM+qD,OAAO,GAAG,IAAI,CAAC6yB,QAAQ;QAC5Bq1E,aAAa,GAAG,IAAI,CAACP,cAAc;QACnCQ,KAAK,GAAG,IAAI,CAACP,MAAM;QACnBQ,WAAW,GAAG,IAAI,CAACP,YAAY;QAC/B7D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAACrmK,MAAM;MAE5B,IAAI2qK,WAAW,GAAGjsK,SAAS;QAC1BksK,QAAQ,GAAGvoG,OAAO,CAACriE,MAAM;QACzB6qK,cAAc,GAAG,IAAI,CAACzE,eAAe;MAEtC,KAAM,IAAInmK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGk0B,SAAS,CAACpmC,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEtD,IAAMgB,MAAM,GAAGmlC,SAAS,CAAEnmC,CAAC,CAAE;UAC5B2R,IAAI,GAAG3Q,MAAM,CAAC2Q,IAAI;QACnB,IAAIlB,KAAK,GAAG65J,aAAa,CAAE34J,IAAI,CAAE;QAEjC,IAAKlB,KAAK,KAAKhS,SAAS,EAAG;UAE1B;;UAEAgS,KAAK,GAAGk6J,QAAQ,EAAG;UACnBL,aAAa,CAAE34J,IAAI,CAAE,GAAGlB,KAAK;UAC7B2xD,OAAO,CAAC5iE,IAAI,CAAEwB,MAAO,CAAC;;UAEtB;;UAEA,KAAM,IAAIg3B,CAAC,GAAG,CAAC,EAAE9lB,CAAC,GAAGu4J,SAAS,EAAEzyI,CAAC,KAAK9lB,CAAC,EAAE,EAAG8lB,CAAC,EAAG;YAE/CouI,QAAQ,CAAEpuI,CAAC,CAAE,CAACx4B,IAAI,CAAE,IAAIqmK,eAAe,CAAE7kK,MAAM,EAAEupK,KAAK,CAAEvyI,CAAC,CAAE,EAAEwyI,WAAW,CAAExyI,CAAC,CAAG,CAAE,CAAC;UAElF;QAED,CAAC,MAAM,IAAKvnB,KAAK,GAAGm6J,cAAc,EAAG;UAEpCF,WAAW,GAAGtoG,OAAO,CAAE3xD,KAAK,CAAE;;UAE9B;;UAEA,IAAMo6J,gBAAgB,GAAG,EAAGD,cAAc;YACzCE,gBAAgB,GAAG1oG,OAAO,CAAEyoG,gBAAgB,CAAE;UAE/CP,aAAa,CAAEQ,gBAAgB,CAACn5J,IAAI,CAAE,GAAGlB,KAAK;UAC9C2xD,OAAO,CAAE3xD,KAAK,CAAE,GAAGq6J,gBAAgB;UAEnCR,aAAa,CAAE34J,IAAI,CAAE,GAAGk5J,gBAAgB;UACxCzoG,OAAO,CAAEyoG,gBAAgB,CAAE,GAAG7pK,MAAM;;UAEpC;;UAEA,KAAM,IAAIg3B,IAAC,GAAG,CAAC,EAAE9lB,GAAC,GAAGu4J,SAAS,EAAEzyI,IAAC,KAAK9lB,GAAC,EAAE,EAAG8lB,IAAC,EAAG;YAE/C,IAAM+yI,eAAe,GAAG3E,QAAQ,CAAEpuI,IAAC,CAAE;cACpCgzI,UAAU,GAAGD,eAAe,CAAEF,gBAAgB,CAAE;YAEjD,IAAIjI,OAAO,GAAGmI,eAAe,CAAEt6J,KAAK,CAAE;YAEtCs6J,eAAe,CAAEt6J,KAAK,CAAE,GAAGu6J,UAAU;YAErC,IAAKpI,OAAO,KAAKnkK,SAAS,EAAG;cAE5B;cACA;cACA;;cAEAmkK,OAAO,GAAG,IAAIiD,eAAe,CAAE7kK,MAAM,EAAEupK,KAAK,CAAEvyI,IAAC,CAAE,EAAEwyI,WAAW,CAAExyI,IAAC,CAAG,CAAC;YAEtE;YAEA+yI,eAAe,CAAEF,gBAAgB,CAAE,GAAGjI,OAAO;UAE9C;QAED,CAAC,MAAM,IAAKxgG,OAAO,CAAE3xD,KAAK,CAAE,KAAKi6J,WAAW,EAAG;UAE9C/0J,OAAO,CAAChY,KAAK,CAAE,mEAAmE,GACjF,mFAAoF,CAAC;QAEvF,CAAC,CAAC;MAEH,CAAC,CAAC;;MAEF,IAAI,CAACwoK,eAAe,GAAGyE,cAAc;IAEtC;EAAC;IAAA1wK,GAAA;IAAAE,KAAA,EAED,SAAAgsC,OAAA,EAAS;MAER,IAAMg8B,OAAO,GAAG,IAAI,CAAC6yB,QAAQ;QAC5Bq1E,aAAa,GAAG,IAAI,CAACP,cAAc;QACnC3D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAACrmK,MAAM;MAE5B,IAAI6qK,cAAc,GAAG,IAAI,CAACzE,eAAe;MAEzC,KAAM,IAAInmK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGk0B,SAAS,CAACpmC,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEtD,IAAMgB,MAAM,GAAGmlC,SAAS,CAAEnmC,CAAC,CAAE;UAC5B2R,IAAI,GAAG3Q,MAAM,CAAC2Q,IAAI;UAClBlB,KAAK,GAAG65J,aAAa,CAAE34J,IAAI,CAAE;QAE9B,IAAKlB,KAAK,KAAKhS,SAAS,IAAIgS,KAAK,IAAIm6J,cAAc,EAAG;UAErD;;UAEA,IAAMK,eAAe,GAAGL,cAAc,EAAG;YACxCM,iBAAiB,GAAG9oG,OAAO,CAAE6oG,eAAe,CAAE;UAE/CX,aAAa,CAAEY,iBAAiB,CAACv5J,IAAI,CAAE,GAAGlB,KAAK;UAC/C2xD,OAAO,CAAE3xD,KAAK,CAAE,GAAGy6J,iBAAiB;UAEpCZ,aAAa,CAAE34J,IAAI,CAAE,GAAGs5J,eAAe;UACvC7oG,OAAO,CAAE6oG,eAAe,CAAE,GAAGjqK,MAAM;;UAEnC;;UAEA,KAAM,IAAIg3B,CAAC,GAAG,CAAC,EAAE9lB,CAAC,GAAGu4J,SAAS,EAAEzyI,CAAC,KAAK9lB,CAAC,EAAE,EAAG8lB,CAAC,EAAG;YAE/C,IAAM+yI,eAAe,GAAG3E,QAAQ,CAAEpuI,CAAC,CAAE;cACpCmzI,WAAW,GAAGJ,eAAe,CAAEE,eAAe,CAAE;cAChDrI,OAAO,GAAGmI,eAAe,CAAEt6J,KAAK,CAAE;YAEnCs6J,eAAe,CAAEt6J,KAAK,CAAE,GAAG06J,WAAW;YACtCJ,eAAe,CAAEE,eAAe,CAAE,GAAGrI,OAAO;UAE7C;QAED;MAED,CAAC,CAAC;;MAEF,IAAI,CAACuD,eAAe,GAAGyE,cAAc;IAEtC;;IAEA;EAAA;IAAA1wK,GAAA;IAAAE,KAAA,EACA,SAAAgxK,QAAA,EAAU;MAET,IAAMhpG,OAAO,GAAG,IAAI,CAAC6yB,QAAQ;QAC5Bq1E,aAAa,GAAG,IAAI,CAACP,cAAc;QACnC3D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAACrmK,MAAM;MAE5B,IAAI6qK,cAAc,GAAG,IAAI,CAACzE,eAAe;QACxCwE,QAAQ,GAAGvoG,OAAO,CAACriE,MAAM;MAE1B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGk0B,SAAS,CAACpmC,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEtD,IAAMgB,MAAM,GAAGmlC,SAAS,CAAEnmC,CAAC,CAAE;UAC5B2R,IAAI,GAAG3Q,MAAM,CAAC2Q,IAAI;UAClBlB,KAAK,GAAG65J,aAAa,CAAE34J,IAAI,CAAE;QAE9B,IAAKlB,KAAK,KAAKhS,SAAS,EAAG;UAE1B,OAAO6rK,aAAa,CAAE34J,IAAI,CAAE;UAE5B,IAAKlB,KAAK,GAAGm6J,cAAc,EAAG;YAE7B;;YAEA,IAAMC,gBAAgB,GAAG,EAAGD,cAAc;cACzCE,gBAAgB,GAAG1oG,OAAO,CAAEyoG,gBAAgB,CAAE;cAC9C3tF,SAAS,GAAG,EAAGytF,QAAQ;cACvBU,UAAU,GAAGjpG,OAAO,CAAE8a,SAAS,CAAE;;YAElC;YACAotF,aAAa,CAAEQ,gBAAgB,CAACn5J,IAAI,CAAE,GAAGlB,KAAK;YAC9C2xD,OAAO,CAAE3xD,KAAK,CAAE,GAAGq6J,gBAAgB;;YAEnC;YACAR,aAAa,CAAEe,UAAU,CAAC15J,IAAI,CAAE,GAAGk5J,gBAAgB;YACnDzoG,OAAO,CAAEyoG,gBAAgB,CAAE,GAAGQ,UAAU;YACxCjpG,OAAO,CAAClhE,GAAG,CAAC,CAAC;;YAEb;;YAEA,KAAM,IAAI82B,CAAC,GAAG,CAAC,EAAE9lB,CAAC,GAAGu4J,SAAS,EAAEzyI,CAAC,KAAK9lB,CAAC,EAAE,EAAG8lB,CAAC,EAAG;cAE/C,IAAM+yI,eAAe,GAAG3E,QAAQ,CAAEpuI,CAAC,CAAE;gBACpCgzI,UAAU,GAAGD,eAAe,CAAEF,gBAAgB,CAAE;gBAChD/xC,IAAI,GAAGiyC,eAAe,CAAE7tF,SAAS,CAAE;cAEpC6tF,eAAe,CAAEt6J,KAAK,CAAE,GAAGu6J,UAAU;cACrCD,eAAe,CAAEF,gBAAgB,CAAE,GAAG/xC,IAAI;cAC1CiyC,eAAe,CAAC7pK,GAAG,CAAC,CAAC;YAEtB;UAED,CAAC,MAAM;YAEN;;YAEA,IAAMg8E,UAAS,GAAG,EAAGytF,QAAQ;cAC5BU,WAAU,GAAGjpG,OAAO,CAAE8a,UAAS,CAAE;YAElC,IAAKA,UAAS,GAAG,CAAC,EAAG;cAEpBotF,aAAa,CAAEe,WAAU,CAAC15J,IAAI,CAAE,GAAGlB,KAAK;YAEzC;YAEA2xD,OAAO,CAAE3xD,KAAK,CAAE,GAAG46J,WAAU;YAC7BjpG,OAAO,CAAClhE,GAAG,CAAC,CAAC;;YAEb;;YAEA,KAAM,IAAI82B,IAAC,GAAG,CAAC,EAAE9lB,GAAC,GAAGu4J,SAAS,EAAEzyI,IAAC,KAAK9lB,GAAC,EAAE,EAAG8lB,IAAC,EAAG;cAE/C,IAAM+yI,gBAAe,GAAG3E,QAAQ,CAAEpuI,IAAC,CAAE;cAErC+yI,gBAAe,CAAEt6J,KAAK,CAAE,GAAGs6J,gBAAe,CAAE7tF,UAAS,CAAE;cACvD6tF,gBAAe,CAAC7pK,GAAG,CAAC,CAAC;YAEtB;UAED,CAAC,CAAC;QAEH,CAAC,CAAC;MAEH,CAAC,CAAC;;MAEF,IAAI,CAACilK,eAAe,GAAGyE,cAAc;IAEtC;;IAEA;EAAA;IAAA1wK,GAAA;IAAAE,KAAA,EAEA,SAAA6rK,WAAYjpF,IAAI,EAAE4oF,UAAU,EAAG;MAE9B;MACA;;MAEA,IAAM0F,aAAa,GAAG,IAAI,CAACpB,sBAAsB;MACjD,IAAIz5J,KAAK,GAAG66J,aAAa,CAAEtuF,IAAI,CAAE;MACjC,IAAMopF,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,IAAKv1J,KAAK,KAAKhS,SAAS,EAAG,OAAO2nK,QAAQ,CAAE31J,KAAK,CAAE;MAEnD,IAAM85J,KAAK,GAAG,IAAI,CAACP,MAAM;QACxBQ,WAAW,GAAG,IAAI,CAACP,YAAY;QAC/B7nG,OAAO,GAAG,IAAI,CAAC6yB,QAAQ;QACvB01E,QAAQ,GAAGvoG,OAAO,CAACriE,MAAM;QACzB6qK,cAAc,GAAG,IAAI,CAACzE,eAAe;QACrC4E,eAAe,GAAG,IAAIjnJ,KAAK,CAAE6mJ,QAAS,CAAC;MAExCl6J,KAAK,GAAG21J,QAAQ,CAACrmK,MAAM;MAEvBurK,aAAa,CAAEtuF,IAAI,CAAE,GAAGvsE,KAAK;MAE7B85J,KAAK,CAAC/qK,IAAI,CAAEw9E,IAAK,CAAC;MAClBwtF,WAAW,CAAChrK,IAAI,CAAEomK,UAAW,CAAC;MAC9BQ,QAAQ,CAAC5mK,IAAI,CAAEurK,eAAgB,CAAC;MAEhC,KAAM,IAAI/qK,CAAC,GAAG4qK,cAAc,EAAE34J,CAAC,GAAGmwD,OAAO,CAACriE,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAEjE,IAAMgB,MAAM,GAAGohE,OAAO,CAAEpiE,CAAC,CAAE;QAC3B+qK,eAAe,CAAE/qK,CAAC,CAAE,GAAG,IAAI6lK,eAAe,CAAE7kK,MAAM,EAAEg8E,IAAI,EAAE4oF,UAAW,CAAC;MAEvE;MAEA,OAAOmF,eAAe;IAEvB;EAAC;IAAA7wK,GAAA;IAAAE,KAAA,EAED,SAAAmxK,aAAcvuF,IAAI,EAAG;MAEpB;MACA;;MAEA,IAAMsuF,aAAa,GAAG,IAAI,CAACpB,sBAAsB;QAChDz5J,KAAK,GAAG66J,aAAa,CAAEtuF,IAAI,CAAE;MAE9B,IAAKvsE,KAAK,KAAKhS,SAAS,EAAG;QAE1B,IAAM8rK,KAAK,GAAG,IAAI,CAACP,MAAM;UACxBQ,WAAW,GAAG,IAAI,CAACP,YAAY;UAC/B7D,QAAQ,GAAG,IAAI,CAACJ,SAAS;UACzBwF,iBAAiB,GAAGpF,QAAQ,CAACrmK,MAAM,GAAG,CAAC;UACvC0rK,YAAY,GAAGrF,QAAQ,CAAEoF,iBAAiB,CAAE;UAC5CE,gBAAgB,GAAG1uF,IAAI,CAAEwuF,iBAAiB,CAAE;QAE7CF,aAAa,CAAEI,gBAAgB,CAAE,GAAGj7J,KAAK;QAEzC21J,QAAQ,CAAE31J,KAAK,CAAE,GAAGg7J,YAAY;QAChCrF,QAAQ,CAACllK,GAAG,CAAC,CAAC;QAEdspK,WAAW,CAAE/5J,KAAK,CAAE,GAAG+5J,WAAW,CAAEgB,iBAAiB,CAAE;QACvDhB,WAAW,CAACtpK,GAAG,CAAC,CAAC;QAEjBqpK,KAAK,CAAE95J,KAAK,CAAE,GAAG85J,KAAK,CAAEiB,iBAAiB,CAAE;QAC3CjB,KAAK,CAACrpK,GAAG,CAAC,CAAC;MAEZ;IAED;EAAC;EAAA,OAAA4oK,oBAAA;AAAA;AAAApwK,OAAA,CAAAowK,oBAAA,GAAAA,oBAAA;AAAA,IAII6B,eAAe;EAEpB,SAAAA,gBAAaC,KAAK,EAAE1vB,IAAI,EAAE2vB,SAAS,GAAG,IAAI,EAAEvtB,SAAS,GAAGpC,IAAI,CAACoC,SAAS,EAAG;IAAA/7I,eAAA,OAAAopK,eAAA;IAExE,IAAI,CAACG,MAAM,GAAGF,KAAK;IACnB,IAAI,CAACG,KAAK,GAAG7vB,IAAI;IACjB,IAAI,CAAC8vB,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAACvtB,SAAS,GAAGA,SAAS;IAE1B,IAAMnC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACzB8vB,OAAO,GAAG9vB,MAAM,CAACp8I,MAAM;MACvBmsK,YAAY,GAAG,IAAIpoJ,KAAK,CAAEmoJ,OAAQ,CAAC;IAEpC,IAAME,mBAAmB,GAAG;MAC3BhsB,WAAW,EAAE5zI,mBAAmB;MAChC6zI,SAAS,EAAE7zI;IACZ,CAAC;IAED,KAAM,IAAIvM,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKisK,OAAO,EAAE,EAAGjsK,CAAC,EAAG;MAEtC,IAAM89I,WAAW,GAAG3B,MAAM,CAAEn8I,CAAC,CAAE,CAACu9I,iBAAiB,CAAE,IAAK,CAAC;MACzD2uB,YAAY,CAAElsK,CAAC,CAAE,GAAG89I,WAAW;MAC/BA,WAAW,CAACe,QAAQ,GAAGstB,mBAAmB;IAE3C;IAEA,IAAI,CAACC,oBAAoB,GAAGD,mBAAmB;IAE/C,IAAI,CAACE,aAAa,GAAGH,YAAY,CAAC,CAAC;;IAEnC;IACA,IAAI,CAACI,iBAAiB,GAAG,IAAIxoJ,KAAK,CAAEmoJ,OAAQ,CAAC;IAE7C,IAAI,CAACM,WAAW,GAAG,IAAI,CAAC,CAAC;IACzB,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAAC,CAAC;;IAE/B,IAAI,CAACC,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACC,kBAAkB,GAAG,IAAI;IAE9B,IAAI,CAAC7O,IAAI,GAAG3xJ,UAAU;IACtB,IAAI,CAACygK,UAAU,GAAG,CAAE,CAAC;;IAErB;IACA;IACA,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;IACA;IACA,IAAI,CAAC1+G,IAAI,GAAG,CAAC;IAEb,IAAI,CAACq0F,SAAS,GAAG,CAAC;IAClB,IAAI,CAACsqB,mBAAmB,GAAG,CAAC;IAE5B,IAAI,CAACl7F,MAAM,GAAG,CAAC;IACf,IAAI,CAACm7F,gBAAgB,GAAG,CAAC;IAEzB,IAAI,CAACC,WAAW,GAAG74I,QAAQ,CAAC,CAAC;;IAE7B,IAAI,CAAC84I,MAAM,GAAG,KAAK,CAAC,CAAC;IACrB,IAAI,CAAC5rJ,OAAO,GAAG,IAAI,CAAC,CAAC;;IAErB,IAAI,CAAC6rJ,iBAAiB,GAAG,KAAK,CAAC;;IAE/B,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAAC;IAC7B,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC;EAE5B;;EAEA;EAAApqK,YAAA,CAAA4oK,eAAA;IAAAzxK,GAAA;IAAAE,KAAA,EAEA,SAAA8kK,KAAA,EAAO;MAEN,IAAI,CAAC4M,MAAM,CAACsB,eAAe,CAAE,IAAK,CAAC;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAlzK,GAAA;IAAAE,KAAA,EAED,SAAAmH,KAAA,EAAO;MAEN,IAAI,CAACuqK,MAAM,CAACuB,iBAAiB,CAAE,IAAK,CAAC;MAErC,OAAO,IAAI,CAAC1tK,KAAK,CAAC,CAAC;IAEpB;EAAC;IAAAzF,GAAA;IAAAE,KAAA,EAED,SAAAuF,MAAA,EAAQ;MAEP,IAAI,CAACqtK,MAAM,GAAG,KAAK;MACnB,IAAI,CAAC5rJ,OAAO,GAAG,IAAI;MAEnB,IAAI,CAAC8sC,IAAI,GAAG,CAAC,CAAC,CAAC;MACf,IAAI,CAACy+G,UAAU,GAAG,CAAE,CAAC,CAAC;MACtB,IAAI,CAACC,UAAU,GAAG,IAAI,CAAC;;MAEvB,OAAO,IAAI,CAACU,UAAU,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAEvC;EAAC;IAAArzK,GAAA;IAAAE,KAAA,EAED,SAAAozK,UAAA,EAAY;MAEX,OAAO,IAAI,CAACpsJ,OAAO,IAAI,CAAE,IAAI,CAAC4rJ,MAAM,IAAI,IAAI,CAACzqB,SAAS,KAAK,CAAC,IAC3D,IAAI,CAACqqB,UAAU,KAAK,IAAI,IAAI,IAAI,CAACd,MAAM,CAAC2B,eAAe,CAAE,IAAK,CAAC;IAEjE;;IAEA;EAAA;IAAAvzK,GAAA;IAAAE,KAAA,EACA,SAAAszK,YAAA,EAAc;MAEb,OAAO,IAAI,CAAC5B,MAAM,CAAC2B,eAAe,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAvzK,GAAA;IAAAE,KAAA,EAED,SAAAuzK,QAASz/G,IAAI,EAAG;MAEf,IAAI,CAAC0+G,UAAU,GAAG1+G,IAAI;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAh0D,GAAA;IAAAE,KAAA,EAED,SAAA2lK,QAAS/3F,IAAI,EAAE+kG,WAAW,EAAG;MAE5B,IAAI,CAAClP,IAAI,GAAG71F,IAAI;MAChB,IAAI,CAAC+kG,WAAW,GAAGA,WAAW;MAE9B,OAAO,IAAI;IAEZ;;IAEA;;IAEA;IACA;IACA;EAAA;IAAA7yK,GAAA;IAAAE,KAAA,EACA,SAAAwzK,mBAAoBj8F,MAAM,EAAG;MAE5B,IAAI,CAACA,MAAM,GAAGA,MAAM;;MAEpB;MACA,IAAI,CAACm7F,gBAAgB,GAAG,IAAI,CAAC1rJ,OAAO,GAAGuwD,MAAM,GAAG,CAAC;MAEjD,OAAO,IAAI,CAAC27F,UAAU,CAAC,CAAC;IAEzB;;IAEA;EAAA;IAAApzK,GAAA;IAAAE,KAAA,EACA,SAAAyzK,mBAAA,EAAqB;MAEpB,OAAO,IAAI,CAACf,gBAAgB;IAE7B;EAAC;IAAA5yK,GAAA;IAAAE,KAAA,EAED,SAAA0zK,OAAQ9oB,QAAQ,EAAG;MAElB,OAAO,IAAI,CAAC+oB,eAAe,CAAE/oB,QAAQ,EAAE,CAAC,EAAE,CAAE,CAAC;IAE9C;EAAC;IAAA9qJ,GAAA;IAAAE,KAAA,EAED,SAAA4zK,QAAShpB,QAAQ,EAAG;MAEnB,OAAO,IAAI,CAAC+oB,eAAe,CAAE/oB,QAAQ,EAAE,CAAC,EAAE,CAAE,CAAC;IAE9C;EAAC;IAAA9qJ,GAAA;IAAAE,KAAA,EAED,SAAA6zK,cAAeC,aAAa,EAAElpB,QAAQ,EAAEmpB,IAAI,EAAG;MAE9CD,aAAa,CAACF,OAAO,CAAEhpB,QAAS,CAAC;MACjC,IAAI,CAAC8oB,MAAM,CAAE9oB,QAAS,CAAC;MAEvB,IAAKmpB,IAAI,EAAG;QAEX,IAAMC,cAAc,GAAG,IAAI,CAACrC,KAAK,CAAC/mB,QAAQ;UACzCqpB,eAAe,GAAGH,aAAa,CAACnC,KAAK,CAAC/mB,QAAQ;UAE9CspB,aAAa,GAAGD,eAAe,GAAGD,cAAc;UAChDG,aAAa,GAAGH,cAAc,GAAGC,eAAe;QAEjDH,aAAa,CAACC,IAAI,CAAE,GAAG,EAAEG,aAAa,EAAEtpB,QAAS,CAAC;QAClD,IAAI,CAACmpB,IAAI,CAAEI,aAAa,EAAE,GAAG,EAAEvpB,QAAS,CAAC;MAE1C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9qJ,GAAA;IAAAE,KAAA,EAED,SAAAo0K,YAAaC,YAAY,EAAEzpB,QAAQ,EAAEmpB,IAAI,EAAG;MAE3C,OAAOM,YAAY,CAACR,aAAa,CAAE,IAAI,EAAEjpB,QAAQ,EAAEmpB,IAAK,CAAC;IAE1D;EAAC;IAAAj0K,GAAA;IAAAE,KAAA,EAED,SAAAkzK,WAAA,EAAa;MAEZ,IAAMoB,iBAAiB,GAAG,IAAI,CAAChC,kBAAkB;MAEjD,IAAKgC,iBAAiB,KAAK,IAAI,EAAG;QAEjC,IAAI,CAAChC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAACZ,MAAM,CAAC6C,2BAA2B,CAAED,iBAAkB,CAAC;MAE7D;MAEA,OAAO,IAAI;IAEZ;;IAEA;;IAEA;IACA;IACA;EAAA;IAAAx0K,GAAA;IAAAE,KAAA,EACA,SAAAw0K,sBAAuBrsB,SAAS,EAAG;MAElC,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACsqB,mBAAmB,GAAG,IAAI,CAACG,MAAM,GAAG,CAAC,GAAGzqB,SAAS;MAEtD,OAAO,IAAI,CAACgrB,WAAW,CAAC,CAAC;IAE1B;;IAEA;EAAA;IAAArzK,GAAA;IAAAE,KAAA,EACA,SAAAy0K,sBAAA,EAAwB;MAEvB,OAAO,IAAI,CAAChC,mBAAmB;IAEhC;EAAC;IAAA3yK,GAAA;IAAAE,KAAA,EAED,SAAA00K,YAAa9pB,QAAQ,EAAG;MAEvB,IAAI,CAACzC,SAAS,GAAG,IAAI,CAACwpB,KAAK,CAAC/mB,QAAQ,GAAGA,QAAQ;MAE/C,OAAO,IAAI,CAACuoB,WAAW,CAAC,CAAC;IAE1B;EAAC;IAAArzK,GAAA;IAAAE,KAAA,EAED,SAAA20K,SAAUC,MAAM,EAAG;MAElB,IAAI,CAAC9gH,IAAI,GAAG8gH,MAAM,CAAC9gH,IAAI;MACvB,IAAI,CAACq0F,SAAS,GAAGysB,MAAM,CAACzsB,SAAS;MAEjC,OAAO,IAAI,CAACgrB,WAAW,CAAC,CAAC;IAE1B;EAAC;IAAArzK,GAAA;IAAAE,KAAA,EAED,SAAA60K,KAAMjqB,QAAQ,EAAG;MAEhB,OAAO,IAAI,CAACmpB,IAAI,CAAE,IAAI,CAACtB,mBAAmB,EAAE,CAAC,EAAE7nB,QAAS,CAAC;IAE1D;EAAC;IAAA9qJ,GAAA;IAAAE,KAAA,EAED,SAAA+zK,KAAMe,cAAc,EAAEC,YAAY,EAAEnqB,QAAQ,EAAG;MAE9C,IAAM4mB,KAAK,GAAG,IAAI,CAACE,MAAM;QACxB7Q,GAAG,GAAG2Q,KAAK,CAAC19G,IAAI;QAChBq0F,SAAS,GAAG,IAAI,CAACA,SAAS;MAE3B,IAAIzE,WAAW,GAAG,IAAI,CAAC2uB,qBAAqB;MAE5C,IAAK3uB,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,GAAG8tB,KAAK,CAACwD,uBAAuB,CAAC,CAAC;QAC7C,IAAI,CAAC3C,qBAAqB,GAAG3uB,WAAW;MAEzC;MAEA,IAAMzC,KAAK,GAAGyC,WAAW,CAACW,kBAAkB;QAC3C/hJ,MAAM,GAAGohJ,WAAW,CAACY,YAAY;MAElCrD,KAAK,CAAE,CAAC,CAAE,GAAG4f,GAAG;MAChB5f,KAAK,CAAE,CAAC,CAAE,GAAG4f,GAAG,GAAGjW,QAAQ;MAE3BtoJ,MAAM,CAAE,CAAC,CAAE,GAAGwyK,cAAc,GAAG3sB,SAAS;MACxC7lJ,MAAM,CAAE,CAAC,CAAE,GAAGyyK,YAAY,GAAG5sB,SAAS;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAroJ,GAAA;IAAAE,KAAA,EAED,SAAAmzK,YAAA,EAAc;MAEb,IAAM8B,oBAAoB,GAAG,IAAI,CAAC5C,qBAAqB;MAEvD,IAAK4C,oBAAoB,KAAK,IAAI,EAAG;QAEpC,IAAI,CAAC5C,qBAAqB,GAAG,IAAI;QACjC,IAAI,CAACX,MAAM,CAAC6C,2BAA2B,CAAEU,oBAAqB,CAAC;MAEhE;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAn1K,GAAA;IAAAE,KAAA,EAEA,SAAAk1K,SAAA,EAAW;MAEV,OAAO,IAAI,CAACxD,MAAM;IAEnB;EAAC;IAAA5xK,GAAA;IAAAE,KAAA,EAED,SAAAm1K,QAAA,EAAU;MAET,OAAO,IAAI,CAACxD,KAAK;IAElB;EAAC;IAAA7xK,GAAA;IAAAE,KAAA,EAED,SAAAo1K,QAAA,EAAU;MAET,OAAO,IAAI,CAACxD,UAAU,IAAI,IAAI,CAACF,MAAM,CAAC2D,KAAK;IAE5C;;IAEA;EAAA;IAAAv1K,GAAA;IAAAE,KAAA,EAEA,SAAAs1K,QAASxhH,IAAI,EAAEyhH,SAAS,EAAEC,aAAa,EAAEzL,SAAS,EAAG;MAEpD;;MAEA,IAAK,CAAE,IAAI,CAAC/iJ,OAAO,EAAG;QAErB;;QAEA,IAAI,CAACyuJ,aAAa,CAAE3hH,IAAK,CAAC;QAC1B;MAED;MAEA,IAAMs0F,SAAS,GAAG,IAAI,CAACoqB,UAAU;MAEjC,IAAKpqB,SAAS,KAAK,IAAI,EAAG;QAEzB;;QAEA,IAAMstB,WAAW,GAAG,CAAE5hH,IAAI,GAAGs0F,SAAS,IAAKotB,aAAa;QACxD,IAAKE,WAAW,GAAG,CAAC,IAAIF,aAAa,KAAK,CAAC,EAAG;UAE7CD,SAAS,GAAG,CAAC;QAEd,CAAC,MAAM;UAGN,IAAI,CAAC/C,UAAU,GAAG,IAAI,CAAC,CAAC;UACxB+C,SAAS,GAAGC,aAAa,GAAGE,WAAW;QAExC;MAED;;MAEA;;MAEAH,SAAS,IAAI,IAAI,CAACI,gBAAgB,CAAE7hH,IAAK,CAAC;MAC1C,IAAM8hH,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAEN,SAAU,CAAC;;MAE9C;MACA;;MAEA,IAAMh+F,MAAM,GAAG,IAAI,CAACk+F,aAAa,CAAE3hH,IAAK,CAAC;MAEzC,IAAKyjB,MAAM,GAAG,CAAC,EAAG;QAEjB,IAAMu6F,YAAY,GAAG,IAAI,CAACG,aAAa;QACvC,IAAM6D,cAAc,GAAG,IAAI,CAAC5D,iBAAiB;QAE7C,QAAS,IAAI,CAAChuB,SAAS;UAEtB,KAAK3xI,0BAA0B;YAE9B,KAAM,IAAIqrB,CAAC,GAAG,CAAC,EAAE9lB,CAAC,GAAGg6J,YAAY,CAACnsK,MAAM,EAAEi4B,CAAC,KAAK9lB,CAAC,EAAE,EAAG8lB,CAAC,EAAG;cAEzDk0I,YAAY,CAAEl0I,CAAC,CAAE,CAAC+lH,QAAQ,CAAEiyB,QAAS,CAAC;cACtCE,cAAc,CAAEl4I,CAAC,CAAE,CAACssI,kBAAkB,CAAE3yF,MAAO,CAAC;YAEjD;YAEA;UAED,KAAKjlE,wBAAwB;UAC7B;YAEC,KAAM,IAAIsrB,IAAC,GAAG,CAAC,EAAE9lB,GAAC,GAAGg6J,YAAY,CAACnsK,MAAM,EAAEi4B,IAAC,KAAK9lB,GAAC,EAAE,EAAG8lB,IAAC,EAAG;cAEzDk0I,YAAY,CAAEl0I,IAAC,CAAE,CAAC+lH,QAAQ,CAAEiyB,QAAS,CAAC;cACtCE,cAAc,CAAEl4I,IAAC,CAAE,CAACksI,UAAU,CAAEC,SAAS,EAAExyF,MAAO,CAAC;YAEpD;QAEF;MAED;IAED;EAAC;IAAAz3E,GAAA;IAAAE,KAAA,EAED,SAAAy1K,cAAe3hH,IAAI,EAAG;MAErB,IAAIyjB,MAAM,GAAG,CAAC;MAEd,IAAK,IAAI,CAACvwD,OAAO,EAAG;QAEnBuwD,MAAM,GAAG,IAAI,CAACA,MAAM;QACpB,IAAMmsE,WAAW,GAAG,IAAI,CAAC4uB,kBAAkB;QAE3C,IAAK5uB,WAAW,KAAK,IAAI,EAAG;UAE3B,IAAMqyB,gBAAgB,GAAGryB,WAAW,CAACC,QAAQ,CAAE7vF,IAAK,CAAC,CAAE,CAAC,CAAE;UAE1DyjB,MAAM,IAAIw+F,gBAAgB;UAE1B,IAAKjiH,IAAI,GAAG4vF,WAAW,CAACW,kBAAkB,CAAE,CAAC,CAAE,EAAG;YAEjD,IAAI,CAAC6uB,UAAU,CAAC,CAAC;YAEjB,IAAK6C,gBAAgB,KAAK,CAAC,EAAG;cAE7B;cACA,IAAI,CAAC/uJ,OAAO,GAAG,KAAK;YAErB;UAED;QAED;MAED;MAEA,IAAI,CAAC0rJ,gBAAgB,GAAGn7F,MAAM;MAC9B,OAAOA,MAAM;IAEd;EAAC;IAAAz3E,GAAA;IAAAE,KAAA,EAED,SAAA21K,iBAAkB7hH,IAAI,EAAG;MAExB,IAAIq0F,SAAS,GAAG,CAAC;MAEjB,IAAK,CAAE,IAAI,CAACyqB,MAAM,EAAG;QAEpBzqB,SAAS,GAAG,IAAI,CAACA,SAAS;QAE1B,IAAMzE,WAAW,GAAG,IAAI,CAAC2uB,qBAAqB;QAE9C,IAAK3uB,WAAW,KAAK,IAAI,EAAG;UAE3B,IAAMqyB,gBAAgB,GAAGryB,WAAW,CAACC,QAAQ,CAAE7vF,IAAK,CAAC,CAAE,CAAC,CAAE;UAE1Dq0F,SAAS,IAAI4tB,gBAAgB;UAE7B,IAAKjiH,IAAI,GAAG4vF,WAAW,CAACW,kBAAkB,CAAE,CAAC,CAAE,EAAG;YAEjD,IAAI,CAAC8uB,WAAW,CAAC,CAAC;YAElB,IAAKhrB,SAAS,KAAK,CAAC,EAAG;cAEtB;cACA,IAAI,CAACyqB,MAAM,GAAG,IAAI;YAEnB,CAAC,MAAM;cAEN;cACA,IAAI,CAACzqB,SAAS,GAAGA,SAAS;YAE3B;UAED;QAED;MAED;MAEA,IAAI,CAACsqB,mBAAmB,GAAGtqB,SAAS;MACpC,OAAOA,SAAS;IAEjB;EAAC;IAAAroJ,GAAA;IAAAE,KAAA,EAED,SAAA61K,YAAaN,SAAS,EAAG;MAExB,IAAM3qB,QAAQ,GAAG,IAAI,CAAC+mB,KAAK,CAAC/mB,QAAQ;MACpC,IAAM6Y,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAI3vG,IAAI,GAAG,IAAI,CAACA,IAAI,GAAGyhH,SAAS;MAChC,IAAIS,SAAS,GAAG,IAAI,CAACzD,UAAU;MAE/B,IAAM0D,QAAQ,GAAKxS,IAAI,KAAK1xJ,YAAc;MAE1C,IAAKwjK,SAAS,KAAK,CAAC,EAAG;QAEtB,IAAKS,SAAS,KAAK,CAAE,CAAC,EAAG,OAAOliH,IAAI;QAEpC,OAASmiH,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAC,MAAO,CAAC,GAAKprB,QAAQ,GAAG92F,IAAI,GAAGA,IAAI;MAExE;MAEA,IAAK2vG,IAAI,KAAK5xJ,QAAQ,EAAG;QAExB,IAAKmkK,SAAS,KAAK,CAAE,CAAC,EAAG;UAExB;;UAEA,IAAI,CAACzD,UAAU,GAAG,CAAC;UACnB,IAAI,CAAC2D,WAAW,CAAE,IAAI,EAAE,IAAI,EAAE,KAAM,CAAC;QAEtC;QAEAC,WAAW,EAAE;UAEZ,IAAKriH,IAAI,IAAI82F,QAAQ,EAAG;YAEvB92F,IAAI,GAAG82F,QAAQ;UAEhB,CAAC,MAAM,IAAK92F,IAAI,GAAG,CAAC,EAAG;YAEtBA,IAAI,GAAG,CAAC;UAET,CAAC,MAAM;YAEN,IAAI,CAACA,IAAI,GAAGA,IAAI;YAEhB,MAAMqiH,WAAW;UAElB;UAEA,IAAK,IAAI,CAACtD,iBAAiB,EAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC,KAC5C,IAAI,CAAC5rJ,OAAO,GAAG,KAAK;UAEzB,IAAI,CAAC8sC,IAAI,GAAGA,IAAI;UAEhB,IAAI,CAAC49G,MAAM,CAACn7J,aAAa,CAAE;YAC1B1U,IAAI,EAAE,UAAU;YAAE+yK,MAAM,EAAE,IAAI;YAC9Bx1I,SAAS,EAAEm2I,SAAS,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG;UAClC,CAAE,CAAC;QAEJ;MAED,CAAC,MAAM;QAAE;;QAER,IAAKS,SAAS,KAAK,CAAE,CAAC,EAAG;UAExB;;UAEA,IAAKT,SAAS,IAAI,CAAC,EAAG;YAErBS,SAAS,GAAG,CAAC;YAEb,IAAI,CAACE,WAAW,CAAE,IAAI,EAAE,IAAI,CAACvD,WAAW,KAAK,CAAC,EAAEsD,QAAS,CAAC;UAE3D,CAAC,MAAM;YAEN;YACA;YACA;;YAEA,IAAI,CAACC,WAAW,CAAE,IAAI,CAACvD,WAAW,KAAK,CAAC,EAAE,IAAI,EAAEsD,QAAS,CAAC;UAE3D;QAED;QAEA,IAAKniH,IAAI,IAAI82F,QAAQ,IAAI92F,IAAI,GAAG,CAAC,EAAG;UAEnC;;UAEA,IAAMsiH,SAAS,GAAGt/J,IAAI,CAACsC,KAAK,CAAE06C,IAAI,GAAG82F,QAAS,CAAC,CAAC,CAAC;UACjD92F,IAAI,IAAI82F,QAAQ,GAAGwrB,SAAS;UAE5BJ,SAAS,IAAIl/J,IAAI,CAACgC,GAAG,CAAEs9J,SAAU,CAAC;UAElC,IAAMC,OAAO,GAAG,IAAI,CAAC1D,WAAW,GAAGqD,SAAS;UAE5C,IAAKK,OAAO,IAAI,CAAC,EAAG;YAEnB;;YAEA,IAAK,IAAI,CAACxD,iBAAiB,EAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC,KAC5C,IAAI,CAAC5rJ,OAAO,GAAG,KAAK;YAEzB8sC,IAAI,GAAGyhH,SAAS,GAAG,CAAC,GAAG3qB,QAAQ,GAAG,CAAC;YAEnC,IAAI,CAAC92F,IAAI,GAAGA,IAAI;YAEhB,IAAI,CAAC49G,MAAM,CAACn7J,aAAa,CAAE;cAC1B1U,IAAI,EAAE,UAAU;cAAE+yK,MAAM,EAAE,IAAI;cAC9Bx1I,SAAS,EAAEm2I,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE;YAClC,CAAE,CAAC;UAEJ,CAAC,MAAM;YAEN;;YAEA,IAAKc,OAAO,KAAK,CAAC,EAAG;cAEpB;;cAEA,IAAMC,OAAO,GAAGf,SAAS,GAAG,CAAC;cAC7B,IAAI,CAACW,WAAW,CAAEI,OAAO,EAAE,CAAEA,OAAO,EAAEL,QAAS,CAAC;YAEjD,CAAC,MAAM;cAEN,IAAI,CAACC,WAAW,CAAE,KAAK,EAAE,KAAK,EAAED,QAAS,CAAC;YAE3C;YAEA,IAAI,CAAC1D,UAAU,GAAGyD,SAAS;YAE3B,IAAI,CAACliH,IAAI,GAAGA,IAAI;YAEhB,IAAI,CAAC49G,MAAM,CAACn7J,aAAa,CAAE;cAC1B1U,IAAI,EAAE,MAAM;cAAE+yK,MAAM,EAAE,IAAI;cAAEwB,SAAS,EAAEA;YACxC,CAAE,CAAC;UAEJ;QAED,CAAC,MAAM;UAEN,IAAI,CAACtiH,IAAI,GAAGA,IAAI;QAEjB;QAEA,IAAKmiH,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAC,MAAO,CAAC,EAAG;UAE1C;;UAEA,OAAOprB,QAAQ,GAAG92F,IAAI;QAEvB;MAED;MAEA,OAAOA,IAAI;IAEZ;EAAC;IAAAh0D,GAAA;IAAAE,KAAA,EAED,SAAAk2K,YAAaI,OAAO,EAAEC,KAAK,EAAEN,QAAQ,EAAG;MAEvC,IAAMxxB,QAAQ,GAAG,IAAI,CAACutB,oBAAoB;MAE1C,IAAKiE,QAAQ,EAAG;QAEfxxB,QAAQ,CAACsB,WAAW,GAAG3zI,eAAe;QACtCqyI,QAAQ,CAACuB,SAAS,GAAG5zI,eAAe;MAErC,CAAC,MAAM;QAEN;;QAEA,IAAKkkK,OAAO,EAAG;UAEd7xB,QAAQ,CAACsB,WAAW,GAAG,IAAI,CAAC+sB,gBAAgB,GAAG1gK,eAAe,GAAGD,mBAAmB;QAErF,CAAC,MAAM;UAENsyI,QAAQ,CAACsB,WAAW,GAAG1zI,gBAAgB;QAExC;QAEA,IAAKkkK,KAAK,EAAG;UAEZ9xB,QAAQ,CAACuB,SAAS,GAAG,IAAI,CAAC+sB,cAAc,GAAG3gK,eAAe,GAAGD,mBAAmB;QAEjF,CAAC,MAAM;UAENsyI,QAAQ,CAACuB,SAAS,GAAK3zI,gBAAgB;QAExC;MAED;IAED;EAAC;IAAAvS,GAAA;IAAAE,KAAA,EAED,SAAA2zK,gBAAiB/oB,QAAQ,EAAE4rB,SAAS,EAAEC,UAAU,EAAG;MAElD,IAAMjF,KAAK,GAAG,IAAI,CAACE,MAAM;QAAE7Q,GAAG,GAAG2Q,KAAK,CAAC19G,IAAI;MAC3C,IAAI4vF,WAAW,GAAG,IAAI,CAAC4uB,kBAAkB;MAEzC,IAAK5uB,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,GAAG8tB,KAAK,CAACwD,uBAAuB,CAAC,CAAC;QAC7C,IAAI,CAAC1C,kBAAkB,GAAG5uB,WAAW;MAEtC;MAEA,IAAMzC,KAAK,GAAGyC,WAAW,CAACW,kBAAkB;QAC3C/hJ,MAAM,GAAGohJ,WAAW,CAACY,YAAY;MAElCrD,KAAK,CAAE,CAAC,CAAE,GAAG4f,GAAG;MAChBv+J,MAAM,CAAE,CAAC,CAAE,GAAGk0K,SAAS;MACvBv1B,KAAK,CAAE,CAAC,CAAE,GAAG4f,GAAG,GAAGjW,QAAQ;MAC3BtoJ,MAAM,CAAE,CAAC,CAAE,GAAGm0K,UAAU;MAExB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAlF,eAAA;AAAA;AAAAjyK,OAAA,CAAAiyK,eAAA,GAAAA,eAAA;AAIF,IAAMmF,gCAAgC,GAAG,IAAIh7J,YAAY,CAAE,CAAE,CAAC;AAAC,IAGzDi7J,cAAc,0BAAAC,iBAAA;EAAA1sJ,SAAA,CAAAysJ,cAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAAzsJ,YAAA,CAAAusJ,cAAA;EAEnB,SAAAA,eAAa3H,IAAI,EAAG;IAAA,IAAA8H,QAAA;IAAA3uK,eAAA,OAAAwuK,cAAA;IAEnBG,QAAA,GAAAD,SAAA,CAAA/0K,IAAA;IAEAg1K,QAAA,CAAKzB,KAAK,GAAGrG,IAAI;IACjB8H,QAAA,CAAKC,kBAAkB,CAAC,CAAC;IACzBD,QAAA,CAAKE,UAAU,GAAG,CAAC;IACnBF,QAAA,CAAKhjH,IAAI,GAAG,CAAC;IACbgjH,QAAA,CAAK3uB,SAAS,GAAG,GAAG;IAAC,OAAA2uB,QAAA;EAEtB;EAACnuK,YAAA,CAAAguK,cAAA;IAAA72K,GAAA;IAAAE,KAAA,EAED,SAAAi3K,YAAarC,MAAM,EAAEsC,eAAe,EAAG;MAEtC,IAAMlI,IAAI,GAAG4F,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK;QAC3CtzB,MAAM,GAAG6yB,MAAM,CAACjD,KAAK,CAAC5vB,MAAM;QAC5B8vB,OAAO,GAAG9vB,MAAM,CAACp8I,MAAM;QACvBqmK,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;QACnCJ,YAAY,GAAG8C,MAAM,CAAC3C,aAAa;QACnCkF,QAAQ,GAAGnI,IAAI,CAACz3J,IAAI;QACpB6/J,cAAc,GAAG,IAAI,CAACC,sBAAsB;MAE7C,IAAIC,cAAc,GAAGF,cAAc,CAAED,QAAQ,CAAE;MAE/C,IAAKG,cAAc,KAAKjzK,SAAS,EAAG;QAEnCizK,cAAc,GAAG,CAAC,CAAC;QACnBF,cAAc,CAAED,QAAQ,CAAE,GAAGG,cAAc;MAE5C;MAEA,KAAM,IAAI1xK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKisK,OAAO,EAAE,EAAGjsK,CAAC,EAAG;QAEtC,IAAMo8I,KAAK,GAAGD,MAAM,CAAEn8I,CAAC,CAAE;UACxBomJ,SAAS,GAAGhK,KAAK,CAAC97I,IAAI;QAEvB,IAAIsiK,OAAO,GAAG8O,cAAc,CAAEtrB,SAAS,CAAE;QAEzC,IAAKwc,OAAO,KAAKnkK,SAAS,EAAG;UAE5B,EAAGmkK,OAAO,CAACqB,cAAc;UACzBmC,QAAQ,CAAEpmK,CAAC,CAAE,GAAG4iK,OAAO;QAExB,CAAC,MAAM;UAENA,OAAO,GAAGwD,QAAQ,CAAEpmK,CAAC,CAAE;UAEvB,IAAK4iK,OAAO,KAAKnkK,SAAS,EAAG;YAE5B;;YAEA,IAAKmkK,OAAO,CAAC2J,WAAW,KAAK,IAAI,EAAG;cAEnC,EAAG3J,OAAO,CAACqB,cAAc;cACzB,IAAI,CAAC0N,mBAAmB,CAAE/O,OAAO,EAAE2O,QAAQ,EAAEnrB,SAAU,CAAC;YAEzD;YAEA;UAED;UAEA,IAAMppE,IAAI,GAAGs0F,eAAe,IAAIA,eAAe,CAC9ChF,iBAAiB,CAAEtsK,CAAC,CAAE,CAAC4iK,OAAO,CAACgD,UAAU;UAE1ChD,OAAO,GAAG,IAAID,aAAa,CAC1BkD,eAAe,CAACnqK,MAAM,CAAE0tK,IAAI,EAAEhjB,SAAS,EAAEppE,IAAK,CAAC,EAC/Co/D,KAAK,CAACc,aAAa,EAAEd,KAAK,CAACE,YAAY,CAAC,CAAE,CAAC;UAE5C,EAAGsmB,OAAO,CAACqB,cAAc;UACzB,IAAI,CAAC0N,mBAAmB,CAAE/O,OAAO,EAAE2O,QAAQ,EAAEnrB,SAAU,CAAC;UAExDggB,QAAQ,CAAEpmK,CAAC,CAAE,GAAG4iK,OAAO;QAExB;QAEAsJ,YAAY,CAAElsK,CAAC,CAAE,CAACg+I,YAAY,GAAG4kB,OAAO,CAACjjJ,MAAM;MAEhD;IAED;EAAC;IAAAzlB,GAAA;IAAAE,KAAA,EAED,SAAAgzK,gBAAiB4B,MAAM,EAAG;MAEzB,IAAK,CAAE,IAAI,CAACvB,eAAe,CAAEuB,MAAO,CAAC,EAAG;QAEvC,IAAKA,MAAM,CAACzC,WAAW,KAAK,IAAI,EAAG;UAElC;UACA;;UAEA,IAAMgF,QAAQ,GAAG,CAAEvC,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK,EAAG99J,IAAI;YACxDigK,QAAQ,GAAG5C,MAAM,CAACjD,KAAK,CAACp6J,IAAI;YAC5BkgK,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;UAEjD,IAAI,CAACP,WAAW,CAAErC,MAAM,EACvB6C,cAAc,IAAIA,cAAc,CAACE,YAAY,CAAE,CAAC,CAAG,CAAC;UAErD,IAAI,CAACC,kBAAkB,CAAEhD,MAAM,EAAE4C,QAAQ,EAAEL,QAAS,CAAC;QAEtD;QAEA,IAAMnL,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;;QAEzC;QACA,KAAM,IAAItsK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGm0J,QAAQ,CAACrmK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;UAErD,IAAM4iK,OAAO,GAAGwD,QAAQ,CAAEpmK,CAAC,CAAE;UAE7B,IAAK4iK,OAAO,CAACoB,QAAQ,EAAG,KAAK,CAAC,EAAG;YAEhC,IAAI,CAACiO,YAAY,CAAErP,OAAQ,CAAC;YAC5BA,OAAO,CAAC6B,iBAAiB,CAAC,CAAC;UAE5B;QAED;QAEA,IAAI,CAACyN,WAAW,CAAElD,MAAO,CAAC;MAE3B;IAED;EAAC;IAAA90K,GAAA;IAAAE,KAAA,EAED,SAAAizK,kBAAmB2B,MAAM,EAAG;MAE3B,IAAK,IAAI,CAACvB,eAAe,CAAEuB,MAAO,CAAC,EAAG;QAErC,IAAM5I,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;;QAEzC;QACA,KAAM,IAAItsK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGm0J,QAAQ,CAACrmK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;UAErD,IAAM4iK,OAAO,GAAGwD,QAAQ,CAAEpmK,CAAC,CAAE;UAE7B,IAAK,EAAG4iK,OAAO,CAACoB,QAAQ,KAAK,CAAC,EAAG;YAEhCpB,OAAO,CAAC+B,oBAAoB,CAAC,CAAC;YAC9B,IAAI,CAACwN,gBAAgB,CAAEvP,OAAQ,CAAC;UAEjC;QAED;QAEA,IAAI,CAACwP,eAAe,CAAEpD,MAAO,CAAC;MAE/B;IAED;;IAEA;EAAA;IAAA90K,GAAA;IAAAE,KAAA,EAEA,SAAA+2K,mBAAA,EAAqB;MAEpB,IAAI,CAACkB,QAAQ,GAAG,EAAE,CAAC,CAAC;MACpB,IAAI,CAACC,eAAe,GAAG,CAAC;MAExB,IAAI,CAACR,cAAc,GAAG,CAAC,CAAC;MACxB;MACA;MACA;MACA;MACA;;MAGA,IAAI,CAAC9L,SAAS,GAAG,EAAE,CAAC,CAAC;MACrB,IAAI,CAACuM,gBAAgB,GAAG,CAAC;MAEzB,IAAI,CAACd,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;;MAGlC,IAAI,CAACe,oBAAoB,GAAG,EAAE,CAAC,CAAC;MAChC,IAAI,CAACC,2BAA2B,GAAG,CAAC;MAEpC,IAAM5vH,KAAK,GAAG,IAAI;MAElB,IAAI,CAACsnH,KAAK,GAAG;QAEZuI,OAAO,EAAE;UACR,IAAIxnB,KAAKA,CAAA,EAAG;YAEX,OAAOroG,KAAK,CAACwvH,QAAQ,CAACtyK,MAAM;UAE7B,CAAC;UACD,IAAIqqK,KAAKA,CAAA,EAAG;YAEX,OAAOvnH,KAAK,CAACyvH,eAAe;UAE7B;QACD,CAAC;QACDlM,QAAQ,EAAE;UACT,IAAIlb,KAAKA,CAAA,EAAG;YAEX,OAAOroG,KAAK,CAACmjH,SAAS,CAACjmK,MAAM;UAE9B,CAAC;UACD,IAAIqqK,KAAKA,CAAA,EAAG;YAEX,OAAOvnH,KAAK,CAAC0vH,gBAAgB;UAE9B;QACD,CAAC;QACDI,mBAAmB,EAAE;UACpB,IAAIznB,KAAKA,CAAA,EAAG;YAEX,OAAOroG,KAAK,CAAC2vH,oBAAoB,CAACzyK,MAAM;UAEzC,CAAC;UACD,IAAIqqK,KAAKA,CAAA,EAAG;YAEX,OAAOvnH,KAAK,CAAC4vH,2BAA2B;UAEzC;QACD;MAED,CAAC;IAEF;;IAEA;EAAA;IAAAv4K,GAAA;IAAAE,KAAA,EAEA,SAAAqzK,gBAAiBuB,MAAM,EAAG;MAEzB,IAAMv+J,KAAK,GAAGu+J,MAAM,CAACzC,WAAW;MAChC,OAAO97J,KAAK,KAAK,IAAI,IAAIA,KAAK,GAAG,IAAI,CAAC6hK,eAAe;IAEtD;EAAC;IAAAp4K,GAAA;IAAAE,KAAA,EAED,SAAA43K,mBAAoBhD,MAAM,EAAE4C,QAAQ,EAAEL,QAAQ,EAAG;MAEhD,IAAMmB,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BO,aAAa,GAAG,IAAI,CAACd,cAAc;MAEpC,IAAID,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;MAE9C,IAAKC,cAAc,KAAKpzK,SAAS,EAAG;QAEnCozK,cAAc,GAAG;UAEhBE,YAAY,EAAE,CAAE/C,MAAM,CAAE;UACxB6D,YAAY,EAAE,CAAC;QAEhB,CAAC;QAED7D,MAAM,CAACxC,iBAAiB,GAAG,CAAC;QAE5BoG,aAAa,CAAEhB,QAAQ,CAAE,GAAGC,cAAc;MAE3C,CAAC,MAAM;QAEN,IAAME,YAAY,GAAGF,cAAc,CAACE,YAAY;QAEhD/C,MAAM,CAACxC,iBAAiB,GAAGuF,YAAY,CAAChyK,MAAM;QAC9CgyK,YAAY,CAACvyK,IAAI,CAAEwvK,MAAO,CAAC;MAE5B;MAEAA,MAAM,CAACzC,WAAW,GAAGmG,OAAO,CAAC3yK,MAAM;MACnC2yK,OAAO,CAAClzK,IAAI,CAAEwvK,MAAO,CAAC;MAEtB6C,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE,GAAGvC,MAAM;IAEjD;EAAC;IAAA90K,GAAA;IAAAE,KAAA,EAED,SAAA04K,sBAAuB9D,MAAM,EAAG;MAE/B,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BU,kBAAkB,GAAGL,OAAO,CAAEA,OAAO,CAAC3yK,MAAM,GAAG,CAAC,CAAE;QAClDizK,UAAU,GAAGhE,MAAM,CAACzC,WAAW;MAEhCwG,kBAAkB,CAACxG,WAAW,GAAGyG,UAAU;MAC3CN,OAAO,CAAEM,UAAU,CAAE,GAAGD,kBAAkB;MAC1CL,OAAO,CAACxxK,GAAG,CAAC,CAAC;MAEb8tK,MAAM,CAACzC,WAAW,GAAG,IAAI;MAGzB,IAAMqF,QAAQ,GAAG5C,MAAM,CAACjD,KAAK,CAACp6J,IAAI;QACjCihK,aAAa,GAAG,IAAI,CAACd,cAAc;QACnCD,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;QAC1CqB,mBAAmB,GAAGpB,cAAc,CAACE,YAAY;QAEjDmB,eAAe,GACdD,mBAAmB,CAAEA,mBAAmB,CAAClzK,MAAM,GAAG,CAAC,CAAE;QAEtDozK,gBAAgB,GAAGnE,MAAM,CAACxC,iBAAiB;MAE5C0G,eAAe,CAAC1G,iBAAiB,GAAG2G,gBAAgB;MACpDF,mBAAmB,CAAEE,gBAAgB,CAAE,GAAGD,eAAe;MACzDD,mBAAmB,CAAC/xK,GAAG,CAAC,CAAC;MAEzB8tK,MAAM,CAACxC,iBAAiB,GAAG,IAAI;MAG/B,IAAMqG,YAAY,GAAGhB,cAAc,CAACgB,YAAY;QAC/CtB,QAAQ,GAAG,CAAEvC,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK,EAAG99J,IAAI;MAEpD,OAAOkhK,YAAY,CAAEtB,QAAQ,CAAE;MAE/B,IAAK0B,mBAAmB,CAAClzK,MAAM,KAAK,CAAC,EAAG;QAEvC,OAAO6yK,aAAa,CAAEhB,QAAQ,CAAE;MAEjC;MAEA,IAAI,CAACwB,gCAAgC,CAAEpE,MAAO,CAAC;IAEhD;EAAC;IAAA90K,GAAA;IAAAE,KAAA,EAED,SAAAg5K,iCAAkCpE,MAAM,EAAG;MAE1C,IAAM5I,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;MAEzC,KAAM,IAAItsK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAGm0J,QAAQ,CAACrmK,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;QAErD,IAAM4iK,OAAO,GAAGwD,QAAQ,CAAEpmK,CAAC,CAAE;QAE7B,IAAK,EAAG4iK,OAAO,CAACqB,cAAc,KAAK,CAAC,EAAG;UAEtC,IAAI,CAACoP,sBAAsB,CAAEzQ,OAAQ,CAAC;QAEvC;MAED;IAED;EAAC;IAAA1oK,GAAA;IAAAE,KAAA,EAED,SAAA83K,YAAalD,MAAM,EAAG;MAErB;MACA;MACA;MACA;MACA;;MAEA,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BiB,SAAS,GAAGtE,MAAM,CAACzC,WAAW;QAE9BgH,eAAe,GAAG,IAAI,CAACjB,eAAe,EAAG;QAEzCkB,mBAAmB,GAAGd,OAAO,CAAEa,eAAe,CAAE;MAEjDvE,MAAM,CAACzC,WAAW,GAAGgH,eAAe;MACpCb,OAAO,CAAEa,eAAe,CAAE,GAAGvE,MAAM;MAEnCwE,mBAAmB,CAACjH,WAAW,GAAG+G,SAAS;MAC3CZ,OAAO,CAAEY,SAAS,CAAE,GAAGE,mBAAmB;IAE3C;EAAC;IAAAt5K,GAAA;IAAAE,KAAA,EAED,SAAAg4K,gBAAiBpD,MAAM,EAAG;MAEzB;MACA;MACA;MACA;MACA;;MAEA,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BiB,SAAS,GAAGtE,MAAM,CAACzC,WAAW;QAE9BkH,kBAAkB,GAAG,EAAG,IAAI,CAACnB,eAAe;QAE5CoB,gBAAgB,GAAGhB,OAAO,CAAEe,kBAAkB,CAAE;MAEjDzE,MAAM,CAACzC,WAAW,GAAGkH,kBAAkB;MACvCf,OAAO,CAAEe,kBAAkB,CAAE,GAAGzE,MAAM;MAEtC0E,gBAAgB,CAACnH,WAAW,GAAG+G,SAAS;MACxCZ,OAAO,CAAEY,SAAS,CAAE,GAAGI,gBAAgB;IAExC;;IAEA;EAAA;IAAAx5K,GAAA;IAAAE,KAAA,EAEA,SAAAu3K,oBAAqB/O,OAAO,EAAE2O,QAAQ,EAAEnrB,SAAS,EAAG;MAEnD,IAAMorB,cAAc,GAAG,IAAI,CAACC,sBAAsB;QACjDrL,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE1B,IAAI2N,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;MAE9C,IAAKoC,aAAa,KAAKl1K,SAAS,EAAG;QAElCk1K,aAAa,GAAG,CAAC,CAAC;QAClBnC,cAAc,CAAED,QAAQ,CAAE,GAAGoC,aAAa;MAE3C;MAEAA,aAAa,CAAEvtB,SAAS,CAAE,GAAGwc,OAAO;MAEpCA,OAAO,CAAC2J,WAAW,GAAGnG,QAAQ,CAACrmK,MAAM;MACrCqmK,QAAQ,CAAC5mK,IAAI,CAAEojK,OAAQ,CAAC;IAEzB;EAAC;IAAA1oK,GAAA;IAAAE,KAAA,EAED,SAAAi5K,uBAAwBzQ,OAAO,EAAG;MAEjC,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9B4N,WAAW,GAAGhR,OAAO,CAACA,OAAO;QAC7B2O,QAAQ,GAAGqC,WAAW,CAACtN,QAAQ,CAAC30J,IAAI;QACpCy0I,SAAS,GAAGwtB,WAAW,CAAC52F,IAAI;QAC5Bw0F,cAAc,GAAG,IAAI,CAACC,sBAAsB;QAC5CkC,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;QAE1CsC,mBAAmB,GAAGzN,QAAQ,CAAEA,QAAQ,CAACrmK,MAAM,GAAG,CAAC,CAAE;QACrDizK,UAAU,GAAGpQ,OAAO,CAAC2J,WAAW;MAEjCsH,mBAAmB,CAACtH,WAAW,GAAGyG,UAAU;MAC5C5M,QAAQ,CAAE4M,UAAU,CAAE,GAAGa,mBAAmB;MAC5CzN,QAAQ,CAACllK,GAAG,CAAC,CAAC;MAEd,OAAOyyK,aAAa,CAAEvtB,SAAS,CAAE;MAEjC,IAAKxsJ,MAAM,CAACkH,IAAI,CAAE6yK,aAAc,CAAC,CAAC5zK,MAAM,KAAK,CAAC,EAAG;QAEhD,OAAOyxK,cAAc,CAAED,QAAQ,CAAE;MAElC;IAED;EAAC;IAAAr3K,GAAA;IAAAE,KAAA,EAED,SAAA63K,aAAcrP,OAAO,EAAG;MAEvB,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9BsN,SAAS,GAAG1Q,OAAO,CAAC2J,WAAW;QAE/BgH,eAAe,GAAG,IAAI,CAAChB,gBAAgB,EAAG;QAE1CuB,oBAAoB,GAAG1N,QAAQ,CAAEmN,eAAe,CAAE;MAEnD3Q,OAAO,CAAC2J,WAAW,GAAGgH,eAAe;MACrCnN,QAAQ,CAAEmN,eAAe,CAAE,GAAG3Q,OAAO;MAErCkR,oBAAoB,CAACvH,WAAW,GAAG+G,SAAS;MAC5ClN,QAAQ,CAAEkN,SAAS,CAAE,GAAGQ,oBAAoB;IAE7C;EAAC;IAAA55K,GAAA;IAAAE,KAAA,EAED,SAAA+3K,iBAAkBvP,OAAO,EAAG;MAE3B,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9BsN,SAAS,GAAG1Q,OAAO,CAAC2J,WAAW;QAE/BkH,kBAAkB,GAAG,EAAG,IAAI,CAAClB,gBAAgB;QAE7CwB,iBAAiB,GAAG3N,QAAQ,CAAEqN,kBAAkB,CAAE;MAEnD7Q,OAAO,CAAC2J,WAAW,GAAGkH,kBAAkB;MACxCrN,QAAQ,CAAEqN,kBAAkB,CAAE,GAAG7Q,OAAO;MAExCmR,iBAAiB,CAACxH,WAAW,GAAG+G,SAAS;MACzClN,QAAQ,CAAEkN,SAAS,CAAE,GAAGS,iBAAiB;IAE1C;;IAGA;EAAA;IAAA75K,GAAA;IAAAE,KAAA,EAEA,SAAAg1K,wBAAA,EAA0B;MAEzB,IAAMlD,YAAY,GAAG,IAAI,CAACsG,oBAAoB;QAC7Ce,eAAe,GAAG,IAAI,CAACd,2BAA2B,EAAG;MAEtD,IAAI30B,WAAW,GAAGouB,YAAY,CAAEqH,eAAe,CAAE;MAEjD,IAAKz1B,WAAW,KAAKr/I,SAAS,EAAG;QAEhCq/I,WAAW,GAAG,IAAIoD,iBAAiB,CAClC,IAAIprI,YAAY,CAAE,CAAE,CAAC,EAAE,IAAIA,YAAY,CAAE,CAAE,CAAC,EAC5C,CAAC,EAAEg7J,gCAAiC,CAAC;QAEtChzB,WAAW,CAACk2B,YAAY,GAAGT,eAAe;QAC1CrH,YAAY,CAAEqH,eAAe,CAAE,GAAGz1B,WAAW;MAE9C;MAEA,OAAOA,WAAW;IAEnB;EAAC;IAAA5jJ,GAAA;IAAAE,KAAA,EAED,SAAAu0K,4BAA6B7wB,WAAW,EAAG;MAE1C,IAAMouB,YAAY,GAAG,IAAI,CAACsG,oBAAoB;QAC7Cc,SAAS,GAAGx1B,WAAW,CAACk2B,YAAY;QAEpCP,kBAAkB,GAAG,EAAG,IAAI,CAAChB,2BAA2B;QAExDwB,qBAAqB,GAAG/H,YAAY,CAAEuH,kBAAkB,CAAE;MAE3D31B,WAAW,CAACk2B,YAAY,GAAGP,kBAAkB;MAC7CvH,YAAY,CAAEuH,kBAAkB,CAAE,GAAG31B,WAAW;MAEhDm2B,qBAAqB,CAACD,YAAY,GAAGV,SAAS;MAC9CpH,YAAY,CAAEoH,SAAS,CAAE,GAAGW,qBAAqB;IAElD;;IAEA;IACA;IACA;EAAA;IAAA/5K,GAAA;IAAAE,KAAA,EACA,SAAA85K,WAAYh4B,IAAI,EAAEi4B,YAAY,EAAE71B,SAAS,EAAG;MAE3C,IAAM8qB,IAAI,GAAG+K,YAAY,IAAI,IAAI,CAAC1E,KAAK;QACtC8B,QAAQ,GAAGnI,IAAI,CAACz3J,IAAI;MAErB,IAAIyiK,UAAU,GAAG,OAAOl4B,IAAI,KAAK,QAAQ,GAAG6I,aAAa,CAACU,UAAU,CAAE2jB,IAAI,EAAEltB,IAAK,CAAC,GAAGA,IAAI;MAEzF,IAAM01B,QAAQ,GAAGwC,UAAU,KAAK,IAAI,GAAGA,UAAU,CAACziK,IAAI,GAAGuqI,IAAI;MAE7D,IAAM21B,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;MACtD,IAAIN,eAAe,GAAG,IAAI;MAE1B,IAAKhzB,SAAS,KAAK7/I,SAAS,EAAG;QAE9B,IAAK21K,UAAU,KAAK,IAAI,EAAG;UAE1B91B,SAAS,GAAG81B,UAAU,CAAC91B,SAAS;QAEjC,CAAC,MAAM;UAENA,SAAS,GAAG5xI,wBAAwB;QAErC;MAED;MAEA,IAAKmlK,cAAc,KAAKpzK,SAAS,EAAG;QAEnC,IAAM41K,cAAc,GAAGxC,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE;QAE9D,IAAK8C,cAAc,KAAK51K,SAAS,IAAI41K,cAAc,CAAC/1B,SAAS,KAAKA,SAAS,EAAG;UAE7E,OAAO+1B,cAAc;QAEtB;;QAEA;QACA;QACA/C,eAAe,GAAGO,cAAc,CAACE,YAAY,CAAE,CAAC,CAAE;;QAElD;QACA,IAAKqC,UAAU,KAAK,IAAI,EACvBA,UAAU,GAAG9C,eAAe,CAACvF,KAAK;MAEpC;;MAEA;MACA,IAAKqI,UAAU,KAAK,IAAI,EAAG,OAAO,IAAI;;MAEtC;MACA,IAAME,SAAS,GAAG,IAAI3I,eAAe,CAAE,IAAI,EAAEyI,UAAU,EAAED,YAAY,EAAE71B,SAAU,CAAC;MAElF,IAAI,CAAC+yB,WAAW,CAAEiD,SAAS,EAAEhD,eAAgB,CAAC;;MAE9C;MACA,IAAI,CAACU,kBAAkB,CAAEsC,SAAS,EAAE1C,QAAQ,EAAEL,QAAS,CAAC;MAExD,OAAO+C,SAAS;IAEjB;;IAEA;EAAA;IAAAp6K,GAAA;IAAAE,KAAA,EACA,SAAAi6K,eAAgBn4B,IAAI,EAAEi4B,YAAY,EAAG;MAEpC,IAAM/K,IAAI,GAAG+K,YAAY,IAAI,IAAI,CAAC1E,KAAK;QACtC8B,QAAQ,GAAGnI,IAAI,CAACz3J,IAAI;QAEpByiK,UAAU,GAAG,OAAOl4B,IAAI,KAAK,QAAQ,GACpC6I,aAAa,CAACU,UAAU,CAAE2jB,IAAI,EAAEltB,IAAK,CAAC,GAAGA,IAAI;QAE9C01B,QAAQ,GAAGwC,UAAU,GAAGA,UAAU,CAACziK,IAAI,GAAGuqI,IAAI;QAE9C21B,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;MAEjD,IAAKC,cAAc,KAAKpzK,SAAS,EAAG;QAEnC,OAAOozK,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE,IAAI,IAAI;MAEvD;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAr3K,GAAA;IAAAE,KAAA,EACA,SAAAm6K,cAAA,EAAgB;MAEf,IAAM7B,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BmC,QAAQ,GAAG,IAAI,CAAClC,eAAe;MAEhC,KAAM,IAAItyK,CAAC,GAAGw0K,QAAQ,GAAG,CAAC,EAAEx0K,CAAC,IAAI,CAAC,EAAE,EAAGA,CAAC,EAAG;QAE1C0yK,OAAO,CAAE1yK,CAAC,CAAE,CAACuB,IAAI,CAAC,CAAC;MAEpB;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAArH,GAAA;IAAAE,KAAA,EACA,SAAAsyB,OAAQijJ,SAAS,EAAG;MAEnBA,SAAS,IAAI,IAAI,CAACptB,SAAS;MAE3B,IAAMmwB,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BmC,QAAQ,GAAG,IAAI,CAAClC,eAAe;QAE/BpkH,IAAI,GAAG,IAAI,CAACA,IAAI,IAAIyhH,SAAS;QAC7BC,aAAa,GAAG1+J,IAAI,CAAC8qB,IAAI,CAAE2zI,SAAU,CAAC;QAEtCxL,SAAS,GAAG,IAAI,CAACiN,UAAU,IAAI,CAAC;;MAEjC;;MAEA,KAAM,IAAIpxK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKw0K,QAAQ,EAAE,EAAGx0K,CAAC,EAAG;QAEvC,IAAMgvK,MAAM,GAAG0D,OAAO,CAAE1yK,CAAC,CAAE;QAE3BgvK,MAAM,CAACU,OAAO,CAAExhH,IAAI,EAAEyhH,SAAS,EAAEC,aAAa,EAAEzL,SAAU,CAAC;MAE5D;;MAEA;;MAEA,IAAMiC,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9ByE,SAAS,GAAG,IAAI,CAAC8H,gBAAgB;MAElC,KAAM,IAAIvyK,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKyqK,SAAS,EAAE,EAAGzqK,IAAC,EAAG;QAExComK,QAAQ,CAAEpmK,IAAC,CAAE,CAACumC,KAAK,CAAE49H,SAAU,CAAC;MAEjC;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAjqK,GAAA;IAAAE,KAAA,EACA,SAAAq6K,QAASC,aAAa,EAAG;MAExB,IAAI,CAACxmH,IAAI,GAAG,CAAC,CAAC,CAAC;MACf,KAAM,IAAIluD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACqyK,QAAQ,CAACtyK,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEjD,IAAI,CAACqyK,QAAQ,CAAEryK,CAAC,CAAE,CAACkuD,IAAI,GAAG,CAAC,CAAC,CAAC;MAE9B;;MAEA,OAAO,IAAI,CAACxhC,MAAM,CAAEgoJ,aAAc,CAAC,CAAC,CAAC;IAEtC;;IAEA;EAAA;IAAAx6K,GAAA;IAAAE,KAAA,EACA,SAAAo1K,QAAA,EAAU;MAET,OAAO,IAAI,CAACC,KAAK;IAElB;;IAEA;EAAA;IAAAv1K,GAAA;IAAAE,KAAA,EACA,SAAAu6K,YAAaz4B,IAAI,EAAG;MAEnB,IAAMw2B,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BT,QAAQ,GAAG11B,IAAI,CAACvqI,IAAI;QACpBihK,aAAa,GAAG,IAAI,CAACd,cAAc;QACnCD,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;MAE3C,IAAKC,cAAc,KAAKpzK,SAAS,EAAG;QAEnC;QACA;QACA;;QAEA,IAAMm2K,eAAe,GAAG/C,cAAc,CAACE,YAAY;QAEnD,KAAM,IAAI/xK,CAAC,GAAG,CAAC,EAAEiS,CAAC,GAAG2iK,eAAe,CAAC70K,MAAM,EAAEC,CAAC,KAAKiS,CAAC,EAAE,EAAGjS,CAAC,EAAG;UAE5D,IAAMgvK,MAAM,GAAG4F,eAAe,CAAE50K,CAAC,CAAE;UAEnC,IAAI,CAACqtK,iBAAiB,CAAE2B,MAAO,CAAC;UAEhC,IAAMgE,UAAU,GAAGhE,MAAM,CAACzC,WAAW;YACpCwG,kBAAkB,GAAGL,OAAO,CAAEA,OAAO,CAAC3yK,MAAM,GAAG,CAAC,CAAE;UAEnDivK,MAAM,CAACzC,WAAW,GAAG,IAAI;UACzByC,MAAM,CAACxC,iBAAiB,GAAG,IAAI;UAE/BuG,kBAAkB,CAACxG,WAAW,GAAGyG,UAAU;UAC3CN,OAAO,CAAEM,UAAU,CAAE,GAAGD,kBAAkB;UAC1CL,OAAO,CAACxxK,GAAG,CAAC,CAAC;UAEb,IAAI,CAACkyK,gCAAgC,CAAEpE,MAAO,CAAC;QAEhD;QAEA,OAAO4D,aAAa,CAAEhB,QAAQ,CAAE;MAEjC;IAED;;IAEA;EAAA;IAAA13K,GAAA;IAAAE,KAAA,EACA,SAAAy6K,YAAazL,IAAI,EAAG;MAEnB,IAAMmI,QAAQ,GAAGnI,IAAI,CAACz3J,IAAI;QACzBihK,aAAa,GAAG,IAAI,CAACd,cAAc;MAEpC,KAAM,IAAMF,QAAQ,IAAIgB,aAAa,EAAG;QAEvC,IAAMC,YAAY,GAAGD,aAAa,CAAEhB,QAAQ,CAAE,CAACiB,YAAY;UAC1D7D,MAAM,GAAG6D,YAAY,CAAEtB,QAAQ,CAAE;QAElC,IAAKvC,MAAM,KAAKvwK,SAAS,EAAG;UAE3B,IAAI,CAAC4uK,iBAAiB,CAAE2B,MAAO,CAAC;UAChC,IAAI,CAAC8D,qBAAqB,CAAE9D,MAAO,CAAC;QAErC;MAED;MAEA,IAAMwC,cAAc,GAAG,IAAI,CAACC,sBAAsB;QACjDkC,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;MAE3C,IAAKoC,aAAa,KAAKl1K,SAAS,EAAG;QAElC,KAAM,IAAM2nJ,SAAS,IAAIutB,aAAa,EAAG;UAExC,IAAM/Q,OAAO,GAAG+Q,aAAa,CAAEvtB,SAAS,CAAE;UAC1Cwc,OAAO,CAAC+B,oBAAoB,CAAC,CAAC;UAC9B,IAAI,CAAC0O,sBAAsB,CAAEzQ,OAAQ,CAAC;QAEvC;MAED;IAED;;IAEA;EAAA;IAAA1oK,GAAA;IAAAE,KAAA,EACA,SAAA06K,cAAe54B,IAAI,EAAEi4B,YAAY,EAAG;MAEnC,IAAMnF,MAAM,GAAG,IAAI,CAACqF,cAAc,CAAEn4B,IAAI,EAAEi4B,YAAa,CAAC;MAExD,IAAKnF,MAAM,KAAK,IAAI,EAAG;QAEtB,IAAI,CAAC3B,iBAAiB,CAAE2B,MAAO,CAAC;QAChC,IAAI,CAAC8D,qBAAqB,CAAE9D,MAAO,CAAC;MAErC;IAED;EAAC;EAAA,OAAA+B,cAAA;AAAA,EAjvB2B/gK,eAAe;AAAAtW,OAAA,CAAAq3K,cAAA,GAAAA,cAAA;AAAA,IAqvBtCgE,OAAO;EAEZ,SAAAA,QAAa36K,KAAK,EAAG;IAAAmI,eAAA,OAAAwyK,OAAA;IAEpB,IAAI,CAAC36K,KAAK,GAAGA,KAAK;EAEnB;EAAC2I,YAAA,CAAAgyK,OAAA;IAAA76K,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI69J,OAAO,CAAE,IAAI,CAAC36K,KAAK,CAAC8c,KAAK,KAAKzY,SAAS,GAAG,IAAI,CAACrE,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC8c,KAAK,CAAC,CAAE,CAAC;IAEvF;EAAC;EAAA,OAAA69J,OAAA;AAAA;AAAAr7K,OAAA,CAAAq7K,OAAA,GAAAA,OAAA;AAIF,IAAIC,GAAG,GAAG,CAAC;AAAC,IAENC,aAAa,0BAAAC,iBAAA;EAAA5wJ,SAAA,CAAA2wJ,aAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAA3wJ,YAAA,CAAAywJ,aAAA;EAElB,SAAAA,cAAA,EAAc;IAAA,IAAAG,QAAA;IAAA7yK,eAAA,OAAA0yK,aAAA;IAEbG,QAAA,GAAAD,SAAA,CAAAj5K,IAAA;IAEAk5K,QAAA,CAAKC,eAAe,GAAG,IAAI;IAE3Bz7K,MAAM,CAACI,cAAc,CAAAqrB,sBAAA,CAAA+vJ,QAAA,GAAQ,IAAI,EAAE;MAAEh7K,KAAK,EAAE46K,GAAG;IAAI,CAAE,CAAC;IAEtDI,QAAA,CAAK90K,IAAI,GAAG,EAAE;IAEd80K,QAAA,CAAKn9H,KAAK,GAAG/oC,eAAe;IAC5BkmK,QAAA,CAAKjxH,QAAQ,GAAG,EAAE;IAAC,OAAAixH,QAAA;EAEpB;EAACryK,YAAA,CAAAkyK,aAAA;IAAA/6K,GAAA;IAAAE,KAAA,EAED,SAAAid,IAAK6uC,OAAO,EAAG;MAEd,IAAI,CAAC/B,QAAQ,CAAC3kD,IAAI,CAAE0mD,OAAQ,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAhsD,GAAA;IAAAE,KAAA,EAED,SAAAgsC,OAAQ8f,OAAO,EAAG;MAEjB,IAAMz1C,KAAK,GAAG,IAAI,CAAC0zC,QAAQ,CAAC9zC,OAAO,CAAE61C,OAAQ,CAAC;MAE9C,IAAKz1C,KAAK,KAAK,CAAE,CAAC,EAAG,IAAI,CAAC0zC,QAAQ,CAACzzC,MAAM,CAAED,KAAK,EAAE,CAAE,CAAC;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAvW,GAAA;IAAAE,KAAA,EAED,SAAAk7K,QAASh1K,IAAI,EAAG;MAEf,IAAI,CAACA,IAAI,GAAGA,IAAI;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAApG,GAAA;IAAAE,KAAA,EAED,SAAAi+C,SAAUj+C,KAAK,EAAG;MAEjB,IAAI,CAAC69C,KAAK,GAAG79C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAAChW,aAAa,CAAE;QAAE1U,IAAI,EAAE;MAAU,CAAE,CAAC;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAA/B,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEd,IAAI,CAAChlB,IAAI,GAAGglB,MAAM,CAAChlB,IAAI;MACvB,IAAI,CAAC23C,KAAK,GAAG3yB,MAAM,CAAC2yB,KAAK;MAEzB,IAAMs9H,cAAc,GAAGjwJ,MAAM,CAAC6+B,QAAQ;MAEtC,IAAI,CAACA,QAAQ,CAACpkD,MAAM,GAAG,CAAC;MAExB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGykK,cAAc,CAACx1K,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEzD,IAAI,CAACmkD,QAAQ,CAAC3kD,IAAI,CAAE+1K,cAAc,CAAEv1K,CAAC,CAAE,CAACkX,KAAK,CAAC,CAAE,CAAC;MAElD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAhd,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAA89J,aAAA;AAAA,EAlF0BjlK,eAAe;AAAAtW,OAAA,CAAAu7K,aAAA,GAAAA,aAAA;AAAA,IAsFrCO,0BAA0B,0BAAAC,kBAAA;EAAAnxJ,SAAA,CAAAkxJ,0BAAA,EAAAC,kBAAA;EAAA,IAAAC,SAAA,GAAAlxJ,YAAA,CAAAgxJ,0BAAA;EAE/B,SAAAA,2BAAa3kK,KAAK,EAAE2uC,MAAM,EAAEgnB,gBAAgB,GAAG,CAAC,EAAG;IAAA,IAAAmvG,QAAA;IAAApzK,eAAA,OAAAizK,0BAAA;IAElDG,QAAA,GAAAD,SAAA,CAAAx5K,IAAA,OAAO2U,KAAK,EAAE2uC,MAAM;IAEpBm2H,QAAA,CAAK1uG,4BAA4B,GAAG,IAAI;IAExC0uG,QAAA,CAAKnvG,gBAAgB,GAAGA,gBAAgB;IAAC,OAAAmvG,QAAA;EAE1C;EAAC5yK,YAAA,CAAAyyK,0BAAA;IAAAt7K,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA2+H,0BAAA,CAAA37K,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM;MAElB,IAAI,CAACkhD,gBAAgB,GAAGlhD,MAAM,CAACkhD,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAtsE,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAOiM,IAAI,EAAG;MAEb,IAAMupG,EAAE,GAAA91E,IAAA,CAAAC,eAAA,CAAA2+H,0BAAA,CAAA37K,SAAA,kBAAAqC,IAAA,OAAgBinB,IAAI,CAAE;MAE9BupG,EAAE,CAAClmD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE3C,OAAOkmD,EAAE;IAEV;EAAC;IAAAxyH,GAAA;IAAAE,KAAA,EAED,SAAAopB,OAAQL,IAAI,EAAG;MAEd,IAAMsuG,IAAI,GAAA76E,IAAA,CAAAC,eAAA,CAAA2+H,0BAAA,CAAA37K,SAAA,mBAAAqC,IAAA,OAAiBinB,IAAI,CAAE;MAEjCsuG,IAAI,CAACxqD,4BAA4B,GAAG,IAAI;MACxCwqD,IAAI,CAACjrD,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE7C,OAAOirD,IAAI;IAEZ;EAAC;EAAA,OAAA+jD,0BAAA;AAAA,EAzCuClpD,iBAAiB;AAAA5yH,OAAA,CAAA87K,0BAAA,GAAAA,0BAAA;AAAA,IA6CpDI,iBAAiB;EAEtB,SAAAA,kBAAaj2J,MAAM,EAAE1jB,IAAI,EAAE67C,QAAQ,EAAEoY,WAAW,EAAEvkC,KAAK,EAAG;IAAAppB,eAAA,OAAAqzK,iBAAA;IAEzD,IAAI,CAAC94H,mBAAmB,GAAG,IAAI;IAE/B,IAAI,CAACx8C,IAAI,GAAG,EAAE;IAEd,IAAI,CAACqf,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC1jB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC67C,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACoY,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACvkC,KAAK,GAAGA,KAAK;IAElB,IAAI,CAACpI,OAAO,GAAG,CAAC;EAEjB;EAACxgB,YAAA,CAAA6yK,iBAAA;IAAA17K,GAAA;IAAAwb,GAAA,EAED,SAAAA,IAAiBtb,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAACmpB,OAAO,EAAG;IAEtC;EAAC;IAAArpB,GAAA;IAAAE,KAAA,EAED,SAAA6kK,UAAWt/I,MAAM,EAAG;MAEnB,IAAI,CAACA,MAAM,GAAGA,MAAM;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAzlB,GAAA;IAAAE,KAAA,EAED,SAAAy7K,QAAS55K,IAAI,EAAEi0D,WAAW,EAAG;MAE5B,IAAI,CAACj0D,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACi0D,WAAW,GAAGA,WAAW;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAAh2D,GAAA;IAAAE,KAAA,EAED,SAAA07K,YAAah+H,QAAQ,EAAG;MAEvB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA59C,GAAA;IAAAE,KAAA,EAED,SAAA27K,SAAUpqJ,KAAK,EAAG;MAEjB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAiqJ,iBAAA;AAAA;AAAAl8K,OAAA,CAAAk8K,iBAAA,GAAAA,iBAAA;AAAA,IAIII,SAAS;EAEd,SAAAA,UAAaz8I,MAAM,EAAEC,SAAS,EAAEyH,IAAI,GAAG,CAAC,EAAEC,GAAG,GAAGhN,QAAQ,EAAG;IAAA3xB,eAAA,OAAAyzK,SAAA;IAE1D,IAAI,CAACv8I,GAAG,GAAG,IAAIH,GAAG,CAAEC,MAAM,EAAEC,SAAU,CAAC;IACvC;;IAEA,IAAI,CAACyH,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACrP,MAAM,GAAG,IAAI;IAClB,IAAI,CAAC6Q,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;IAE1B,IAAI,CAACqtC,MAAM,GAAG;MACbzuB,IAAI,EAAE,CAAC,CAAC;MACR2yE,IAAI,EAAE;QAAEpe,SAAS,EAAE;MAAE,CAAC;MACtBmZ,GAAG,EAAE,CAAC,CAAC;MACP+G,MAAM,EAAE;QAAElgB,SAAS,EAAE;MAAE,CAAC;MACxByY,MAAM,EAAE,CAAC;IACV,CAAC;EAEF;EAAChrH,YAAA,CAAAizK,SAAA;IAAA97K,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK6jB,MAAM,EAAEC,SAAS,EAAG;MAExB;;MAEA,IAAI,CAACC,GAAG,CAAC/jB,GAAG,CAAE6jB,MAAM,EAAEC,SAAU,CAAC;IAElC;EAAC;IAAAt/B,GAAA;IAAAE,KAAA,EAED,SAAA67K,cAAeC,MAAM,EAAErkJ,MAAM,EAAG;MAE/B,IAAKA,MAAM,CAACg1B,mBAAmB,EAAG;QAEjC,IAAI,CAACptB,GAAG,CAACF,MAAM,CAAC9F,qBAAqB,CAAE5B,MAAM,CAACK,WAAY,CAAC;QAC3D,IAAI,CAACuH,GAAG,CAACD,SAAS,CAAC9jB,GAAG,CAAEwgK,MAAM,CAAC9jK,CAAC,EAAE8jK,MAAM,CAACxjK,CAAC,EAAE,GAAI,CAAC,CAACsf,SAAS,CAAEH,MAAO,CAAC,CAACpa,GAAG,CAAE,IAAI,CAACgiB,GAAG,CAACF,MAAO,CAAC,CAACljB,SAAS,CAAC,CAAC;QACxG,IAAI,CAACwb,MAAM,GAAGA,MAAM;MAErB,CAAC,MAAM,IAAKA,MAAM,CAAC66C,oBAAoB,EAAG;QAEzC,IAAI,CAACjzC,GAAG,CAACF,MAAM,CAAC7jB,GAAG,CAAEwgK,MAAM,CAAC9jK,CAAC,EAAE8jK,MAAM,CAACxjK,CAAC,EAAE,CAAEmf,MAAM,CAACoP,IAAI,GAAGpP,MAAM,CAACqP,GAAG,KAAOrP,MAAM,CAACoP,IAAI,GAAGpP,MAAM,CAACqP,GAAG,CAAG,CAAC,CAAClP,SAAS,CAAEH,MAAO,CAAC,CAAC,CAAC;QAC5H,IAAI,CAAC4H,GAAG,CAACD,SAAS,CAAC9jB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC,CAACyc,kBAAkB,CAAEN,MAAM,CAACK,WAAY,CAAC;QAC5E,IAAI,CAACL,MAAM,GAAGA,MAAM;MAErB,CAAC,MAAM;QAENlc,OAAO,CAAChY,KAAK,CAAE,4CAA4C,GAAGk0B,MAAM,CAAC51B,IAAK,CAAC;MAE5E;IAED;EAAC;IAAA/B,GAAA;IAAAE,KAAA,EAED,SAAA+7K,gBAAiBn1K,MAAM,EAAE0oC,SAAS,GAAG,IAAI,EAAEkY,UAAU,GAAG,EAAE,EAAG;MAE5Du0H,gBAAe,CAAEn1K,MAAM,EAAE,IAAI,EAAE4gD,UAAU,EAAElY,SAAU,CAAC;MAEtDkY,UAAU,CAACy0B,IAAI,CAAE+/F,OAAQ,CAAC;MAE1B,OAAOx0H,UAAU;IAElB;EAAC;IAAA1nD,GAAA;IAAAE,KAAA,EAED,SAAAi8K,iBAAkBj0G,OAAO,EAAE14B,SAAS,GAAG,IAAI,EAAEkY,UAAU,GAAG,EAAE,EAAG;MAE9D,KAAM,IAAI5hD,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGsxD,OAAO,CAACriE,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAElDm2K,gBAAe,CAAE/zG,OAAO,CAAEpiE,CAAC,CAAE,EAAE,IAAI,EAAE4hD,UAAU,EAAElY,SAAU,CAAC;MAE7D;MAEAkY,UAAU,CAACy0B,IAAI,CAAE+/F,OAAQ,CAAC;MAE1B,OAAOx0H,UAAU;IAElB;EAAC;EAAA,OAAAo0H,SAAA;AAAA;AAAAt8K,OAAA,CAAAs8K,SAAA,GAAAA,SAAA;AAIF,SAASI,OAAOA,CAAExhK,CAAC,EAAEC,CAAC,EAAG;EAExB,OAAOD,CAAC,CAAC+wB,QAAQ,GAAG9wB,CAAC,CAAC8wB,QAAQ;AAE/B;AAEA,SAASwwI,gBAAeA,CAAEn1K,MAAM,EAAE2gD,SAAS,EAAEC,UAAU,EAAElY,SAAS,EAAG;EAEpE,IAAK1oC,MAAM,CAAC0hC,MAAM,CAACtgB,IAAI,CAAEu/B,SAAS,CAACjf,MAAO,CAAC,EAAG;IAE7C1hC,MAAM,CAACqmC,OAAO,CAAEsa,SAAS,EAAEC,UAAW,CAAC;EAExC;EAEA,IAAKlY,SAAS,KAAK,IAAI,EAAG;IAEzB,IAAMzT,QAAQ,GAAGj1B,MAAM,CAACi1B,QAAQ;IAEhC,KAAM,IAAIj2B,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGmlB,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;MAEnDm2K,gBAAe,CAAElgJ,QAAQ,CAAEj2B,CAAC,CAAE,EAAE2hD,SAAS,EAAEC,UAAU,EAAE,IAAK,CAAC;IAE9D;EAED;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAQM00H,SAAS;EAEd,SAAAA,UAAaljJ,MAAM,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAEla,KAAK,GAAG,CAAC,EAAG;IAAA5W,eAAA,OAAA+zK,SAAA;IAE7C,IAAI,CAACljJ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,GAAG,GAAGA,GAAG,CAAC,CAAC;IAChB,IAAI,CAACla,KAAK,GAAGA,KAAK,CAAC,CAAC;;IAEpB,OAAO,IAAI;EAEZ;EAACpW,YAAA,CAAAuzK,SAAA;IAAAp8K,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK0d,MAAM,EAAEC,GAAG,EAAEla,KAAK,EAAG;MAEzB,IAAI,CAACia,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,GAAG,GAAGA,GAAG;MACd,IAAI,CAACla,KAAK,GAAGA,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAjf,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMo/J,KAAK,EAAG;MAEb,IAAI,CAACnjJ,MAAM,GAAGmjJ,KAAK,CAACnjJ,MAAM;MAC1B,IAAI,CAACC,GAAG,GAAGkjJ,KAAK,CAACljJ,GAAG;MACpB,IAAI,CAACla,KAAK,GAAGo9J,KAAK,CAACp9J,KAAK;MAExB,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAjf,GAAA;IAAAE,KAAA,EACA,SAAAo8K,SAAA,EAAW;MAEV,IAAMC,GAAG,GAAG,QAAQ;MACpB,IAAI,CAACpjJ,GAAG,GAAGniB,IAAI,CAACa,GAAG,CAAE0kK,GAAG,EAAEvlK,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACC,EAAE,GAAGslK,GAAG,EAAE,IAAI,CAACpjJ,GAAI,CAAE,CAAC;MAE/D,OAAO,IAAI;IAEZ;EAAC;IAAAn5B,GAAA;IAAAE,KAAA,EAED,SAAA2nC,eAAgB3qB,CAAC,EAAG;MAEnB,OAAO,IAAI,CAACs/J,sBAAsB,CAAEt/J,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAE,CAAC;IAEpD;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAs8K,uBAAwBtkK,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAEjC,IAAI,CAACmM,MAAM,GAAGliB,IAAI,CAAC2H,IAAI,CAAEzG,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,GAAGuU,CAAC,GAAGA,CAAE,CAAC;MAEhD,IAAK,IAAI,CAACmM,MAAM,KAAK,CAAC,EAAG;QAExB,IAAI,CAACja,KAAK,GAAG,CAAC;QACd,IAAI,CAACka,GAAG,GAAG,CAAC;MAEb,CAAC,MAAM;QAEN,IAAI,CAACla,KAAK,GAAGjI,IAAI,CAAC8H,KAAK,CAAE5G,CAAC,EAAE6U,CAAE,CAAC;QAC/B,IAAI,CAACoM,GAAG,GAAGniB,IAAI,CAACkI,IAAI,CAAEvH,KAAK,CAAEa,CAAC,GAAG,IAAI,CAAC0gB,MAAM,EAAE,CAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAl5B,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAm/J,SAAA;AAAA;AAIF;AACA;AACA;AAFA58K,OAAA,CAAA48K,SAAA,GAAAA,SAAA;AAAA,IAIMK,WAAW;EAEhB,SAAAA,YAAavjJ,MAAM,GAAG,CAAC,EAAEja,KAAK,GAAG,CAAC,EAAEzG,CAAC,GAAG,CAAC,EAAG;IAAAnQ,eAAA,OAAAo0K,WAAA;IAE3C,IAAI,CAACvjJ,MAAM,GAAGA,MAAM,CAAC,CAAC;IACtB,IAAI,CAACja,KAAK,GAAGA,KAAK,CAAC,CAAC;IACpB,IAAI,CAACzG,CAAC,GAAGA,CAAC,CAAC,CAAC;;IAEZ,OAAO,IAAI;EAEZ;EAAC3P,YAAA,CAAA4zK,WAAA;IAAAz8K,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK0d,MAAM,EAAEja,KAAK,EAAEzG,CAAC,EAAG;MAEvB,IAAI,CAAC0gB,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACja,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACzG,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMo/J,KAAK,EAAG;MAEb,IAAI,CAACnjJ,MAAM,GAAGmjJ,KAAK,CAACnjJ,MAAM;MAC1B,IAAI,CAACja,KAAK,GAAGo9J,KAAK,CAACp9J,KAAK;MACxB,IAAI,CAACzG,CAAC,GAAG6jK,KAAK,CAAC7jK,CAAC;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA2nC,eAAgB3qB,CAAC,EAAG;MAEnB,OAAO,IAAI,CAACs/J,sBAAsB,CAAEt/J,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAAC6P,CAAE,CAAC;IAEpD;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAs8K,uBAAwBtkK,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;MAEjC,IAAI,CAACmM,MAAM,GAAGliB,IAAI,CAAC2H,IAAI,CAAEzG,CAAC,GAAGA,CAAC,GAAG6U,CAAC,GAAGA,CAAE,CAAC;MACxC,IAAI,CAAC9N,KAAK,GAAGjI,IAAI,CAAC8H,KAAK,CAAE5G,CAAC,EAAE6U,CAAE,CAAC;MAC/B,IAAI,CAACvU,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAAw/J,WAAA;AAAA;AAAAj9K,OAAA,CAAAi9K,WAAA,GAAAA,WAAA;AAIF,IAAMC,SAAS,GAAG,aAAc,IAAIpgK,OAAO,CAAC,CAAC;AAAC,IAExCqgK,IAAI;EAET,SAAAA,KAAa/kK,GAAG,GAAG,IAAI0E,OAAO,CAAE,CAAE0d,QAAQ,EAAE,CAAEA,QAAS,CAAC,EAAEniB,GAAG,GAAG,IAAIyE,OAAO,CAAE,CAAE0d,QAAQ,EAAE,CAAEA,QAAS,CAAC,EAAG;IAAA3xB,eAAA,OAAAs0K,IAAA;IAEvG,IAAI,CAACC,MAAM,GAAG,IAAI;IAElB,IAAI,CAAChlK,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAAChP,YAAA,CAAA8zK,IAAA;IAAA38K,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAK5D,GAAG,EAAEC,GAAG,EAAG;MAEf,IAAI,CAACD,GAAG,CAACqF,IAAI,CAAErF,GAAI,CAAC;MACpB,IAAI,CAACC,GAAG,CAACoF,IAAI,CAAEpF,GAAI,CAAC;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAA7X,GAAA;IAAAE,KAAA,EAED,SAAAq6B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAACL,SAAS,CAAC,CAAC;MAEhB,KAAM,IAAIr0B,CAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAG4I,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8rB,EAAE,EAAE9rB,CAAC,EAAG,EAAG;QAEnD,IAAI,CAACs0B,aAAa,CAAEI,MAAM,CAAE10B,CAAC,CAAG,CAAC;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAu6B,qBAAsBna,MAAM,EAAEoa,IAAI,EAAG;MAEpC,IAAMC,QAAQ,GAAG+hJ,SAAS,CAACz/J,IAAI,CAAEyd,IAAK,CAAC,CAAC/c,cAAc,CAAE,GAAI,CAAC;MAC7D,IAAI,CAAC/F,GAAG,CAACqF,IAAI,CAAEqD,MAAO,CAAC,CAAC/C,GAAG,CAAEod,QAAS,CAAC;MACvC,IAAI,CAAC9iB,GAAG,CAACoF,IAAI,CAAEqD,MAAO,CAAC,CAACnD,GAAG,CAAEwd,QAAS,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAA36B,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAM8d,GAAG,EAAG;MAEX,IAAI,CAACnjB,GAAG,CAACqF,IAAI,CAAE8d,GAAG,CAACnjB,GAAI,CAAC;MACxB,IAAI,CAACC,GAAG,CAACoF,IAAI,CAAE8d,GAAG,CAACljB,GAAI,CAAC;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA7X,GAAA;IAAAE,KAAA,EAED,SAAAi6B,UAAA,EAAY;MAEX,IAAI,CAACviB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACN,GAAG,CAACY,CAAC,GAAG,CAAEwhB,QAAQ;MACpC,IAAI,CAACniB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,CAAEwhB,QAAQ;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAAh6B,GAAA;IAAAE,KAAA,EAED,SAAA86B,QAAA,EAAU;MAET;;MAEA,OAAS,IAAI,CAACnjB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAQ,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAG;IAElE;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA+6B,UAAWxyB,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACuyB,OAAO,CAAC,CAAC,GAAGvyB,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,GAAG/S,MAAM,CAAC4U,UAAU,CAAE,IAAI,CAACzF,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC,CAAC8F,cAAc,CAAE,GAAI,CAAC;IAE3G;EAAC;IAAA3d,GAAA;IAAAE,KAAA,EAED,SAAAg7B,QAASzyB,MAAM,EAAG;MAEjB,OAAO,IAAI,CAACuyB,OAAO,CAAC,CAAC,GAAGvyB,MAAM,CAAC+S,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,GAAG/S,MAAM,CAACgV,UAAU,CAAE,IAAI,CAAC5F,GAAG,EAAE,IAAI,CAACD,GAAI,CAAC;IAErF;EAAC;IAAA5X,GAAA;IAAAE,KAAA,EAED,SAAAk6B,cAAee,KAAK,EAAG;MAEtB,IAAI,CAACvjB,GAAG,CAACA,GAAG,CAAEujB,KAAM,CAAC;MACrB,IAAI,CAACtjB,GAAG,CAACA,GAAG,CAAEsjB,KAAM,CAAC;MAErB,OAAO,IAAI;IAEZ;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAAk7B,eAAgBC,MAAM,EAAG;MAExB,IAAI,CAACzjB,GAAG,CAAC2F,GAAG,CAAE8d,MAAO,CAAC;MACtB,IAAI,CAACxjB,GAAG,CAACsF,GAAG,CAAEke,MAAO,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAr7B,GAAA;IAAAE,KAAA,EAED,SAAAo7B,eAAgB3e,MAAM,EAAG;MAExB,IAAI,CAAC/E,GAAG,CAACwF,SAAS,CAAE,CAAET,MAAO,CAAC;MAC9B,IAAI,CAAC9E,GAAG,CAACuF,SAAS,CAAET,MAAO,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA3c,GAAA;IAAAE,KAAA,EAED,SAAA87B,cAAeb,KAAK,EAAG;MAEtB,OAAOA,KAAK,CAACjjB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAIijB,KAAK,CAACjjB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAClDijB,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAI2iB,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,KAAK,GAAG,IAAI;IAE7D;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAA+7B,YAAalB,GAAG,EAAG;MAElB,OAAO,IAAI,CAACnjB,GAAG,CAACM,CAAC,IAAI6iB,GAAG,CAACnjB,GAAG,CAACM,CAAC,IAAI6iB,GAAG,CAACljB,GAAG,CAACK,CAAC,IAAI,IAAI,CAACL,GAAG,CAACK,CAAC,IACxD,IAAI,CAACN,GAAG,CAACY,CAAC,IAAIuiB,GAAG,CAACnjB,GAAG,CAACY,CAAC,IAAIuiB,GAAG,CAACljB,GAAG,CAACW,CAAC,IAAI,IAAI,CAACX,GAAG,CAACW,CAAC;IAEpD;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAg8B,aAAcf,KAAK,EAAE1yB,MAAM,EAAG;MAE7B;MACA;;MAEA,OAAOA,MAAM,CAAC+S,GAAG,CAChB,CAAE2f,KAAK,CAACjjB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,KAAO,IAAI,CAACL,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,CAAE,EACtD,CAAEijB,KAAK,CAAC3iB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,KAAO,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,CACrD,CAAC;IAEF;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAi8B,cAAepB,GAAG,EAAG;MAEpB;;MAEA,OAAOA,GAAG,CAACljB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAI6iB,GAAG,CAACnjB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IACtD6iB,GAAG,CAACljB,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAIuiB,GAAG,CAACnjB,GAAG,CAACY,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,KAAK,GAAG,IAAI;IAEjE;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAo8B,WAAYnB,KAAK,EAAE1yB,MAAM,EAAG;MAE3B,OAAOA,MAAM,CAACwU,IAAI,CAAEke,KAAM,CAAC,CAACxjB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAI,CAAC;IAExD;EAAC;IAAA7X,GAAA;IAAAE,KAAA,EAED,SAAAq9B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO,IAAI,CAACmB,UAAU,CAAEnB,KAAK,EAAEuhJ,SAAU,CAAC,CAACv9J,UAAU,CAAEgc,KAAM,CAAC;IAE/D;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAAu9B,UAAW1C,GAAG,EAAG;MAEhB,IAAI,CAACnjB,GAAG,CAACC,GAAG,CAAEkjB,GAAG,CAACnjB,GAAI,CAAC;MACvB,IAAI,CAACC,GAAG,CAACD,GAAG,CAAEmjB,GAAG,CAACljB,GAAI,CAAC;MAEvB,IAAK,IAAI,CAACmjB,OAAO,CAAC,CAAC,EAAG,IAAI,CAACb,SAAS,CAAC,CAAC;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAn6B,GAAA;IAAAE,KAAA,EAED,SAAAy7B,MAAOZ,GAAG,EAAG;MAEZ,IAAI,CAACnjB,GAAG,CAACA,GAAG,CAAEmjB,GAAG,CAACnjB,GAAI,CAAC;MACvB,IAAI,CAACC,GAAG,CAACA,GAAG,CAAEkjB,GAAG,CAACljB,GAAI,CAAC;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA7X,GAAA;IAAAE,KAAA,EAED,SAAA+kB,UAAWlF,MAAM,EAAG;MAEnB,IAAI,CAACnI,GAAG,CAACuF,GAAG,CAAE4C,MAAO,CAAC;MACtB,IAAI,CAAClI,GAAG,CAACsF,GAAG,CAAE4C,MAAO,CAAC;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQkb,GAAG,EAAG;MAEb,OAAOA,GAAG,CAACnjB,GAAG,CAACiI,MAAM,CAAE,IAAI,CAACjI,GAAI,CAAC,IAAImjB,GAAG,CAACljB,GAAG,CAACgI,MAAM,CAAE,IAAI,CAAChI,GAAI,CAAC;IAEhE;EAAC;EAAA,OAAA8kK,IAAA;AAAA;AAAAn9K,OAAA,CAAAm9K,IAAA,GAAAA,IAAA;AAIF,IAAME,OAAO,GAAG,aAAc,IAAIpmJ,OAAO,CAAC,CAAC;AAC3C,IAAMqmJ,SAAS,GAAG,aAAc,IAAIrmJ,OAAO,CAAC,CAAC;AAAC,IAExCsmJ,KAAK;EAEV,SAAAA,MAAaj7H,KAAK,GAAG,IAAIrrB,OAAO,CAAC,CAAC,EAAEsxB,GAAG,GAAG,IAAItxB,OAAO,CAAC,CAAC,EAAG;IAAApuB,eAAA,OAAA00K,KAAA;IAEzD,IAAI,CAACj7H,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACiG,GAAG,GAAGA,GAAG;EAEf;EAACl/C,YAAA,CAAAk0K,KAAA;IAAA/8K,GAAA;IAAAE,KAAA,EAED,SAAAsb,IAAKsmC,KAAK,EAAEiG,GAAG,EAAG;MAEjB,IAAI,CAACjG,KAAK,CAAC7kC,IAAI,CAAE6kC,KAAM,CAAC;MACxB,IAAI,CAACiG,GAAG,CAAC9qC,IAAI,CAAE8qC,GAAI,CAAC;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAA/nD,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMu0C,IAAI,EAAG;MAEZ,IAAI,CAAC1P,KAAK,CAAC7kC,IAAI,CAAEu0C,IAAI,CAAC1P,KAAM,CAAC;MAC7B,IAAI,CAACiG,GAAG,CAAC9qC,IAAI,CAAEu0C,IAAI,CAACzJ,GAAI,CAAC;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA/nD,GAAA;IAAAE,KAAA,EAED,SAAA+6B,UAAWxyB,MAAM,EAAG;MAEnB,OAAOA,MAAM,CAAC4U,UAAU,CAAE,IAAI,CAACykC,KAAK,EAAE,IAAI,CAACiG,GAAI,CAAC,CAACpqC,cAAc,CAAE,GAAI,CAAC;IAEvE;EAAC;IAAA3d,GAAA;IAAAE,KAAA,EAED,SAAA0+B,MAAOn2B,MAAM,EAAG;MAEf,OAAOA,MAAM,CAACgV,UAAU,CAAE,IAAI,CAACsqC,GAAG,EAAE,IAAI,CAACjG,KAAM,CAAC;IAEjD;EAAC;IAAA9hD,GAAA;IAAAE,KAAA,EAED,SAAA88K,WAAA,EAAa;MAEZ,OAAO,IAAI,CAACl7H,KAAK,CAAC1iC,iBAAiB,CAAE,IAAI,CAAC2oC,GAAI,CAAC;IAEhD;EAAC;IAAA/nD,GAAA;IAAAE,KAAA,EAED,SAAAurC,SAAA,EAAW;MAEV,OAAO,IAAI,CAACqW,KAAK,CAAC3iC,UAAU,CAAE,IAAI,CAAC4oC,GAAI,CAAC;IAEzC;EAAC;IAAA/nD,GAAA;IAAAE,KAAA,EAED,SAAAs/B,GAAI9mB,CAAC,EAAEjQ,MAAM,EAAG;MAEf,OAAO,IAAI,CAACm2B,KAAK,CAAEn2B,MAAO,CAAC,CAACkV,cAAc,CAAEjF,CAAE,CAAC,CAACyE,GAAG,CAAE,IAAI,CAAC2kC,KAAM,CAAC;IAElE;EAAC;IAAA9hD,GAAA;IAAAE,KAAA,EAED,SAAA+8K,6BAA8B9hJ,KAAK,EAAE+hJ,WAAW,EAAG;MAElDL,OAAO,CAACp/J,UAAU,CAAE0d,KAAK,EAAE,IAAI,CAAC2mB,KAAM,CAAC;MACvCg7H,SAAS,CAACr/J,UAAU,CAAE,IAAI,CAACsqC,GAAG,EAAE,IAAI,CAACjG,KAAM,CAAC;MAE5C,IAAMq7H,SAAS,GAAGL,SAAS,CAACt+J,GAAG,CAAEs+J,SAAU,CAAC;MAC5C,IAAMM,eAAe,GAAGN,SAAS,CAACt+J,GAAG,CAAEq+J,OAAQ,CAAC;MAEhD,IAAInkK,CAAC,GAAG0kK,eAAe,GAAGD,SAAS;MAEnC,IAAKD,WAAW,EAAG;QAElBxkK,CAAC,GAAGf,KAAK,CAAEe,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAErB;MAEA,OAAOA,CAAC;IAET;EAAC;IAAA1Y,GAAA;IAAAE,KAAA,EAED,SAAAy/B,oBAAqBxE,KAAK,EAAE+hJ,WAAW,EAAEz0K,MAAM,EAAG;MAEjD,IAAMiQ,CAAC,GAAG,IAAI,CAACukK,4BAA4B,CAAE9hJ,KAAK,EAAE+hJ,WAAY,CAAC;MAEjE,OAAO,IAAI,CAACt+I,KAAK,CAAEn2B,MAAO,CAAC,CAACkV,cAAc,CAAEjF,CAAE,CAAC,CAACyE,GAAG,CAAE,IAAI,CAAC2kC,KAAM,CAAC;IAElE;EAAC;IAAA9hD,GAAA;IAAAE,KAAA,EAED,SAAAktB,aAAcjI,MAAM,EAAG;MAEtB,IAAI,CAAC28B,KAAK,CAAC10B,YAAY,CAAEjI,MAAO,CAAC;MACjC,IAAI,CAAC4iC,GAAG,CAAC36B,YAAY,CAAEjI,MAAO,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAnlB,GAAA;IAAAE,KAAA,EAED,SAAA2f,OAAQ2xC,IAAI,EAAG;MAEd,OAAOA,IAAI,CAAC1P,KAAK,CAACjiC,MAAM,CAAE,IAAI,CAACiiC,KAAM,CAAC,IAAI0P,IAAI,CAACzJ,GAAG,CAACloC,MAAM,CAAE,IAAI,CAACkoC,GAAI,CAAC;IAEtE;EAAC;IAAA/nD,GAAA;IAAAE,KAAA,EAED,SAAA8c,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7W,WAAW,CAAC,CAAC,CAAC8W,IAAI,CAAE,IAAK,CAAC;IAE3C;EAAC;EAAA,OAAA8/J,KAAA;AAAA;AAAAv9K,OAAA,CAAAu9K,KAAA,GAAAA,KAAA;AAIF,IAAMM,SAAS,GAAG,aAAc,IAAI5mJ,OAAO,CAAC,CAAC;AAAC,IAExC6mJ,eAAe,0BAAAC,WAAA;EAAAnzJ,SAAA,CAAAkzJ,eAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAlzJ,YAAA,CAAAgzJ,eAAA;EAEpB,SAAAA,gBAAalnF,KAAK,EAAE5vE,KAAK,EAAG;IAAA,IAAAi3J,QAAA;IAAAp1K,eAAA,OAAAi1K,eAAA;IAE3BG,QAAA,GAAAD,SAAA,CAAAx7K,IAAA;IAEAy7K,QAAA,CAAKrnF,KAAK,GAAGA,KAAK;IAElBqnF,QAAA,CAAKt4J,MAAM,GAAGixE,KAAK,CAACp+D,WAAW;IAC/BylJ,QAAA,CAAKhyJ,gBAAgB,GAAG,KAAK;IAE7BgyJ,QAAA,CAAKj3J,KAAK,GAAGA,KAAK;IAElBi3J,QAAA,CAAK17K,IAAI,GAAG,iBAAiB;IAE7B,IAAM65B,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IAErC,IAAM6B,SAAS,GAAG,CACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CACnB;IAED,KAAM,IAAIn9C,CAAC,GAAG,CAAC,EAAEg4B,CAAC,GAAG,CAAC,EAAElnB,CAAC,GAAG,EAAE,EAAE9Q,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAEg4B,CAAC,EAAG,EAAG;MAEnD,IAAME,EAAE,GAAKl4B,CAAC,GAAG8Q,CAAC,GAAKI,IAAI,CAACC,EAAE,GAAG,CAAC;MAClC,IAAMgnB,EAAE,GAAKH,CAAC,GAAGlnB,CAAC,GAAKI,IAAI,CAACC,EAAE,GAAG,CAAC;MAElCgsC,SAAS,CAAC39C,IAAI,CACb0R,IAAI,CAAC8D,GAAG,CAAEkjB,EAAG,CAAC,EAAEhnB,IAAI,CAAC+D,GAAG,CAAEijB,EAAG,CAAC,EAAE,CAAC,EACjChnB,IAAI,CAAC8D,GAAG,CAAEmjB,EAAG,CAAC,EAAEjnB,IAAI,CAAC+D,GAAG,CAAEkjB,EAAG,CAAC,EAAE,CACjC,CAAC;IAEF;IAEArC,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAE,CAAE,CAAC;IAE/E,IAAM9T,QAAQ,GAAG,IAAI2hD,iBAAiB,CAAE;MAAEj3C,GAAG,EAAE,KAAK;MAAE7E,UAAU,EAAE;IAAM,CAAE,CAAC;IAE3EyoI,QAAA,CAAKC,IAAI,GAAG,IAAInjD,YAAY,CAAE3+F,QAAQ,EAAEuT,QAAS,CAAC;IAClDsuI,QAAA,CAAKtgK,GAAG,CAAEsgK,QAAA,CAAKC,IAAK,CAAC;IAErBD,QAAA,CAAKjrJ,MAAM,CAAC,CAAC;IAAC,OAAAirJ,QAAA;EAEf;EAAC50K,YAAA,CAAAy0K,eAAA;IAAAt9K,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACixJ,IAAI,CAAC9hJ,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACixJ,IAAI,CAACvuI,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAE7B;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAA,EAAS;MAER,IAAI,CAAC4jE,KAAK,CAAC76D,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAC3C,IAAI,CAAC66D,KAAK,CAAC3tF,MAAM,CAAC8yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAElD,IAAMoiJ,UAAU,GAAG,IAAI,CAACvnF,KAAK,CAAC3qD,QAAQ,GAAG,IAAI,CAAC2qD,KAAK,CAAC3qD,QAAQ,GAAG,IAAI;MACnE,IAAMmyI,SAAS,GAAGD,UAAU,GAAG3mK,IAAI,CAACw2C,GAAG,CAAE,IAAI,CAAC4oC,KAAK,CAACv3E,KAAM,CAAC;MAE3D,IAAI,CAAC6+J,IAAI,CAAC94J,KAAK,CAACpJ,GAAG,CAAEoiK,SAAS,EAAEA,SAAS,EAAED,UAAW,CAAC;MAEvDN,SAAS,CAAC9jJ,qBAAqB,CAAE,IAAI,CAAC68D,KAAK,CAAC3tF,MAAM,CAACuvB,WAAY,CAAC;MAEhE,IAAI,CAAC0lJ,IAAI,CAACj+I,MAAM,CAAE49I,SAAU,CAAC;MAE7B,IAAK,IAAI,CAAC72J,KAAK,KAAKjiB,SAAS,EAAG;QAE/B,IAAI,CAACm5K,IAAI,CAACvuI,QAAQ,CAAC3oB,KAAK,CAAChL,GAAG,CAAE,IAAI,CAACgL,KAAM,CAAC;MAE3C,CAAC,MAAM;QAEN,IAAI,CAACk3J,IAAI,CAACvuI,QAAQ,CAAC3oB,KAAK,CAACvJ,IAAI,CAAE,IAAI,CAACm5E,KAAK,CAAC5vE,KAAM,CAAC;MAElD;IAED;EAAC;EAAA,OAAA82J,eAAA;AAAA,EA/E4B/zI,QAAQ;AAAA/pC,OAAA,CAAA89K,eAAA,GAAAA,eAAA;AAmFtC,IAAMO,SAAS,GAAG,aAAc,IAAIpnJ,OAAO,CAAC,CAAC;AAC7C,IAAMqnJ,WAAW,GAAG,aAAc,IAAI57I,OAAO,CAAC,CAAC;AAC/C,IAAM67I,eAAe,GAAG,aAAc,IAAI77I,OAAO,CAAC,CAAC;AAAC,IAG9C87I,cAAc,0BAAAC,aAAA;EAAA7zJ,SAAA,CAAA4zJ,cAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA5zJ,YAAA,CAAA0zJ,cAAA;EAEnB,SAAAA,eAAal3K,MAAM,EAAG;IAAA,IAAAq3K,QAAA;IAAA91K,eAAA,OAAA21K,cAAA;IAErB,IAAM5nD,KAAK,GAAGgoD,WAAW,CAAEt3K,MAAO,CAAC;IAEnC,IAAM80B,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IAErC,IAAMwH,QAAQ,GAAG,EAAE;IACnB,IAAMy1H,MAAM,GAAG,EAAE;IAEjB,IAAMtiI,MAAM,GAAG,IAAI3B,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACnC,IAAM4B,MAAM,GAAG,IAAI5B,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAEnC,KAAM,IAAIt0C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGswH,KAAK,CAACvwH,MAAM,EAAEC,CAAC,EAAG,EAAG;MAEzC,IAAMuxH,IAAI,GAAGjB,KAAK,CAAEtwH,CAAC,CAAE;MAEvB,IAAKuxH,IAAI,CAACztF,MAAM,IAAIytF,IAAI,CAACztF,MAAM,CAAC+sF,MAAM,EAAG;QAExC/tE,QAAQ,CAACtjD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QACxBsjD,QAAQ,CAACtjD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QACxB+4K,MAAM,CAAC/4K,IAAI,CAAEy2C,MAAM,CAAC53B,CAAC,EAAE43B,MAAM,CAACz4B,CAAC,EAAEy4B,MAAM,CAACphC,CAAE,CAAC;QAC3C0jK,MAAM,CAAC/4K,IAAI,CAAE02C,MAAM,CAAC73B,CAAC,EAAE63B,MAAM,CAAC14B,CAAC,EAAE04B,MAAM,CAACrhC,CAAE,CAAC;MAE5C;IAED;IAEAihB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EhtB,QAAQ,CAACsmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE89H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzE,IAAMlvI,QAAQ,GAAG,IAAI2hD,iBAAiB,CAAE;MAAEh+C,YAAY,EAAE,IAAI;MAAEW,SAAS,EAAE,KAAK;MAAEC,UAAU,EAAE,KAAK;MAAEsB,UAAU,EAAE,KAAK;MAAEhC,WAAW,EAAE;IAAK,CAAE,CAAC;IAE3ImrI,QAAA,GAAAD,SAAA,CAAAl8K,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzBgvI,QAAA,CAAKG,gBAAgB,GAAG,IAAI;IAE5BH,QAAA,CAAKp8K,IAAI,GAAG,gBAAgB;IAE5Bo8K,QAAA,CAAKjP,IAAI,GAAGpoK,MAAM;IAClBq3K,QAAA,CAAK/nD,KAAK,GAAGA,KAAK;IAElB+nD,QAAA,CAAKh5J,MAAM,GAAGre,MAAM,CAACkxB,WAAW;IAChCmmJ,QAAA,CAAK1yJ,gBAAgB,GAAG,KAAK;IAAC,OAAA0yJ,QAAA;EAE/B;EAACt1K,YAAA,CAAAm1K,cAAA;IAAAh+K,GAAA;IAAAE,KAAA,EAED,SAAAqtC,kBAAmBC,KAAK,EAAG;MAE1B,IAAM4oF,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAMx6F,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAME,QAAQ,GAAGF,QAAQ,CAACqmB,YAAY,CAAE,UAAW,CAAC;MAEpD87H,eAAe,CAAC9gK,IAAI,CAAE,IAAI,CAACiyJ,IAAI,CAACl3I,WAAY,CAAC,CAACxU,MAAM,CAAC,CAAC;MAEtD,KAAM,IAAI1d,CAAC,GAAG,CAAC,EAAEg4B,CAAC,GAAG,CAAC,EAAEh4B,CAAC,GAAGswH,KAAK,CAACvwH,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEhD,IAAMuxH,IAAI,GAAGjB,KAAK,CAAEtwH,CAAC,CAAE;QAEvB,IAAKuxH,IAAI,CAACztF,MAAM,IAAIytF,IAAI,CAACztF,MAAM,CAAC+sF,MAAM,EAAG;UAExCmnD,WAAW,CAACj8J,gBAAgB,CAAEk8J,eAAe,EAAE1mD,IAAI,CAACr/F,WAAY,CAAC;UACjE6lJ,SAAS,CAACtkJ,qBAAqB,CAAEukJ,WAAY,CAAC;UAC9ChiJ,QAAQ,CAAC2iB,MAAM,CAAE3gB,CAAC,EAAE+/I,SAAS,CAAC3lK,CAAC,EAAE2lK,SAAS,CAACrlK,CAAC,EAAEqlK,SAAS,CAAC9wJ,CAAE,CAAC;UAE3D+wJ,WAAW,CAACj8J,gBAAgB,CAAEk8J,eAAe,EAAE1mD,IAAI,CAACztF,MAAM,CAAC5R,WAAY,CAAC;UACxE6lJ,SAAS,CAACtkJ,qBAAqB,CAAEukJ,WAAY,CAAC;UAC9ChiJ,QAAQ,CAAC2iB,MAAM,CAAE3gB,CAAC,GAAG,CAAC,EAAE+/I,SAAS,CAAC3lK,CAAC,EAAE2lK,SAAS,CAACrlK,CAAC,EAAEqlK,SAAS,CAAC9wJ,CAAE,CAAC;UAE/D+Q,CAAC,IAAI,CAAC;QAEP;MAED;MAEAlC,QAAQ,CAACqmB,YAAY,CAAE,UAAW,CAAC,CAAC31B,WAAW,GAAG,IAAI;MAEtDowB,IAAA,CAAAC,eAAA,CAAAqhI,cAAA,CAAAr+K,SAAA,8BAAAqC,IAAA,OAAyBwrC,KAAK;IAE/B;EAAC;IAAAxtC,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAuxJ,cAAA;AAAA,EAxF2BzjD,YAAY;AAAA/6H,OAAA,CAAAw+K,cAAA,GAAAA,cAAA;AA6FzC,SAASI,WAAWA,CAAEt3K,MAAM,EAAG;EAE9B,IAAMy3K,QAAQ,GAAG,EAAE;EAEnB,IAAKz3K,MAAM,CAAC6vH,MAAM,KAAK,IAAI,EAAG;IAE7B4nD,QAAQ,CAACj5K,IAAI,CAAEwB,MAAO,CAAC;EAExB;EAEA,KAAM,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,MAAM,CAACi1B,QAAQ,CAACl2B,MAAM,EAAEC,CAAC,EAAG,EAAG;IAEnDy4K,QAAQ,CAACj5K,IAAI,CAAC+mC,KAAK,CAAEkyI,QAAQ,EAAEH,WAAW,CAAEt3K,MAAM,CAACi1B,QAAQ,CAAEj2B,CAAC,CAAG,CAAE,CAAC;EAErE;EAEA,OAAOy4K,QAAQ;AAEhB;AAAC,IAEKC,gBAAgB,0BAAAC,MAAA;EAAAr0J,SAAA,CAAAo0J,gBAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAp0J,YAAA,CAAAk0J,gBAAA;EAErB,SAAAA,iBAAapoF,KAAK,EAAEuoF,UAAU,EAAEn4J,KAAK,EAAG;IAAA,IAAAo4J,QAAA;IAAAv2K,eAAA,OAAAm2K,gBAAA;IAEvC,IAAM5iJ,QAAQ,GAAG,IAAIw/G,cAAc,CAAEujC,UAAU,EAAE,CAAC,EAAE,CAAE,CAAC;IACvD,IAAMxvI,QAAQ,GAAG,IAAIkN,iBAAiB,CAAE;MAAE7C,SAAS,EAAE,IAAI;MAAEK,GAAG,EAAE,KAAK;MAAE7E,UAAU,EAAE;IAAM,CAAE,CAAC;IAE5F4pI,QAAA,GAAAF,SAAA,CAAA18K,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzByvI,QAAA,CAAKxoF,KAAK,GAAGA,KAAK;IAElBwoF,QAAA,CAAKp4J,KAAK,GAAGA,KAAK;IAElBo4J,QAAA,CAAK78K,IAAI,GAAG,kBAAkB;IAE9B68K,QAAA,CAAKz5J,MAAM,GAAGy5J,QAAA,CAAKxoF,KAAK,CAACp+D,WAAW;IACpC4mJ,QAAA,CAAKnzJ,gBAAgB,GAAG,KAAK;IAE7BmzJ,QAAA,CAAKpsJ,MAAM,CAAC,CAAC;;IAGb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAbE,OAAAosJ,QAAA;EAuBD;EAAC/1K,YAAA,CAAA21K,gBAAA;IAAAx+K,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAExB;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAA,EAAS;MAER,IAAI,CAAC4jE,KAAK,CAAC76D,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAE3C,IAAK,IAAI,CAAC/U,KAAK,KAAKjiB,SAAS,EAAG;QAE/B,IAAI,CAAC4qC,QAAQ,CAAC3oB,KAAK,CAAChL,GAAG,CAAE,IAAI,CAACgL,KAAM,CAAC;MAEtC,CAAC,MAAM;QAEN,IAAI,CAAC2oB,QAAQ,CAAC3oB,KAAK,CAACvJ,IAAI,CAAE,IAAI,CAACm5E,KAAK,CAAC5vE,KAAM,CAAC;MAE7C;;MAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAOC;EAAC;EAAA,OAAAg4J,gBAAA;AAAA,EAlF6B33H,IAAI;AAAArnD,OAAA,CAAAg/K,gBAAA,GAAAA,gBAAA;AAsFnC,IAAMK,SAAS,GAAG,aAAc,IAAIpoJ,OAAO,CAAC,CAAC;AAC7C,IAAMqoJ,OAAO,GAAG,aAAc,IAAI1kI,KAAK,CAAC,CAAC;AACzC,IAAM2kI,OAAO,GAAG,aAAc,IAAI3kI,KAAK,CAAC,CAAC;AAAC,IAEpC4kI,qBAAqB,0BAAAC,WAAA;EAAA70J,SAAA,CAAA40J,qBAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAA50J,YAAA,CAAA00J,qBAAA;EAE1B,SAAAA,sBAAa5oF,KAAK,EAAE17D,IAAI,EAAElU,KAAK,EAAG;IAAA,IAAA24J,QAAA;IAAA92K,eAAA,OAAA22K,qBAAA;IAEjCG,QAAA,GAAAD,SAAA,CAAAl9K,IAAA;IAEAm9K,QAAA,CAAK/oF,KAAK,GAAGA,KAAK;IAElB+oF,QAAA,CAAKh6J,MAAM,GAAGixE,KAAK,CAACp+D,WAAW;IAC/BmnJ,QAAA,CAAK1zJ,gBAAgB,GAAG,KAAK;IAE7B0zJ,QAAA,CAAK34J,KAAK,GAAGA,KAAK;IAElB24J,QAAA,CAAKp9K,IAAI,GAAG,uBAAuB;IAEnC,IAAM65B,QAAQ,GAAG,IAAIk+G,kBAAkB,CAAEp/G,IAAK,CAAC;IAC/CkB,QAAQ,CAAC0P,OAAO,CAAEt0B,IAAI,CAACC,EAAE,GAAG,GAAI,CAAC;IAEjCkoK,QAAA,CAAKhwI,QAAQ,GAAG,IAAIkN,iBAAiB,CAAE;MAAE7C,SAAS,EAAE,IAAI;MAAEK,GAAG,EAAE,KAAK;MAAE7E,UAAU,EAAE;IAAM,CAAE,CAAC;IAC3F,IAAKmqI,QAAA,CAAK34J,KAAK,KAAKjiB,SAAS,EAAG46K,QAAA,CAAKhwI,QAAQ,CAAC2D,YAAY,GAAG,IAAI;IAEjE,IAAMhX,QAAQ,GAAGF,QAAQ,CAACqmB,YAAY,CAAE,UAAW,CAAC;IACpD,IAAMo8H,MAAM,GAAG,IAAIziK,YAAY,CAAEkgB,QAAQ,CAACrK,KAAK,GAAG,CAAE,CAAC;IAErDmK,QAAQ,CAACsmB,YAAY,CAAE,OAAO,EAAE,IAAIvE,eAAe,CAAE0gI,MAAM,EAAE,CAAE,CAAE,CAAC;IAElEc,QAAA,CAAKhiK,GAAG,CAAE,IAAI0pC,IAAI,CAAEjrB,QAAQ,EAAEujJ,QAAA,CAAKhwI,QAAS,CAAE,CAAC;IAE/CgwI,QAAA,CAAK3sJ,MAAM,CAAC,CAAC;IAAC,OAAA2sJ,QAAA;EAEf;EAACt2K,YAAA,CAAAm2K,qBAAA;IAAAh/K,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACsP,QAAQ,CAAE,CAAC,CAAE,CAACH,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACrC,IAAI,CAACsP,QAAQ,CAAE,CAAC,CAAE,CAACoT,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAEtC;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAA,EAAS;MAER,IAAMk+B,IAAI,GAAG,IAAI,CAAC30B,QAAQ,CAAE,CAAC,CAAE;MAE/B,IAAK,IAAI,CAACvV,KAAK,KAAKjiB,SAAS,EAAG;QAE/B,IAAI,CAAC4qC,QAAQ,CAAC3oB,KAAK,CAAChL,GAAG,CAAE,IAAI,CAACgL,KAAM,CAAC;MAEtC,CAAC,MAAM;QAEN,IAAM63J,MAAM,GAAG3tH,IAAI,CAAC90B,QAAQ,CAACqmB,YAAY,CAAE,OAAQ,CAAC;QAEpD68H,OAAO,CAAC7hK,IAAI,CAAE,IAAI,CAACm5E,KAAK,CAAC5vE,KAAM,CAAC;QAChCu4J,OAAO,CAAC9hK,IAAI,CAAE,IAAI,CAACm5E,KAAK,CAACpxB,WAAY,CAAC;QAEtC,KAAM,IAAIl/D,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGynK,MAAM,CAAC5sJ,KAAK,EAAE3rB,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAEhD,IAAM0gB,KAAK,GAAK1gB,CAAC,GAAK8Q,CAAC,GAAG,CAAG,GAAKkoK,OAAO,GAAGC,OAAO;UAEnDV,MAAM,CAAC5/H,MAAM,CAAE34C,CAAC,EAAE0gB,KAAK,CAACrC,CAAC,EAAEqC,KAAK,CAAClD,CAAC,EAAEkD,KAAK,CAAC7L,CAAE,CAAC;QAE9C;QAEA0jK,MAAM,CAAC/xJ,WAAW,GAAG,IAAI;MAE1B;MAEA,IAAI,CAAC8pE,KAAK,CAAC76D,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAE3Cm1B,IAAI,CAACjxB,MAAM,CAAEo/I,SAAS,CAACtlJ,qBAAqB,CAAE,IAAI,CAAC68D,KAAK,CAACp+D,WAAY,CAAC,CAACzZ,MAAM,CAAC,CAAE,CAAC;IAElF;EAAC;EAAA,OAAAygK,qBAAA;AAAA,EAtEkCz1I,QAAQ;AAAA/pC,OAAA,CAAAw/K,qBAAA,GAAAA,qBAAA;AAAA,IA0EtCI,UAAU,0BAAAC,cAAA;EAAAj1J,SAAA,CAAAg1J,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAh1J,YAAA,CAAA80J,UAAA;EAEf,SAAAA,WAAa1kJ,IAAI,GAAG,EAAE,EAAE2jG,SAAS,GAAG,EAAE,EAAEtiF,MAAM,GAAG,QAAQ,EAAEC,MAAM,GAAG,QAAQ,EAAG;IAAA,IAAAujI,QAAA;IAAAl3K,eAAA,OAAA+2K,UAAA;IAE9ErjI,MAAM,GAAG,IAAI3B,KAAK,CAAE2B,MAAO,CAAC;IAC5BC,MAAM,GAAG,IAAI5B,KAAK,CAAE4B,MAAO,CAAC;IAE5B,IAAM17B,MAAM,GAAG+9G,SAAS,GAAG,CAAC;IAC5B,IAAM7qG,IAAI,GAAGkH,IAAI,GAAG2jG,SAAS;IAC7B,IAAM1jG,QAAQ,GAAGD,IAAI,GAAG,CAAC;IAEzB,IAAMkuB,QAAQ,GAAG,EAAE;MAAEy1H,MAAM,GAAG,EAAE;IAEhC,KAAM,IAAIv4K,CAAC,GAAG,CAAC,EAAEg4B,CAAC,GAAG,CAAC,EAAEugE,CAAC,GAAG,CAAE1jE,QAAQ,EAAE70B,CAAC,IAAIu4H,SAAS,EAAEv4H,CAAC,EAAG,EAAEu4F,CAAC,IAAI7qE,IAAI,EAAG;MAEzEo1B,QAAQ,CAACtjD,IAAI,CAAE,CAAEq1B,QAAQ,EAAE,CAAC,EAAE0jE,CAAC,EAAE1jE,QAAQ,EAAE,CAAC,EAAE0jE,CAAE,CAAC;MACjDz1C,QAAQ,CAACtjD,IAAI,CAAE+4F,CAAC,EAAE,CAAC,EAAE,CAAE1jE,QAAQ,EAAE0jE,CAAC,EAAE,CAAC,EAAE1jE,QAAS,CAAC;MAEjD,IAAMnU,KAAK,GAAG1gB,CAAC,KAAKwa,MAAM,GAAGy7B,MAAM,GAAGC,MAAM;MAE5Cx1B,KAAK,CAACxG,OAAO,CAAEq+J,MAAM,EAAEvgJ,CAAE,CAAC;MAAEA,CAAC,IAAI,CAAC;MAClCtX,KAAK,CAACxG,OAAO,CAAEq+J,MAAM,EAAEvgJ,CAAE,CAAC;MAAEA,CAAC,IAAI,CAAC;MAClCtX,KAAK,CAACxG,OAAO,CAAEq+J,MAAM,EAAEvgJ,CAAE,CAAC;MAAEA,CAAC,IAAI,CAAC;MAClCtX,KAAK,CAACxG,OAAO,CAAEq+J,MAAM,EAAEvgJ,CAAE,CAAC;MAAEA,CAAC,IAAI,CAAC;IAEnC;IAEA,IAAMlC,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IACrCxlB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EhtB,QAAQ,CAACsmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE89H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzE,IAAMlvI,QAAQ,GAAG,IAAI2hD,iBAAiB,CAAE;MAAEh+C,YAAY,EAAE,IAAI;MAAEkC,UAAU,EAAE;IAAM,CAAE,CAAC;IAEnFuqI,QAAA,GAAAD,SAAA,CAAAt9K,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzBowI,QAAA,CAAKx9K,IAAI,GAAG,YAAY;IAAC,OAAAw9K,QAAA;EAE1B;EAAC12K,YAAA,CAAAu2K,UAAA;IAAAp/K,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAA2yJ,UAAA;AAAA,EA5CuB7kD,YAAY;AAAA/6H,OAAA,CAAA4/K,UAAA,GAAAA,UAAA;AAAA,IAgD/BI,eAAe,0BAAAC,cAAA;EAAAr1J,SAAA,CAAAo1J,eAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAp1J,YAAA,CAAAk1J,eAAA;EAEpB,SAAAA,gBAAatmJ,MAAM,GAAG,EAAE,EAAEymJ,OAAO,GAAG,EAAE,EAAEC,KAAK,GAAG,CAAC,EAAEvhD,SAAS,GAAG,EAAE,EAAEtiF,MAAM,GAAG,QAAQ,EAAEC,MAAM,GAAG,QAAQ,EAAG;IAAA,IAAA6jI,QAAA;IAAAx3K,eAAA,OAAAm3K,eAAA;IAEzGzjI,MAAM,GAAG,IAAI3B,KAAK,CAAE2B,MAAO,CAAC;IAC5BC,MAAM,GAAG,IAAI5B,KAAK,CAAE4B,MAAO,CAAC;IAE5B,IAAM4M,QAAQ,GAAG,EAAE;IACnB,IAAMy1H,MAAM,GAAG,EAAE;;IAEjB;;IAEA,IAAKsB,OAAO,GAAG,CAAC,EAAG;MAElB,KAAM,IAAI75K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG65K,OAAO,EAAE75K,CAAC,EAAG,EAAG;QAEpC,IAAMoX,CAAC,GAAKpX,CAAC,GAAG65K,OAAO,IAAO3oK,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QAE3C,IAAMiB,CAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAEmC,CAAE,CAAC,GAAGgc,MAAM;QAChC,IAAMnM,CAAC,GAAG/V,IAAI,CAAC8D,GAAG,CAAEoC,CAAE,CAAC,GAAGgc,MAAM;QAEhC0vB,QAAQ,CAACtjD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;QACxBsjD,QAAQ,CAACtjD,IAAI,CAAE4S,CAAC,EAAE,CAAC,EAAE6U,CAAE,CAAC;QAExB,IAAMvG,KAAK,GAAK1gB,CAAC,GAAG,CAAC,GAAKi2C,MAAM,GAAGC,MAAM;QAEzCqiI,MAAM,CAAC/4K,IAAI,CAAEkhB,KAAK,CAACrC,CAAC,EAAEqC,KAAK,CAAClD,CAAC,EAAEkD,KAAK,CAAC7L,CAAE,CAAC;QACxC0jK,MAAM,CAAC/4K,IAAI,CAAEkhB,KAAK,CAACrC,CAAC,EAAEqC,KAAK,CAAClD,CAAC,EAAEkD,KAAK,CAAC7L,CAAE,CAAC;MAEzC;IAED;;IAEA;;IAEA,KAAM,IAAI7U,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG85K,KAAK,EAAE95K,IAAC,EAAG,EAAG;MAElC,IAAM0gB,OAAK,GAAK1gB,IAAC,GAAG,CAAC,GAAKi2C,MAAM,GAAGC,MAAM;MAEzC,IAAM73B,CAAC,GAAG+U,MAAM,GAAKA,MAAM,GAAG0mJ,KAAK,GAAG95K,IAAG;MAEzC,KAAM,IAAIg4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGugG,SAAS,EAAEvgG,CAAC,EAAG,EAAG;QAEtC;;QAEA,IAAI5gB,EAAC,GAAK4gB,CAAC,GAAGugG,SAAS,IAAOrnH,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QAE3C,IAAIiB,IAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAEmC,EAAE,CAAC,GAAGiH,CAAC;QACzB,IAAI4I,GAAC,GAAG/V,IAAI,CAAC8D,GAAG,CAAEoC,EAAE,CAAC,GAAGiH,CAAC;QAEzBykC,QAAQ,CAACtjD,IAAI,CAAE4S,IAAC,EAAE,CAAC,EAAE6U,GAAE,CAAC;QACxBsxJ,MAAM,CAAC/4K,IAAI,CAAEkhB,OAAK,CAACrC,CAAC,EAAEqC,OAAK,CAAClD,CAAC,EAAEkD,OAAK,CAAC7L,CAAE,CAAC;;QAExC;;QAEAuC,EAAC,GAAK,CAAE4gB,CAAC,GAAG,CAAC,IAAKugG,SAAS,IAAOrnH,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QAE/CiB,IAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAEmC,EAAE,CAAC,GAAGiH,CAAC;QACrB4I,GAAC,GAAG/V,IAAI,CAAC8D,GAAG,CAAEoC,EAAE,CAAC,GAAGiH,CAAC;QAErBykC,QAAQ,CAACtjD,IAAI,CAAE4S,IAAC,EAAE,CAAC,EAAE6U,GAAE,CAAC;QACxBsxJ,MAAM,CAAC/4K,IAAI,CAAEkhB,OAAK,CAACrC,CAAC,EAAEqC,OAAK,CAAClD,CAAC,EAAEkD,OAAK,CAAC7L,CAAE,CAAC;MAEzC;IAED;IAEA,IAAMihB,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IACrCxlB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EhtB,QAAQ,CAACsmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE89H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzE,IAAMlvI,QAAQ,GAAG,IAAI2hD,iBAAiB,CAAE;MAAEh+C,YAAY,EAAE,IAAI;MAAEkC,UAAU,EAAE;IAAM,CAAE,CAAC;IAEnF6qI,QAAA,GAAAH,SAAA,CAAA19K,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzB0wI,QAAA,CAAK99K,IAAI,GAAG,iBAAiB;IAAC,OAAA89K,QAAA;EAE/B;EAACh3K,YAAA,CAAA22K,eAAA;IAAAx/K,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAA+yJ,eAAA;AAAA,EApF4BjlD,YAAY;AAAA/6H,OAAA,CAAAggL,eAAA,GAAAA,eAAA;AAwF1C,IAAMM,GAAG,GAAG,aAAc,IAAIrpJ,OAAO,CAAC,CAAC;AACvC,IAAMspJ,GAAG,GAAG,aAAc,IAAItpJ,OAAO,CAAC,CAAC;AACvC,IAAMupJ,GAAG,GAAG,aAAc,IAAIvpJ,OAAO,CAAC,CAAC;AAAC,IAElCwpJ,sBAAsB,0BAAAC,WAAA;EAAA91J,SAAA,CAAA61J,sBAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAA71J,YAAA,CAAA21J,sBAAA;EAE3B,SAAAA,uBAAa7pF,KAAK,EAAE17D,IAAI,EAAElU,KAAK,EAAG;IAAA,IAAA45J,QAAA;IAAA/3K,eAAA,OAAA43K,sBAAA;IAEjCG,QAAA,GAAAD,SAAA,CAAAn+K,IAAA;IAEAo+K,QAAA,CAAKhqF,KAAK,GAAGA,KAAK;IAElBgqF,QAAA,CAAKj7J,MAAM,GAAGixE,KAAK,CAACp+D,WAAW;IAC/BooJ,QAAA,CAAK30J,gBAAgB,GAAG,KAAK;IAE7B20J,QAAA,CAAK55J,KAAK,GAAGA,KAAK;IAElB45J,QAAA,CAAKr+K,IAAI,GAAG,wBAAwB;IAEpC,IAAK24B,IAAI,KAAKn2B,SAAS,EAAGm2B,IAAI,GAAG,CAAC;IAElC,IAAIkB,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IACnCxlB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAC9D,CAAE7lB,IAAI,EAAEA,IAAI,EAAE,CAAC,EACfA,IAAI,EAAEA,IAAI,EAAE,CAAC,EACbA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACf,CAAEA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACjB,CAAEA,IAAI,EAAEA,IAAI,EAAE,CAAC,CACf,EAAE,CAAE,CAAE,CAAC;IAER,IAAMyU,QAAQ,GAAG,IAAI2hD,iBAAiB,CAAE;MAAEj3C,GAAG,EAAE,KAAK;MAAE7E,UAAU,EAAE;IAAM,CAAE,CAAC;IAE3EorI,QAAA,CAAKC,UAAU,GAAG,IAAI7mD,IAAI,CAAE59F,QAAQ,EAAEuT,QAAS,CAAC;IAChDixI,QAAA,CAAKjjK,GAAG,CAAEijK,QAAA,CAAKC,UAAW,CAAC;IAE3BzkJ,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IAC/BxlB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC;IAE1F6/H,QAAA,CAAKE,UAAU,GAAG,IAAI9mD,IAAI,CAAE59F,QAAQ,EAAEuT,QAAS,CAAC;IAChDixI,QAAA,CAAKjjK,GAAG,CAAEijK,QAAA,CAAKE,UAAW,CAAC;IAE3BF,QAAA,CAAK5tJ,MAAM,CAAC,CAAC;IAAC,OAAA4tJ,QAAA;EAEf;EAACv3K,YAAA,CAAAo3K,sBAAA;IAAAjgL,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAAC4zJ,UAAU,CAACzkJ,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAClC,IAAI,CAAC4zJ,UAAU,CAAClxI,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;MAClC,IAAI,CAAC6zJ,UAAU,CAAC1kJ,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAClC,IAAI,CAAC6zJ,UAAU,CAACnxI,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAEnC;EAAC;IAAAzsB,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAA,EAAS;MAER,IAAI,CAAC4jE,KAAK,CAAC76D,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAC3C,IAAI,CAAC66D,KAAK,CAAC3tF,MAAM,CAAC8yB,iBAAiB,CAAE,IAAI,EAAE,KAAM,CAAC;MAElDukJ,GAAG,CAACvmJ,qBAAqB,CAAE,IAAI,CAAC68D,KAAK,CAACp+D,WAAY,CAAC;MACnD+nJ,GAAG,CAACxmJ,qBAAqB,CAAE,IAAI,CAAC68D,KAAK,CAAC3tF,MAAM,CAACuvB,WAAY,CAAC;MAC1DgoJ,GAAG,CAACviK,UAAU,CAAEsiK,GAAG,EAAED,GAAI,CAAC;MAE1B,IAAI,CAACO,UAAU,CAAC5gJ,MAAM,CAAEsgJ,GAAI,CAAC;MAE7B,IAAK,IAAI,CAACv5J,KAAK,KAAKjiB,SAAS,EAAG;QAE/B,IAAI,CAAC87K,UAAU,CAAClxI,QAAQ,CAAC3oB,KAAK,CAAChL,GAAG,CAAE,IAAI,CAACgL,KAAM,CAAC;QAChD,IAAI,CAAC85J,UAAU,CAACnxI,QAAQ,CAAC3oB,KAAK,CAAChL,GAAG,CAAE,IAAI,CAACgL,KAAM,CAAC;MAEjD,CAAC,MAAM;QAEN,IAAI,CAAC65J,UAAU,CAAClxI,QAAQ,CAAC3oB,KAAK,CAACvJ,IAAI,CAAE,IAAI,CAACm5E,KAAK,CAAC5vE,KAAM,CAAC;QACvD,IAAI,CAAC85J,UAAU,CAACnxI,QAAQ,CAAC3oB,KAAK,CAACvJ,IAAI,CAAE,IAAI,CAACm5E,KAAK,CAAC5vE,KAAM,CAAC;MAExD;MAEA,IAAI,CAAC85J,UAAU,CAAC7gJ,MAAM,CAAEsgJ,GAAI,CAAC;MAC7B,IAAI,CAACO,UAAU,CAAC17J,KAAK,CAACmI,CAAC,GAAGizJ,GAAG,CAACn6K,MAAM,CAAC,CAAC;IAEvC;EAAC;EAAA,OAAAo6K,sBAAA;AAAA,EA5EmC12I,QAAQ;AAAA/pC,OAAA,CAAAygL,sBAAA,GAAAA,sBAAA;AAgF7C,IAAMM,OAAO,GAAG,aAAc,IAAI9pJ,OAAO,CAAC,CAAC;AAC3C,IAAM+pJ,OAAO,GAAG,aAAc,IAAIv0H,MAAM,CAAC,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AALA,IAOMw0H,YAAY,0BAAAC,cAAA;EAAAt2J,SAAA,CAAAq2J,YAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAr2J,YAAA,CAAAm2J,YAAA;EAEjB,SAAAA,aAAa9oJ,MAAM,EAAG;IAAA,IAAAipJ,QAAA;IAAAv4K,eAAA,OAAAo4K,YAAA;IAErB,IAAM7kJ,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IACrC,IAAMjS,QAAQ,GAAG,IAAI2hD,iBAAiB,CAAE;MAAEtqE,KAAK,EAAE,QAAQ;MAAEssB,YAAY,EAAE,IAAI;MAAEkC,UAAU,EAAE;IAAM,CAAE,CAAC;IAEpG,IAAM4T,QAAQ,GAAG,EAAE;IACnB,IAAMy1H,MAAM,GAAG,EAAE;IAEjB,IAAMwC,QAAQ,GAAG,CAAC,CAAC;;IAEnB;;IAEAC,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;;IAErB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;;IAErB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;;IAErB;;IAEAA,OAAO,CAAE,GAAG,EAAE,IAAK,CAAC;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAK,CAAC;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAK,CAAC;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAK,CAAC;;IAEpB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAK,CAAC;;IAErB;;IAEAA,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;IACnBA,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;;IAEnB;;IAEAA,OAAO,CAAE,KAAK,EAAE,KAAM,CAAC;IACvBA,OAAO,CAAE,KAAK,EAAE,KAAM,CAAC;IAEvBA,OAAO,CAAE,KAAK,EAAE,KAAM,CAAC;IACvBA,OAAO,CAAE,KAAK,EAAE,KAAM,CAAC;IAEvB,SAASA,OAAOA,CAAEpmK,CAAC,EAAEC,CAAC,EAAG;MAExBomK,QAAQ,CAAErmK,CAAE,CAAC;MACbqmK,QAAQ,CAAEpmK,CAAE,CAAC;IAEd;IAEA,SAASomK,QAAQA,CAAEt0I,EAAE,EAAG;MAEvBmc,QAAQ,CAACtjD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACxB+4K,MAAM,CAAC/4K,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAEtB,IAAKu7K,QAAQ,CAAEp0I,EAAE,CAAE,KAAKloC,SAAS,EAAG;QAEnCs8K,QAAQ,CAAEp0I,EAAE,CAAE,GAAG,EAAE;MAEpB;MAEAo0I,QAAQ,CAAEp0I,EAAE,CAAE,CAACnnC,IAAI,CAAIsjD,QAAQ,CAAC/iD,MAAM,GAAG,CAAC,GAAK,CAAE,CAAC;IAEnD;IAEA+1B,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EhtB,QAAQ,CAACsmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE89H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzEuC,QAAA,GAAAD,SAAA,CAAA3+K,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzByxI,QAAA,CAAK7+K,IAAI,GAAG,cAAc;IAE1B6+K,QAAA,CAAKjpJ,MAAM,GAAGA,MAAM;IACpB,IAAKipJ,QAAA,CAAKjpJ,MAAM,CAACs1B,sBAAsB,EAAG2zH,QAAA,CAAKjpJ,MAAM,CAACs1B,sBAAsB,CAAC,CAAC;IAE9E2zH,QAAA,CAAKz7J,MAAM,GAAGwS,MAAM,CAACK,WAAW;IAChC4oJ,QAAA,CAAKn1J,gBAAgB,GAAG,KAAK;IAE7Bm1J,QAAA,CAAKC,QAAQ,GAAGA,QAAQ;IAExBD,QAAA,CAAKpuJ,MAAM,CAAC,CAAC;;IAEb;;IAEA,IAAMwuJ,YAAY,GAAG,IAAI5mI,KAAK,CAAE,QAAS,CAAC;IAC1C,IAAM6mI,SAAS,GAAG,IAAI7mI,KAAK,CAAE,QAAS,CAAC;IACvC,IAAM8mI,OAAO,GAAG,IAAI9mI,KAAK,CAAE,QAAS,CAAC;IACrC,IAAM+mI,WAAW,GAAG,IAAI/mI,KAAK,CAAE,QAAS,CAAC;IACzC,IAAMgnI,UAAU,GAAG,IAAIhnI,KAAK,CAAE,QAAS,CAAC;IAExCwmI,QAAA,CAAKS,SAAS,CAAEL,YAAY,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,EAAEC,UAAW,CAAC;IAAC,OAAAR,QAAA;EAE7E;EAAC/3K,YAAA,CAAA43K,YAAA;IAAAzgL,GAAA;IAAAE,KAAA,EAED,SAAAmhL,UAAWhvH,OAAO,EAAEqrH,IAAI,EAAEv5I,EAAE,EAAE17B,MAAM,EAAEgW,KAAK,EAAG;MAE7C,IAAMmd,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM0lJ,cAAc,GAAG1lJ,QAAQ,CAACqmB,YAAY,CAAE,OAAQ,CAAC;;MAEvD;;MAEAq/H,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC1H2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC1H2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC1H2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;;MAE1H;;MAEA2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,CAAC,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC1H2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC5H2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC5H2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;;MAE5H;;MAEA2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC5H2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC5H2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;MAC5H2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAE4T,OAAO,CAACluC,CAAC,EAAEkuC,OAAO,CAAC/uC,CAAC,EAAE+uC,OAAO,CAAC13C,CAAE,CAAC,CAAC,CAAC;;MAE5H;;MAEA2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEi/H,IAAI,CAACv5J,CAAC,EAAEu5J,IAAI,CAACp6J,CAAC,EAAEo6J,IAAI,CAAC/iK,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEi/H,IAAI,CAACv5J,CAAC,EAAEu5J,IAAI,CAACp6J,CAAC,EAAEo6J,IAAI,CAAC/iK,CAAE,CAAC,CAAC,CAAC;MAC1G2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEi/H,IAAI,CAACv5J,CAAC,EAAEu5J,IAAI,CAACp6J,CAAC,EAAEo6J,IAAI,CAAC/iK,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEi/H,IAAI,CAACv5J,CAAC,EAAEu5J,IAAI,CAACp6J,CAAC,EAAEo6J,IAAI,CAAC/iK,CAAE,CAAC,CAAC,CAAC;MAC1G2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEi/H,IAAI,CAACv5J,CAAC,EAAEu5J,IAAI,CAACp6J,CAAC,EAAEo6J,IAAI,CAAC/iK,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEi/H,IAAI,CAACv5J,CAAC,EAAEu5J,IAAI,CAACp6J,CAAC,EAAEo6J,IAAI,CAAC/iK,CAAE,CAAC,CAAC,CAAC;MAC1G2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEi/H,IAAI,CAACv5J,CAAC,EAAEu5J,IAAI,CAACp6J,CAAC,EAAEo6J,IAAI,CAAC/iK,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEi/H,IAAI,CAACv5J,CAAC,EAAEu5J,IAAI,CAACp6J,CAAC,EAAEo6J,IAAI,CAAC/iK,CAAE,CAAC,CAAC,CAAC;;MAE1G;;MAEA2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEta,EAAE,CAAChgB,CAAC,EAAEggB,EAAE,CAAC7gB,CAAC,EAAE6gB,EAAE,CAACxpB,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEta,EAAE,CAAChgB,CAAC,EAAEggB,EAAE,CAAC7gB,CAAC,EAAE6gB,EAAE,CAACxpB,CAAE,CAAC,CAAC,CAAC;MAC9F2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEta,EAAE,CAAChgB,CAAC,EAAEggB,EAAE,CAAC7gB,CAAC,EAAE6gB,EAAE,CAACxpB,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEta,EAAE,CAAChgB,CAAC,EAAEggB,EAAE,CAAC7gB,CAAC,EAAE6gB,EAAE,CAACxpB,CAAE,CAAC,CAAC,CAAC;MAC9F2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEta,EAAE,CAAChgB,CAAC,EAAEggB,EAAE,CAAC7gB,CAAC,EAAE6gB,EAAE,CAACxpB,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEta,EAAE,CAAChgB,CAAC,EAAEggB,EAAE,CAAC7gB,CAAC,EAAE6gB,EAAE,CAACxpB,CAAE,CAAC,CAAC,CAAC;;MAE9F;;MAEA2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEh2C,MAAM,CAAC0b,CAAC,EAAE1b,MAAM,CAAC6a,CAAC,EAAE7a,MAAM,CAACkS,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEh2C,MAAM,CAAC0b,CAAC,EAAE1b,MAAM,CAAC6a,CAAC,EAAE7a,MAAM,CAACkS,CAAE,CAAC,CAAC,CAAC;MACtH2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC,CAAC,CAAC;;MAEhH;;MAEA2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC,CAAC,CAAC;MAChH2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC,CAAC,CAAC;;MAEhH2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC,CAAC,CAAC;MAChH2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC;MAAE2mK,cAAc,CAAC7iI,MAAM,CAAE,EAAE,EAAEhgC,KAAK,CAAC0F,CAAC,EAAE1F,KAAK,CAAC6E,CAAC,EAAE7E,KAAK,CAAC9D,CAAE,CAAC,CAAC,CAAC;;MAEhH2mK,cAAc,CAACh1J,WAAW,GAAG,IAAI;IAElC;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAA,EAAS;MAER,IAAMoJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMilJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAM7zJ,CAAC,GAAG,CAAC;QAAEzJ,CAAC,GAAG,CAAC;;MAElB;MACA;;MAEAi9J,OAAO,CAACzoJ,uBAAuB,CAAC9a,IAAI,CAAE,IAAI,CAAC0a,MAAM,CAACI,uBAAwB,CAAC;;MAE3E;;MAEAwpJ,QAAQ,CAAE,GAAG,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MACvDe,QAAQ,CAAE,GAAG,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;;MAErD;;MAEAe,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAExzJ,CAAC,EAAE,CAAEzJ,CAAC,EAAE,CAAE,CAAE,CAAC;MAC5Dg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAExzJ,CAAC,EAAE,CAAEzJ,CAAC,EAAE,CAAE,CAAE,CAAC;MAC1Dg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAExzJ,CAAC,EAAEzJ,CAAC,EAAE,CAAE,CAAE,CAAC;MAC1Dg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAExzJ,CAAC,EAAEzJ,CAAC,EAAE,CAAE,CAAE,CAAC;;MAExD;;MAEAg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAExzJ,CAAC,EAAE,CAAEzJ,CAAC,EAAE,CAAE,CAAC;MAC1Dg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAExzJ,CAAC,EAAE,CAAEzJ,CAAC,EAAE,CAAE,CAAC;MACxDg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAExzJ,CAAC,EAAEzJ,CAAC,EAAE,CAAE,CAAC;MACxDg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAExzJ,CAAC,EAAEzJ,CAAC,EAAE,CAAE,CAAC;;MAEtD;;MAEAg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAExzJ,CAAC,GAAG,GAAG,EAAEzJ,CAAC,GAAG,GAAG,EAAE,CAAE,CAAE,CAAC;MACpEg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAExzJ,CAAC,GAAG,GAAG,EAAEzJ,CAAC,GAAG,GAAG,EAAE,CAAE,CAAE,CAAC;MACtEg+J,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAC,EAAEj9J,CAAC,GAAG,CAAC,EAAE,CAAE,CAAE,CAAC;;MAE5D;;MAEAg+J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAExzJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACzDu0J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAExzJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACvDu0J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAC,EAAE,CAAEj9J,CAAC,EAAE,CAAE,CAAC;MACzDg+J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAC,EAAEj9J,CAAC,EAAE,CAAE,CAAC;MAEvDg+J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAExzJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MAC3Du0J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAExzJ,CAAC,EAAE,CAAC,EAAE,CAAE,CAAE,CAAC;MACzDu0J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAC,EAAE,CAAEj9J,CAAC,EAAE,CAAE,CAAE,CAAC;MAC3Dg+J,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEjlJ,QAAQ,EAAE4kJ,OAAO,EAAE,CAAC,EAAEj9J,CAAC,EAAE,CAAE,CAAE,CAAC;MAEzDqY,QAAQ,CAACqmB,YAAY,CAAE,UAAW,CAAC,CAAC31B,WAAW,GAAG,IAAI;IAEvD;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAg0J,YAAA;AAAA,EAjOyBlmD,YAAY;AAAA/6H,OAAA,CAAAihL,YAAA,GAAAA,YAAA;AAsOvC,SAASc,QAAQA,CAAEpmJ,KAAK,EAAE0lJ,QAAQ,EAAEjlJ,QAAQ,EAAEjE,MAAM,EAAEzf,CAAC,EAAEM,CAAC,EAAEuU,CAAC,EAAG;EAE/DwzJ,OAAO,CAAC/kK,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEuU,CAAE,CAAC,CAAC+K,SAAS,CAAEH,MAAO,CAAC;EAE1C,IAAM6C,MAAM,GAAGqmJ,QAAQ,CAAE1lJ,KAAK,CAAE;EAEhC,IAAKX,MAAM,KAAKj2B,SAAS,EAAG;IAE3B,IAAMu3B,QAAQ,GAAGF,QAAQ,CAACqmB,YAAY,CAAE,UAAW,CAAC;IAEpD,KAAM,IAAIn8C,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG4jB,MAAM,CAAC30B,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;MAEjDg2B,QAAQ,CAAC2iB,MAAM,CAAEjkB,MAAM,CAAE10B,CAAC,CAAE,EAAEy6K,OAAO,CAACroK,CAAC,EAAEqoK,OAAO,CAAC/nK,CAAC,EAAE+nK,OAAO,CAACxzJ,CAAE,CAAC;IAEhE;EAED;AAED;AAEA,IAAMy0J,IAAI,GAAG,aAAc,IAAIznJ,IAAI,CAAC,CAAC;AAAC,IAEhC0nJ,SAAS,0BAAAC,cAAA;EAAAt3J,SAAA,CAAAq3J,SAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAr3J,YAAA,CAAAm3J,SAAA;EAEd,SAAAA,UAAa36K,MAAM,EAAE0f,KAAK,GAAG,QAAQ,EAAG;IAAA,IAAAo7J,QAAA;IAAAv5K,eAAA,OAAAo5K,SAAA;IAEvC,IAAMz+H,OAAO,GAAG,IAAIlnC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;IAC7G,IAAMmnC,SAAS,GAAG,IAAIrnC,YAAY,CAAE,CAAC,GAAG,CAAE,CAAC;IAE3C,IAAMggB,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IACrCxlB,QAAQ,CAAComB,QAAQ,CAAE,IAAIrE,eAAe,CAAEqF,OAAO,EAAE,CAAE,CAAE,CAAC;IACtDpnB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAIvE,eAAe,CAAEsF,SAAS,EAAE,CAAE,CAAE,CAAC;IAExE2+H,QAAA,GAAAD,SAAA,CAAA3/K,IAAA,OAAO45B,QAAQ,EAAE,IAAIk1D,iBAAiB,CAAE;MAAEtqE,KAAK,EAAEA,KAAK;MAAEwuB,UAAU,EAAE;IAAM,CAAE,CAAC;IAE7E4sI,QAAA,CAAK96K,MAAM,GAAGA,MAAM;IACpB86K,QAAA,CAAK7/K,IAAI,GAAG,WAAW;IAEvB6/K,QAAA,CAAKn2J,gBAAgB,GAAG,KAAK;IAE7Bm2J,QAAA,CAAKpvJ,MAAM,CAAC,CAAC;IAAC,OAAAovJ,QAAA;EAEf;EAAC/4K,YAAA,CAAA44K,SAAA;IAAAzhL,GAAA;IAAAE,KAAA,EAED,SAAAsyB,OAAQ1rB,MAAM,EAAG;MAEhB,IAAKA,MAAM,KAAKvC,SAAS,EAAG;QAE3BkX,OAAO,CAACC,IAAI,CAAE,qDAAsD,CAAC;MAEtE;MAEA,IAAK,IAAI,CAAC5U,MAAM,KAAKvC,SAAS,EAAG;QAEhCi9K,IAAI,CAAC5mJ,aAAa,CAAE,IAAI,CAAC9zB,MAAO,CAAC;MAElC;MAEA,IAAK06K,IAAI,CAACxmJ,OAAO,CAAC,CAAC,EAAG;MAEtB,IAAMpjB,GAAG,GAAG4pK,IAAI,CAAC5pK,GAAG;MACpB,IAAMC,GAAG,GAAG2pK,IAAI,CAAC3pK,GAAG;;MAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAGE,IAAMikB,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAClD,IAAMnlB,KAAK,GAAGmlB,QAAQ,CAACnlB,KAAK;MAE5BA,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACK,CAAC;MAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACW,CAAC;MAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACkV,CAAC;MAC1DpW,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACM,CAAC;MAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACW,CAAC;MAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACkV,CAAC;MAC1DpW,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACM,CAAC;MAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACY,CAAC;MAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACkV,CAAC;MAC1DpW,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACK,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACkV,CAAC;MAC5DpW,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACK,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACW,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACmV,CAAC;MAC7DpW,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACM,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACW,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACmV,CAAC;MAC7DpW,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACM,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACmV,CAAC;MAC7DpW,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACK,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACmV,CAAC;MAE7D+O,QAAQ,CAACxP,WAAW,GAAG,IAAI;MAE3B,IAAI,CAACsP,QAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;IAEtC;EAAC;IAAA1iD,GAAA;IAAAE,KAAA,EAED,SAAA06B,cAAe9zB,MAAM,EAAG;MAEvB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAAC0rB,MAAM,CAAC,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAxyB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAEokB,SAAS,EAAG;MAEzBkN,IAAA,CAAAC,eAAA,CAAA8kI,SAAA,CAAA9hL,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAEokB,SAAS;MAE7B,IAAI,CAAC1oC,MAAM,GAAGskB,MAAM,CAACtkB,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAA9G,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAg1J,SAAA;AAAA,EAnGsBlnD,YAAY;AAAA/6H,OAAA,CAAAiiL,SAAA,GAAAA,SAAA;AAAA,IAuG9BI,UAAU,0BAAAC,cAAA;EAAA13J,SAAA,CAAAy3J,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAz3J,YAAA,CAAAu3J,UAAA;EAEf,SAAAA,WAAa9mJ,GAAG,EAAEvU,KAAK,GAAG,QAAQ,EAAG;IAAA,IAAAw7J,QAAA;IAAA35K,eAAA,OAAAw5K,UAAA;IAEpC,IAAM7+H,OAAO,GAAG,IAAIlnC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG,CAAC;IAE7G,IAAMmnC,SAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;IAEpH,IAAMrnB,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IAErCxlB,QAAQ,CAAComB,QAAQ,CAAE,IAAIrE,eAAe,CAAEqF,OAAO,EAAE,CAAE,CAAE,CAAC;IAEtDpnB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAE,CAAE,CAAC;IAE/E++H,QAAA,GAAAD,SAAA,CAAA//K,IAAA,OAAO45B,QAAQ,EAAE,IAAIk1D,iBAAiB,CAAE;MAAEtqE,KAAK,EAAEA,KAAK;MAAEwuB,UAAU,EAAE;IAAM,CAAE,CAAC;IAE7EgtI,QAAA,CAAKjnJ,GAAG,GAAGA,GAAG;IAEdinJ,QAAA,CAAKjgL,IAAI,GAAG,YAAY;IAExBigL,QAAA,CAAKpmJ,QAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;IAAC,OAAAs/H,QAAA;EAEvC;EAACn5K,YAAA,CAAAg5K,UAAA;IAAA7hL,GAAA;IAAAE,KAAA,EAED,SAAAqtC,kBAAmBC,KAAK,EAAG;MAE1B,IAAMzS,GAAG,GAAG,IAAI,CAACA,GAAG;MAEpB,IAAKA,GAAG,CAACC,OAAO,CAAC,CAAC,EAAG;MAErBD,GAAG,CAACE,SAAS,CAAE,IAAI,CAACa,QAAS,CAAC;MAE9Bf,GAAG,CAACG,OAAO,CAAE,IAAI,CAACtW,KAAM,CAAC;MAEzB,IAAI,CAACA,KAAK,CAACjH,cAAc,CAAE,GAAI,CAAC;MAEhC++B,IAAA,CAAAC,eAAA,CAAAklI,UAAA,CAAAliL,SAAA,8BAAAqC,IAAA,OAAyBwrC,KAAK;IAE/B;EAAC;IAAAxtC,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAo1J,UAAA;AAAA,EA7CuBtnD,YAAY;AAAA/6H,OAAA,CAAAqiL,UAAA,GAAAA,UAAA;AAAA,IAiD/BI,WAAW,0BAAAC,MAAA;EAAA93J,SAAA,CAAA63J,WAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAA73J,YAAA,CAAA23J,WAAA;EAEhB,SAAAA,YAAazlJ,KAAK,EAAE9B,IAAI,GAAG,CAAC,EAAE+f,GAAG,GAAG,QAAQ,EAAG;IAAA,IAAA2nI,QAAA;IAAA/5K,eAAA,OAAA45K,WAAA;IAE9C,IAAMz7J,KAAK,GAAGi0B,GAAG;IAEjB,IAAMwI,SAAS,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE5G,IAAMrnB,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IACrCxlB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAE,CAAE,CAAC;IAC/ErnB,QAAQ,CAAC8mB,qBAAqB,CAAC,CAAC;IAEhC0/H,QAAA,GAAAD,SAAA,CAAAngL,IAAA,OAAO45B,QAAQ,EAAE,IAAIk1D,iBAAiB,CAAE;MAAEtqE,KAAK,EAAEA,KAAK;MAAEwuB,UAAU,EAAE;IAAM,CAAE,CAAC;IAE7EotI,QAAA,CAAKrgL,IAAI,GAAG,aAAa;IAEzBqgL,QAAA,CAAK5lJ,KAAK,GAAGA,KAAK;IAElB4lJ,QAAA,CAAK1nJ,IAAI,GAAGA,IAAI;IAEhB,IAAM2nJ,UAAU,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;IAEvF,IAAM98H,SAAS,GAAG,IAAInE,cAAc,CAAC,CAAC;IACtCmE,SAAS,CAACrD,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE8hI,UAAU,EAAE,CAAE,CAAE,CAAC;IACjF98H,SAAS,CAAC7C,qBAAqB,CAAC,CAAC;IAEjC0/H,QAAA,CAAKjlK,GAAG,CAAE,IAAI0pC,IAAI,CAAEtB,SAAS,EAAE,IAAIlJ,iBAAiB,CAAE;MAAE71B,KAAK,EAAEA,KAAK;MAAEusB,OAAO,EAAE,GAAG;MAAEC,WAAW,EAAE,IAAI;MAAEU,UAAU,EAAE,KAAK;MAAEsB,UAAU,EAAE;IAAM,CAAE,CAAE,CAAE,CAAC;IAAC,OAAAotI,QAAA;EAErJ;EAACv5K,YAAA,CAAAo5K,WAAA;IAAAjiL,GAAA;IAAAE,KAAA,EAED,SAAAqtC,kBAAmBC,KAAK,EAAG;MAE1B,IAAI,CAAC1R,QAAQ,CAACtgB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAE5B,IAAI,CAACoJ,KAAK,CAACpJ,GAAG,CAAE,GAAG,GAAG,IAAI,CAACkf,IAAI,EAAE,GAAG,GAAG,IAAI,CAACA,IAAI,EAAE,CAAE,CAAC;MAErD,IAAI,CAAC+E,MAAM,CAAE,IAAI,CAACjD,KAAK,CAAC1D,MAAO,CAAC;MAEhC,IAAI,CAAC8S,UAAU,CAAE,CAAE,IAAI,CAACpP,KAAK,CAACC,QAAS,CAAC;MAExCigB,IAAA,CAAAC,eAAA,CAAAslI,WAAA,CAAAtiL,SAAA,8BAAAqC,IAAA,OAAyBwrC,KAAK;IAE/B;EAAC;IAAAxtC,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;MACvB,IAAI,CAACsP,QAAQ,CAAE,CAAC,CAAE,CAACH,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACrC,IAAI,CAACsP,QAAQ,CAAE,CAAC,CAAE,CAACoT,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAEtC;EAAC;EAAA,OAAAw1J,WAAA;AAAA,EAnDwBzoD,IAAI;AAAAh6H,OAAA,CAAAyiL,WAAA,GAAAA,WAAA;AAuD9B,IAAMK,KAAK,GAAG,aAAc,IAAI7rJ,OAAO,CAAC,CAAC;AACzC,IAAI8rJ,aAAa,EAAEC,aAAa;AAAC,IAE3BC,WAAW,0BAAAC,WAAA;EAAAt4J,SAAA,CAAAq4J,WAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAr4J,YAAA,CAAAm4J,WAAA;EAEhB;;EAEA,SAAAA,YAAarsJ,GAAG,GAAG,IAAIK,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE4I,MAAM,GAAG,IAAI5I,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE5wB,MAAM,GAAG,CAAC,EAAE2gB,KAAK,GAAG,QAAQ,EAAEo8J,UAAU,GAAG/8K,MAAM,GAAG,GAAG,EAAEg9K,SAAS,GAAGD,UAAU,GAAG,GAAG,EAAG;IAAA,IAAAE,QAAA;IAAAz6K,eAAA,OAAAo6K,WAAA;IAEnKK,QAAA,GAAAH,SAAA,CAAA3gL,IAAA;IAEA8gL,QAAA,CAAK/gL,IAAI,GAAG,aAAa;IAEzB,IAAKwgL,aAAa,KAAKh+K,SAAS,EAAG;MAElCg+K,aAAa,GAAG,IAAInhI,cAAc,CAAC,CAAC;MACpCmhI,aAAa,CAACrgI,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC;MAE/FiiI,aAAa,GAAG,IAAI54C,gBAAgB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACvD44C,aAAa,CAACv9J,SAAS,CAAE,CAAC,EAAE,CAAE,GAAG,EAAE,CAAE,CAAC;IAEvC;IAEA69J,QAAA,CAAKhnJ,QAAQ,CAAC7e,IAAI,CAAEoiB,MAAO,CAAC;IAE5ByjJ,QAAA,CAAKtxH,IAAI,GAAG,IAAIgoE,IAAI,CAAE+oD,aAAa,EAAE,IAAIzxF,iBAAiB,CAAE;MAAEtqE,KAAK,EAAEA,KAAK;MAAEwuB,UAAU,EAAE;IAAM,CAAE,CAAE,CAAC;IACnG8tI,QAAA,CAAKtxH,IAAI,CAAC/lC,gBAAgB,GAAG,KAAK;IAClCq3J,QAAA,CAAK3lK,GAAG,CAAE2lK,QAAA,CAAKtxH,IAAK,CAAC;IAErBsxH,QAAA,CAAKpF,IAAI,GAAG,IAAI72H,IAAI,CAAE27H,aAAa,EAAE,IAAInmI,iBAAiB,CAAE;MAAE71B,KAAK,EAAEA,KAAK;MAAEwuB,UAAU,EAAE;IAAM,CAAE,CAAE,CAAC;IACnG8tI,QAAA,CAAKpF,IAAI,CAACjyJ,gBAAgB,GAAG,KAAK;IAClCq3J,QAAA,CAAK3lK,GAAG,CAAE2lK,QAAA,CAAKpF,IAAK,CAAC;IAErBoF,QAAA,CAAKC,YAAY,CAAE3sJ,GAAI,CAAC;IACxB0sJ,QAAA,CAAKtjK,SAAS,CAAE3Z,MAAM,EAAE+8K,UAAU,EAAEC,SAAU,CAAC;IAAC,OAAAC,QAAA;EAEjD;EAACj6K,YAAA,CAAA45K,WAAA;IAAAziL,GAAA;IAAAE,KAAA,EAED,SAAA6iL,aAAc3sJ,GAAG,EAAG;MAEnB;;MAEA,IAAKA,GAAG,CAAC5d,CAAC,GAAG,OAAO,EAAG;QAEtB,IAAI,CAAC6Z,UAAU,CAAC7W,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAElC,CAAC,MAAM,IAAK4a,GAAG,CAAC5d,CAAC,GAAG,CAAE,OAAO,EAAG;QAE/B,IAAI,CAAC6Z,UAAU,CAAC7W,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAElC,CAAC,MAAM;QAEN8mK,KAAK,CAAC9mK,GAAG,CAAE4a,GAAG,CAACrJ,CAAC,EAAE,CAAC,EAAE,CAAEqJ,GAAG,CAACle,CAAE,CAAC,CAACiE,SAAS,CAAC,CAAC;QAE1C,IAAMnC,OAAO,GAAGhD,IAAI,CAACkI,IAAI,CAAEkX,GAAG,CAAC5d,CAAE,CAAC;QAElC,IAAI,CAAC6Z,UAAU,CAACS,gBAAgB,CAAEwvJ,KAAK,EAAEtoK,OAAQ,CAAC;MAEnD;IAED;EAAC;IAAAha,GAAA;IAAAE,KAAA,EAED,SAAAsf,UAAW3Z,MAAM,EAAE+8K,UAAU,GAAG/8K,MAAM,GAAG,GAAG,EAAEg9K,SAAS,GAAGD,UAAU,GAAG,GAAG,EAAG;MAE5E,IAAI,CAACpxH,IAAI,CAAC5sC,KAAK,CAACpJ,GAAG,CAAE,CAAC,EAAExE,IAAI,CAACa,GAAG,CAAE,MAAM,EAAEhS,MAAM,GAAG+8K,UAAW,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;MACtE,IAAI,CAACpxH,IAAI,CAACtlC,YAAY,CAAC,CAAC;MAExB,IAAI,CAACwxJ,IAAI,CAAC94J,KAAK,CAACpJ,GAAG,CAAEqnK,SAAS,EAAED,UAAU,EAAEC,SAAU,CAAC;MACvD,IAAI,CAACnF,IAAI,CAAC5hJ,QAAQ,CAACtjB,CAAC,GAAG3S,MAAM;MAC7B,IAAI,CAAC63K,IAAI,CAACxxJ,YAAY,CAAC,CAAC;IAEzB;EAAC;IAAAlsB,GAAA;IAAAE,KAAA,EAED,SAAA8iL,SAAUx8J,KAAK,EAAG;MAEjB,IAAI,CAACgrC,IAAI,CAACriB,QAAQ,CAAC3oB,KAAK,CAAChL,GAAG,CAAEgL,KAAM,CAAC;MACrC,IAAI,CAACk3J,IAAI,CAACvuI,QAAQ,CAAC3oB,KAAK,CAAChL,GAAG,CAAEgL,KAAM,CAAC;IAEtC;EAAC;IAAAxmB,GAAA;IAAAE,KAAA,EAED,SAAA+c,KAAMmO,MAAM,EAAG;MAEdsxB,IAAA,CAAAC,eAAA,CAAA8lI,WAAA,CAAA9iL,SAAA,iBAAAqC,IAAA,OAAYopB,MAAM,EAAE,KAAK;MAEzB,IAAI,CAAComC,IAAI,CAACv0C,IAAI,CAAEmO,MAAM,CAAComC,IAAK,CAAC;MAC7B,IAAI,CAACksH,IAAI,CAACzgK,IAAI,CAAEmO,MAAM,CAACsyJ,IAAK,CAAC;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA19K,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAAC+kC,IAAI,CAAC51B,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAC5B,IAAI,CAAC+kC,IAAI,CAACriB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACixJ,IAAI,CAAC9hJ,QAAQ,CAACnP,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACixJ,IAAI,CAACvuI,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAE7B;EAAC;EAAA,OAAAg2J,WAAA;AAAA,EA/FwBl5I,QAAQ;AAAA/pC,OAAA,CAAAijL,WAAA,GAAAA,WAAA;AAAA,IAmG5BQ,UAAU,0BAAAC,cAAA;EAAA94J,SAAA,CAAA64J,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAA74J,YAAA,CAAA24J,UAAA;EAEf,SAAAA,WAAavoJ,IAAI,GAAG,CAAC,EAAG;IAAA,IAAA0oJ,QAAA;IAAA/6K,eAAA,OAAA46K,UAAA;IAEvB,IAAMr6H,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEluB,IAAI,EAAE,CAAC,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,CACnB;IAED,IAAM2jJ,MAAM,GAAG,CACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAClB;IAED,IAAMziJ,QAAQ,GAAG,IAAIwlB,cAAc,CAAC,CAAC;IACrCxlB,QAAQ,CAACsmB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEqI,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC9EhtB,QAAQ,CAACsmB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAE89H,MAAM,EAAE,CAAE,CAAE,CAAC;IAEzE,IAAMlvI,QAAQ,GAAG,IAAI2hD,iBAAiB,CAAE;MAAEh+C,YAAY,EAAE,IAAI;MAAEkC,UAAU,EAAE;IAAM,CAAE,CAAC;IAEnFouI,QAAA,GAAAD,SAAA,CAAAnhL,IAAA,OAAO45B,QAAQ,EAAEuT,QAAQ;IAEzBi0I,QAAA,CAAKrhL,IAAI,GAAG,YAAY;IAAC,OAAAqhL,QAAA;EAE1B;EAACv6K,YAAA,CAAAo6K,UAAA;IAAAjjL,GAAA;IAAAE,KAAA,EAED,SAAAmhL,UAAWgC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAG;MAE/C,IAAM/8J,KAAK,GAAG,IAAI4zB,KAAK,CAAC,CAAC;MACzB,IAAMzjC,KAAK,GAAG,IAAI,CAACilB,QAAQ,CAACC,UAAU,CAACrV,KAAK,CAAC7P,KAAK;MAElD6P,KAAK,CAAChL,GAAG,CAAE6nK,UAAW,CAAC;MACvB78J,KAAK,CAACxG,OAAO,CAAErJ,KAAK,EAAE,CAAE,CAAC;MACzB6P,KAAK,CAACxG,OAAO,CAAErJ,KAAK,EAAE,CAAE,CAAC;MAEzB6P,KAAK,CAAChL,GAAG,CAAE8nK,UAAW,CAAC;MACvB98J,KAAK,CAACxG,OAAO,CAAErJ,KAAK,EAAE,CAAE,CAAC;MACzB6P,KAAK,CAACxG,OAAO,CAAErJ,KAAK,EAAE,CAAE,CAAC;MAEzB6P,KAAK,CAAChL,GAAG,CAAE+nK,UAAW,CAAC;MACvB/8J,KAAK,CAACxG,OAAO,CAAErJ,KAAK,EAAE,EAAG,CAAC;MAC1B6P,KAAK,CAACxG,OAAO,CAAErJ,KAAK,EAAE,EAAG,CAAC;MAE1B,IAAI,CAACilB,QAAQ,CAACC,UAAU,CAACrV,KAAK,CAAC8F,WAAW,GAAG,IAAI;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAAusB,QAAA,EAAU;MAET,IAAI,CAACmP,QAAQ,CAACnP,OAAO,CAAC,CAAC;MACvB,IAAI,CAAC0iB,QAAQ,CAAC1iB,OAAO,CAAC,CAAC;IAExB;EAAC;EAAA,OAAAw2J,UAAA;AAAA,EAxDuB1oD,YAAY;AAAA/6H,OAAA,CAAAyjL,UAAA,GAAAA,UAAA;AAAA,IA4D/BO,SAAS;EAEd,SAAAA,UAAA,EAAc;IAAAn7K,eAAA,OAAAm7K,SAAA;IAEb,IAAI,CAACzhL,IAAI,GAAG,WAAW;IAEvB,IAAI,CAACykB,KAAK,GAAG,IAAI4zB,KAAK,CAAC,CAAC;IAExB,IAAI,CAACqpI,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,WAAW,GAAG,IAAI;EAExB;EAAC76K,YAAA,CAAA26K,SAAA;IAAAxjL,GAAA;IAAAE,KAAA,EAED,SAAAgnI,OAAQhvH,CAAC,EAAEM,CAAC,EAAG;MAEd,IAAI,CAACkrK,WAAW,GAAG,IAAI78C,IAAI,CAAC,CAAC;MAC7B,IAAI,CAAC48C,QAAQ,CAACn+K,IAAI,CAAE,IAAI,CAACo+K,WAAY,CAAC;MACtC,IAAI,CAACA,WAAW,CAACx8C,MAAM,CAAEhvH,CAAC,EAAEM,CAAE,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAinI,OAAQjvH,CAAC,EAAEM,CAAC,EAAG;MAEd,IAAI,CAACkrK,WAAW,CAACv8C,MAAM,CAAEjvH,CAAC,EAAEM,CAAE,CAAC;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAxY,GAAA;IAAAE,KAAA,EAED,SAAAknI,iBAAkBC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAE,EAAG;MAEtC,IAAI,CAACojD,WAAW,CAACt8C,gBAAgB,CAAEC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAG,CAAC;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAtgI,GAAA;IAAAE,KAAA,EAED,SAAAqnI,cAAeC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAI,CAACojD,WAAW,CAACn8C,aAAa,CAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAG,CAAC;MAEpE,OAAO,IAAI;IAEZ;EAAC;IAAAtgI,GAAA;IAAAE,KAAA,EAED,SAAA0nI,WAAYhB,GAAG,EAAG;MAEjB,IAAI,CAAC88C,WAAW,CAAC97C,UAAU,CAAEhB,GAAI,CAAC;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAA5mI,GAAA;IAAAE,KAAA,EAED,SAAAyjL,SAAUC,KAAK,EAAG;MAEjB,SAASC,eAAeA,CAAEC,UAAU,EAAG;QAEtC,IAAMj2I,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAI/nC,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAGktK,UAAU,CAACj+K,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;UAErD,IAAMi+K,QAAO,GAAGD,UAAU,CAAEh+K,CAAC,CAAE;UAE/B,IAAMk+K,SAAQ,GAAG,IAAI51C,KAAK,CAAC,CAAC;UAC5B41C,SAAQ,CAACh+C,MAAM,GAAG+9C,QAAO,CAAC/9C,MAAM;UAEhCn4F,MAAM,CAACvoC,IAAI,CAAE0+K,SAAS,CAAC;QAExB;QAEA,OAAOn2I,MAAM;MAEd;MAEA,SAASo2I,oBAAoBA,CAAEnuC,IAAI,EAAEouC,SAAS,EAAG;QAEhD,IAAMC,OAAO,GAAGD,SAAS,CAACr+K,MAAM;;QAEhC;QACA;QACA;QACA;QACA,IAAIqtI,MAAM,GAAG,KAAK;QAClB,KAAM,IAAI/rG,CAAC,GAAGg9I,OAAO,GAAG,CAAC,EAAE1pK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0pK,OAAO,EAAEh9I,CAAC,GAAG1sB,CAAC,EAAG,EAAG;UAEzD,IAAI2pK,SAAS,GAAGF,SAAS,CAAE/8I,CAAC,CAAE;UAC9B,IAAIk9I,UAAU,GAAGH,SAAS,CAAEzpK,CAAC,CAAE;UAE/B,IAAI6pK,MAAM,GAAGD,UAAU,CAACnsK,CAAC,GAAGksK,SAAS,CAAClsK,CAAC;UACvC,IAAIqsK,MAAM,GAAGF,UAAU,CAAC7rK,CAAC,GAAG4rK,SAAS,CAAC5rK,CAAC;UAEvC,IAAKxB,IAAI,CAACgC,GAAG,CAAEurK,MAAO,CAAC,GAAGh7K,MAAM,CAAC+pB,OAAO,EAAG;YAE1C;YACA,IAAKixJ,MAAM,GAAG,CAAC,EAAG;cAEjBH,SAAS,GAAGF,SAAS,CAAEzpK,CAAC,CAAE;cAAE6pK,MAAM,GAAG,CAAEA,MAAM;cAC7CD,UAAU,GAAGH,SAAS,CAAE/8I,CAAC,CAAE;cAAEo9I,MAAM,GAAG,CAAEA,MAAM;YAE/C;YAEA,IAAOzuC,IAAI,CAACt9H,CAAC,GAAG4rK,SAAS,CAAC5rK,CAAC,IAAQs9H,IAAI,CAACt9H,CAAC,GAAG6rK,UAAU,CAAC7rK,CAAG,EAAK;YAE/D,IAAKs9H,IAAI,CAACt9H,CAAC,KAAK4rK,SAAS,CAAC5rK,CAAC,EAAG;cAE7B,IAAKs9H,IAAI,CAAC59H,CAAC,KAAKksK,SAAS,CAAClsK,CAAC,EAAI,OAAO,IAAI,CAAC,CAAE;cAC7C;YAED,CAAC,MAAM;cAEN,IAAMssK,QAAQ,GAAGD,MAAM,IAAKzuC,IAAI,CAAC59H,CAAC,GAAGksK,SAAS,CAAClsK,CAAC,CAAE,GAAGosK,MAAM,IAAKxuC,IAAI,CAACt9H,CAAC,GAAG4rK,SAAS,CAAC5rK,CAAC,CAAE;cACtF,IAAKgsK,QAAQ,KAAK,CAAC,EAAM,OAAO,IAAI,CAAC,CAAE;cACvC,IAAKA,QAAQ,GAAG,CAAC,EAAO;cACxBtxC,MAAM,GAAG,CAAEA,MAAM,CAAC,CAAE;YAErB;UAED,CAAC,MAAM;YAEN;YACA,IAAK4C,IAAI,CAACt9H,CAAC,KAAK4rK,SAAS,CAAC5rK,CAAC,EAAK,SAAS,CAAG;YAC5C;YACA,IAAS6rK,UAAU,CAACnsK,CAAC,IAAI49H,IAAI,CAAC59H,CAAC,IAAQ49H,IAAI,CAAC59H,CAAC,IAAIksK,SAAS,CAAClsK,CAAG,IACxDksK,SAAS,CAAClsK,CAAC,IAAI49H,IAAI,CAAC59H,CAAC,IAAQ49H,IAAI,CAAC59H,CAAC,IAAImsK,UAAU,CAACnsK,CAAK,EAAI,OAAO,IAAI,CAAC,CAAC;YAC9E;UAED;QAED;;QAEA,OAAOg7H,MAAM;MAEd;MAEA,IAAMM,WAAW,GAAGF,UAAU,CAACE,WAAW;MAE1C,IAAMiwC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAKA,QAAQ,CAAC59K,MAAM,KAAK,CAAC,EAAG,OAAO,EAAE;MAEtC,IAAI4+K,KAAK,EAAEV,OAAO,EAAEC,QAAQ;MAC5B,IAAMn2I,MAAM,GAAG,EAAE;MAEjB,IAAK41I,QAAQ,CAAC59K,MAAM,KAAK,CAAC,EAAG;QAE5Bk+K,OAAO,GAAGN,QAAQ,CAAE,CAAC,CAAE;QACvBO,QAAQ,GAAG,IAAI51C,KAAK,CAAC,CAAC;QACtB41C,QAAQ,CAACh+C,MAAM,GAAG+9C,OAAO,CAAC/9C,MAAM;QAChCn4F,MAAM,CAACvoC,IAAI,CAAE0+K,QAAS,CAAC;QACvB,OAAOn2I,MAAM;MAEd;MAEA,IAAI62I,UAAU,GAAG,CAAElxC,WAAW,CAAEiwC,QAAQ,CAAE,CAAC,CAAE,CAACrlD,SAAS,CAAC,CAAE,CAAC;MAC3DsmD,UAAU,GAAGd,KAAK,GAAG,CAAEc,UAAU,GAAGA,UAAU;;MAE9C;;MAEA,IAAMC,gBAAgB,GAAG,EAAE;MAC3B,IAAMC,SAAS,GAAG,EAAE;MACpB,IAAIC,aAAa,GAAG,EAAE;MACtB,IAAIC,OAAO,GAAG,CAAC;MACf,IAAIC,SAAS;MAEbH,SAAS,CAAEE,OAAO,CAAE,GAAGvgL,SAAS;MAChCsgL,aAAa,CAAEC,OAAO,CAAE,GAAG,EAAE;MAE7B,KAAM,IAAIh/K,CAAC,GAAG,CAAC,EAAE8Q,CAAC,GAAG6sK,QAAQ,CAAC59K,MAAM,EAAEC,CAAC,GAAG8Q,CAAC,EAAE9Q,CAAC,EAAG,EAAG;QAEnDi+K,OAAO,GAAGN,QAAQ,CAAE39K,CAAC,CAAE;QACvBi/K,SAAS,GAAGhB,OAAO,CAAC3lD,SAAS,CAAC,CAAC;QAC/BqmD,KAAK,GAAGjxC,WAAW,CAAEuxC,SAAU,CAAC;QAChCN,KAAK,GAAGb,KAAK,GAAG,CAAEa,KAAK,GAAGA,KAAK;QAE/B,IAAKA,KAAK,EAAG;UAEZ,IAAO,CAAEC,UAAU,IAAQE,SAAS,CAAEE,OAAO,CAAI,EAAGA,OAAO,EAAG;UAE9DF,SAAS,CAAEE,OAAO,CAAE,GAAG;YAAEnrK,CAAC,EAAE,IAAIy0H,KAAK,CAAC,CAAC;YAAEjnG,CAAC,EAAE49I;UAAU,CAAC;UACvDH,SAAS,CAAEE,OAAO,CAAE,CAACnrK,CAAC,CAACqsH,MAAM,GAAG+9C,OAAO,CAAC/9C,MAAM;UAE9C,IAAK0+C,UAAU,EAAGI,OAAO,EAAG;UAC5BD,aAAa,CAAEC,OAAO,CAAE,GAAG,EAAE;;UAE7B;QAED,CAAC,MAAM;UAEND,aAAa,CAAEC,OAAO,CAAE,CAACx/K,IAAI,CAAE;YAAEie,CAAC,EAAEwgK,OAAO;YAAE58I,CAAC,EAAE49I,SAAS,CAAE,CAAC;UAAG,CAAE,CAAC;;UAElE;QAED;MAED;;MAEA;MACA,IAAK,CAAEH,SAAS,CAAE,CAAC,CAAE,EAAG,OAAOf,eAAe,CAAEJ,QAAS,CAAC;MAG1D,IAAKmB,SAAS,CAAC/+K,MAAM,GAAG,CAAC,EAAG;QAE3B,IAAIm/K,SAAS,GAAG,KAAK;QACrB,IAAIC,QAAQ,GAAG,CAAC;QAEhB,KAAM,IAAIC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAGP,SAAS,CAAC/+K,MAAM,EAAEq/K,IAAI,GAAGC,IAAI,EAAED,IAAI,EAAG,EAAG;UAEnEP,gBAAgB,CAAEO,IAAI,CAAE,GAAG,EAAE;QAE9B;QAEA,KAAM,IAAIA,KAAI,GAAG,CAAC,EAAEC,KAAI,GAAGP,SAAS,CAAC/+K,MAAM,EAAEq/K,KAAI,GAAGC,KAAI,EAAED,KAAI,EAAG,EAAG;UAEnE,IAAME,GAAG,GAAGP,aAAa,CAAEK,KAAI,CAAE;UAEjC,KAAM,IAAIG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGD,GAAG,CAACv/K,MAAM,EAAEw/K,IAAI,EAAG,EAAG;YAEhD,IAAMC,EAAE,GAAGF,GAAG,CAAEC,IAAI,CAAE;YACtB,IAAIE,eAAe,GAAG,IAAI;YAE1B,KAAM,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGZ,SAAS,CAAC/+K,MAAM,EAAE2/K,KAAK,EAAG,EAAG;cAEzD,IAAKvB,oBAAoB,CAAEqB,EAAE,CAACn+I,CAAC,EAAEy9I,SAAS,CAAEY,KAAK,CAAE,CAACr+I,CAAE,CAAC,EAAG;gBAEzD,IAAK+9I,KAAI,KAAKM,KAAK,EAAGP,QAAQ,EAAG;gBAEjC,IAAKM,eAAe,EAAG;kBAEtBA,eAAe,GAAG,KAAK;kBACvBZ,gBAAgB,CAAEa,KAAK,CAAE,CAAClgL,IAAI,CAAEggL,EAAG,CAAC;gBAErC,CAAC,MAAM;kBAENN,SAAS,GAAG,IAAI;gBAEjB;cAED;YAED;YAEA,IAAKO,eAAe,EAAG;cAEtBZ,gBAAgB,CAAEO,KAAI,CAAE,CAAC5/K,IAAI,CAAEggL,EAAG,CAAC;YAEpC;UAED;QAED;QAEA,IAAKL,QAAQ,GAAG,CAAC,IAAID,SAAS,KAAK,KAAK,EAAG;UAE1CH,aAAa,GAAGF,gBAAgB;QAEjC;MAED;MAEA,IAAIc,QAAQ;MAEZ,KAAM,IAAI3/K,IAAC,GAAG,CAAC,EAAE8rB,EAAE,GAAGgzJ,SAAS,CAAC/+K,MAAM,EAAEC,IAAC,GAAG8rB,EAAE,EAAE9rB,IAAC,EAAG,EAAG;QAEtDk+K,QAAQ,GAAGY,SAAS,CAAE9+K,IAAC,CAAE,CAAC6T,CAAC;QAC3Bk0B,MAAM,CAACvoC,IAAI,CAAE0+K,QAAS,CAAC;QACvByB,QAAQ,GAAGZ,aAAa,CAAE/+K,IAAC,CAAE;QAE7B,KAAM,IAAIg4B,CAAC,GAAG,CAAC,EAAEglB,EAAE,GAAG2iI,QAAQ,CAAC5/K,MAAM,EAAEi4B,CAAC,GAAGglB,EAAE,EAAEhlB,CAAC,EAAG,EAAG;UAErDkmJ,QAAQ,CAACx1C,KAAK,CAAClpI,IAAI,CAAEmgL,QAAQ,CAAE3nJ,CAAC,CAAE,CAACva,CAAE,CAAC;QAEvC;MAED;;MAEA;;MAEA,OAAOsqB,MAAM;IAEd;EAAC;EAAA,OAAA21I,SAAA;AAAA;AAAAhkL,OAAA,CAAAgkL,SAAA,GAAAA,SAAA;AAIF,IAAK,OAAOhyD,kBAAkB,KAAK,WAAW,EAAG;EAEhDA,kBAAkB,CAAC/6G,aAAa,CAAE,IAAIg7G,WAAW,CAAE,UAAU,EAAE;IAAEC,MAAM,EAAE;MACxEg0D,QAAQ,EAAEl8K;IACX;EAAE,CAAE,CAAE,CAAC;AAER;AAEA,IAAK,OAAOm1J,MAAM,KAAK,WAAW,EAAG;EAEpC,IAAKA,MAAM,CAACgnB,SAAS,EAAG;IAEvBlqK,OAAO,CAACC,IAAI,CAAE,yDAA0D,CAAC;EAE1E,CAAC,MAAM;IAENijJ,MAAM,CAACgnB,SAAS,GAAGn8K,QAAQ;EAE5B;AAED;;;;ACzukDA,IAAAo8K,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA+B,SAAAC,yBAAAC,WAAA,eAAArxH,OAAA,kCAAAsxH,iBAAA,OAAAtxH,OAAA,QAAAuxH,gBAAA,OAAAvxH,OAAA,YAAAoxH,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAE,gBAAA,GAAAD,iBAAA,KAAAD,WAAA;AAAA,SAAAH,wBAAA9lL,GAAA,EAAAimL,WAAA,SAAAA,WAAA,IAAAjmL,GAAA,IAAAA,GAAA,CAAAomL,UAAA,WAAApmL,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAqmL,OAAA,EAAArmL,GAAA,UAAAwvC,KAAA,GAAAw2I,wBAAA,CAAAC,WAAA,OAAAz2I,KAAA,IAAAA,KAAA,CAAA++B,GAAA,CAAAvuE,GAAA,YAAAwvC,KAAA,CAAA9yB,GAAA,CAAA1c,GAAA,SAAAsmL,MAAA,WAAAC,qBAAA,GAAA5mL,MAAA,CAAAI,cAAA,IAAAJ,MAAA,CAAA6mL,wBAAA,WAAAvmL,GAAA,IAAAD,GAAA,QAAAC,GAAA,kBAAAN,MAAA,CAAAC,SAAA,CAAAE,cAAA,CAAAmC,IAAA,CAAAjC,GAAA,EAAAC,GAAA,SAAAC,IAAA,GAAAqmL,qBAAA,GAAA5mL,MAAA,CAAA6mL,wBAAA,CAAAxmL,GAAA,EAAAC,GAAA,cAAAC,IAAA,KAAAA,IAAA,CAAAwc,GAAA,IAAAxc,IAAA,CAAAub,GAAA,KAAA9b,MAAA,CAAAI,cAAA,CAAAumL,MAAA,EAAArmL,GAAA,EAAAC,IAAA,YAAAomL,MAAA,CAAArmL,GAAA,IAAAD,GAAA,CAAAC,GAAA,SAAAqmL,MAAA,CAAAD,OAAA,GAAArmL,GAAA,MAAAwvC,KAAA,IAAAA,KAAA,CAAA/zB,GAAA,CAAAzb,GAAA,EAAAsmL,MAAA,YAAAA,MAAA;AAE/B,IAAI1jG,SAAS,GAAGh9D,QAAQ,CAAC6gK,aAAa,CAAC,SAAS,CAAC;AAEjD,IAAIn8H,QAAQ,GAAG,IAAIu7H,KAAK,CAACx/D,aAAa,CAAE;EAAE/G,SAAS,EAAE;AAAK,CAAE,CAAC;AAC7Dh1D,QAAQ,CAACkf,aAAa,CAAE,QAAQ,EAAE,CAAE,CAAC;AACrClf,QAAQ,CAACugE,aAAa,CAAE+zC,MAAM,CAAC8nB,gBAAiB,CAAC;AACjDp8H,QAAQ,CAAC36B,OAAO,CAAEivI,MAAM,CAAC+nB,UAAU,EAAE/nB,MAAM,CAACgoB,WAAY,CAAC;AACzDhkG,SAAS,CAACikG,WAAW,CAAEv8H,QAAQ,CAACq9D,UAAW,CAAC;AAE5C,IAAI/vF,MAAM,GAAG,IAAIiuJ,KAAK,CAACv5H,iBAAiB,CAAE,EAAE,EAAEsyG,MAAM,CAAC+nB,UAAU,GAAG/nB,MAAM,CAACgoB,WAAW,EAAE,CAAC,EAAE,MAAO,CAAC;AACjGhvJ,MAAM,CAACmE,QAAQ,CAACtgB,GAAG,CAAE,iBAAiB,EAAE,CAAC,iBAAiB,EAAE,iBAAkB,CAAC;AAC/Emc,MAAM,CAAClT,QAAQ,CAACjJ,GAAG,CAAE,kBAAkB,EAAE,mBAAmB,EAAE,CAAC,iBAAkB,CAAC;AAElF,IAAIqrK,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,aAAa,CAAEnvJ,MAAM,EAAE0yB,QAAQ,CAACq9D,UAAW,CAAC;AACrEm/D,QAAQ,CAACp+K,MAAM,CAAC+S,GAAG,CAAE,kBAAkB,EAAE,CAAC,kBAAkB,EAAE,CAAC,kBAAmB,CAAC;AAEnF,IAAI8zC,KAAK,GAAG,IAAIs2H,KAAK,CAAC5zD,KAAK,CAAC,CAAC;;AAE7B;;AAEA,IAAI+0D,gBAAgB,GAAG,IAAInB,KAAK,CAACttE,KAAK,CAAC,CAAC;AACxChpD,KAAK,CAACnyC,GAAG,CAAE4pK,gBAAiB,CAAC;AAE7B,IAAIC,WAAW,GAAG,IAAIpB,KAAK,CAACttE,KAAK,CAAC,CAAC;AACnCyuE,gBAAgB,CAAC5pK,GAAG,CAAE6pK,WAAY,CAAC;AAEnC,IAAIC,OAAO,GAAG,IAAIrB,KAAK,CAACttE,KAAK,CAAC,CAAC;AAC/B0uE,WAAW,CAAC7pK,GAAG,CAAE8pK,OAAQ,CAAC;AAE1B,IAAIC,SAAS,GAAGvoB,MAAM,CAAC5+B,GAAG,GAAG,IAAI6lD,KAAK,CAACvpI,iBAAiB,CAAC;EAAE71B,KAAK,EAAE;AAAS,CAAC,CAAC;AAC7E,IAAI2gK,SAAS,GAAG,IAAIvB,KAAK,CAACwB,oBAAoB,CAAE,IAAK,CAAC;AACtD,IAAI/qJ,MAAM,GAAG,IAAIupJ,KAAK,CAAC/+H,IAAI,CAAEsgI,SAAS,EAAED,SAAS,CAAClqK,KAAK,CAAC,CAAE,CAAC;AAC3DiqK,OAAO,CAAC9pK,GAAG,CAAEkf,MAAO,CAAC;AACrBA,MAAM,CAACkO,OAAO,GAAG,KAAK;;AAEtB;AACA,IAAI88I,GAAG,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;AAClB,KAAK,IAAIvhL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;EAC3BuhL,GAAG,CAAC/hL,IAAI,CAAE+hL,GAAG,CAACvhL,CAAC,GAAC,CAAC,CAAC,GAAGuhL,GAAG,CAACvhL,CAAC,GAAC,CAAC,CAAE,CAAC;AACjC;;AAEA;AACA;AACA,IAAIwhL,UAAU,GAAG,CAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAE;AAEnD,IAAIC,YAAY,GAAG,CAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAE;AAEnD,IAAIC,QAAQ,GAAG,IAAI5B,KAAK,CAACx3C,KAAK,CAAC,CAAC;AAChCo5C,QAAQ,CAACtgD,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC;AAEvB,KAAM,IAAIphI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuhL,GAAG,CAACxhL,MAAM,EAAEC,CAAC,EAAE,EAAG;EACrC,IAAI40B,IAAI,GAAG2sJ,GAAG,CAACvhL,CAAC,CAAC;EACjB,IAAI2hL,UAAU,GAAGR,OAAO,CAAClrJ,QAAQ,CAACj2B,CAAC,GAAC,CAAC,CAAC;EACtC,IAAIswB,GAAG,GAAGkxJ,UAAU,CAACxhL,CAAC,GAAC,CAAC,CAAC;EACzB,IAAIoS,CAAC,GAAGuvK,UAAU,CAAC3rJ,QAAQ,CAAC5jB,CAAC,GAAGwiB,IAAI,GAAGtE,GAAG,CAAC,CAAC,CAAC;EAC7C,IAAI5d,CAAC,GAAGivK,UAAU,CAAC3rJ,QAAQ,CAACtjB,CAAC,GAAGkiB,IAAI,GAAGtE,GAAG,CAAC,CAAC,CAAC;EAC7C,IAAIiG,MAAM,GAAG,IAAIupJ,KAAK,CAAC/+H,IAAI,CAAEsgI,SAAS,EAAED,SAAS,CAAClqK,KAAK,CAAC,CAAE,CAAC;EAC3Dqf,MAAM,CAAC8S,QAAQ,CAAC3oB,KAAK,CAACk0B,MAAM,CAAE50C,CAAC,GAAGuhL,GAAG,CAACxhL,MAAM,EAAE,CAAC,EAAE,GAAI,CAAC;EACtDw2B,MAAM,CAACP,QAAQ,CAACtgB,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE,CAAE,CAAC;EAC9ByuK,OAAO,CAAC9pK,GAAG,CAAEkf,MAAO,CAAC;EACrBA,MAAM,CAACkO,OAAO,GAAG,KAAK;EAEtB,IAAIm9I,KAAK,GAAGH,YAAY,CAACzhL,CAAC,GAAC,CAAC,CAAC;EAC7B,IAAI6hL,GAAG,GAAGzvK,CAAC,GAAGwiB,IAAI,GAAGgtJ,KAAK,CAAC,CAAC,CAAC;EAC7B,IAAIE,GAAG,GAAGpvK,CAAC,GAAGkiB,IAAI,GAAGgtJ,KAAK,CAAC,CAAC,CAAC;EAC7BF,QAAQ,CAACpgD,gBAAgB,CAAEugD,GAAG,EAAEC,GAAG,EAAE1vK,CAAC,EAAEM,CAAE,CAAC;AAC7C;AAEA,IAAIqvK,UAAU,GAAGL,QAAQ,CAACppD,SAAS,CAAC,CAAC;AACrC,IAAI0pD,OAAO,GAAG,IAAIlC,KAAK,CAACxkI,cAAc,CAAC,CAAC,CAAC7mB,aAAa,CAAEstJ,UAAW,CAAC;AACpE,IAAIE,OAAO,GAAG,IAAInC,KAAK,CAAC90F,iBAAiB,CAAC;EAAEtqE,KAAK,EAAE,QAAQ;EAAE4yB,SAAS,EAAE;AAAE,CAAC,CAAC;AAC5E,IAAIoY,IAAI,GAAG,IAAIo0H,KAAK,CAACpsD,IAAI,CAAEsuD,OAAO,EAAEC,OAAQ,CAAC;AAC7Cf,WAAW,CAAC7pK,GAAG,CAAEq0C,IAAK,CAAC;AAEvB,IAAIw2H,YAAY,GAAGhB,WAAW,CAAChqK,KAAK,CAAC,CAAC;AACtCgrK,YAAY,CAACvjK,QAAQ,CAACsI,CAAC,GAAG/V,IAAI,CAACC,EAAE;AACjC8vK,gBAAgB,CAAC5pK,GAAG,CAAE6qK,YAAa,CAAC;;AAEpC;;AAEArpB,MAAM,CAAC5oJ,gBAAgB,CAAE,QAAQ,EAAEkyK,MAAM,EAAE,KAAM,CAAC;AAElD,SAASA,MAAMA,CAAA,EAAG;EACjBtwJ,MAAM,CAAC80B,MAAM,GAAGkyG,MAAM,CAAC+nB,UAAU,GAAG/nB,MAAM,CAACgoB,WAAW;EACtDhvJ,MAAM,CAACs1B,sBAAsB,CAAC,CAAC;EAC/B5C,QAAQ,CAAC36B,OAAO,CAAEivI,MAAM,CAAC+nB,UAAU,EAAE/nB,MAAM,CAACgoB,WAAY,CAAC;AAC1D;AAEAhjB,IAAI,CAAC,CAAC;AAEN,SAASA,IAAIA,CAAA,EAAG;EACfzvG,qBAAqB,CAAEyvG,IAAK,CAAC;EAC5BkjB,QAAQ,CAACr0J,MAAM,CAAC,CAAC;EAClBu0J,gBAAgB,CAACtiK,QAAQ,CAACsI,CAAC,IAAI,IAAI;EACnCs9B,QAAQ,CAACuF,MAAM,CAAEN,KAAK,EAAE33B,MAAO,CAAC;AACjC;;;AChGA,IAAIuwJ,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACC,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BJ,SAAS,CAACnmL,IAAI,CAAC,IAAI,EAAEumL,UAAU,CAAC;EAChC,IAAI,CAACC,GAAG,GAAG;IACTv/J,IAAI,EAAEm/J,MAAM,CAACC,MAAM,CAACI,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAU/mL,EAAE,EAAE;MACpB,IAAI,CAAC6mL,gBAAgB,CAACpjL,IAAI,CAACzD,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACD4qB,OAAO,EAAE,SAAAA,CAAU5qB,EAAE,EAAE;MACrB,IAAI,CAAC8mL,iBAAiB,CAACrjL,IAAI,CAACzD,EAAE,CAAC;IACjC;EACF,CAAC;EAEDumL,MAAM,CAACC,MAAM,CAACI,OAAO,GAAG,IAAI;AAC9B;AAEAL,MAAM,CAACC,MAAM,CAACC,MAAM,GAAGA,MAAM;AAC7B,IAAIO,aAAa,EAAEC,cAAc;AAEjC,IAAIl/I,MAAM,GAAGw+I,MAAM,CAACC,MAAM,CAACz+I,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAACm/I,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4Bj9G,QAAQ,CAACi9G,QAAQ;EAC5D,IAAIC,QAAQ,GAAGl9G,QAAQ,CAACk9G,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIH,SAAS,CAACE,QAAQ,GAAG,KAAK,GAAGD,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFE,EAAE,CAACC,SAAS,GAAG,UAAS1yK,KAAK,EAAE;IAC7BmyK,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAI7/J,IAAI,GAAGkD,IAAI,CAACC,KAAK,CAAC1V,KAAK,CAACuS,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAAClnB,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAIsnL,OAAO,GAAG,KAAK;MACnBpgK,IAAI,CAACqgK,MAAM,CAAC3mL,OAAO,CAAC,UAAS4mL,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAACp7B,MAAM,CAACq7B,aAAa,EAAEJ,KAAK,CAAC98I,EAAE,CAAC;UAC9D,IAAIg9I,SAAS,EAAE;YACbJ,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAIpgK,IAAI,CAACqgK,MAAM,CAACM,KAAK,CAAC,UAASL,KAAK,EAAE;QACrD,OAAOA,KAAK,CAACxnL,IAAI,KAAK,KAAK,IAAIwnL,KAAK,CAACM,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAIT,OAAO,EAAE;QACX5tK,OAAO,CAAC2wB,KAAK,CAAC,CAAC;QAEfnjB,IAAI,CAACqgK,MAAM,CAAC3mL,OAAO,CAAC,UAAU4mL,KAAK,EAAE;UACnCQ,QAAQ,CAACz7B,MAAM,CAACq7B,aAAa,EAAEJ,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFT,cAAc,CAACnmL,OAAO,CAAC,UAAUua,CAAC,EAAE;UAClC8sK,YAAY,CAAC9sK,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAI8uD,QAAQ,CAACi+G,MAAM,EAAE;QAAE;QAC5Bj+G,QAAQ,CAACi+G,MAAM,CAAC,CAAC;MACnB;IACF;IAEA,IAAIhhK,IAAI,CAAClnB,IAAI,KAAK,QAAQ,EAAE;MAC1BonL,EAAE,CAAC73B,KAAK,CAAC,CAAC;MACV63B,EAAE,CAACe,OAAO,GAAG,YAAY;QACvBl+G,QAAQ,CAACi+G,MAAM,CAAC,CAAC;MACnB,CAAC;IACH;IAEA,IAAIhhK,IAAI,CAAClnB,IAAI,KAAK,gBAAgB,EAAE;MAClC0Z,OAAO,CAACpB,GAAG,CAAC,2BAA2B,CAAC;MAExC8vK,kBAAkB,CAAC,CAAC;IACtB;IAEA,IAAIlhK,IAAI,CAAClnB,IAAI,KAAK,OAAO,EAAE;MACzB0Z,OAAO,CAAChY,KAAK,CAAC,eAAe,GAAGwlB,IAAI,CAACxlB,KAAK,CAACyiB,OAAO,GAAG,IAAI,GAAG+C,IAAI,CAACxlB,KAAK,CAAC2mL,KAAK,CAAC;MAE7ED,kBAAkB,CAAC,CAAC;MAEpB,IAAIE,OAAO,GAAGC,kBAAkB,CAACrhK,IAAI,CAAC;MACtCtD,QAAQ,CAACgrI,IAAI,CAACi2B,WAAW,CAACyD,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASF,kBAAkBA,CAAA,EAAG;EAC5B,IAAIE,OAAO,GAAG1kK,QAAQ,CAAC4kK,cAAc,CAACrC,UAAU,CAAC;EACjD,IAAImC,OAAO,EAAE;IACXA,OAAO,CAACn+I,MAAM,CAAC,CAAC;EAClB;AACF;AAEA,SAASo+I,kBAAkBA,CAACrhK,IAAI,EAAE;EAChC,IAAIohK,OAAO,GAAG1kK,QAAQ,CAAC6kK,aAAa,CAAC,KAAK,CAAC;EAC3CH,OAAO,CAAC59I,EAAE,GAAGy7I,UAAU;;EAEvB;EACA,IAAIhiK,OAAO,GAAGP,QAAQ,CAAC6kK,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAIC,UAAU,GAAG9kK,QAAQ,CAAC6kK,aAAa,CAAC,KAAK,CAAC;EAC9CtkK,OAAO,CAACwkK,SAAS,GAAGzhK,IAAI,CAACxlB,KAAK,CAACyiB,OAAO;EACtCukK,UAAU,CAACC,SAAS,GAAGzhK,IAAI,CAACxlB,KAAK,CAAC2mL,KAAK;EAEvCC,OAAO,CAACM,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAGzkK,OAAO,CAACykK,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGF,UAAU,CAACE,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAON,OAAO;AAEhB;AAEA,SAASO,UAAUA,CAACvC,MAAM,EAAE57I,EAAE,EAAE;EAC9B,IAAIo+I,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIzsF,CAAC,EAAEj7E,CAAC,EAAE2nK,GAAG;EAEb,KAAK1sF,CAAC,IAAIwsF,OAAO,EAAE;IACjB,KAAKznK,CAAC,IAAIynK,OAAO,CAACxsF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvB0sF,GAAG,GAAGF,OAAO,CAACxsF,CAAC,CAAC,CAAC,CAAC,CAAC,CAACj7E,CAAC,CAAC;MACtB,IAAI2nK,GAAG,KAAKt+I,EAAE,IAAK7iB,KAAK,CAACC,OAAO,CAACkhK,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAACllL,MAAM,GAAG,CAAC,CAAC,KAAK4mC,EAAG,EAAE;QACpEq+I,OAAO,CAACxlL,IAAI,CAAC+4F,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAIgqF,MAAM,CAACz+I,MAAM,EAAE;IACjBkhJ,OAAO,GAAGA,OAAO,CAACnjK,MAAM,CAACijK,UAAU,CAACvC,MAAM,CAACz+I,MAAM,EAAE6C,EAAE,CAAC,CAAC;EACzD;EAEA,OAAOq+I,OAAO;AAChB;AAEA,SAASf,QAAQA,CAAC1B,MAAM,EAAEkB,KAAK,EAAE;EAC/B,IAAIsB,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAACtB,KAAK,CAAC98I,EAAE,CAAC,IAAI,CAAC47I,MAAM,CAACz+I,MAAM,EAAE;IACvC,IAAI/nC,EAAE,GAAG,IAAImpL,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAEzB,KAAK,CAACM,SAAS,CAACC,EAAE,CAAC;IACzEP,KAAK,CAACC,KAAK,GAAG,CAACqB,OAAO,CAACtB,KAAK,CAAC98I,EAAE,CAAC;IAChCo+I,OAAO,CAACtB,KAAK,CAAC98I,EAAE,CAAC,GAAG,CAAC5qC,EAAE,EAAE0nL,KAAK,CAAC0B,IAAI,CAAC;EACtC,CAAC,MAAM,IAAI5C,MAAM,CAACz+I,MAAM,EAAE;IACxBmgJ,QAAQ,CAAC1B,MAAM,CAACz+I,MAAM,EAAE2/I,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAACrB,MAAM,EAAE57I,EAAE,EAAE;EAClC,IAAIo+I,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAACp+I,EAAE,CAAC,IAAI47I,MAAM,CAACz+I,MAAM,EAAE;IACjC,OAAO8/I,cAAc,CAACrB,MAAM,CAACz+I,MAAM,EAAE6C,EAAE,CAAC;EAC1C;EAEA,IAAIo8I,aAAa,CAACp8I,EAAE,CAAC,EAAE;IACrB;EACF;EACAo8I,aAAa,CAACp8I,EAAE,CAAC,GAAG,IAAI;EAExB,IAAIspB,MAAM,GAAGsyH,MAAM,CAAC94I,KAAK,CAAC9C,EAAE,CAAC;EAE7Bq8I,cAAc,CAACxjL,IAAI,CAAC,CAAC+iL,MAAM,EAAE57I,EAAE,CAAC,CAAC;EAEjC,IAAIspB,MAAM,IAAIA,MAAM,CAACyyH,GAAG,IAAIzyH,MAAM,CAACyyH,GAAG,CAACE,gBAAgB,CAAC7iL,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAO+kL,UAAU,CAACt8B,MAAM,CAACq7B,aAAa,EAAEl9I,EAAE,CAAC,CAACy+I,IAAI,CAAC,UAAUz+I,EAAE,EAAE;IAC7D,OAAOi9I,cAAc,CAACp7B,MAAM,CAACq7B,aAAa,EAAEl9I,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASu9I,YAAYA,CAAC3B,MAAM,EAAE57I,EAAE,EAAE;EAChC,IAAIspB,MAAM,GAAGsyH,MAAM,CAAC94I,KAAK,CAAC9C,EAAE,CAAC;EAC7B47I,MAAM,CAACI,OAAO,GAAG,CAAC,CAAC;EACnB,IAAI1yH,MAAM,EAAE;IACVA,MAAM,CAACyyH,GAAG,CAACv/J,IAAI,GAAGo/J,MAAM,CAACI,OAAO;EAClC;EAEA,IAAI1yH,MAAM,IAAIA,MAAM,CAACyyH,GAAG,IAAIzyH,MAAM,CAACyyH,GAAG,CAACG,iBAAiB,CAAC9iL,MAAM,EAAE;IAC/DkwD,MAAM,CAACyyH,GAAG,CAACG,iBAAiB,CAAChmL,OAAO,CAAC,UAAUoiD,EAAE,EAAE;MACjDA,EAAE,CAACsjI,MAAM,CAACI,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAOJ,MAAM,CAAC94I,KAAK,CAAC9C,EAAE,CAAC;EACvB47I,MAAM,CAAC57I,EAAE,CAAC;EAEVspB,MAAM,GAAGsyH,MAAM,CAAC94I,KAAK,CAAC9C,EAAE,CAAC;EACzB,IAAIspB,MAAM,IAAIA,MAAM,CAACyyH,GAAG,IAAIzyH,MAAM,CAACyyH,GAAG,CAACE,gBAAgB,CAAC7iL,MAAM,EAAE;IAC9DkwD,MAAM,CAACyyH,GAAG,CAACE,gBAAgB,CAAC/lL,OAAO,CAAC,UAAUoiD,EAAE,EAAE;MAChDA,EAAE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"background.96e57706.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '156';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = this.alphaHash;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$5.copy( geometry.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$5.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$5, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$4.center.set( 0, 0, 0 );\n\t\t_sphere$4.radius = 0.7071067811865476;\n\t\t_sphere$4.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tanisotropyV /= material.anisotropy;\\n\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase SRGBColorSpace:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t} else {\n\n\t\t\t\t// default error reporting\n\n\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\tfragmentErrors\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( material.map.colorSpace === SRGBColorSpace ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( colorSpace === SRGBColorSpace && forceLinearTransfer === false ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( colorSpace === SRGBColorSpace || colorSpace === DisplayP3ColorSpace ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nconst LinearTransferFunction = 0;\nconst SRGBTransferFunction = 1;\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transferFunction = ( colorSpace === SRGBColorSpace || colorSpace === DisplayP3ColorSpace ) ? SRGBTransferFunction : LinearTransferFunction;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transferFunction === SRGBTransferFunction ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transferFunction === SRGBTransferFunction ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t}, handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import * as THREE from 'three';\r\n\r\nvar container = document.querySelector('.galaxy');\r\n\r\nvar renderer = new THREE.WebGLRenderer( { antialias: true } );\r\nrenderer.setClearColor( 0x111111, 1 );\r\nrenderer.setPixelRatio( window.devicePixelRatio );\r\nrenderer.setSize( window.innerWidth, window.innerHeight );\r\ncontainer.appendChild( renderer.domElement );\r\n\r\nvar camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 1, 100000 );\r\ncamera.position.set( 5.572598712768517, -66.57502631633189, 21.02674031080701 );\r\ncamera.rotation.set( 1.2322882126233607, 0.07273216646669994, -0.203550046101327 );\r\n\r\nvar controls = new THREE.OrbitControls( camera, renderer.domElement );\r\ncontrols.target.set( 0.5518566227733895, -0.7508918311572805, -2.2539378789116693 );\r\n\r\nvar scene = new THREE.Scene();\r\n\r\n//\r\n\r\nvar outerSpiralGroup = new THREE.Group();\r\nscene.add( outerSpiralGroup );\r\n\r\nvar spiralGroup = new THREE.Group();\r\nouterSpiralGroup.add( spiralGroup )\r\n\r\nvar spheres = new THREE.Group();\r\nspiralGroup.add( spheres );\r\n\r\nvar sphereMat = window.mat = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\nvar sphereGeo = new THREE.SphereBufferGeometry( 0.25 );\r\nvar sphere = new THREE.Mesh( sphereGeo, sphereMat.clone() );\r\nspheres.add( sphere );\r\nsphere.visible = false;\r\n\r\n// var fib = [ 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ];\r\nvar fib = [ 0, 1 ];\r\nfor (var i = 2; i < 10; i++) {\r\n  fib.push( fib[i-1] + fib[i-2] );\r\n}\r\n\r\n// counter clockwise\r\n// se, ne, nw, sw\r\nvar directions = [ [1,-1], [1,1], [-1,1], [-1,-1] ];\r\n\r\nvar cpDirections = [ [-1,0], [0,-1], [1,0], [0,1] ];\r\n\r\nvar fibShape = new THREE.Shape();\r\nfibShape.moveTo( 0, 0 );\r\n\r\nfor ( var i = 1; i < fib.length; i++ ) {\r\n  var size = fib[i];\r\n  var prevSphere = spheres.children[i-1];\r\n  var dir = directions[i%4];\r\n  var x = prevSphere.position.x + size * dir[0];\r\n  var y = prevSphere.position.y + size * dir[1];\r\n  var sphere = new THREE.Mesh( sphereGeo, sphereMat.clone() );\r\n  sphere.material.color.setHSL( i / fib.length, 1, 0.5 );\r\n  sphere.position.set( x, y, 0 );\r\n  spheres.add( sphere );\r\n  sphere.visible = false;\r\n\r\n  var cpDir = cpDirections[i%4];\r\n  var cpX = x + size * cpDir[0];\r\n  var cpY = y + size * cpDir[1];\r\n  fibShape.quadraticCurveTo( cpX, cpY, x, y );\r\n}\r\n\r\nvar linePoints = fibShape.getPoints();\r\nvar lineGeo = new THREE.BufferGeometry().setFromPoints( linePoints );\r\nvar lineMat = new THREE.LineBasicMaterial({\tcolor: 0xffffff, linewidth: 3\t});\r\nvar line = new THREE.Line( lineGeo, lineMat );\r\nspiralGroup.add( line );\r\n\r\nvar spiralGroup2 = spiralGroup.clone();\r\nspiralGroup2.rotation.z = Math.PI;\r\nouterSpiralGroup.add( spiralGroup2 );\r\n\r\n//\r\n\r\nwindow.addEventListener( 'resize', resize, false );\r\n\r\nfunction resize() {\r\n\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\tcamera.updateProjectionMatrix();\r\n\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n}\r\n  \r\nloop();\r\n\r\nfunction loop() {\r\n\trequestAnimationFrame( loop );\r\n  controls.update();\r\n\touterSpiralGroup.rotation.z -= 0.05;\r\n\trenderer.render( scene, camera );\r\n}\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}